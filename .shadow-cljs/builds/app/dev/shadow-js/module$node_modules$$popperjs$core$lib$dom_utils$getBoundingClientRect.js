["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"],"~:js","shadow$provide.module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(element,includeScale){void 0===includeScale&&(includeScale=!1);var rect=element.getBoundingClientRect(),scaleX=1,scaleY=1;(0,_instanceOf.isHTMLElement)(element)&&includeScale&&(includeScale=element.offsetHeight,element=element.offsetWidth,0<element&&(scaleX=rect.width/element||1),0<includeScale&&\n(scaleY=rect.height/includeScale||1));return{width:round(rect.width/scaleX),height:round(rect.height/scaleY),top:round(rect.top/scaleY),right:round(rect.right/scaleX),bottom:round(rect.bottom/scaleY),left:round(rect.left/scaleX),x:round(rect.left/scaleX),y:round(rect.top/scaleY)}};var _instanceOf=require(\"module$node_modules$$popperjs$core$lib$dom_utils$instanceOf\"),round=Math.round}","~:source","shadow$provide[\"module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getBoundingClientRect;\n\nvar _instanceOf = require(\"./instanceOf.js\");\n\nvar round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if ((0, _instanceOf.isHTMLElement)(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = rect.width / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = rect.height / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: round(rect.width / scaleX),\n    height: round(rect.height / scaleY),\n    top: round(rect.top / scaleY),\n    right: round(rect.right / scaleX),\n    bottom: round(rect.bottom / scaleY),\n    left: round(rect.left / scaleX),\n    x: round(rect.left / scaleX),\n    y: round(rect.top / scaleY)\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$popperjs$core$lib$dom_utils$instanceOf"]],"~:properties",["^5",["width","right","top","height","x","__esModule","value","y","bottom","left"]],"~:compiled-at",1630917514050,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQ,SAAR,CAAA,CAMAI,QAA8B,CAACC,OAAD,CAAUC,YAAV,CAAwB,CAC/B,IAAK,EAA1B,GAAIA,YAAJ,GACEA,YADF,CACiB,CAAA,CADjB,CAIA,KAAIC,KAAOF,OAAQD,CAAAA,qBAAR,EAAX,CACII,OAAS,CADb,CAEIC,OAAS,CAET,EAAC,CAAA,CAAGC,WAAYC,CAAAA,aAAhB,EAA+BN,OAA/B,CAAJ,EAA+CC,YAA/C,GACMM,YAQJ,CARmBP,OAAQO,CAAAA,YAQ3B,CAPIC,OAOJ,CAPkBR,OAAQQ,CAAAA,WAO1B,CAJkB,CAIlB,CAJIA,OAIJ,GAHEL,MAGF,CAHWD,IAAKO,CAAAA,KAGhB,CAHwBD,OAGxB,EAHuC,CAGvC,EAAmB,CAAnB,CAAID,YAAJ;CACEH,MADF,CACWF,IAAKQ,CAAAA,MADhB,CACyBH,YADzB,EACyC,CADzC,CATF,CAcA,OAAO,CACLE,MAAOE,KAAA,CAAMT,IAAKO,CAAAA,KAAX,CAAmBN,MAAnB,CADF,CAELO,OAAQC,KAAA,CAAMT,IAAKQ,CAAAA,MAAX,CAAoBN,MAApB,CAFH,CAGLQ,IAAKD,KAAA,CAAMT,IAAKU,CAAAA,GAAX,CAAiBR,MAAjB,CAHA,CAILS,MAAOF,KAAA,CAAMT,IAAKW,CAAAA,KAAX,CAAmBV,MAAnB,CAJF,CAKLW,OAAQH,KAAA,CAAMT,IAAKY,CAAAA,MAAX,CAAoBV,MAApB,CALH,CAMLW,KAAMJ,KAAA,CAAMT,IAAKa,CAAAA,IAAX,CAAkBZ,MAAlB,CAND,CAOLa,EAAGL,KAAA,CAAMT,IAAKa,CAAAA,IAAX,CAAkBZ,MAAlB,CAPE,CAQLc,EAAGN,KAAA,CAAMT,IAAKU,CAAAA,GAAX,CAAiBR,MAAjB,CARE,CAvB6C,CAJtD,KAAIC,YAAcZ,OAAA,CAAQ,6DAAR,CAAlB,CAEIkB,MAAQO,IAAKP,CAAAA,KAVkH;\",\n\"sources\":[\"node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = getBoundingClientRect;\\n\\nvar _instanceOf = require(\\\"./instanceOf.js\\\");\\n\\nvar round = Math.round;\\n\\nfunction getBoundingClientRect(element, includeScale) {\\n  if (includeScale === void 0) {\\n    includeScale = false;\\n  }\\n\\n  var rect = element.getBoundingClientRect();\\n  var scaleX = 1;\\n  var scaleY = 1;\\n\\n  if ((0, _instanceOf.isHTMLElement)(element) && includeScale) {\\n    var offsetHeight = element.offsetHeight;\\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\\n    // Fallback to 1 in case both values are `0`\\n\\n    if (offsetWidth > 0) {\\n      scaleX = rect.width / offsetWidth || 1;\\n    }\\n\\n    if (offsetHeight > 0) {\\n      scaleY = rect.height / offsetHeight || 1;\\n    }\\n  }\\n\\n  return {\\n    width: round(rect.width / scaleX),\\n    height: round(rect.height / scaleY),\\n    top: round(rect.top / scaleY),\\n    right: round(rect.right / scaleX),\\n    bottom: round(rect.bottom / scaleY),\\n    left: round(rect.left / scaleX),\\n    x: round(rect.left / scaleX),\\n    y: round(rect.top / scaleY)\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"getBoundingClientRect\",\"element\",\"includeScale\",\"rect\",\"scaleX\",\"scaleY\",\"_instanceOf\",\"isHTMLElement\",\"offsetHeight\",\"offsetWidth\",\"width\",\"height\",\"round\",\"top\",\"right\",\"bottom\",\"left\",\"x\",\"y\",\"Math\"]\n}\n"]