["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/modifiers/TessellateModifier.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$modifiers$TessellateModifier=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.TessellateModifier=void 0;var _defineProperty2=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$babel$runtime$helpers$esm$defineProperty\")),_three=require(\"module$node_modules$three$build$three_module\");exports.TessellateModifier=function TessellateModifier(){var _this=this,maxEdgeLength=\n0<arguments.length&&void 0!==arguments[0]?arguments[0]:.1,_maxIterations=1<arguments.length&&void 0!==arguments[1]?arguments[1]:6;if(!(this instanceof TessellateModifier))throw new TypeError(\"Cannot call a class as a function\");(0,_defineProperty2[\"default\"])(this,\"maxEdgeLength\",void 0);(0,_defineProperty2[\"default\"])(this,\"maxIterations\",void 0);(0,_defineProperty2[\"default\"])(this,\"modify\",function(geometry){function addTriangle(a,b,c){var v1=vs[a],v2=vs[b],v3=vs[c];positions2.push(v1.x,v1.y,v1.z);\npositions2.push(v2.x,v2.y,v2.z);positions2.push(v3.x,v3.y,v3.z);hasNormals&&(v1=ns[a],v2=ns[b],v3=ns[c],normals2.push(v1.x,v1.y,v1.z),normals2.push(v2.x,v2.y,v2.z),normals2.push(v3.x,v3.y,v3.z));hasColors&&(v1=cs[a],v2=cs[b],v3=cs[c],colors2.push(v1.r,v1.g,v1.b),colors2.push(v2.r,v2.g,v2.b),colors2.push(v3.r,v3.g,v3.b));hasUVs&&(v1=us[a],v2=us[b],v3=us[c],uvs2.push(v1.x,v1.y),uvs2.push(v2.x,v2.y),uvs2.push(v3.x,v3.y));hasUV2s&&(a=u2s[a],b=u2s[b],c=u2s[c],uv2s2.push(a.x,a.y),uv2s2.push(b.x,b.y),uv2s2.push(c.x,\nc.y))}null!==geometry.index&&(geometry=geometry.toNonIndexed());var maxIterations=_this.maxIterations,maxEdgeLengthSquared=_this.maxEdgeLength*_this.maxEdgeLength,va=new _three.Vector3,vb=new _three.Vector3,vc=new _three.Vector3,vm=new _three.Vector3,vs=[va,vb,vc,vm],na=new _three.Vector3,nb=new _three.Vector3,nc=new _three.Vector3,nm=new _three.Vector3,ns=[na,nb,nc,nm],ca=new _three.Color,cb=new _three.Color,cc=new _three.Color,cm=new _three.Color,cs=[ca,cb,cc,cm],ua=new _three.Vector2,ub=new _three.Vector2,\nuc=new _three.Vector2,um=new _three.Vector2,us=[ua,ub,uc,um],u2a=new _three.Vector2,u2b=new _three.Vector2,u2c=new _three.Vector2,u2m=new _three.Vector2,u2s=[u2a,u2b,u2c,u2m],attributes=geometry.attributes,hasNormals=void 0!==attributes.normal,hasColors=void 0!==attributes.color,hasUVs=void 0!==attributes.uv,hasUV2s=void 0!==attributes.uv2;geometry=attributes.position.array;var normals=hasNormals?attributes.normal.array:null,colors=hasColors?attributes.color.array:null,uvs=hasUVs?attributes.uv.array:\nnull;attributes=hasUV2s?attributes.uv2.array:null;for(var positions2=geometry,normals2=normals,colors2=colors,uvs2=uvs,uv2s2=attributes,iteration=0,tessellating=!0;tessellating&&iteration<maxIterations;){iteration++;tessellating=!1;geometry=positions2;positions2=[];hasNormals&&(normals=normals2,normals2=[]);hasColors&&(colors=colors2,colors2=[]);hasUVs&&(uvs=uvs2,uvs2=[]);hasUV2s&&(attributes=uv2s2,uv2s2=[]);for(var i=0,i2=0,il=geometry.length;i<il;i+=9,i2+=6){va.fromArray(geometry,i+0);vb.fromArray(geometry,\ni+3);vc.fromArray(geometry,i+6);hasNormals&&normals&&(na.fromArray(normals,i+0),nb.fromArray(normals,i+3),nc.fromArray(normals,i+6));hasColors&&colors&&(ca.fromArray(colors,i+0),cb.fromArray(colors,i+3),cc.fromArray(colors,i+6));hasUVs&&uvs&&(ua.fromArray(uvs,i2+0),ub.fromArray(uvs,i2+2),uc.fromArray(uvs,i2+4));hasUV2s&&attributes&&(u2a.fromArray(attributes,i2+0),u2b.fromArray(attributes,i2+2),u2c.fromArray(attributes,i2+4));var dab=va.distanceToSquared(vb),dbc=vb.distanceToSquared(vc),dac=va.distanceToSquared(vc);\ndab>maxEdgeLengthSquared||dbc>maxEdgeLengthSquared||dac>maxEdgeLengthSquared?(tessellating=!0,dab>=dbc&&dab>=dac?(vm.lerpVectors(va,vb,.5),hasNormals&&nm.lerpVectors(na,nb,.5),hasColors&&cm.lerpColors(ca,cb,.5),hasUVs&&um.lerpVectors(ua,ub,.5),hasUV2s&&u2m.lerpVectors(u2a,u2b,.5),addTriangle(0,3,2),addTriangle(3,1,2)):dbc>=dab&&dbc>=dac?(vm.lerpVectors(vb,vc,.5),hasNormals&&nm.lerpVectors(nb,nc,.5),hasColors&&cm.lerpColors(cb,cc,.5),hasUVs&&um.lerpVectors(ub,uc,.5),hasUV2s&&u2m.lerpVectors(u2b,u2c,\n.5),addTriangle(0,1,3),addTriangle(3,2,0)):(vm.lerpVectors(va,vc,.5),hasNormals&&nm.lerpVectors(na,nc,.5),hasColors&&cm.lerpColors(ca,cc,.5),hasUVs&&um.lerpVectors(ua,uc,.5),hasUV2s&&u2m.lerpVectors(u2a,u2c,.5),addTriangle(0,1,3),addTriangle(3,1,2))):addTriangle(0,1,2)}}maxIterations=new _three.BufferGeometry;maxIterations.setAttribute(\"position\",new _three.Float32BufferAttribute(positions2,3));hasNormals&&maxIterations.setAttribute(\"normal\",new _three.Float32BufferAttribute(normals2,3));hasColors&&\nmaxIterations.setAttribute(\"color\",new _three.Float32BufferAttribute(colors2,3));hasUVs&&maxIterations.setAttribute(\"uv\",new _three.Float32BufferAttribute(uvs2,2));hasUV2s&&maxIterations.setAttribute(\"uv2\",new _three.Float32BufferAttribute(uv2s2,2));return maxIterations});this.maxEdgeLength=maxEdgeLength;this.maxIterations=_maxIterations}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$modifiers$TessellateModifier\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TessellateModifier = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/defineProperty\"));\n\nvar _three = require(\"three\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Break faces with edges longer than maxEdgeLength\n */\nvar TessellateModifier = function TessellateModifier() {\n  var _this = this;\n\n  var maxEdgeLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n\n  var _maxIterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n\n  _classCallCheck(this, TessellateModifier);\n\n  (0, _defineProperty2[\"default\"])(this, \"maxEdgeLength\", void 0);\n  (0, _defineProperty2[\"default\"])(this, \"maxIterations\", void 0);\n  (0, _defineProperty2[\"default\"])(this, \"modify\", function (geometry) {\n    if (geometry.index !== null) {\n      geometry = geometry.toNonIndexed();\n    } //\n\n\n    var maxIterations = _this.maxIterations;\n    var maxEdgeLengthSquared = _this.maxEdgeLength * _this.maxEdgeLength;\n    var va = new _three.Vector3();\n    var vb = new _three.Vector3();\n    var vc = new _three.Vector3();\n    var vm = new _three.Vector3();\n    var vs = [va, vb, vc, vm];\n    var na = new _three.Vector3();\n    var nb = new _three.Vector3();\n    var nc = new _three.Vector3();\n    var nm = new _three.Vector3();\n    var ns = [na, nb, nc, nm];\n    var ca = new _three.Color();\n    var cb = new _three.Color();\n    var cc = new _three.Color();\n    var cm = new _three.Color();\n    var cs = [ca, cb, cc, cm];\n    var ua = new _three.Vector2();\n    var ub = new _three.Vector2();\n    var uc = new _three.Vector2();\n    var um = new _three.Vector2();\n    var us = [ua, ub, uc, um];\n    var u2a = new _three.Vector2();\n    var u2b = new _three.Vector2();\n    var u2c = new _three.Vector2();\n    var u2m = new _three.Vector2();\n    var u2s = [u2a, u2b, u2c, u2m];\n    var attributes = geometry.attributes;\n    var hasNormals = attributes.normal !== undefined;\n    var hasColors = attributes.color !== undefined;\n    var hasUVs = attributes.uv !== undefined;\n    var hasUV2s = attributes.uv2 !== undefined;\n    var positions = attributes.position.array;\n    var normals = hasNormals ? attributes.normal.array : null;\n    var colors = hasColors ? attributes.color.array : null;\n    var uvs = hasUVs ? attributes.uv.array : null;\n    var uv2s = hasUV2s ? attributes.uv2.array : null;\n    var positions2 = positions;\n    var normals2 = normals;\n    var colors2 = colors;\n    var uvs2 = uvs;\n    var uv2s2 = uv2s;\n    var iteration = 0;\n    var tessellating = true;\n\n    function addTriangle(a, b, c) {\n      var v1 = vs[a];\n      var v2 = vs[b];\n      var v3 = vs[c];\n      positions2.push(v1.x, v1.y, v1.z);\n      positions2.push(v2.x, v2.y, v2.z);\n      positions2.push(v3.x, v3.y, v3.z);\n\n      if (hasNormals) {\n        var n1 = ns[a];\n        var n2 = ns[b];\n        var n3 = ns[c];\n        normals2.push(n1.x, n1.y, n1.z);\n        normals2.push(n2.x, n2.y, n2.z);\n        normals2.push(n3.x, n3.y, n3.z);\n      }\n\n      if (hasColors) {\n        var c1 = cs[a];\n        var c2 = cs[b];\n        var c3 = cs[c];\n        colors2.push(c1.r, c1.g, c1.b);\n        colors2.push(c2.r, c2.g, c2.b);\n        colors2.push(c3.r, c3.g, c3.b);\n      }\n\n      if (hasUVs) {\n        var u1 = us[a];\n        var u2 = us[b];\n        var u3 = us[c];\n        uvs2.push(u1.x, u1.y);\n        uvs2.push(u2.x, u2.y);\n        uvs2.push(u3.x, u3.y);\n      }\n\n      if (hasUV2s) {\n        var u21 = u2s[a];\n        var u22 = u2s[b];\n        var u23 = u2s[c];\n        uv2s2.push(u21.x, u21.y);\n        uv2s2.push(u22.x, u22.y);\n        uv2s2.push(u23.x, u23.y);\n      }\n    }\n\n    while (tessellating && iteration < maxIterations) {\n      iteration++;\n      tessellating = false;\n      positions = positions2;\n      positions2 = [];\n\n      if (hasNormals) {\n        normals = normals2;\n        normals2 = [];\n      }\n\n      if (hasColors) {\n        colors = colors2;\n        colors2 = [];\n      }\n\n      if (hasUVs) {\n        uvs = uvs2;\n        uvs2 = [];\n      }\n\n      if (hasUV2s) {\n        uv2s = uv2s2;\n        uv2s2 = [];\n      }\n\n      for (var i = 0, i2 = 0, il = positions.length; i < il; i += 9, i2 += 6) {\n        va.fromArray(positions, i + 0);\n        vb.fromArray(positions, i + 3);\n        vc.fromArray(positions, i + 6);\n\n        if (hasNormals && normals) {\n          na.fromArray(normals, i + 0);\n          nb.fromArray(normals, i + 3);\n          nc.fromArray(normals, i + 6);\n        }\n\n        if (hasColors && colors) {\n          ca.fromArray(colors, i + 0);\n          cb.fromArray(colors, i + 3);\n          cc.fromArray(colors, i + 6);\n        }\n\n        if (hasUVs && uvs) {\n          ua.fromArray(uvs, i2 + 0);\n          ub.fromArray(uvs, i2 + 2);\n          uc.fromArray(uvs, i2 + 4);\n        }\n\n        if (hasUV2s && uv2s) {\n          u2a.fromArray(uv2s, i2 + 0);\n          u2b.fromArray(uv2s, i2 + 2);\n          u2c.fromArray(uv2s, i2 + 4);\n        }\n\n        var dab = va.distanceToSquared(vb);\n        var dbc = vb.distanceToSquared(vc);\n        var dac = va.distanceToSquared(vc);\n\n        if (dab > maxEdgeLengthSquared || dbc > maxEdgeLengthSquared || dac > maxEdgeLengthSquared) {\n          tessellating = true;\n\n          if (dab >= dbc && dab >= dac) {\n            vm.lerpVectors(va, vb, 0.5);\n            if (hasNormals) nm.lerpVectors(na, nb, 0.5);\n            if (hasColors) cm.lerpColors(ca, cb, 0.5);\n            if (hasUVs) um.lerpVectors(ua, ub, 0.5);\n            if (hasUV2s) u2m.lerpVectors(u2a, u2b, 0.5);\n            addTriangle(0, 3, 2);\n            addTriangle(3, 1, 2);\n          } else if (dbc >= dab && dbc >= dac) {\n            vm.lerpVectors(vb, vc, 0.5);\n            if (hasNormals) nm.lerpVectors(nb, nc, 0.5);\n            if (hasColors) cm.lerpColors(cb, cc, 0.5);\n            if (hasUVs) um.lerpVectors(ub, uc, 0.5);\n            if (hasUV2s) u2m.lerpVectors(u2b, u2c, 0.5);\n            addTriangle(0, 1, 3);\n            addTriangle(3, 2, 0);\n          } else {\n            vm.lerpVectors(va, vc, 0.5);\n            if (hasNormals) nm.lerpVectors(na, nc, 0.5);\n            if (hasColors) cm.lerpColors(ca, cc, 0.5);\n            if (hasUVs) um.lerpVectors(ua, uc, 0.5);\n            if (hasUV2s) u2m.lerpVectors(u2a, u2c, 0.5);\n            addTriangle(0, 1, 3);\n            addTriangle(3, 1, 2);\n          }\n        } else {\n          addTriangle(0, 1, 2);\n        }\n      }\n    }\n\n    var geometry2 = new _three.BufferGeometry();\n    geometry2.setAttribute('position', new _three.Float32BufferAttribute(positions2, 3));\n\n    if (hasNormals) {\n      geometry2.setAttribute('normal', new _three.Float32BufferAttribute(normals2, 3));\n    }\n\n    if (hasColors) {\n      geometry2.setAttribute('color', new _three.Float32BufferAttribute(colors2, 3));\n    }\n\n    if (hasUVs) {\n      geometry2.setAttribute('uv', new _three.Float32BufferAttribute(uvs2, 2));\n    }\n\n    if (hasUV2s) {\n      geometry2.setAttribute('uv2', new _three.Float32BufferAttribute(uv2s2, 2));\n    }\n\n    return geometry2;\n  });\n  this.maxEdgeLength = maxEdgeLength;\n  this.maxIterations = _maxIterations;\n};\n\nexports.TessellateModifier = TessellateModifier;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$esm$defineProperty"]],"~:properties",["^5",["maxIterations","__esModule","value","TessellateModifier","maxEdgeLength"]],"~:compiled-at",1630917515183,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$modifiers$TessellateModifier.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/modifiers/TessellateModifier.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$modifiers$TessellateModifier\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.TessellateModifier = void 0;\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/defineProperty\\\"));\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\n/**\\n * Break faces with edges longer than maxEdgeLength\\n */\\nvar TessellateModifier = function TessellateModifier() {\\n  var _this = this;\\n\\n  var maxEdgeLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\\n\\n  var _maxIterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\\n\\n  _classCallCheck(this, TessellateModifier);\\n\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"maxEdgeLength\\\", void 0);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"maxIterations\\\", void 0);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"modify\\\", function (geometry) {\\n    if (geometry.index !== null) {\\n      geometry = geometry.toNonIndexed();\\n    } //\\n\\n\\n    var maxIterations = _this.maxIterations;\\n    var maxEdgeLengthSquared = _this.maxEdgeLength * _this.maxEdgeLength;\\n    var va = new _three.Vector3();\\n    var vb = new _three.Vector3();\\n    var vc = new _three.Vector3();\\n    var vm = new _three.Vector3();\\n    var vs = [va, vb, vc, vm];\\n    var na = new _three.Vector3();\\n    var nb = new _three.Vector3();\\n    var nc = new _three.Vector3();\\n    var nm = new _three.Vector3();\\n    var ns = [na, nb, nc, nm];\\n    var ca = new _three.Color();\\n    var cb = new _three.Color();\\n    var cc = new _three.Color();\\n    var cm = new _three.Color();\\n    var cs = [ca, cb, cc, cm];\\n    var ua = new _three.Vector2();\\n    var ub = new _three.Vector2();\\n    var uc = new _three.Vector2();\\n    var um = new _three.Vector2();\\n    var us = [ua, ub, uc, um];\\n    var u2a = new _three.Vector2();\\n    var u2b = new _three.Vector2();\\n    var u2c = new _three.Vector2();\\n    var u2m = new _three.Vector2();\\n    var u2s = [u2a, u2b, u2c, u2m];\\n    var attributes = geometry.attributes;\\n    var hasNormals = attributes.normal !== undefined;\\n    var hasColors = attributes.color !== undefined;\\n    var hasUVs = attributes.uv !== undefined;\\n    var hasUV2s = attributes.uv2 !== undefined;\\n    var positions = attributes.position.array;\\n    var normals = hasNormals ? attributes.normal.array : null;\\n    var colors = hasColors ? attributes.color.array : null;\\n    var uvs = hasUVs ? attributes.uv.array : null;\\n    var uv2s = hasUV2s ? attributes.uv2.array : null;\\n    var positions2 = positions;\\n    var normals2 = normals;\\n    var colors2 = colors;\\n    var uvs2 = uvs;\\n    var uv2s2 = uv2s;\\n    var iteration = 0;\\n    var tessellating = true;\\n\\n    function addTriangle(a, b, c) {\\n      var v1 = vs[a];\\n      var v2 = vs[b];\\n      var v3 = vs[c];\\n      positions2.push(v1.x, v1.y, v1.z);\\n      positions2.push(v2.x, v2.y, v2.z);\\n      positions2.push(v3.x, v3.y, v3.z);\\n\\n      if (hasNormals) {\\n        var n1 = ns[a];\\n        var n2 = ns[b];\\n        var n3 = ns[c];\\n        normals2.push(n1.x, n1.y, n1.z);\\n        normals2.push(n2.x, n2.y, n2.z);\\n        normals2.push(n3.x, n3.y, n3.z);\\n      }\\n\\n      if (hasColors) {\\n        var c1 = cs[a];\\n        var c2 = cs[b];\\n        var c3 = cs[c];\\n        colors2.push(c1.r, c1.g, c1.b);\\n        colors2.push(c2.r, c2.g, c2.b);\\n        colors2.push(c3.r, c3.g, c3.b);\\n      }\\n\\n      if (hasUVs) {\\n        var u1 = us[a];\\n        var u2 = us[b];\\n        var u3 = us[c];\\n        uvs2.push(u1.x, u1.y);\\n        uvs2.push(u2.x, u2.y);\\n        uvs2.push(u3.x, u3.y);\\n      }\\n\\n      if (hasUV2s) {\\n        var u21 = u2s[a];\\n        var u22 = u2s[b];\\n        var u23 = u2s[c];\\n        uv2s2.push(u21.x, u21.y);\\n        uv2s2.push(u22.x, u22.y);\\n        uv2s2.push(u23.x, u23.y);\\n      }\\n    }\\n\\n    while (tessellating && iteration < maxIterations) {\\n      iteration++;\\n      tessellating = false;\\n      positions = positions2;\\n      positions2 = [];\\n\\n      if (hasNormals) {\\n        normals = normals2;\\n        normals2 = [];\\n      }\\n\\n      if (hasColors) {\\n        colors = colors2;\\n        colors2 = [];\\n      }\\n\\n      if (hasUVs) {\\n        uvs = uvs2;\\n        uvs2 = [];\\n      }\\n\\n      if (hasUV2s) {\\n        uv2s = uv2s2;\\n        uv2s2 = [];\\n      }\\n\\n      for (var i = 0, i2 = 0, il = positions.length; i < il; i += 9, i2 += 6) {\\n        va.fromArray(positions, i + 0);\\n        vb.fromArray(positions, i + 3);\\n        vc.fromArray(positions, i + 6);\\n\\n        if (hasNormals && normals) {\\n          na.fromArray(normals, i + 0);\\n          nb.fromArray(normals, i + 3);\\n          nc.fromArray(normals, i + 6);\\n        }\\n\\n        if (hasColors && colors) {\\n          ca.fromArray(colors, i + 0);\\n          cb.fromArray(colors, i + 3);\\n          cc.fromArray(colors, i + 6);\\n        }\\n\\n        if (hasUVs && uvs) {\\n          ua.fromArray(uvs, i2 + 0);\\n          ub.fromArray(uvs, i2 + 2);\\n          uc.fromArray(uvs, i2 + 4);\\n        }\\n\\n        if (hasUV2s && uv2s) {\\n          u2a.fromArray(uv2s, i2 + 0);\\n          u2b.fromArray(uv2s, i2 + 2);\\n          u2c.fromArray(uv2s, i2 + 4);\\n        }\\n\\n        var dab = va.distanceToSquared(vb);\\n        var dbc = vb.distanceToSquared(vc);\\n        var dac = va.distanceToSquared(vc);\\n\\n        if (dab > maxEdgeLengthSquared || dbc > maxEdgeLengthSquared || dac > maxEdgeLengthSquared) {\\n          tessellating = true;\\n\\n          if (dab >= dbc && dab >= dac) {\\n            vm.lerpVectors(va, vb, 0.5);\\n            if (hasNormals) nm.lerpVectors(na, nb, 0.5);\\n            if (hasColors) cm.lerpColors(ca, cb, 0.5);\\n            if (hasUVs) um.lerpVectors(ua, ub, 0.5);\\n            if (hasUV2s) u2m.lerpVectors(u2a, u2b, 0.5);\\n            addTriangle(0, 3, 2);\\n            addTriangle(3, 1, 2);\\n          } else if (dbc >= dab && dbc >= dac) {\\n            vm.lerpVectors(vb, vc, 0.5);\\n            if (hasNormals) nm.lerpVectors(nb, nc, 0.5);\\n            if (hasColors) cm.lerpColors(cb, cc, 0.5);\\n            if (hasUVs) um.lerpVectors(ub, uc, 0.5);\\n            if (hasUV2s) u2m.lerpVectors(u2b, u2c, 0.5);\\n            addTriangle(0, 1, 3);\\n            addTriangle(3, 2, 0);\\n          } else {\\n            vm.lerpVectors(va, vc, 0.5);\\n            if (hasNormals) nm.lerpVectors(na, nc, 0.5);\\n            if (hasColors) cm.lerpColors(ca, cc, 0.5);\\n            if (hasUVs) um.lerpVectors(ua, uc, 0.5);\\n            if (hasUV2s) u2m.lerpVectors(u2a, u2c, 0.5);\\n            addTriangle(0, 1, 3);\\n            addTriangle(3, 1, 2);\\n          }\\n        } else {\\n          addTriangle(0, 1, 2);\\n        }\\n      }\\n    }\\n\\n    var geometry2 = new _three.BufferGeometry();\\n    geometry2.setAttribute('position', new _three.Float32BufferAttribute(positions2, 3));\\n\\n    if (hasNormals) {\\n      geometry2.setAttribute('normal', new _three.Float32BufferAttribute(normals2, 3));\\n    }\\n\\n    if (hasColors) {\\n      geometry2.setAttribute('color', new _three.Float32BufferAttribute(colors2, 3));\\n    }\\n\\n    if (hasUVs) {\\n      geometry2.setAttribute('uv', new _three.Float32BufferAttribute(uvs2, 2));\\n    }\\n\\n    if (hasUV2s) {\\n      geometry2.setAttribute('uv2', new _three.Float32BufferAttribute(uv2s2, 2));\\n    }\\n\\n    return geometry2;\\n  });\\n  this.maxEdgeLength = maxEdgeLength;\\n  this.maxIterations = _maxIterations;\\n};\\n\\nexports.TessellateModifier = TessellateModifier;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"TessellateModifier\",\"_defineProperty2\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_three\",\"_this\",\"maxEdgeLength\",\"arguments\",\"length\",\"undefined\",\"_maxIterations\",\"instance\",\"TypeError\",\"geometry\",\"addTriangle\",\"a\",\"b\",\"c\",\"v1\",\"vs\",\"v2\",\"v3\",\"positions2\",\"push\",\"x\",\"y\",\"z\",\"hasNormals\",\"n1\",\"ns\",\"n2\",\"n3\",\"normals2\",\"hasColors\",\"c1\",\"cs\",\"c2\",\"c3\",\"colors2\",\"r\",\"g\",\"hasUVs\",\"u1\",\"us\",\"u2\",\"u3\",\"uvs2\",\"hasUV2s\",\"u21\",\"u2s\",\"u22\",\"u23\",\"uv2s2\",\"index\",\"toNonIndexed\",\"maxIterations\",\"maxEdgeLengthSquared\",\"va\",\"Vector3\",\"vb\",\"vc\",\"vm\",\"na\",\"nb\",\"nc\",\"nm\",\"ca\",\"Color\",\"cb\",\"cc\",\"cm\",\"ua\",\"Vector2\",\"ub\",\"uc\",\"um\",\"u2a\",\"u2b\",\"u2c\",\"u2m\",\"attributes\",\"normal\",\"color\",\"uv\",\"uv2\",\"positions\",\"position\",\"array\",\"normals\",\"colors\",\"uvs\",\"uv2s\",\"iteration\",\"tessellating\",\"i\",\"i2\",\"il\",\"fromArray\",\"dab\",\"distanceToSquared\",\"dbc\",\"dac\",\"lerpVectors\",\"lerpColors\",\"geometry2\",\"BufferGeometry\",\"setAttribute\",\"Float32BufferAttribute\"]\n}\n"]