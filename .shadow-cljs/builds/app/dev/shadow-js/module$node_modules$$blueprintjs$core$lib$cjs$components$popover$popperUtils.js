["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/components/popover/popperUtils.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$components$popover$popperUtils=function(global,require,module,exports){function getPosition(placement){return placement.split(\"-\")[0]}function isVerticalPosition(side){return-1!==[\"left\",\"right\"].indexOf(side)}function getOppositePosition(side){switch(side){case \"top\":return\"bottom\";case \"left\":return\"right\";case \"bottom\":return\"top\";default:return\"left\"}}function getAlignment(placement){switch(placement.split(\"-\")[1]){case \"start\":return\"left\";\ncase \"end\":return\"right\";default:return\"center\"}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.arrowOffsetModifier=exports.getTransformOrigin=exports.getAlignment=exports.getOppositePosition=exports.isVerticalPosition=exports.getPosition=void 0;exports.getPosition=getPosition;exports.isVerticalPosition=isVerticalPosition;exports.getOppositePosition=getOppositePosition;exports.getAlignment=getAlignment;exports.getTransformOrigin=function(data){var position=getPosition(data.placement);\nif(null==data.arrowElement)return isVerticalPosition(position)?getOppositePosition(position)+\" \"+getAlignment(position):getAlignment(position)+\" \"+getOppositePosition(position);var arrowSizeShift=data.arrowElement.clientHeight/2;data=data.offsets.arrow;return isVerticalPosition(position)?getOppositePosition(position)+\" \"+(data.top+arrowSizeShift)+\"px\":data.left+arrowSizeShift+\"px \"+getOppositePosition(position)};exports.arrowOffsetModifier=function(data){if(null==data.arrowElement)return data;var arrowSize=\ndata.arrowElement.clientWidth,position=getPosition(data.placement),isVertical=isVerticalPosition(position),offsetSide=isVertical?\"left\":\"top\",arrowOffsetSize=Math.round(arrowSize/2/Math.sqrt(2));\"top\"===position||\"left\"===position?(data.offsets.popper[offsetSide]-=arrowOffsetSize+4,data.offsets.arrow[offsetSide]=data.offsets.popper[isVertical?\"width\":\"height\"]-arrowSize+arrowOffsetSize):(data.offsets.popper[offsetSide]+=arrowOffsetSize+4,data.offsets.arrow[offsetSide]=-arrowOffsetSize);return data}}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$components$popover$popperUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrowOffsetModifier = exports.getTransformOrigin = exports.getAlignment = exports.getOppositePosition = exports.isVerticalPosition = exports.getPosition = void 0;\n// Popper placement utils\n// ======================\n/** Converts a full placement to one of the four positions by stripping text after the `-`. */\nfunction getPosition(placement) {\n    return placement.split(\"-\")[0];\n}\nexports.getPosition = getPosition;\n/** Returns true if position is left or right. */\nfunction isVerticalPosition(side) {\n    return [\"left\", \"right\"].indexOf(side) !== -1;\n}\nexports.isVerticalPosition = isVerticalPosition;\n/** Returns the opposite position. */\nfunction getOppositePosition(side) {\n    switch (side) {\n        case \"top\":\n            return \"bottom\";\n        case \"left\":\n            return \"right\";\n        case \"bottom\":\n            return \"top\";\n        default:\n            return \"left\";\n    }\n}\nexports.getOppositePosition = getOppositePosition;\n/** Returns the CSS alignment keyword corresponding to given placement. */\nfunction getAlignment(placement) {\n    var align = placement.split(\"-\")[1];\n    switch (align) {\n        case \"start\":\n            return \"left\";\n        case \"end\":\n            return \"right\";\n        default:\n            return \"center\";\n    }\n}\nexports.getAlignment = getAlignment;\n// Popper modifiers\n// ================\n/** Modifier helper function to compute popper transform-origin based on arrow position */\nfunction getTransformOrigin(data) {\n    var position = getPosition(data.placement);\n    if (data.arrowElement == null) {\n        return isVerticalPosition(position)\n            ? getOppositePosition(position) + \" \" + getAlignment(position)\n            : getAlignment(position) + \" \" + getOppositePosition(position);\n    }\n    else {\n        var arrowSizeShift = data.arrowElement.clientHeight / 2;\n        var arrow = data.offsets.arrow;\n        // can use keyword for dimension without the arrow, to ease computation burden.\n        // move origin by half arrow's height to keep it centered.\n        return isVerticalPosition(position)\n            ? getOppositePosition(position) + \" \" + (arrow.top + arrowSizeShift) + \"px\"\n            : arrow.left + arrowSizeShift + \"px \" + getOppositePosition(position);\n    }\n}\nexports.getTransformOrigin = getTransformOrigin;\n// additional space between arrow and edge of target\nvar ARROW_SPACING = 4;\n/** Popper modifier that offsets popper and arrow so arrow points out of the correct side */\nvar arrowOffsetModifier = function (data) {\n    if (data.arrowElement == null) {\n        return data;\n    }\n    // our arrows have equal width and height\n    var arrowSize = data.arrowElement.clientWidth;\n    // this logic borrowed from original Popper arrow modifier itself\n    var position = getPosition(data.placement);\n    var isVertical = isVerticalPosition(position);\n    var len = isVertical ? \"width\" : \"height\";\n    var offsetSide = isVertical ? \"left\" : \"top\";\n    var arrowOffsetSize = Math.round(arrowSize / 2 / Math.sqrt(2));\n    // offset popover by arrow size, offset arrow in the opposite direction\n    if (position === \"top\" || position === \"left\") {\n        // the \"up & back\" directions require negative popper offsets\n        data.offsets.popper[offsetSide] -= arrowOffsetSize + ARROW_SPACING;\n        // can only use left/top on arrow so gotta get clever with 100% + X\n        data.offsets.arrow[offsetSide] = data.offsets.popper[len] - arrowSize + arrowOffsetSize;\n    }\n    else {\n        data.offsets.popper[offsetSide] += arrowOffsetSize + ARROW_SPACING;\n        data.offsets.arrow[offsetSide] = -arrowOffsetSize;\n    }\n    return data;\n};\nexports.arrowOffsetModifier = arrowOffsetModifier;\n//# sourceMappingURL=popperUtils.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["getTransformOrigin","getPosition","__esModule","value","getOppositePosition","getAlignment","isVerticalPosition","arrowOffsetModifier"]],"~:compiled-at",1630405505028,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$components$popover$popperUtils.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/components/popover/popperUtils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$components$popover$popperUtils\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/*\\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.arrowOffsetModifier = exports.getTransformOrigin = exports.getAlignment = exports.getOppositePosition = exports.isVerticalPosition = exports.getPosition = void 0;\\n// Popper placement utils\\n// ======================\\n/** Converts a full placement to one of the four positions by stripping text after the `-`. */\\nfunction getPosition(placement) {\\n    return placement.split(\\\"-\\\")[0];\\n}\\nexports.getPosition = getPosition;\\n/** Returns true if position is left or right. */\\nfunction isVerticalPosition(side) {\\n    return [\\\"left\\\", \\\"right\\\"].indexOf(side) !== -1;\\n}\\nexports.isVerticalPosition = isVerticalPosition;\\n/** Returns the opposite position. */\\nfunction getOppositePosition(side) {\\n    switch (side) {\\n        case \\\"top\\\":\\n            return \\\"bottom\\\";\\n        case \\\"left\\\":\\n            return \\\"right\\\";\\n        case \\\"bottom\\\":\\n            return \\\"top\\\";\\n        default:\\n            return \\\"left\\\";\\n    }\\n}\\nexports.getOppositePosition = getOppositePosition;\\n/** Returns the CSS alignment keyword corresponding to given placement. */\\nfunction getAlignment(placement) {\\n    var align = placement.split(\\\"-\\\")[1];\\n    switch (align) {\\n        case \\\"start\\\":\\n            return \\\"left\\\";\\n        case \\\"end\\\":\\n            return \\\"right\\\";\\n        default:\\n            return \\\"center\\\";\\n    }\\n}\\nexports.getAlignment = getAlignment;\\n// Popper modifiers\\n// ================\\n/** Modifier helper function to compute popper transform-origin based on arrow position */\\nfunction getTransformOrigin(data) {\\n    var position = getPosition(data.placement);\\n    if (data.arrowElement == null) {\\n        return isVerticalPosition(position)\\n            ? getOppositePosition(position) + \\\" \\\" + getAlignment(position)\\n            : getAlignment(position) + \\\" \\\" + getOppositePosition(position);\\n    }\\n    else {\\n        var arrowSizeShift = data.arrowElement.clientHeight / 2;\\n        var arrow = data.offsets.arrow;\\n        // can use keyword for dimension without the arrow, to ease computation burden.\\n        // move origin by half arrow's height to keep it centered.\\n        return isVerticalPosition(position)\\n            ? getOppositePosition(position) + \\\" \\\" + (arrow.top + arrowSizeShift) + \\\"px\\\"\\n            : arrow.left + arrowSizeShift + \\\"px \\\" + getOppositePosition(position);\\n    }\\n}\\nexports.getTransformOrigin = getTransformOrigin;\\n// additional space between arrow and edge of target\\nvar ARROW_SPACING = 4;\\n/** Popper modifier that offsets popper and arrow so arrow points out of the correct side */\\nvar arrowOffsetModifier = function (data) {\\n    if (data.arrowElement == null) {\\n        return data;\\n    }\\n    // our arrows have equal width and height\\n    var arrowSize = data.arrowElement.clientWidth;\\n    // this logic borrowed from original Popper arrow modifier itself\\n    var position = getPosition(data.placement);\\n    var isVertical = isVerticalPosition(position);\\n    var len = isVertical ? \\\"width\\\" : \\\"height\\\";\\n    var offsetSide = isVertical ? \\\"left\\\" : \\\"top\\\";\\n    var arrowOffsetSize = Math.round(arrowSize / 2 / Math.sqrt(2));\\n    // offset popover by arrow size, offset arrow in the opposite direction\\n    if (position === \\\"top\\\" || position === \\\"left\\\") {\\n        // the \\\"up & back\\\" directions require negative popper offsets\\n        data.offsets.popper[offsetSide] -= arrowOffsetSize + ARROW_SPACING;\\n        // can only use left/top on arrow so gotta get clever with 100% + X\\n        data.offsets.arrow[offsetSide] = data.offsets.popper[len] - arrowSize + arrowOffsetSize;\\n    }\\n    else {\\n        data.offsets.popper[offsetSide] += arrowOffsetSize + ARROW_SPACING;\\n        data.offsets.arrow[offsetSide] = -arrowOffsetSize;\\n    }\\n    return data;\\n};\\nexports.arrowOffsetModifier = arrowOffsetModifier;\\n//# sourceMappingURL=popperUtils.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getPosition\",\"placement\",\"split\",\"isVerticalPosition\",\"side\",\"indexOf\",\"getOppositePosition\",\"getAlignment\",\"align\",\"Object\",\"defineProperty\",\"value\",\"arrowOffsetModifier\",\"getTransformOrigin\",\"data\",\"position\",\"arrowElement\",\"arrowSizeShift\",\"clientHeight\",\"arrow\",\"offsets\",\"top\",\"left\",\"arrowSize\",\"clientWidth\",\"isVertical\",\"offsetSide\",\"arrowOffsetSize\",\"Math\",\"round\",\"sqrt\",\"popper\",\"ARROW_SPACING\",\"len\"]\n}\n"]