["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/loaders/MTLLoader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$loaders$MTLLoader=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\");\n}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=\nObject.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,\np$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.MTLLoader=void 0;var _three=require(\"module$node_modules$three$build$three_module\");global=function(_Loader){function MTLLoader(manager){_classCallCheck(this,MTLLoader);manager=_getPrototypeOf(MTLLoader).call(this,manager);if(!manager||\"object\"!==_typeof(manager)&&\"function\"!==typeof manager){if(void 0===\nthis)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");manager=this}return manager}_inherits(MTLLoader,_Loader);_createClass(MTLLoader,[{key:\"load\",value:function(url,onLoad,onProgress,onError){var scope=this,path=\"\"===this.path?_three.LoaderUtils.extractUrlBase(url):this.path,loader=new _three.FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(text,\npath))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)}},{key:\"setMaterialOptions\",value:function(value){this.materialOptions=value;return this}},{key:\"parse\",value:function(text,path){var lines=text.split(\"\\n\"),info={},delimiter_pattern=/\\s+/;text={};for(var i=0;i<lines.length;i++){var line=lines[i];line=line.trim();if(0!==line.length&&\"#\"!==line.charAt(0)){var pos=line.indexOf(\" \"),key=0<=pos?line.substring(0,pos):line;key=key.toLowerCase();line=0<=\npos?line.substring(pos+1):\"\";line=line.trim();\"newmtl\"===key?(info={name:line},text[line]=info):\"ka\"===key||\"kd\"===key||\"ks\"===key||\"ke\"===key?(line=line.split(delimiter_pattern,3),info[key]=[parseFloat(line[0]),parseFloat(line[1]),parseFloat(line[2])]):info[key]=line}}path=new MaterialCreator(this.resourcePath||path,this.materialOptions);path.setCrossOrigin(this.crossOrigin);path.setManager(this.manager);path.setMaterials(text);return path}}]);return MTLLoader}(_three.Loader);exports.MTLLoader=global;\nvar MaterialCreator=function(){function MaterialCreator(){var baseUrl=0<arguments.length&&void 0!==arguments[0]?arguments[0]:\"\",options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,MaterialCreator);this.baseUrl=baseUrl;this.options=options;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.crossOrigin=\"anonymous\";this.side=void 0!==this.options.side?this.options.side:_three.FrontSide;this.wrap=void 0!==this.options.wrap?this.options.wrap:\n_three.RepeatWrapping}_createClass(MaterialCreator,[{key:\"setCrossOrigin\",value:function(value){this.crossOrigin=value;return this}},{key:\"setManager\",value:function(value){this.manager=value}},{key:\"setMaterials\",value:function(materialsInfo){this.materialsInfo=this.convert(materialsInfo);this.materials={};this.materialsArray=[];this.nameLookup={}}},{key:\"convert\",value:function(materialsInfo){if(!this.options)return materialsInfo;var converted={},mn;for(mn in materialsInfo){var mat=materialsInfo[mn],\ncovmat={};converted[mn]=covmat;for(var prop in mat){var save=!0,value=mat[prop],lprop=prop.toLowerCase();switch(lprop){case \"kd\":case \"ka\":case \"ks\":this.options&&this.options.normalizeRGB&&(value=[value[0]/255,value[1]/255,value[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===value[0]&&0===value[1]&&0===value[2]&&(save=!1)}save&&(covmat[lprop]=value)}}return converted}},{key:\"preload\",value:function(){for(var mn in this.materialsInfo)this.create(mn)}},{key:\"getIndex\",value:function(materialName){return this.nameLookup[materialName]}},\n{key:\"getAsArray\",value:function(){var index=0,mn;for(mn in this.materialsInfo)this.materialsArray[index]=this.create(mn),this.nameLookup[mn]=index,index++;return this.materialsArray}},{key:\"create\",value:function(materialName){void 0===this.materials[materialName]&&this.createMaterial_(materialName);return this.materials[materialName]}},{key:\"createMaterial_\",value:function(materialName){function setMapForType(mapType,value){if(!params[mapType]){value=scope.getTextureParams(value,params);var JSCompiler_temp_const=\nscope,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.loadTexture;var JSCompiler_inline_result=scope.baseUrl;var url=value.url;JSCompiler_inline_result=\"string\"!==typeof url||\"\"===url?\"\":/^https?:\\/\\//i.test(url)?url:JSCompiler_inline_result+url;JSCompiler_temp_const=JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,JSCompiler_inline_result);JSCompiler_temp_const.repeat.copy(value.scale);JSCompiler_temp_const.offset.copy(value.offset);JSCompiler_temp_const.wrapS=scope.wrap;JSCompiler_temp_const.wrapT=\nscope.wrap;params[mapType]=JSCompiler_temp_const}}var scope=this,mat=this.materialsInfo[materialName],params={name:materialName,side:this.side},prop;for(prop in mat){var value$jscomp$0=mat[prop],n=void 0;if(\"\"!==value$jscomp$0)switch(prop.toLowerCase()){case \"kd\":params.color=(new _three.Color).fromArray(value$jscomp$0);break;case \"ks\":params.specular=(new _three.Color).fromArray(value$jscomp$0);break;case \"ke\":params.emissive=(new _three.Color).fromArray(value$jscomp$0);break;case \"map_kd\":setMapForType(\"map\",\nvalue$jscomp$0);break;case \"map_ks\":setMapForType(\"specularMap\",value$jscomp$0);break;case \"map_ke\":setMapForType(\"emissiveMap\",value$jscomp$0);break;case \"norm\":setMapForType(\"normalMap\",value$jscomp$0);break;case \"map_bump\":case \"bump\":setMapForType(\"bumpMap\",value$jscomp$0);break;case \"map_d\":setMapForType(\"alphaMap\",value$jscomp$0);params.transparent=!0;break;case \"ns\":params.shininess=parseFloat(value$jscomp$0);break;case \"d\":n=parseFloat(value$jscomp$0);1>n&&(params.opacity=n,params.transparent=\n!0);break;case \"tr\":n=parseFloat(value$jscomp$0),this.options&&this.options.invertTrProperty&&(n=1-n),0<n&&(params.opacity=1-n,params.transparent=!0)}}this.materials[materialName]=new _three.MeshPhongMaterial(params);return this.materials[materialName]}},{key:\"getTextureParams\",value:function(value,matParams){var texParams={scale:new _three.Vector2(1,1),offset:new _three.Vector2(0,0)};value=value.split(/\\s+/);var pos=value.indexOf(\"-bm\");0<=pos&&(matParams.bumpScale=parseFloat(value[pos+1]),value.splice(pos,\n2));pos=value.indexOf(\"-s\");0<=pos&&(texParams.scale.set(parseFloat(value[pos+1]),parseFloat(value[pos+2])),value.splice(pos,4));pos=value.indexOf(\"-o\");0<=pos&&(texParams.offset.set(parseFloat(value[pos+1]),parseFloat(value[pos+2])),value.splice(pos,4));texParams.url=value.join(\" \").trim();return texParams}},{key:\"loadTexture\",value:function(url,mapping,onLoad,onProgress,onError){var manager=void 0!==this.manager?this.manager:_three.DefaultLoadingManager,loader=manager.getHandler(url);null===loader&&\n(loader=new _three.TextureLoader(manager));loader.setCrossOrigin&&loader.setCrossOrigin(this.crossOrigin);url=loader.load(url,onLoad,onProgress,onError);void 0!==mapping&&(url.mapping=mapping);return url}}]);return MaterialCreator}()}","~:source","shadow$provide[\"module$node_modules$three_stdlib$loaders$MTLLoader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MTLLoader = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n */\nvar MTLLoader =\n/*#__PURE__*/\nfunction (_Loader) {\n  _inherits(MTLLoader, _Loader);\n\n  function MTLLoader(manager) {\n    _classCallCheck(this, MTLLoader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MTLLoader).call(this, manager));\n  }\n  /**\n   * Loads and parses a MTL asset from a URL.\n   *\n   * @param {String} url - URL to the MTL file.\n   * @param {Function} [onLoad] - Callback invoked with the loaded object.\n   * @param {Function} [onProgress] - Callback for download progress.\n   * @param {Function} [onError] - Callback for download errors.\n   *\n   * @see setPath setResourcePath\n   *\n   * @note In order for relative texture references to resolve correctly\n   * you must call setResourcePath() explicitly prior to load.\n   */\n\n\n  _createClass(MTLLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === '' ? _three.LoaderUtils.extractUrlBase(url) : this.path;\n      var loader = new _three.FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text, path));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"setMaterialOptions\",\n    value: function setMaterialOptions(value) {\n      this.materialOptions = value;\n      return this;\n    }\n    /**\n     * Parses a MTL file.\n     *\n     * @param {String} text - Content of MTL file\n     * @return {MaterialCreator}\n     *\n     * @see setPath setResourcePath\n     *\n     * @note In order for relative texture references to resolve correctly\n     * you must call setResourcePath() explicitly prior to parse.\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(text, path) {\n      var lines = text.split('\\n');\n      var info = {};\n      var delimiter_pattern = /\\s+/;\n      var materialsInfo = {};\n\n      for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        line = line.trim();\n\n        if (line.length === 0 || line.charAt(0) === '#') {\n          // Blank line or comment ignore\n          continue;\n        }\n\n        var pos = line.indexOf(' ');\n        var key = pos >= 0 ? line.substring(0, pos) : line;\n        key = key.toLowerCase();\n        var value = pos >= 0 ? line.substring(pos + 1) : '';\n        value = value.trim();\n\n        if (key === 'newmtl') {\n          // New material\n          info = {\n            name: value\n          };\n          materialsInfo[value] = info;\n        } else {\n          if (key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke') {\n            var ss = value.split(delimiter_pattern, 3);\n            info[key] = [parseFloat(ss[0]), parseFloat(ss[1]), parseFloat(ss[2])];\n          } else {\n            info[key] = value;\n          }\n        }\n      }\n\n      var materialCreator = new MaterialCreator(this.resourcePath || path, this.materialOptions);\n      materialCreator.setCrossOrigin(this.crossOrigin);\n      materialCreator.setManager(this.manager);\n      materialCreator.setMaterials(materialsInfo);\n      return materialCreator;\n    }\n  }]);\n\n  return MTLLoader;\n}(_three.Loader);\n/**\n * Create a new MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\n\nexports.MTLLoader = MTLLoader;\n\nvar MaterialCreator =\n/*#__PURE__*/\nfunction () {\n  function MaterialCreator() {\n    var baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, MaterialCreator);\n\n    this.baseUrl = baseUrl;\n    this.options = options;\n    this.materialsInfo = {};\n    this.materials = {};\n    this.materialsArray = [];\n    this.nameLookup = {};\n    this.crossOrigin = 'anonymous';\n    this.side = this.options.side !== undefined ? this.options.side : _three.FrontSide;\n    this.wrap = this.options.wrap !== undefined ? this.options.wrap : _three.RepeatWrapping;\n  }\n\n  _createClass(MaterialCreator, [{\n    key: \"setCrossOrigin\",\n    value: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    }\n  }, {\n    key: \"setManager\",\n    value: function setManager(value) {\n      this.manager = value;\n    }\n  }, {\n    key: \"setMaterials\",\n    value: function setMaterials(materialsInfo) {\n      this.materialsInfo = this.convert(materialsInfo);\n      this.materials = {};\n      this.materialsArray = [];\n      this.nameLookup = {};\n    }\n  }, {\n    key: \"convert\",\n    value: function convert(materialsInfo) {\n      if (!this.options) return materialsInfo;\n      var converted = {};\n\n      for (var mn in materialsInfo) {\n        // Convert materials info into normalized form based on options\n        var mat = materialsInfo[mn];\n        var covmat = {};\n        converted[mn] = covmat;\n\n        for (var prop in mat) {\n          var save = true;\n          var value = mat[prop];\n          var lprop = prop.toLowerCase();\n\n          switch (lprop) {\n            case 'kd':\n            case 'ka':\n            case 'ks':\n              // Diffuse color (color under white light) using RGB values\n              if (this.options && this.options.normalizeRGB) {\n                value = [value[0] / 255, value[1] / 255, value[2] / 255];\n              }\n\n              if (this.options && this.options.ignoreZeroRGBs) {\n                if (value[0] === 0 && value[1] === 0 && value[2] === 0) {\n                  // ignore\n                  save = false;\n                }\n              }\n\n              break;\n          }\n\n          if (save) {\n            covmat[lprop] = value;\n          }\n        }\n      }\n\n      return converted;\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      for (var mn in this.materialsInfo) {\n        this.create(mn);\n      }\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(materialName) {\n      return this.nameLookup[materialName];\n    }\n  }, {\n    key: \"getAsArray\",\n    value: function getAsArray() {\n      var index = 0;\n\n      for (var mn in this.materialsInfo) {\n        this.materialsArray[index] = this.create(mn);\n        this.nameLookup[mn] = index;\n        index++;\n      }\n\n      return this.materialsArray;\n    }\n  }, {\n    key: \"create\",\n    value: function create(materialName) {\n      if (this.materials[materialName] === undefined) {\n        this.createMaterial_(materialName);\n      }\n\n      return this.materials[materialName];\n    }\n  }, {\n    key: \"createMaterial_\",\n    value: function createMaterial_(materialName) {\n      // Create material\n      var scope = this;\n      var mat = this.materialsInfo[materialName];\n      var params = {\n        name: materialName,\n        side: this.side\n      };\n\n      function resolveURL(baseUrl, url) {\n        if (typeof url !== 'string' || url === '') return ''; // Absolute URL\n\n        if (/^https?:\\/\\//i.test(url)) return url;\n        return baseUrl + url;\n      }\n\n      function setMapForType(mapType, value) {\n        if (params[mapType]) return; // Keep the first encountered texture\n\n        var texParams = scope.getTextureParams(value, params);\n        var map = scope.loadTexture(resolveURL(scope.baseUrl, texParams.url));\n        map.repeat.copy(texParams.scale);\n        map.offset.copy(texParams.offset);\n        map.wrapS = scope.wrap;\n        map.wrapT = scope.wrap;\n        params[mapType] = map;\n      }\n\n      for (var prop in mat) {\n        var value = mat[prop];\n        var n = void 0;\n        if (value === '') continue;\n\n        switch (prop.toLowerCase()) {\n          // Ns is material specular exponent\n          case 'kd':\n            // Diffuse color (color under white light) using RGB values\n            params.color = new _three.Color().fromArray(value);\n            break;\n\n          case 'ks':\n            // Specular color (color when light is reflected from shiny surface) using RGB values\n            params.specular = new _three.Color().fromArray(value);\n            break;\n\n          case 'ke':\n            // Emissive using RGB values\n            params.emissive = new _three.Color().fromArray(value);\n            break;\n\n          case 'map_kd':\n            // Diffuse texture map\n            setMapForType('map', value);\n            break;\n\n          case 'map_ks':\n            // Specular map\n            setMapForType('specularMap', value);\n            break;\n\n          case 'map_ke':\n            // Emissive map\n            setMapForType('emissiveMap', value);\n            break;\n\n          case 'norm':\n            setMapForType('normalMap', value);\n            break;\n\n          case 'map_bump':\n          case 'bump':\n            // Bump texture map\n            setMapForType('bumpMap', value);\n            break;\n\n          case 'map_d':\n            // Alpha map\n            setMapForType('alphaMap', value);\n            params.transparent = true;\n            break;\n\n          case 'ns':\n            // The specular exponent (defines the focus of the specular highlight)\n            // A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n            params.shininess = parseFloat(value);\n            break;\n\n          case 'd':\n            n = parseFloat(value);\n\n            if (n < 1) {\n              params.opacity = n;\n              params.transparent = true;\n            }\n\n            break;\n\n          case 'tr':\n            n = parseFloat(value);\n            if (this.options && this.options.invertTrProperty) n = 1 - n;\n\n            if (n > 0) {\n              params.opacity = 1 - n;\n              params.transparent = true;\n            }\n\n            break;\n        }\n      }\n\n      this.materials[materialName] = new _three.MeshPhongMaterial(params);\n      return this.materials[materialName];\n    }\n  }, {\n    key: \"getTextureParams\",\n    value: function getTextureParams(value, matParams) {\n      var texParams = {\n        scale: new _three.Vector2(1, 1),\n        offset: new _three.Vector2(0, 0)\n      };\n      var items = value.split(/\\s+/);\n      var pos;\n      pos = items.indexOf('-bm');\n\n      if (pos >= 0) {\n        matParams.bumpScale = parseFloat(items[pos + 1]);\n        items.splice(pos, 2);\n      }\n\n      pos = items.indexOf('-s');\n\n      if (pos >= 0) {\n        texParams.scale.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n        items.splice(pos, 4); // we expect 3 parameters here!\n      }\n\n      pos = items.indexOf('-o');\n\n      if (pos >= 0) {\n        texParams.offset.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n        items.splice(pos, 4); // we expect 3 parameters here!\n      }\n\n      texParams.url = items.join(' ').trim();\n      return texParams;\n    }\n  }, {\n    key: \"loadTexture\",\n    value: function loadTexture(url, mapping, onLoad, onProgress, onError) {\n      var manager = this.manager !== undefined ? this.manager : _three.DefaultLoadingManager;\n      var loader = manager.getHandler(url);\n\n      if (loader === null) {\n        loader = new _three.TextureLoader(manager);\n      }\n\n      if (loader.setCrossOrigin) loader.setCrossOrigin(this.crossOrigin);\n      var texture = loader.load(url, onLoad, onProgress, onError);\n      if (mapping !== undefined) texture.mapping = mapping;\n      return texture;\n    }\n  }]);\n\n  return MaterialCreator;\n}();\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["wrapS","url","offset","prototype","scale","transparent","side","emissive","materialOptions","MTLLoader","key","__esModule","materials","wrap","specular","name","configurable","value","enumerable","baseUrl","materialsArray","writable","shininess","materialsInfo","wrapT","mapping","__proto__","manager","bumpScale","nameLookup","options","color","opacity","crossOrigin","constructor"]],"~:compiled-at",1630917515614,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$loaders$MTLLoader.js\",\n\"lineCount\":17,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/loaders/MTLLoader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$loaders$MTLLoader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MTLLoader = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n/**\\n * Loads a Wavefront .mtl file specifying materials\\n */\\nvar MTLLoader =\\n/*#__PURE__*/\\nfunction (_Loader) {\\n  _inherits(MTLLoader, _Loader);\\n\\n  function MTLLoader(manager) {\\n    _classCallCheck(this, MTLLoader);\\n\\n    return _possibleConstructorReturn(this, _getPrototypeOf(MTLLoader).call(this, manager));\\n  }\\n  /**\\n   * Loads and parses a MTL asset from a URL.\\n   *\\n   * @param {String} url - URL to the MTL file.\\n   * @param {Function} [onLoad] - Callback invoked with the loaded object.\\n   * @param {Function} [onProgress] - Callback for download progress.\\n   * @param {Function} [onError] - Callback for download errors.\\n   *\\n   * @see setPath setResourcePath\\n   *\\n   * @note In order for relative texture references to resolve correctly\\n   * you must call setResourcePath() explicitly prior to load.\\n   */\\n\\n\\n  _createClass(MTLLoader, [{\\n    key: \\\"load\\\",\\n    value: function load(url, onLoad, onProgress, onError) {\\n      var scope = this;\\n      var path = this.path === '' ? _three.LoaderUtils.extractUrlBase(url) : this.path;\\n      var loader = new _three.FileLoader(this.manager);\\n      loader.setPath(this.path);\\n      loader.setRequestHeader(this.requestHeader);\\n      loader.setWithCredentials(this.withCredentials);\\n      loader.load(url, function (text) {\\n        try {\\n          onLoad(scope.parse(text, path));\\n        } catch (e) {\\n          if (onError) {\\n            onError(e);\\n          } else {\\n            console.error(e);\\n          }\\n\\n          scope.manager.itemError(url);\\n        }\\n      }, onProgress, onError);\\n    }\\n  }, {\\n    key: \\\"setMaterialOptions\\\",\\n    value: function setMaterialOptions(value) {\\n      this.materialOptions = value;\\n      return this;\\n    }\\n    /**\\n     * Parses a MTL file.\\n     *\\n     * @param {String} text - Content of MTL file\\n     * @return {MaterialCreator}\\n     *\\n     * @see setPath setResourcePath\\n     *\\n     * @note In order for relative texture references to resolve correctly\\n     * you must call setResourcePath() explicitly prior to parse.\\n     */\\n\\n  }, {\\n    key: \\\"parse\\\",\\n    value: function parse(text, path) {\\n      var lines = text.split('\\\\n');\\n      var info = {};\\n      var delimiter_pattern = /\\\\s+/;\\n      var materialsInfo = {};\\n\\n      for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i];\\n        line = line.trim();\\n\\n        if (line.length === 0 || line.charAt(0) === '#') {\\n          // Blank line or comment ignore\\n          continue;\\n        }\\n\\n        var pos = line.indexOf(' ');\\n        var key = pos >= 0 ? line.substring(0, pos) : line;\\n        key = key.toLowerCase();\\n        var value = pos >= 0 ? line.substring(pos + 1) : '';\\n        value = value.trim();\\n\\n        if (key === 'newmtl') {\\n          // New material\\n          info = {\\n            name: value\\n          };\\n          materialsInfo[value] = info;\\n        } else {\\n          if (key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke') {\\n            var ss = value.split(delimiter_pattern, 3);\\n            info[key] = [parseFloat(ss[0]), parseFloat(ss[1]), parseFloat(ss[2])];\\n          } else {\\n            info[key] = value;\\n          }\\n        }\\n      }\\n\\n      var materialCreator = new MaterialCreator(this.resourcePath || path, this.materialOptions);\\n      materialCreator.setCrossOrigin(this.crossOrigin);\\n      materialCreator.setManager(this.manager);\\n      materialCreator.setMaterials(materialsInfo);\\n      return materialCreator;\\n    }\\n  }]);\\n\\n  return MTLLoader;\\n}(_three.Loader);\\n/**\\n * Create a new MTLLoader.MaterialCreator\\n * @param baseUrl - Url relative to which textures are loaded\\n * @param options - Set of options on how to construct the materials\\n *                  side: Which side to apply the material\\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\\n *                  wrap: What type of wrapping to apply for textures\\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\\n *                                Default: false, assumed to be already normalized\\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\\n *                                  Default: false\\n * @constructor\\n */\\n\\n\\nexports.MTLLoader = MTLLoader;\\n\\nvar MaterialCreator =\\n/*#__PURE__*/\\nfunction () {\\n  function MaterialCreator() {\\n    var baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n    _classCallCheck(this, MaterialCreator);\\n\\n    this.baseUrl = baseUrl;\\n    this.options = options;\\n    this.materialsInfo = {};\\n    this.materials = {};\\n    this.materialsArray = [];\\n    this.nameLookup = {};\\n    this.crossOrigin = 'anonymous';\\n    this.side = this.options.side !== undefined ? this.options.side : _three.FrontSide;\\n    this.wrap = this.options.wrap !== undefined ? this.options.wrap : _three.RepeatWrapping;\\n  }\\n\\n  _createClass(MaterialCreator, [{\\n    key: \\\"setCrossOrigin\\\",\\n    value: function setCrossOrigin(value) {\\n      this.crossOrigin = value;\\n      return this;\\n    }\\n  }, {\\n    key: \\\"setManager\\\",\\n    value: function setManager(value) {\\n      this.manager = value;\\n    }\\n  }, {\\n    key: \\\"setMaterials\\\",\\n    value: function setMaterials(materialsInfo) {\\n      this.materialsInfo = this.convert(materialsInfo);\\n      this.materials = {};\\n      this.materialsArray = [];\\n      this.nameLookup = {};\\n    }\\n  }, {\\n    key: \\\"convert\\\",\\n    value: function convert(materialsInfo) {\\n      if (!this.options) return materialsInfo;\\n      var converted = {};\\n\\n      for (var mn in materialsInfo) {\\n        // Convert materials info into normalized form based on options\\n        var mat = materialsInfo[mn];\\n        var covmat = {};\\n        converted[mn] = covmat;\\n\\n        for (var prop in mat) {\\n          var save = true;\\n          var value = mat[prop];\\n          var lprop = prop.toLowerCase();\\n\\n          switch (lprop) {\\n            case 'kd':\\n            case 'ka':\\n            case 'ks':\\n              // Diffuse color (color under white light) using RGB values\\n              if (this.options && this.options.normalizeRGB) {\\n                value = [value[0] / 255, value[1] / 255, value[2] / 255];\\n              }\\n\\n              if (this.options && this.options.ignoreZeroRGBs) {\\n                if (value[0] === 0 && value[1] === 0 && value[2] === 0) {\\n                  // ignore\\n                  save = false;\\n                }\\n              }\\n\\n              break;\\n          }\\n\\n          if (save) {\\n            covmat[lprop] = value;\\n          }\\n        }\\n      }\\n\\n      return converted;\\n    }\\n  }, {\\n    key: \\\"preload\\\",\\n    value: function preload() {\\n      for (var mn in this.materialsInfo) {\\n        this.create(mn);\\n      }\\n    }\\n  }, {\\n    key: \\\"getIndex\\\",\\n    value: function getIndex(materialName) {\\n      return this.nameLookup[materialName];\\n    }\\n  }, {\\n    key: \\\"getAsArray\\\",\\n    value: function getAsArray() {\\n      var index = 0;\\n\\n      for (var mn in this.materialsInfo) {\\n        this.materialsArray[index] = this.create(mn);\\n        this.nameLookup[mn] = index;\\n        index++;\\n      }\\n\\n      return this.materialsArray;\\n    }\\n  }, {\\n    key: \\\"create\\\",\\n    value: function create(materialName) {\\n      if (this.materials[materialName] === undefined) {\\n        this.createMaterial_(materialName);\\n      }\\n\\n      return this.materials[materialName];\\n    }\\n  }, {\\n    key: \\\"createMaterial_\\\",\\n    value: function createMaterial_(materialName) {\\n      // Create material\\n      var scope = this;\\n      var mat = this.materialsInfo[materialName];\\n      var params = {\\n        name: materialName,\\n        side: this.side\\n      };\\n\\n      function resolveURL(baseUrl, url) {\\n        if (typeof url !== 'string' || url === '') return ''; // Absolute URL\\n\\n        if (/^https?:\\\\/\\\\//i.test(url)) return url;\\n        return baseUrl + url;\\n      }\\n\\n      function setMapForType(mapType, value) {\\n        if (params[mapType]) return; // Keep the first encountered texture\\n\\n        var texParams = scope.getTextureParams(value, params);\\n        var map = scope.loadTexture(resolveURL(scope.baseUrl, texParams.url));\\n        map.repeat.copy(texParams.scale);\\n        map.offset.copy(texParams.offset);\\n        map.wrapS = scope.wrap;\\n        map.wrapT = scope.wrap;\\n        params[mapType] = map;\\n      }\\n\\n      for (var prop in mat) {\\n        var value = mat[prop];\\n        var n = void 0;\\n        if (value === '') continue;\\n\\n        switch (prop.toLowerCase()) {\\n          // Ns is material specular exponent\\n          case 'kd':\\n            // Diffuse color (color under white light) using RGB values\\n            params.color = new _three.Color().fromArray(value);\\n            break;\\n\\n          case 'ks':\\n            // Specular color (color when light is reflected from shiny surface) using RGB values\\n            params.specular = new _three.Color().fromArray(value);\\n            break;\\n\\n          case 'ke':\\n            // Emissive using RGB values\\n            params.emissive = new _three.Color().fromArray(value);\\n            break;\\n\\n          case 'map_kd':\\n            // Diffuse texture map\\n            setMapForType('map', value);\\n            break;\\n\\n          case 'map_ks':\\n            // Specular map\\n            setMapForType('specularMap', value);\\n            break;\\n\\n          case 'map_ke':\\n            // Emissive map\\n            setMapForType('emissiveMap', value);\\n            break;\\n\\n          case 'norm':\\n            setMapForType('normalMap', value);\\n            break;\\n\\n          case 'map_bump':\\n          case 'bump':\\n            // Bump texture map\\n            setMapForType('bumpMap', value);\\n            break;\\n\\n          case 'map_d':\\n            // Alpha map\\n            setMapForType('alphaMap', value);\\n            params.transparent = true;\\n            break;\\n\\n          case 'ns':\\n            // The specular exponent (defines the focus of the specular highlight)\\n            // A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\\n            params.shininess = parseFloat(value);\\n            break;\\n\\n          case 'd':\\n            n = parseFloat(value);\\n\\n            if (n < 1) {\\n              params.opacity = n;\\n              params.transparent = true;\\n            }\\n\\n            break;\\n\\n          case 'tr':\\n            n = parseFloat(value);\\n            if (this.options && this.options.invertTrProperty) n = 1 - n;\\n\\n            if (n > 0) {\\n              params.opacity = 1 - n;\\n              params.transparent = true;\\n            }\\n\\n            break;\\n        }\\n      }\\n\\n      this.materials[materialName] = new _three.MeshPhongMaterial(params);\\n      return this.materials[materialName];\\n    }\\n  }, {\\n    key: \\\"getTextureParams\\\",\\n    value: function getTextureParams(value, matParams) {\\n      var texParams = {\\n        scale: new _three.Vector2(1, 1),\\n        offset: new _three.Vector2(0, 0)\\n      };\\n      var items = value.split(/\\\\s+/);\\n      var pos;\\n      pos = items.indexOf('-bm');\\n\\n      if (pos >= 0) {\\n        matParams.bumpScale = parseFloat(items[pos + 1]);\\n        items.splice(pos, 2);\\n      }\\n\\n      pos = items.indexOf('-s');\\n\\n      if (pos >= 0) {\\n        texParams.scale.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\\n        items.splice(pos, 4); // we expect 3 parameters here!\\n      }\\n\\n      pos = items.indexOf('-o');\\n\\n      if (pos >= 0) {\\n        texParams.offset.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\\n        items.splice(pos, 4); // we expect 3 parameters here!\\n      }\\n\\n      texParams.url = items.join(' ').trim();\\n      return texParams;\\n    }\\n  }, {\\n    key: \\\"loadTexture\\\",\\n    value: function loadTexture(url, mapping, onLoad, onProgress, onError) {\\n      var manager = this.manager !== undefined ? this.manager : _three.DefaultLoadingManager;\\n      var loader = manager.getHandler(url);\\n\\n      if (loader === null) {\\n        loader = new _three.TextureLoader(manager);\\n      }\\n\\n      if (loader.setCrossOrigin) loader.setCrossOrigin(this.crossOrigin);\\n      var texture = loader.load(url, onLoad, onProgress, onError);\\n      if (mapping !== undefined) texture.mapping = mapping;\\n      return texture;\\n    }\\n  }]);\\n\\n  return MaterialCreator;\\n}();\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"protoProps\",\"staticProps\",\"_getPrototypeOf\",\"o\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"create\",\"value\",\"_setPrototypeOf\",\"p\",\"MTLLoader\",\"_three\",\"_Loader\",\"manager\",\"call\",\"self\",\"ReferenceError\",\"load\",\"url\",\"onLoad\",\"onProgress\",\"onError\",\"scope\",\"path\",\"LoaderUtils\",\"extractUrlBase\",\"loader\",\"FileLoader\",\"setPath\",\"setRequestHeader\",\"requestHeader\",\"setWithCredentials\",\"withCredentials\",\"text\",\"parse\",\"e\",\"console\",\"error\",\"itemError\",\"setMaterialOptions\",\"materialOptions\",\"lines\",\"split\",\"info\",\"delimiter_pattern\",\"materialsInfo\",\"line\",\"trim\",\"charAt\",\"pos\",\"indexOf\",\"substring\",\"toLowerCase\",\"name\",\"ss\",\"parseFloat\",\"materialCreator\",\"MaterialCreator\",\"resourcePath\",\"setCrossOrigin\",\"crossOrigin\",\"setManager\",\"setMaterials\",\"Loader\",\"baseUrl\",\"arguments\",\"undefined\",\"options\",\"materials\",\"materialsArray\",\"nameLookup\",\"side\",\"FrontSide\",\"wrap\",\"RepeatWrapping\",\"convert\",\"converted\",\"mn\",\"mat\",\"covmat\",\"prop\",\"save\",\"lprop\",\"normalizeRGB\",\"ignoreZeroRGBs\",\"preload\",\"getIndex\",\"materialName\",\"getAsArray\",\"index\",\"createMaterial_\",\"setMapForType\",\"mapType\",\"params\",\"texParams\",\"getTextureParams\",\"loadTexture\",\"test\",\"map\",\"repeat\",\"copy\",\"scale\",\"offset\",\"wrapS\",\"wrapT\",\"n\",\"color\",\"fromArray\",\"Color\",\"specular\",\"emissive\",\"transparent\",\"shininess\",\"opacity\",\"invertTrProperty\",\"MeshPhongMaterial\",\"matParams\",\"Vector2\",\"items\",\"bumpScale\",\"splice\",\"set\",\"join\",\"mapping\",\"DefaultLoadingManager\",\"getHandler\",\"TextureLoader\",\"texture\"]\n}\n"]