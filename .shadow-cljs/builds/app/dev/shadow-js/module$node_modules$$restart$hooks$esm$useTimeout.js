["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@restart/hooks/esm/useTimeout.js"],"~:js","shadow$provide.module$node_modules$$restart$hooks$esm$useTimeout=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}function setChainedTimeout(handleRef,fn,timeoutAtMs){var delayMs=timeoutAtMs-Date.now();handleRef.current=delayMs<=MAX_DELAY_MS?setTimeout(fn,delayMs):setTimeout(function(){return setChainedTimeout(handleRef,fn,timeoutAtMs)},MAX_DELAY_MS)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=\nfunction(){var isMounted=(0,_useMounted[\"default\"])(),handleRef=(0,_react.useRef)();(0,_useWillUnmount[\"default\"])(function(){return clearTimeout(handleRef.current)});return(0,_react.useMemo)(function(){var clear=function(){return clearTimeout(handleRef.current)};return{set:function(fn,delayMs){void 0===delayMs&&(delayMs=0);isMounted()&&(clear(),delayMs<=MAX_DELAY_MS?handleRef.current=setTimeout(fn,delayMs):setChainedTimeout(handleRef,fn,Date.now()+delayMs))},clear}},[])};var _react=require(\"module$node_modules$react$index\"),\n_useMounted=_interopRequireDefault(require(\"module$node_modules$$restart$hooks$esm$useMounted\")),_useWillUnmount=_interopRequireDefault(require(\"module$node_modules$$restart$hooks$esm$useWillUnmount\")),MAX_DELAY_MS=Math.pow(2,31)-1}","~:source","shadow$provide[\"module$node_modules$$restart$hooks$esm$useTimeout\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useTimeout;\n\nvar _react = require(\"react\");\n\nvar _useMounted = _interopRequireDefault(require(\"./useMounted\"));\n\nvar _useWillUnmount = _interopRequireDefault(require(\"./useWillUnmount\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nfunction useTimeout() {\n  var isMounted = (0, _useMounted[\"default\"])(); // types are confused between node and web here IDK\n\n  var handleRef = (0, _react.useRef)();\n  (0, _useWillUnmount[\"default\"])(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return (0, _react.useMemo)(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$restart$hooks$esm$useWillUnmount","~$module$node_modules$$restart$hooks$esm$useMounted"]],"~:properties",["^5",["__esModule","value","current","set","clear"]],"~:compiled-at",1630917514029,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$restart$hooks$esm$useTimeout.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc9GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAYrCE,QAASA,kBAAiB,CAACC,SAAD,CAAYC,EAAZ,CAAgBC,WAAhB,CAA6B,CACrD,IAAIC,QAAUD,WAAVC,CAAwBC,IAAKC,CAAAA,GAAL,EAC5BL,UAAUM,CAAAA,OAAV,CAAoBH,OAAA,EAAWI,YAAX,CAA0BC,UAAA,CAAWP,EAAX,CAAeE,OAAf,CAA1B,CAAoDK,UAAA,CAAW,QAAS,EAAG,CAC7F,MAAOT,kBAAA,CAAkBC,SAAlB,CAA6BC,EAA7B,CAAiCC,WAAjC,CADsF,CAAvB,CAErEK,YAFqE,CAFnB,CAvBvDE,MAAOC,CAAAA,cAAP,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgB,MAAO,CAAA,CADoC,CAA7C,CAGAhB,QAAA,CAAQ,SAAR,CAAA;AA8CAiB,QAAmB,EAAG,CACpB,IAAIC,UAAY,CAAC,CAAA,CAAGC,WAAA,CAAY,SAAZ,CAAJ,GAAhB,CAEId,UAAY,CAAC,CAAA,CAAGe,MAAOC,CAAAA,MAAX,GAChB,EAAC,CAAA,CAAGC,eAAA,CAAgB,SAAhB,CAAJ,EAAgC,QAAS,EAAG,CAC1C,MAAOC,aAAA,CAAalB,SAAUM,CAAAA,OAAvB,CADmC,CAA5C,CAGA,OAAO,CAAC,CAAA,CAAGS,MAAOI,CAAAA,OAAX,EAAoB,QAAS,EAAG,CACrC,IAAIC,MAAQA,QAAc,EAAG,CAC3B,MAAOF,aAAA,CAAalB,SAAUM,CAAAA,OAAvB,CADoB,CAoB7B,OAAO,CACLe,IAjBFA,QAAY,CAACpB,EAAD,CAAKE,OAAL,CAAc,CACR,IAAK,EAArB,GAAIA,OAAJ,GACEA,OADF,CACY,CADZ,CAIKU,UAAA,EAAL,GACAO,KAAA,EAEA,CAAIjB,OAAJ,EAAeI,YAAf,CAEEP,SAAUM,CAAAA,OAFZ,CAEsBE,UAAA,CAAWP,EAAX,CAAeE,OAAf,CAFtB,CAIEJ,iBAAA,CAAkBC,SAAlB,CAA6BC,EAA7B,CAAiCG,IAAKC,CAAAA,GAAL,EAAjC,CAA8CF,OAA9C,CAPF,CALwB,CAgBnB,CAEEiB,KAFF,CArB8B,CAAhC,CAyBJ,EAzBI,CAPa,CA5CtB,KAAIL,OAAStB,OAAA,CAAQ,iCAAR,CAAb;AAEIqB,YAAclB,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAFlB,CAIIwB,gBAAkBrB,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAJtB,CAgBIc,aAAee,IAAKC,CAAAA,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAfhB,CAAiC,CAxByE;\",\n\"sources\":[\"node_modules/@restart/hooks/esm/useTimeout.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$restart$hooks$esm$useTimeout\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = useTimeout;\\n\\nvar _react = require(\\\"react\\\");\\n\\nvar _useMounted = _interopRequireDefault(require(\\\"./useMounted\\\"));\\n\\nvar _useWillUnmount = _interopRequireDefault(require(\\\"./useWillUnmount\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/*\\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\\n * delay as a 32-bit signed integer internally. This causes an integer overflow\\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\\n * resulting in the timeout being executed immediately.\\n *\\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\\n */\\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\\n\\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\\n  var delayMs = timeoutAtMs - Date.now();\\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\\n  }, MAX_DELAY_MS);\\n}\\n/**\\n * Returns a controller object for setting a timeout that is properly cleaned up\\n * once the component unmounts. New timeouts cancel and replace existing ones.\\n *\\n *\\n *\\n * ```tsx\\n * const { set, clear } = useTimeout();\\n * const [hello, showHello] = useState(false);\\n * //Display hello after 5 seconds\\n * set(() => showHello(true), 5000);\\n * return (\\n *   <div className=\\\"App\\\">\\n *     {hello ? <h3>Hello</h3> : null}\\n *   </div>\\n * );\\n * ```\\n */\\n\\n\\nfunction useTimeout() {\\n  var isMounted = (0, _useMounted[\\\"default\\\"])(); // types are confused between node and web here IDK\\n\\n  var handleRef = (0, _react.useRef)();\\n  (0, _useWillUnmount[\\\"default\\\"])(function () {\\n    return clearTimeout(handleRef.current);\\n  });\\n  return (0, _react.useMemo)(function () {\\n    var clear = function clear() {\\n      return clearTimeout(handleRef.current);\\n    };\\n\\n    function set(fn, delayMs) {\\n      if (delayMs === void 0) {\\n        delayMs = 0;\\n      }\\n\\n      if (!isMounted()) return;\\n      clear();\\n\\n      if (delayMs <= MAX_DELAY_MS) {\\n        // For simplicity, if the timeout is short, just set a normal timeout.\\n        handleRef.current = setTimeout(fn, delayMs);\\n      } else {\\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\\n      }\\n    }\\n\\n    return {\\n      set: set,\\n      clear: clear\\n    };\\n  }, []);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"setChainedTimeout\",\"handleRef\",\"fn\",\"timeoutAtMs\",\"delayMs\",\"Date\",\"now\",\"current\",\"MAX_DELAY_MS\",\"setTimeout\",\"Object\",\"defineProperty\",\"value\",\"useTimeout\",\"isMounted\",\"_useMounted\",\"_react\",\"useRef\",\"_useWillUnmount\",\"clearTimeout\",\"useMemo\",\"clear\",\"set\",\"Math\",\"pow\"]\n}\n"]