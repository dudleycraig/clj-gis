["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/materials/nodes/RawNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$materials$nodes$RawNode=function(global,require,module,exports){function RawNode(value){_Node.Node.call(this,\"v4\");this.value=value}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.RawNode=RawNode;var _Node=require(\"module$node_modules$three_stdlib$nodes$core$Node\");RawNode.prototype=Object.create(_Node.Node.prototype);RawNode.prototype.constructor=RawNode;RawNode.prototype.nodeType=\"Raw\";RawNode.prototype.generate=function(builder){var data=\nthis.value.analyzeAndFlow(builder,this.type),code=data.code+\"\\n\";return code=builder.isShader(\"vertex\")?code+(\"gl_Position \\x3d \"+data.result+\";\"):code+(\"gl_FragColor \\x3d \"+data.result+\";\")};RawNode.prototype.copy=function(source){_Node.Node.prototype.copy.call(this,source);this.value=source.value;return this};RawNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.value=this.value.toJSON(meta).uuid);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$materials$nodes$RawNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RawNode = RawNode;\n\nvar _Node = require(\"../../core/Node.js\");\n\nfunction RawNode(value) {\n  _Node.Node.call(this, 'v4');\n\n  this.value = value;\n}\n\nRawNode.prototype = Object.create(_Node.Node.prototype);\nRawNode.prototype.constructor = RawNode;\nRawNode.prototype.nodeType = 'Raw';\n\nRawNode.prototype.generate = function (builder) {\n  var data = this.value.analyzeAndFlow(builder, this.type),\n      code = data.code + '\\n';\n\n  if (builder.isShader('vertex')) {\n    code += 'gl_Position = ' + data.result + ';';\n  } else {\n    code += 'gl_FragColor = ' + data.result + ';';\n  }\n\n  return code;\n};\n\nRawNode.prototype.copy = function (source) {\n  _Node.Node.prototype.copy.call(this, source);\n\n  this.value = source.value;\n  return this;\n};\n\nRawNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_stdlib$nodes$core$Node"]],"~:properties",["^5",["copy","prototype","__esModule","generate","nodeType","value","RawNode","constructor","toJSON"]],"~:compiled-at",1630917515241,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$materials$nodes$RawNode.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAU3HC,QAASA,QAAO,CAACC,KAAD,CAAQ,CACtBC,KAAMC,CAAAA,IAAKC,CAAAA,IAAX,CAAgB,IAAhB,CAAsB,IAAtB,CAEA,KAAKH,CAAAA,KAAL,CAAaA,KAHS,CAPxBI,MAAOC,CAAAA,cAAP,CAAsBP,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CE,MAAO,CAAA,CADoC,CAA7C,CAGAF,QAAQC,CAAAA,OAAR,CAAkBA,OAElB,KAAIE,MAAQL,OAAA,CAAQ,kDAAR,CAQZG,QAAQO,CAAAA,SAAR,CAAoBF,MAAOG,CAAAA,MAAP,CAAcN,KAAMC,CAAAA,IAAKI,CAAAA,SAAzB,CACpBP,QAAQO,CAAAA,SAAUE,CAAAA,WAAlB,CAAgCT,OAChCA,QAAQO,CAAAA,SAAUG,CAAAA,QAAlB,CAA6B,KAE7BV,QAAQO,CAAAA,SAAUI,CAAAA,QAAlB,CAA6BC,QAAS,CAACC,OAAD,CAAU,CAAA,IAC1CC;AAAO,IAAKb,CAAAA,KAAMc,CAAAA,cAAX,CAA0BF,OAA1B,CAAmC,IAAKG,CAAAA,IAAxC,CADmC,CAE1CC,KAAOH,IAAKG,CAAAA,IAAZA,CAAmB,IAQvB,OALEA,KAKF,CANIJ,OAAQK,CAAAA,QAAR,CAAiB,QAAjB,CAAJ,CACED,IADF,EACU,mBADV,CAC6BH,IAAKK,CAAAA,MADlC,CAC2C,GAD3C,EAGEF,IAHF,EAGU,oBAHV,CAG8BH,IAAKK,CAAAA,MAHnC,CAG4C,GAH5C,CAJ8C,CAahDnB,QAAQO,CAAAA,SAAUa,CAAAA,IAAlB,CAAyBC,QAAS,CAACC,MAAD,CAAS,CACzCpB,KAAMC,CAAAA,IAAKI,CAAAA,SAAUa,CAAAA,IAAKhB,CAAAA,IAA1B,CAA+B,IAA/B,CAAqCkB,MAArC,CAEA,KAAKrB,CAAAA,KAAL,CAAaqB,MAAOrB,CAAAA,KACpB,OAAO,KAJkC,CAO3CD,QAAQO,CAAAA,SAAUgB,CAAAA,MAAlB,CAA2BC,QAAS,CAACC,IAAD,CAAO,CACzC,IAAIX,KAAO,IAAKY,CAAAA,WAAL,CAAiBD,IAAjB,CAENX,KAAL,GACEA,IACA,CADO,IAAKa,CAAAA,cAAL,CAAoBF,IAApB,CACP,CAAAX,IAAKb,CAAAA,KAAL,CAAa,IAAKA,CAAAA,KAAMsB,CAAAA,MAAX,CAAkBE,IAAlB,CAAwBG,CAAAA,IAFvC,CAKA,OAAOd,KARkC,CAxCgF;\",\n\"sources\":[\"node_modules/three-stdlib/nodes/materials/nodes/RawNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$materials$nodes$RawNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.RawNode = RawNode;\\n\\nvar _Node = require(\\\"../../core/Node.js\\\");\\n\\nfunction RawNode(value) {\\n  _Node.Node.call(this, 'v4');\\n\\n  this.value = value;\\n}\\n\\nRawNode.prototype = Object.create(_Node.Node.prototype);\\nRawNode.prototype.constructor = RawNode;\\nRawNode.prototype.nodeType = 'Raw';\\n\\nRawNode.prototype.generate = function (builder) {\\n  var data = this.value.analyzeAndFlow(builder, this.type),\\n      code = data.code + '\\\\n';\\n\\n  if (builder.isShader('vertex')) {\\n    code += 'gl_Position = ' + data.result + ';';\\n  } else {\\n    code += 'gl_FragColor = ' + data.result + ';';\\n  }\\n\\n  return code;\\n};\\n\\nRawNode.prototype.copy = function (source) {\\n  _Node.Node.prototype.copy.call(this, source);\\n\\n  this.value = source.value;\\n  return this;\\n};\\n\\nRawNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.value = this.value.toJSON(meta).uuid;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"RawNode\",\"value\",\"_Node\",\"Node\",\"call\",\"Object\",\"defineProperty\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"generate\",\"RawNode.prototype.generate\",\"builder\",\"data\",\"analyzeAndFlow\",\"type\",\"code\",\"isShader\",\"result\",\"copy\",\"RawNode.prototype.copy\",\"source\",\"toJSON\",\"RawNode.prototype.toJSON\",\"meta\",\"getJSONNode\",\"createJSONNode\",\"uuid\"]\n}\n"]