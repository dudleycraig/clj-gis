["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/geometries/ParametricGeometries.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$geometries$ParametricGeometries=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];\ndescriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||\nObject.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,\np){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.ParametricGeometries=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),ParametricGeometries={klein:function(v,u,target){u*=Math.PI;v*=2*Math.PI;u*=2;if(u<Math.PI){var x=3*Math.cos(u)*(1+Math.sin(u))+2*(1-Math.cos(u)/2)*Math.cos(u)*Math.cos(v);var z=-8*Math.sin(u)-2*(1-Math.cos(u)/2)*Math.sin(u)*Math.cos(v)}else x=3*Math.cos(u)*(1+Math.sin(u))+\n2*(1-Math.cos(u)/2)*Math.cos(v+Math.PI),z=-8*Math.sin(u);target.set(x,-2*(1-Math.cos(u)/2)*Math.sin(v),z)},plane:function(width,height){return function(u,v,target){target.set(u*width,0,v*height)}},mobius:function(u,t,target){u-=.5;t*=2*Math.PI;target.set(Math.cos(t)*(2+u*Math.cos(t/2)),Math.sin(t)*(2+u*Math.cos(t/2)),u*Math.sin(t/2))},mobius3d:function(u,t,target){u*=Math.PI;t*=2*Math.PI;u*=2;var phi=u/2;var x=.125*Math.cos(t)*Math.cos(phi)-.65*Math.sin(t)*Math.sin(phi);phi=.125*Math.cos(t)*Math.sin(phi)+\n.65*Math.sin(t)*Math.cos(phi);t=(2.25+x)*Math.sin(u);x=(2.25+x)*Math.cos(u);target.set(x,t,phi)}};exports.ParametricGeometries=ParametricGeometries;ParametricGeometries.TubeGeometry=function(path,segments,radius,segmentsRadius,closed){this.path=path;this.segments=segments||64;this.radius=radius||1;this.segmentsRadius=segmentsRadius||8;this.closed=closed||!1;var scope=this,numpoints=this.segments+1;radius=path.computeFrenetFrames(segments,closed);var normals=radius.normals,binormals=radius.binormals;\nthis.tangents=radius.tangents;this.normals=normals;this.binormals=binormals;var position=new _three.Vector3;_three.ParametricGeometry.call(this,function(u,v,target){v*=2*Math.PI;var i=u*(numpoints-1);i=Math.floor(i);path.getPointAt(u,position);u=normals[i];i=binormals[i];var cx=-scope.radius*Math.cos(v);v=scope.radius*Math.sin(v);position.x+=cx*u.x+v*i.x;position.y+=cx*u.y+v*i.y;position.z+=cx*u.z+v*i.z;target.copy(position)},segments,segmentsRadius)};ParametricGeometries.TubeGeometry.prototype=Object.create(_three.BufferGeometry.prototype);\nParametricGeometries.TubeGeometry.prototype.constructor=ParametricGeometries.TubeGeometry;ParametricGeometries.TorusKnotGeometry=function(radius,tube,segmentsT,segmentsR,p,q){this.radius=radius||200;this.tube=tube||40;this.segmentsT=segmentsT||64;this.segmentsR=segmentsR||8;this.p=p||2;this.q=q||3;var extrudePath=new (function(_Curve){function TorusKnotCurve(){if(!(this instanceof TorusKnotCurve))throw new TypeError(\"Cannot call a class as a function\");var call=_getPrototypeOf(TorusKnotCurve).call(this);\nif(!call||\"object\"!==_typeof(call)&&\"function\"!==typeof call){if(void 0===this)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");call=this}return call}_inherits(TorusKnotCurve,_Curve);_createClass(TorusKnotCurve,[{key:\"getPoint\",value:function(t,optionalTarget){optionalTarget=optionalTarget||new _three.Vector3;t*=2*Math.PI;return optionalTarget.set((1+.5*Math.cos(q*t))*Math.cos(p*t),(1+.5*Math.cos(q*t))*Math.sin(p*t),.5*Math.sin(q*t)).multiplyScalar(radius)}}]);\nreturn TorusKnotCurve}(_three.Curve));ParametricGeometries.TubeGeometry.call(this,extrudePath,segmentsT,tube,segmentsR,!0,!1)};ParametricGeometries.TorusKnotGeometry.prototype=Object.create(_three.BufferGeometry.prototype);ParametricGeometries.TorusKnotGeometry.prototype.constructor=ParametricGeometries.TorusKnotGeometry;ParametricGeometries.SphereGeometry=function(size,u$jscomp$0,v$jscomp$0){_three.ParametricGeometry.call(this,function(u,v,target){u*=Math.PI;v*=2*Math.PI;target.set(size*Math.sin(u)*\nMath.cos(v),size*Math.sin(u)*Math.sin(v),size*Math.cos(u))},u$jscomp$0,v$jscomp$0)};ParametricGeometries.SphereGeometry.prototype=Object.create(_three.BufferGeometry.prototype);ParametricGeometries.SphereGeometry.prototype.constructor=ParametricGeometries.SphereGeometry;ParametricGeometries.PlaneGeometry=function(width,depth,segmentsWidth,segmentsDepth){_three.ParametricGeometry.call(this,function(u,v,target){target.set(u*width,0,v*depth)},segmentsWidth,segmentsDepth)};ParametricGeometries.PlaneGeometry.prototype=\nObject.create(_three.BufferGeometry.prototype);ParametricGeometries.PlaneGeometry.prototype.constructor=ParametricGeometries.PlaneGeometry}","~:source","shadow$provide[\"module$node_modules$three_stdlib$geometries$ParametricGeometries\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParametricGeometries = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Experimenting of primitive geometry creation using Surface Parametric equations\n */\nvar ParametricGeometries = {\n  klein: function klein(v, u, target) {\n    u *= Math.PI;\n    v *= 2 * Math.PI;\n    u = u * 2;\n    var x, y, z;\n\n    if (u < Math.PI) {\n      x = 3 * Math.cos(u) * (1 + Math.sin(u)) + 2 * (1 - Math.cos(u) / 2) * Math.cos(u) * Math.cos(v);\n      z = -8 * Math.sin(u) - 2 * (1 - Math.cos(u) / 2) * Math.sin(u) * Math.cos(v);\n    } else {\n      x = 3 * Math.cos(u) * (1 + Math.sin(u)) + 2 * (1 - Math.cos(u) / 2) * Math.cos(v + Math.PI);\n      z = -8 * Math.sin(u);\n    }\n\n    y = -2 * (1 - Math.cos(u) / 2) * Math.sin(v);\n    target.set(x, y, z);\n  },\n  plane: function plane(width, height) {\n    return function (u, v, target) {\n      var x = u * width;\n      var y = 0;\n      var z = v * height;\n      target.set(x, y, z);\n    };\n  },\n  mobius: function mobius(u, t, target) {\n    // flat mobius strip\n    // http://www.wolframalpha.com/input/?i=M%C3%B6bius+strip+parametric+equations&lk=1&a=ClashPrefs_*Surface.MoebiusStrip.SurfaceProperty.ParametricEquations-\n    u = u - 0.5;\n    var v = 2 * Math.PI * t;\n    var x, y, z;\n    var a = 2;\n    x = Math.cos(v) * (a + u * Math.cos(v / 2));\n    y = Math.sin(v) * (a + u * Math.cos(v / 2));\n    z = u * Math.sin(v / 2);\n    target.set(x, y, z);\n  },\n  mobius3d: function mobius3d(u, t, target) {\n    // volumetric mobius strip\n    u *= Math.PI;\n    t *= 2 * Math.PI;\n    u = u * 2;\n    var phi = u / 2;\n    var major = 2.25,\n        a = 0.125,\n        b = 0.65;\n    var x, y, z;\n    x = a * Math.cos(t) * Math.cos(phi) - b * Math.sin(t) * Math.sin(phi);\n    z = a * Math.cos(t) * Math.sin(phi) + b * Math.sin(t) * Math.cos(phi);\n    y = (major + x) * Math.sin(u);\n    x = (major + x) * Math.cos(u);\n    target.set(x, y, z);\n  }\n};\n/*********************************************\n *\n * Parametric Replacement for TubeGeometry\n *\n *********************************************/\n\nexports.ParametricGeometries = ParametricGeometries;\n\nParametricGeometries.TubeGeometry = function (path, segments, radius, segmentsRadius, closed) {\n  this.path = path;\n  this.segments = segments || 64;\n  this.radius = radius || 1;\n  this.segmentsRadius = segmentsRadius || 8;\n  this.closed = closed || false;\n  var scope = this,\n      numpoints = this.segments + 1;\n  var frames = path.computeFrenetFrames(segments, closed),\n      tangents = frames.tangents,\n      normals = frames.normals,\n      binormals = frames.binormals; // proxy internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n  var position = new _three.Vector3();\n\n  var ParametricTube = function ParametricTube(u, v, target) {\n    v *= 2 * Math.PI;\n    var i = u * (numpoints - 1);\n    i = Math.floor(i);\n    path.getPointAt(u, position);\n    var normal = normals[i];\n    var binormal = binormals[i];\n    var cx = -scope.radius * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n    var cy = scope.radius * Math.sin(v);\n    position.x += cx * normal.x + cy * binormal.x;\n    position.y += cx * normal.y + cy * binormal.y;\n    position.z += cx * normal.z + cy * binormal.z;\n    target.copy(position);\n  };\n\n  _three.ParametricGeometry.call(this, ParametricTube, segments, segmentsRadius);\n};\n\nParametricGeometries.TubeGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\nParametricGeometries.TubeGeometry.prototype.constructor = ParametricGeometries.TubeGeometry;\n/*********************************************\n *\n * Parametric Replacement for TorusKnotGeometry\n *\n *********************************************/\n\nParametricGeometries.TorusKnotGeometry = function (radius, tube, segmentsT, segmentsR, p, q) {\n  this.radius = radius || 200;\n  this.tube = tube || 40;\n  this.segmentsT = segmentsT || 64;\n  this.segmentsR = segmentsR || 8;\n  this.p = p || 2;\n  this.q = q || 3;\n\n  var TorusKnotCurve =\n  /*#__PURE__*/\n  function (_Curve) {\n    _inherits(TorusKnotCurve, _Curve);\n\n    function TorusKnotCurve() {\n      _classCallCheck(this, TorusKnotCurve);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TorusKnotCurve).call(this));\n    }\n\n    _createClass(TorusKnotCurve, [{\n      key: \"getPoint\",\n      value: function getPoint(t, optionalTarget) {\n        var point = optionalTarget || new _three.Vector3();\n        t *= Math.PI * 2;\n        var r = 0.5;\n        var x = (1 + r * Math.cos(q * t)) * Math.cos(p * t);\n        var y = (1 + r * Math.cos(q * t)) * Math.sin(p * t);\n        var z = r * Math.sin(q * t);\n        return point.set(x, y, z).multiplyScalar(radius);\n      }\n    }]);\n\n    return TorusKnotCurve;\n  }(_three.Curve);\n\n  var segments = segmentsT;\n  var radiusSegments = segmentsR;\n  var extrudePath = new TorusKnotCurve();\n  ParametricGeometries.TubeGeometry.call(this, extrudePath, segments, tube, radiusSegments, true, false);\n};\n\nParametricGeometries.TorusKnotGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\nParametricGeometries.TorusKnotGeometry.prototype.constructor = ParametricGeometries.TorusKnotGeometry;\n/*********************************************\n *\n * Parametric Replacement for SphereGeometry\n *\n *********************************************/\n\nParametricGeometries.SphereGeometry = function (size, u, v) {\n  function sphere(u, v, target) {\n    u *= Math.PI;\n    v *= 2 * Math.PI;\n    var x = size * Math.sin(u) * Math.cos(v);\n    var y = size * Math.sin(u) * Math.sin(v);\n    var z = size * Math.cos(u);\n    target.set(x, y, z);\n  }\n\n  _three.ParametricGeometry.call(this, sphere, u, v);\n};\n\nParametricGeometries.SphereGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\nParametricGeometries.SphereGeometry.prototype.constructor = ParametricGeometries.SphereGeometry;\n/*********************************************\n *\n * Parametric Replacement for PlaneGeometry\n *\n *********************************************/\n\nParametricGeometries.PlaneGeometry = function (width, depth, segmentsWidth, segmentsDepth) {\n  function plane(u, v, target) {\n    var x = u * width;\n    var y = 0;\n    var z = v * depth;\n    target.set(x, y, z);\n  }\n\n  _three.ParametricGeometry.call(this, plane, segmentsWidth, segmentsDepth);\n};\n\nParametricGeometries.PlaneGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\nParametricGeometries.PlaneGeometry.prototype.constructor = ParametricGeometries.PlaneGeometry;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["tangents","z","TubeGeometry","ParametricGeometries","mobius3d","prototype","q","segmentsRadius","p","SphereGeometry","PlaneGeometry","key","x","__esModule","radius","path","binormals","mobius","normals","configurable","closed","value","enumerable","writable","klein","TorusKnotGeometry","segments","plane","tube","y","__proto__","segmentsR","segmentsT","constructor"]],"~:compiled-at",1630917515562,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$geometries$ParametricGeometries.js\",\n\"lineCount\":12,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/geometries/ParametricGeometries.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$geometries$ParametricGeometries\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ParametricGeometries = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n/**\\n * Experimenting of primitive geometry creation using Surface Parametric equations\\n */\\nvar ParametricGeometries = {\\n  klein: function klein(v, u, target) {\\n    u *= Math.PI;\\n    v *= 2 * Math.PI;\\n    u = u * 2;\\n    var x, y, z;\\n\\n    if (u < Math.PI) {\\n      x = 3 * Math.cos(u) * (1 + Math.sin(u)) + 2 * (1 - Math.cos(u) / 2) * Math.cos(u) * Math.cos(v);\\n      z = -8 * Math.sin(u) - 2 * (1 - Math.cos(u) / 2) * Math.sin(u) * Math.cos(v);\\n    } else {\\n      x = 3 * Math.cos(u) * (1 + Math.sin(u)) + 2 * (1 - Math.cos(u) / 2) * Math.cos(v + Math.PI);\\n      z = -8 * Math.sin(u);\\n    }\\n\\n    y = -2 * (1 - Math.cos(u) / 2) * Math.sin(v);\\n    target.set(x, y, z);\\n  },\\n  plane: function plane(width, height) {\\n    return function (u, v, target) {\\n      var x = u * width;\\n      var y = 0;\\n      var z = v * height;\\n      target.set(x, y, z);\\n    };\\n  },\\n  mobius: function mobius(u, t, target) {\\n    // flat mobius strip\\n    // http://www.wolframalpha.com/input/?i=M%C3%B6bius+strip+parametric+equations&lk=1&a=ClashPrefs_*Surface.MoebiusStrip.SurfaceProperty.ParametricEquations-\\n    u = u - 0.5;\\n    var v = 2 * Math.PI * t;\\n    var x, y, z;\\n    var a = 2;\\n    x = Math.cos(v) * (a + u * Math.cos(v / 2));\\n    y = Math.sin(v) * (a + u * Math.cos(v / 2));\\n    z = u * Math.sin(v / 2);\\n    target.set(x, y, z);\\n  },\\n  mobius3d: function mobius3d(u, t, target) {\\n    // volumetric mobius strip\\n    u *= Math.PI;\\n    t *= 2 * Math.PI;\\n    u = u * 2;\\n    var phi = u / 2;\\n    var major = 2.25,\\n        a = 0.125,\\n        b = 0.65;\\n    var x, y, z;\\n    x = a * Math.cos(t) * Math.cos(phi) - b * Math.sin(t) * Math.sin(phi);\\n    z = a * Math.cos(t) * Math.sin(phi) + b * Math.sin(t) * Math.cos(phi);\\n    y = (major + x) * Math.sin(u);\\n    x = (major + x) * Math.cos(u);\\n    target.set(x, y, z);\\n  }\\n};\\n/*********************************************\\n *\\n * Parametric Replacement for TubeGeometry\\n *\\n *********************************************/\\n\\nexports.ParametricGeometries = ParametricGeometries;\\n\\nParametricGeometries.TubeGeometry = function (path, segments, radius, segmentsRadius, closed) {\\n  this.path = path;\\n  this.segments = segments || 64;\\n  this.radius = radius || 1;\\n  this.segmentsRadius = segmentsRadius || 8;\\n  this.closed = closed || false;\\n  var scope = this,\\n      numpoints = this.segments + 1;\\n  var frames = path.computeFrenetFrames(segments, closed),\\n      tangents = frames.tangents,\\n      normals = frames.normals,\\n      binormals = frames.binormals; // proxy internals\\n\\n  this.tangents = tangents;\\n  this.normals = normals;\\n  this.binormals = binormals;\\n  var position = new _three.Vector3();\\n\\n  var ParametricTube = function ParametricTube(u, v, target) {\\n    v *= 2 * Math.PI;\\n    var i = u * (numpoints - 1);\\n    i = Math.floor(i);\\n    path.getPointAt(u, position);\\n    var normal = normals[i];\\n    var binormal = binormals[i];\\n    var cx = -scope.radius * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\\n\\n    var cy = scope.radius * Math.sin(v);\\n    position.x += cx * normal.x + cy * binormal.x;\\n    position.y += cx * normal.y + cy * binormal.y;\\n    position.z += cx * normal.z + cy * binormal.z;\\n    target.copy(position);\\n  };\\n\\n  _three.ParametricGeometry.call(this, ParametricTube, segments, segmentsRadius);\\n};\\n\\nParametricGeometries.TubeGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\\nParametricGeometries.TubeGeometry.prototype.constructor = ParametricGeometries.TubeGeometry;\\n/*********************************************\\n *\\n * Parametric Replacement for TorusKnotGeometry\\n *\\n *********************************************/\\n\\nParametricGeometries.TorusKnotGeometry = function (radius, tube, segmentsT, segmentsR, p, q) {\\n  this.radius = radius || 200;\\n  this.tube = tube || 40;\\n  this.segmentsT = segmentsT || 64;\\n  this.segmentsR = segmentsR || 8;\\n  this.p = p || 2;\\n  this.q = q || 3;\\n\\n  var TorusKnotCurve =\\n  /*#__PURE__*/\\n  function (_Curve) {\\n    _inherits(TorusKnotCurve, _Curve);\\n\\n    function TorusKnotCurve() {\\n      _classCallCheck(this, TorusKnotCurve);\\n\\n      return _possibleConstructorReturn(this, _getPrototypeOf(TorusKnotCurve).call(this));\\n    }\\n\\n    _createClass(TorusKnotCurve, [{\\n      key: \\\"getPoint\\\",\\n      value: function getPoint(t, optionalTarget) {\\n        var point = optionalTarget || new _three.Vector3();\\n        t *= Math.PI * 2;\\n        var r = 0.5;\\n        var x = (1 + r * Math.cos(q * t)) * Math.cos(p * t);\\n        var y = (1 + r * Math.cos(q * t)) * Math.sin(p * t);\\n        var z = r * Math.sin(q * t);\\n        return point.set(x, y, z).multiplyScalar(radius);\\n      }\\n    }]);\\n\\n    return TorusKnotCurve;\\n  }(_three.Curve);\\n\\n  var segments = segmentsT;\\n  var radiusSegments = segmentsR;\\n  var extrudePath = new TorusKnotCurve();\\n  ParametricGeometries.TubeGeometry.call(this, extrudePath, segments, tube, radiusSegments, true, false);\\n};\\n\\nParametricGeometries.TorusKnotGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\\nParametricGeometries.TorusKnotGeometry.prototype.constructor = ParametricGeometries.TorusKnotGeometry;\\n/*********************************************\\n *\\n * Parametric Replacement for SphereGeometry\\n *\\n *********************************************/\\n\\nParametricGeometries.SphereGeometry = function (size, u, v) {\\n  function sphere(u, v, target) {\\n    u *= Math.PI;\\n    v *= 2 * Math.PI;\\n    var x = size * Math.sin(u) * Math.cos(v);\\n    var y = size * Math.sin(u) * Math.sin(v);\\n    var z = size * Math.cos(u);\\n    target.set(x, y, z);\\n  }\\n\\n  _three.ParametricGeometry.call(this, sphere, u, v);\\n};\\n\\nParametricGeometries.SphereGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\\nParametricGeometries.SphereGeometry.prototype.constructor = ParametricGeometries.SphereGeometry;\\n/*********************************************\\n *\\n * Parametric Replacement for PlaneGeometry\\n *\\n *********************************************/\\n\\nParametricGeometries.PlaneGeometry = function (width, depth, segmentsWidth, segmentsDepth) {\\n  function plane(u, v, target) {\\n    var x = u * width;\\n    var y = 0;\\n    var z = v * depth;\\n    target.set(x, y, z);\\n  }\\n\\n  _three.ParametricGeometry.call(this, plane, segmentsWidth, segmentsDepth);\\n};\\n\\nParametricGeometries.PlaneGeometry.prototype = Object.create(_three.BufferGeometry.prototype);\\nParametricGeometries.PlaneGeometry.prototype.constructor = ParametricGeometries.PlaneGeometry;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"_getPrototypeOf\",\"o\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"_setPrototypeOf\",\"p\",\"ParametricGeometries\",\"_three\",\"klein\",\"v\",\"u\",\"Math\",\"PI\",\"x\",\"cos\",\"sin\",\"z\",\"set\",\"plane\",\"width\",\"height\",\"y\",\"mobius\",\"t\",\"a\",\"mobius3d\",\"phi\",\"b\",\"major\",\"TubeGeometry\",\"ParametricGeometries.TubeGeometry\",\"path\",\"segments\",\"radius\",\"segmentsRadius\",\"closed\",\"scope\",\"numpoints\",\"frames\",\"computeFrenetFrames\",\"normals\",\"binormals\",\"tangents\",\"position\",\"Vector3\",\"ParametricGeometry\",\"call\",\"ParametricTube\",\"floor\",\"getPointAt\",\"normal\",\"binormal\",\"cx\",\"cy\",\"copy\",\"BufferGeometry\",\"TorusKnotGeometry\",\"ParametricGeometries.TorusKnotGeometry\",\"tube\",\"segmentsT\",\"segmentsR\",\"q\",\"extrudePath\",\"_Curve\",\"TorusKnotCurve\",\"instance\",\"self\",\"ReferenceError\",\"getPoint\",\"optionalTarget\",\"point\",\"r\",\"multiplyScalar\",\"Curve\",\"SphereGeometry\",\"ParametricGeometries.SphereGeometry\",\"size\",\"sphere\",\"PlaneGeometry\",\"ParametricGeometries.PlaneGeometry\",\"depth\",\"segmentsWidth\",\"segmentsDepth\"]\n}\n"]