["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/chevrotain/lib/src/scan/lexer_errors_public.js"],"~:js","shadow$provide.module$node_modules$chevrotain$lib$src$scan$lexer_errors_public=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.defaultLexerErrorProvider=void 0;exports.defaultLexerErrorProvider={buildUnableToPopLexerModeMessage:function(token){return\"Unable to pop Lexer Mode after encountering Token -\\x3e\"+token.image+\"\\x3c- The Mode Stack is empty\"},buildUnexpectedCharactersMessage:function(fullText,startOffset,length,line,column){return\"unexpected character: -\\x3e\"+\nfullText.charAt(startOffset)+\"\\x3c- at offset: \"+startOffset+\", skipped \"+(length+\" characters.\")}}}","~:source","shadow$provide[\"module$node_modules$chevrotain$lib$src$scan$lexer_errors_public\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage: function (token) {\n        return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n    },\n    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n        return (\"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\"));\n    }\n};\n//# sourceMappingURL=lexer_errors_public.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["defaultLexerErrorProvider","buildUnexpectedCharactersMessage","__esModule","value","buildUnableToPopLexerModeMessage"]],"~:compiled-at",1630917515675,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$chevrotain$lib$src$scan$lexer_errors_public.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE5HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,yBAAR,CAAoC,IAAK,EACzCJ,QAAQI,CAAAA,yBAAR,CAAoC,CAChCC,iCAAkCA,QAAS,CAACC,KAAD,CAAQ,CAC/C,MAAO,yDAAP,CAAgEA,KAAMC,CAAAA,KAAtE,CAA8E,+BAD/B,CADnB,CAIhCC,iCAAkCA,QAAS,CAACC,QAAD,CAAWC,WAAX,CAAwBC,MAAxB,CAAgCC,IAAhC,CAAsCC,MAAtC,CAA8C,CACrF,MAAQ,6BAAR;AAAqCJ,QAASK,CAAAA,MAAT,CAAgBJ,WAAhB,CAArC,CAAoE,mBAApE,CAAuFA,WAAvF,CAAqG,YAArG,EAA0HC,MAA1H,CAAmI,cAAnI,CADqF,CAJzD,CAJwF;\",\n\"sources\":[\"node_modules/chevrotain/lib/src/scan/lexer_errors_public.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$chevrotain$lib$src$scan$lexer_errors_public\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.defaultLexerErrorProvider = void 0;\\nexports.defaultLexerErrorProvider = {\\n    buildUnableToPopLexerModeMessage: function (token) {\\n        return \\\"Unable to pop Lexer Mode after encountering Token ->\\\" + token.image + \\\"<- The Mode Stack is empty\\\";\\n    },\\n    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\\n        return (\\\"unexpected character: ->\\\" + fullText.charAt(startOffset) + \\\"<- at offset: \\\" + startOffset + \\\",\\\" + (\\\" skipped \\\" + length + \\\" characters.\\\"));\\n    }\\n};\\n//# sourceMappingURL=lexer_errors_public.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"defaultLexerErrorProvider\",\"buildUnableToPopLexerModeMessage\",\"token\",\"image\",\"buildUnexpectedCharactersMessage\",\"fullText\",\"startOffset\",\"length\",\"line\",\"column\",\"charAt\"]\n}\n"]