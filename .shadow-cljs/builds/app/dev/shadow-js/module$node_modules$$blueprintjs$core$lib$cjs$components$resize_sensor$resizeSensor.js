["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/components/resize-sensor/resizeSensor.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$components$resize_sensor$resizeSensor=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.ResizeSensor=void 0;var tslib_1=require(\"module$node_modules$tslib$tslib\"),React=tslib_1.__importStar(require(\"module$node_modules$react$index\")),react_dom_1=require(\"module$node_modules$react_dom$index\"),react_lifecycles_compat_1=require(\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs\"),\nresize_observer_polyfill_1=tslib_1.__importDefault(require(\"module$node_modules$resize_observer_polyfill$dist$ResizeObserver\"));global=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$index\");var props_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$props\");require=function(_super){function ResizeSensor(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this.element=null;_this.observer=new resize_observer_polyfill_1.default(function(entries){var _a,_b;return null===\n(_b=(_a=_this.props).onResize)||void 0===_b?void 0:_b.call(_a,entries)});return _this}tslib_1.__extends(ResizeSensor,_super);ResizeSensor.prototype.render=function(){return React.Children.only(this.props.children)};ResizeSensor.prototype.componentDidMount=function(){this.observeElement()};ResizeSensor.prototype.componentDidUpdate=function(prevProps){this.observeElement(this.props.observeParents!==prevProps.observeParents)};ResizeSensor.prototype.componentWillUnmount=function(){this.observer.disconnect()};\nResizeSensor.prototype.observeElement=function(force){void 0===force&&(force=!1);var element=this.getElement();if(!(element instanceof Element))this.observer.disconnect();else if(element!==this.element||force)if(this.observer.disconnect(),this.element=element,this.observer.observe(element),this.props.observeParents)for(force=element.parentElement;null!=force;)this.observer.observe(force),force=force.parentElement};ResizeSensor.prototype.getElement=function(){try{return react_dom_1.findDOMNode(this)}catch(_a){return null}};\nResizeSensor.displayName=props_1.DISPLAYNAME_PREFIX+\".ResizeSensor\";return ResizeSensor=tslib_1.__decorate([react_lifecycles_compat_1.polyfill],ResizeSensor)}(global.AbstractPureComponent2);exports.ResizeSensor=require}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$components$resize_sensor$resizeSensor\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResizeSensor = void 0;\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar react_dom_1 = require(\"react-dom\");\nvar react_lifecycles_compat_1 = require(\"react-lifecycles-compat\");\nvar resize_observer_polyfill_1 = tslib_1.__importDefault(require(\"resize-observer-polyfill\"));\nvar common_1 = require(\"../../common\");\nvar props_1 = require(\"../../common/props\");\n/** `ResizeSensor` requires a single DOM element child and will error otherwise. */\nvar ResizeSensor = /** @class */ (function (_super) {\n    tslib_1.__extends(ResizeSensor, _super);\n    function ResizeSensor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = null;\n        _this.observer = new resize_observer_polyfill_1.default(function (entries) { var _a, _b; return (_b = (_a = _this.props).onResize) === null || _b === void 0 ? void 0 : _b.call(_a, entries); });\n        return _this;\n    }\n    ResizeSensor.prototype.render = function () {\n        // pass-through render of single child\n        return React.Children.only(this.props.children);\n    };\n    ResizeSensor.prototype.componentDidMount = function () {\n        this.observeElement();\n    };\n    ResizeSensor.prototype.componentDidUpdate = function (prevProps) {\n        this.observeElement(this.props.observeParents !== prevProps.observeParents);\n    };\n    ResizeSensor.prototype.componentWillUnmount = function () {\n        this.observer.disconnect();\n    };\n    /**\n     * Observe the DOM element, if defined and different from the currently\n     * observed element. Pass `force` argument to skip element checks and always\n     * re-observe.\n     */\n    ResizeSensor.prototype.observeElement = function (force) {\n        if (force === void 0) { force = false; }\n        var element = this.getElement();\n        if (!(element instanceof Element)) {\n            // stop everything if not defined\n            this.observer.disconnect();\n            return;\n        }\n        if (element === this.element && !force) {\n            // quit if given same element -- nothing to update (unless forced)\n            return;\n        }\n        else {\n            // clear observer list if new element\n            this.observer.disconnect();\n            // remember element reference for next time\n            this.element = element;\n        }\n        // observer callback is invoked immediately when observing new elements\n        this.observer.observe(element);\n        if (this.props.observeParents) {\n            var parent_1 = element.parentElement;\n            while (parent_1 != null) {\n                this.observer.observe(parent_1);\n                parent_1 = parent_1.parentElement;\n            }\n        }\n    };\n    ResizeSensor.prototype.getElement = function () {\n        try {\n            // using findDOMNode for two reasons:\n            // 1. cloning to insert a ref is unwieldy and not performant.\n            // 2. ensure that we resolve to an actual DOM node (instead of any JSX ref instance).\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\n            /* eslint-disable-next-line react/no-find-dom-node */\n            return react_dom_1.findDOMNode(this);\n        }\n        catch (_a) {\n            // swallow error if findDOMNode is run on unmounted component.\n            return null;\n        }\n    };\n    ResizeSensor.displayName = props_1.DISPLAYNAME_PREFIX + \".ResizeSensor\";\n    ResizeSensor = tslib_1.__decorate([\n        react_lifecycles_compat_1.polyfill\n    ], ResizeSensor);\n    return ResizeSensor;\n}(common_1.AbstractPureComponent2));\nexports.ResizeSensor = ResizeSensor;\n//# sourceMappingURL=resizeSensor.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs","~$module$node_modules$react_dom$index","~$module$node_modules$resize_observer_polyfill$dist$ResizeObserver","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$blueprintjs$core$lib$cjs$common$props","~$module$node_modules$$blueprintjs$core$lib$cjs$common$index"]],"~:properties",["^5",["ResizeSensor","observer","displayName","getElement","__esModule","element","value","observeElement","componentDidUpdate","componentDidMount","render","componentWillUnmount"]],"~:compiled-at",1630405505026,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$components$resize_sensor$resizeSensor.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/components/resize-sensor/resizeSensor.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$components$resize_sensor$resizeSensor\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/*\\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.ResizeSensor = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar React = tslib_1.__importStar(require(\\\"react\\\"));\\nvar react_dom_1 = require(\\\"react-dom\\\");\\nvar react_lifecycles_compat_1 = require(\\\"react-lifecycles-compat\\\");\\nvar resize_observer_polyfill_1 = tslib_1.__importDefault(require(\\\"resize-observer-polyfill\\\"));\\nvar common_1 = require(\\\"../../common\\\");\\nvar props_1 = require(\\\"../../common/props\\\");\\n/** `ResizeSensor` requires a single DOM element child and will error otherwise. */\\nvar ResizeSensor = /** @class */ (function (_super) {\\n    tslib_1.__extends(ResizeSensor, _super);\\n    function ResizeSensor() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.element = null;\\n        _this.observer = new resize_observer_polyfill_1.default(function (entries) { var _a, _b; return (_b = (_a = _this.props).onResize) === null || _b === void 0 ? void 0 : _b.call(_a, entries); });\\n        return _this;\\n    }\\n    ResizeSensor.prototype.render = function () {\\n        // pass-through render of single child\\n        return React.Children.only(this.props.children);\\n    };\\n    ResizeSensor.prototype.componentDidMount = function () {\\n        this.observeElement();\\n    };\\n    ResizeSensor.prototype.componentDidUpdate = function (prevProps) {\\n        this.observeElement(this.props.observeParents !== prevProps.observeParents);\\n    };\\n    ResizeSensor.prototype.componentWillUnmount = function () {\\n        this.observer.disconnect();\\n    };\\n    /**\\n     * Observe the DOM element, if defined and different from the currently\\n     * observed element. Pass `force` argument to skip element checks and always\\n     * re-observe.\\n     */\\n    ResizeSensor.prototype.observeElement = function (force) {\\n        if (force === void 0) { force = false; }\\n        var element = this.getElement();\\n        if (!(element instanceof Element)) {\\n            // stop everything if not defined\\n            this.observer.disconnect();\\n            return;\\n        }\\n        if (element === this.element && !force) {\\n            // quit if given same element -- nothing to update (unless forced)\\n            return;\\n        }\\n        else {\\n            // clear observer list if new element\\n            this.observer.disconnect();\\n            // remember element reference for next time\\n            this.element = element;\\n        }\\n        // observer callback is invoked immediately when observing new elements\\n        this.observer.observe(element);\\n        if (this.props.observeParents) {\\n            var parent_1 = element.parentElement;\\n            while (parent_1 != null) {\\n                this.observer.observe(parent_1);\\n                parent_1 = parent_1.parentElement;\\n            }\\n        }\\n    };\\n    ResizeSensor.prototype.getElement = function () {\\n        try {\\n            // using findDOMNode for two reasons:\\n            // 1. cloning to insert a ref is unwieldy and not performant.\\n            // 2. ensure that we resolve to an actual DOM node (instead of any JSX ref instance).\\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979\\n            /* eslint-disable-next-line react/no-find-dom-node */\\n            return react_dom_1.findDOMNode(this);\\n        }\\n        catch (_a) {\\n            // swallow error if findDOMNode is run on unmounted component.\\n            return null;\\n        }\\n    };\\n    ResizeSensor.displayName = props_1.DISPLAYNAME_PREFIX + \\\".ResizeSensor\\\";\\n    ResizeSensor = tslib_1.__decorate([\\n        react_lifecycles_compat_1.polyfill\\n    ], ResizeSensor);\\n    return ResizeSensor;\\n}(common_1.AbstractPureComponent2));\\nexports.ResizeSensor = ResizeSensor;\\n//# sourceMappingURL=resizeSensor.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"ResizeSensor\",\"tslib_1\",\"React\",\"__importStar\",\"react_dom_1\",\"react_lifecycles_compat_1\",\"resize_observer_polyfill_1\",\"__importDefault\",\"common_1\",\"props_1\",\"_super\",\"_this\",\"apply\",\"arguments\",\"element\",\"observer\",\"default\",\"entries\",\"_a\",\"_b\",\"onResize\",\"props\",\"call\",\"__extends\",\"prototype\",\"render\",\"ResizeSensor.prototype.render\",\"Children\",\"only\",\"children\",\"componentDidMount\",\"ResizeSensor.prototype.componentDidMount\",\"observeElement\",\"componentDidUpdate\",\"ResizeSensor.prototype.componentDidUpdate\",\"prevProps\",\"observeParents\",\"componentWillUnmount\",\"ResizeSensor.prototype.componentWillUnmount\",\"disconnect\",\"ResizeSensor.prototype.observeElement\",\"force\",\"getElement\",\"Element\",\"observe\",\"parent_1\",\"parentElement\",\"ResizeSensor.prototype.getElement\",\"findDOMNode\",\"displayName\",\"DISPLAYNAME_PREFIX\",\"__decorate\",\"polyfill\",\"AbstractPureComponent2\"]\n}\n"]