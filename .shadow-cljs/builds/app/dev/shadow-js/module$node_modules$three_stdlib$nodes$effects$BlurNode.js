["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/effects/BlurNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$effects$BlurNode=function(global,require,module,exports){function BlurNode(value,uv,radius,size){_TempNode.TempNode.call(this,\"v4\");this.value=value;this.uv=uv||new _UVNode.UVNode;this.radius=radius||new _Vector2Node.Vector2Node(1,1);this.size=size;this.blurY=this.blurX=!0;this.horizontal=new _FloatNode.FloatNode(.015625);this.vertical=new _FloatNode.FloatNode(.015625)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.BlurNode=BlurNode;\nvar _three=require(\"module$node_modules$three$build$three_module\"),_TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\"),_FunctionNode=require(\"module$node_modules$three_stdlib$nodes$core$FunctionNode\"),_FloatNode=require(\"module$node_modules$three_stdlib$nodes$inputs$FloatNode\"),_Vector2Node=require(\"module$node_modules$three_stdlib$nodes$inputs$Vector2Node\"),_UVNode=require(\"module$node_modules$three_stdlib$nodes$accessors$UVNode\");BlurNode.Nodes=function(){var blurX=new _FunctionNode.FunctionNode(\"vec4 blurX( sampler2D tex, vec2 uv, float s ) {\\n\\tvec4 sum \\x3d vec4( 0.0 );\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;\\n\\treturn sum * .667;\\n}\"),\nblurY=new _FunctionNode.FunctionNode(\"vec4 blurY( sampler2D tex, vec2 uv, float s ) {\\n\\tvec4 sum \\x3d vec4( 0.0 );\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;\\n\\tsum +\\x3d texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;\\n\\treturn sum * .667;\\n}\");\nreturn{blurX,blurY}}();BlurNode.prototype=Object.create(_TempNode.TempNode.prototype);BlurNode.prototype.constructor=BlurNode;BlurNode.prototype.nodeType=\"Blur\";BlurNode.prototype.hashProperties=[\"blurX\",\"blurY\"];BlurNode.prototype.updateFrame=function(){if(this.size)this.horizontal.value=this.radius.x/this.size.x,this.vertical.value=this.radius.y/this.size.y;else if(this.value.value&&this.value.value.image){var image=this.value.value.image;this.horizontal.value=this.radius.x/image.width;this.vertical.value=\nthis.radius.y/image.height}};BlurNode.prototype.generate=function(builder,output){if(builder.isShader(\"fragment\")){var blurCode=[],blurX=builder.include(BlurNode.Nodes.blurX),blurY=builder.include(BlurNode.Nodes.blurY);this.blurX&&blurCode.push(blurX+\"( \"+this.value.build(builder,\"sampler2D\")+\", \"+this.uv.build(builder,\"v2\")+\", \"+this.horizontal.build(builder,\"f\")+\" )\");this.blurY&&blurCode.push(blurY+\"( \"+this.value.build(builder,\"sampler2D\")+\", \"+this.uv.build(builder,\"v2\")+\", \"+this.vertical.build(builder,\n\"f\")+\" )\");blurCode=2==blurCode.length?\"( \"+blurCode.join(\" + \")+\" / 2.0 )\":blurCode.length?\"( \"+blurCode[0]+\" )\":\"vec4( 0.0 )\";return builder.format(blurCode,this.getType(builder),output)}console.warn(\"THREE.BlurNode is not compatible with \"+builder.shader+\" shader.\");return builder.format(\"vec4( 0.0 )\",this.getType(builder),output)};BlurNode.prototype.copy=function(source){_TempNode.TempNode.prototype.copy.call(this,source);this.value=source.value;this.uv=source.uv;this.radius=source.radius;void 0!==\nsource.size&&(this.size=new _three.Vector2(source.size.x,source.size.y));this.blurX=source.blurX;this.blurY=source.blurY;return this};BlurNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.value=this.value.toJSON(meta).uuid,data.uv=this.uv.toJSON(meta).uuid,data.radius=this.radius.toJSON(meta).uuid,this.size&&(data.size={x:this.size.x,y:this.size.y}),data.blurX=this.blurX,data.blurY=this.blurY);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$effects$BlurNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlurNode = BlurNode;\n\nvar _three = require(\"three\");\n\nvar _TempNode = require(\"../core/TempNode.js\");\n\nvar _FunctionNode = require(\"../core/FunctionNode.js\");\n\nvar _FloatNode = require(\"../inputs/FloatNode.js\");\n\nvar _Vector2Node = require(\"../inputs/Vector2Node.js\");\n\nvar _UVNode = require(\"../accessors/UVNode.js\");\n\nfunction BlurNode(value, uv, radius, size) {\n  _TempNode.TempNode.call(this, 'v4');\n\n  this.value = value;\n  this.uv = uv || new _UVNode.UVNode();\n  this.radius = radius || new _Vector2Node.Vector2Node(1, 1);\n  this.size = size;\n  this.blurX = true;\n  this.blurY = true;\n  this.horizontal = new _FloatNode.FloatNode(1 / 64);\n  this.vertical = new _FloatNode.FloatNode(1 / 64);\n}\n\nBlurNode.Nodes = function () {\n  var blurX = new _FunctionNode.FunctionNode(['vec4 blurX( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  var blurY = new _FunctionNode.FunctionNode(['vec4 blurY( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  return {\n    blurX: blurX,\n    blurY: blurY\n  };\n}();\n\nBlurNode.prototype = Object.create(_TempNode.TempNode.prototype);\nBlurNode.prototype.constructor = BlurNode;\nBlurNode.prototype.nodeType = 'Blur';\nBlurNode.prototype.hashProperties = ['blurX', 'blurY'];\n\nBlurNode.prototype.updateFrame = function ()\n/* frame */\n{\n  if (this.size) {\n    this.horizontal.value = this.radius.x / this.size.x;\n    this.vertical.value = this.radius.y / this.size.y;\n  } else if (this.value.value && this.value.value.image) {\n    var image = this.value.value.image;\n    this.horizontal.value = this.radius.x / image.width;\n    this.vertical.value = this.radius.y / image.height;\n  }\n};\n\nBlurNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var blurCode = [],\n        code;\n    var blurX = builder.include(BlurNode.Nodes.blurX),\n        blurY = builder.include(BlurNode.Nodes.blurY);\n\n    if (this.blurX) {\n      blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\n    }\n\n    if (this.blurY) {\n      blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\n    }\n\n    if (blurCode.length == 2) code = '( ' + blurCode.join(' + ') + ' / 2.0 )';else if (blurCode.length) code = '( ' + blurCode[0] + ' )';else code = 'vec4( 0.0 )';\n    return builder.format(code, this.getType(builder), output);\n  } else {\n    console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\n  }\n};\n\nBlurNode.prototype.copy = function (source) {\n  _TempNode.TempNode.prototype.copy.call(this, source);\n\n  this.value = source.value;\n  this.uv = source.uv;\n  this.radius = source.radius;\n  if (source.size !== undefined) this.size = new _three.Vector2(source.size.x, source.size.y);\n  this.blurX = source.blurX;\n  this.blurY = source.blurY;\n  return this;\n};\n\nBlurNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.radius = this.radius.toJSON(meta).uuid;\n    if (this.size) data.size = {\n      x: this.size.x,\n      y: this.size.y\n    };\n    data.blurX = this.blurX;\n    data.blurY = this.blurY;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$nodes$core$FunctionNode","~$module$node_modules$three_stdlib$nodes$inputs$Vector2Node","~$shadow.js","~$module$node_modules$three_stdlib$nodes$inputs$FloatNode","~$module$node_modules$three_stdlib$nodes$accessors$UVNode","~$module$node_modules$three_stdlib$nodes$core$TempNode"]],"~:properties",["^5",["BlurNode","blurY","Nodes","copy","prototype","x","__esModule","radius","vertical","generate","nodeType","hashProperties","value","uv","y","horizontal","blurX","updateFrame","size","constructor","toJSON"]],"~:compiled-at",1630917515271,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$effects$BlurNode.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/effects/BlurNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$effects$BlurNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.BlurNode = BlurNode;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _TempNode = require(\\\"../core/TempNode.js\\\");\\n\\nvar _FunctionNode = require(\\\"../core/FunctionNode.js\\\");\\n\\nvar _FloatNode = require(\\\"../inputs/FloatNode.js\\\");\\n\\nvar _Vector2Node = require(\\\"../inputs/Vector2Node.js\\\");\\n\\nvar _UVNode = require(\\\"../accessors/UVNode.js\\\");\\n\\nfunction BlurNode(value, uv, radius, size) {\\n  _TempNode.TempNode.call(this, 'v4');\\n\\n  this.value = value;\\n  this.uv = uv || new _UVNode.UVNode();\\n  this.radius = radius || new _Vector2Node.Vector2Node(1, 1);\\n  this.size = size;\\n  this.blurX = true;\\n  this.blurY = true;\\n  this.horizontal = new _FloatNode.FloatNode(1 / 64);\\n  this.vertical = new _FloatNode.FloatNode(1 / 64);\\n}\\n\\nBlurNode.Nodes = function () {\\n  var blurX = new _FunctionNode.FunctionNode(['vec4 blurX( sampler2D tex, vec2 uv, float s ) {', '\\tvec4 sum = vec4( 0.0 );', '\\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;', '\\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;', '\\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;', '\\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;', '\\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;', '\\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;', '\\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;', '\\treturn sum * .667;', '}'].join('\\\\n'));\\n  var blurY = new _FunctionNode.FunctionNode(['vec4 blurY( sampler2D tex, vec2 uv, float s ) {', '\\tvec4 sum = vec4( 0.0 );', '\\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;', '\\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;', '\\treturn sum * .667;', '}'].join('\\\\n'));\\n  return {\\n    blurX: blurX,\\n    blurY: blurY\\n  };\\n}();\\n\\nBlurNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nBlurNode.prototype.constructor = BlurNode;\\nBlurNode.prototype.nodeType = 'Blur';\\nBlurNode.prototype.hashProperties = ['blurX', 'blurY'];\\n\\nBlurNode.prototype.updateFrame = function ()\\n/* frame */\\n{\\n  if (this.size) {\\n    this.horizontal.value = this.radius.x / this.size.x;\\n    this.vertical.value = this.radius.y / this.size.y;\\n  } else if (this.value.value && this.value.value.image) {\\n    var image = this.value.value.image;\\n    this.horizontal.value = this.radius.x / image.width;\\n    this.vertical.value = this.radius.y / image.height;\\n  }\\n};\\n\\nBlurNode.prototype.generate = function (builder, output) {\\n  if (builder.isShader('fragment')) {\\n    var blurCode = [],\\n        code;\\n    var blurX = builder.include(BlurNode.Nodes.blurX),\\n        blurY = builder.include(BlurNode.Nodes.blurY);\\n\\n    if (this.blurX) {\\n      blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\\n    }\\n\\n    if (this.blurY) {\\n      blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\\n    }\\n\\n    if (blurCode.length == 2) code = '( ' + blurCode.join(' + ') + ' / 2.0 )';else if (blurCode.length) code = '( ' + blurCode[0] + ' )';else code = 'vec4( 0.0 )';\\n    return builder.format(code, this.getType(builder), output);\\n  } else {\\n    console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\\n  }\\n};\\n\\nBlurNode.prototype.copy = function (source) {\\n  _TempNode.TempNode.prototype.copy.call(this, source);\\n\\n  this.value = source.value;\\n  this.uv = source.uv;\\n  this.radius = source.radius;\\n  if (source.size !== undefined) this.size = new _three.Vector2(source.size.x, source.size.y);\\n  this.blurX = source.blurX;\\n  this.blurY = source.blurY;\\n  return this;\\n};\\n\\nBlurNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.value = this.value.toJSON(meta).uuid;\\n    data.uv = this.uv.toJSON(meta).uuid;\\n    data.radius = this.radius.toJSON(meta).uuid;\\n    if (this.size) data.size = {\\n      x: this.size.x,\\n      y: this.size.y\\n    };\\n    data.blurX = this.blurX;\\n    data.blurY = this.blurY;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"BlurNode\",\"value\",\"uv\",\"radius\",\"size\",\"_TempNode\",\"TempNode\",\"call\",\"_UVNode\",\"UVNode\",\"_Vector2Node\",\"Vector2Node\",\"blurY\",\"blurX\",\"horizontal\",\"_FloatNode\",\"FloatNode\",\"vertical\",\"Object\",\"defineProperty\",\"_three\",\"_FunctionNode\",\"Nodes\",\"FunctionNode\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"hashProperties\",\"updateFrame\",\"BlurNode.prototype.updateFrame\",\"x\",\"y\",\"image\",\"width\",\"height\",\"generate\",\"BlurNode.prototype.generate\",\"builder\",\"output\",\"isShader\",\"blurCode\",\"include\",\"push\",\"build\",\"code\",\"length\",\"join\",\"format\",\"getType\",\"console\",\"warn\",\"shader\",\"copy\",\"BlurNode.prototype.copy\",\"source\",\"undefined\",\"Vector2\",\"toJSON\",\"BlurNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\",\"uuid\"]\n}\n"]