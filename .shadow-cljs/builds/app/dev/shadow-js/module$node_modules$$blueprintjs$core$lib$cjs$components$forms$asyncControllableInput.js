["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/components/forms/asyncControllableInput.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$components$forms$asyncControllableInput=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.AsyncControllableInput=void 0;var tslib_1=require(\"module$node_modules$tslib$tslib\"),React=tslib_1.__importStar(require(\"module$node_modules$react$index\")),react_lifecycles_compat_1=require(\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs\"),props_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$props\");\nglobal=function(_super){function AsyncControllableInput(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this.state={hasPendingUpdate:!1,isComposing:!1,nextValue:_this.props.value,value:_this.props.value};_this.handleCompositionStart=function(e){var _a,_b;_this.setState({isComposing:!0,nextValue:_this.state.value});null===(_b=(_a=_this.props).onCompositionStart)||void 0===_b?void 0:_b.call(_a,e)};_this.handleCompositionEnd=function(e){var _a,_b;_this.setState({isComposing:!1});null===\n(_b=(_a=_this.props).onCompositionEnd)||void 0===_b?void 0:_b.call(_a,e)};_this.handleChange=function(e){var _a,_b;_this.setState({nextValue:e.target.value});null===(_b=(_a=_this.props).onChange)||void 0===_b?void 0:_b.call(_a,e)};return _this}tslib_1.__extends(AsyncControllableInput,_super);AsyncControllableInput.getDerivedStateFromProps=function(nextProps,nextState){return nextState.isComposing||void 0===nextProps.value?null:nextState.nextValue!==nextState.value?nextProps.value===nextState.nextValue?\nnextState.hasPendingUpdate?{value:nextProps.value,hasPendingUpdate:!1}:{value:nextState.nextValue}:nextProps.value===nextState.value?{hasPendingUpdate:!0}:{value:nextProps.value,nextValue:nextProps.value,hasPendingUpdate:!1}:{value:nextProps.value,nextValue:nextProps.value,hasPendingUpdate:!1}};AsyncControllableInput.prototype.render=function(){var _a=this.state,isComposing=_a.isComposing,hasPendingUpdate=_a.hasPendingUpdate,value=_a.value;_a=_a.nextValue;var _b=this.props,inputRef=_b.inputRef;_b=\ntslib_1.__rest(_b,[\"inputRef\"]);return React.createElement(\"input\",tslib_1.__assign({},_b,{ref:inputRef,value:isComposing||hasPendingUpdate?_a:value,onCompositionStart:this.handleCompositionStart,onCompositionEnd:this.handleCompositionEnd,onChange:this.handleChange}))};AsyncControllableInput.displayName=props_1.DISPLAYNAME_PREFIX+\".AsyncControllableInput\";return AsyncControllableInput=tslib_1.__decorate([react_lifecycles_compat_1.polyfill],AsyncControllableInput)}(React.PureComponent);exports.AsyncControllableInput=\nglobal}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$components$forms$asyncControllableInput\"] = function(global,require,module,exports) {\n\"use strict\";\n/* !\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncControllableInput = void 0;\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar react_lifecycles_compat_1 = require(\"react-lifecycles-compat\");\nvar props_1 = require(\"../../common/props\");\n/**\n * A stateful wrapper around the low-level <input> component which works around a\n * [React bug](https://github.com/facebook/react/issues/3926). This bug is reproduced when an input\n * receives CompositionEvents (for example, through IME composition) and has its value prop updated\n * asychronously. This might happen if a component chooses to do async validation of a value\n * returned by the input's `onChange` callback.\n *\n * Note: this component does not apply any Blueprint-specific styling.\n */\nvar AsyncControllableInput = /** @class */ (function (_super) {\n    tslib_1.__extends(AsyncControllableInput, _super);\n    function AsyncControllableInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            hasPendingUpdate: false,\n            isComposing: false,\n            nextValue: _this.props.value,\n            value: _this.props.value,\n        };\n        _this.handleCompositionStart = function (e) {\n            var _a, _b;\n            _this.setState({\n                isComposing: true,\n                // Make sure that localValue matches externalValue, in case externalValue\n                // has changed since the last onChange event.\n                nextValue: _this.state.value,\n            });\n            (_b = (_a = _this.props).onCompositionStart) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        };\n        _this.handleCompositionEnd = function (e) {\n            var _a, _b;\n            _this.setState({ isComposing: false });\n            (_b = (_a = _this.props).onCompositionEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        };\n        _this.handleChange = function (e) {\n            var _a, _b;\n            var value = e.target.value;\n            _this.setState({ nextValue: value });\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        };\n        return _this;\n    }\n    AsyncControllableInput.getDerivedStateFromProps = function (nextProps, nextState) {\n        if (nextState.isComposing || nextProps.value === undefined) {\n            // don't derive anything from props if:\n            // - in uncontrolled mode, OR\n            // - currently composing, since we'll do that after composition ends\n            return null;\n        }\n        var userTriggeredUpdate = nextState.nextValue !== nextState.value;\n        if (userTriggeredUpdate) {\n            if (nextProps.value === nextState.nextValue) {\n                // parent has processed and accepted our update\n                if (nextState.hasPendingUpdate) {\n                    return { value: nextProps.value, hasPendingUpdate: false };\n                }\n                else {\n                    return { value: nextState.nextValue };\n                }\n            }\n            else {\n                if (nextProps.value === nextState.value) {\n                    // we have sent the update to our parent, but it has not been processed yet. just wait.\n                    // DO NOT set nextValue here, since that will temporarily render a potentially stale controlled value,\n                    // causing the cursor to jump once the new value is accepted\n                    return { hasPendingUpdate: true };\n                }\n                // accept controlled update overriding user action\n                return { value: nextProps.value, nextValue: nextProps.value, hasPendingUpdate: false };\n            }\n        }\n        else {\n            // accept controlled update, could be confirming or denying user action\n            return { value: nextProps.value, nextValue: nextProps.value, hasPendingUpdate: false };\n        }\n    };\n    AsyncControllableInput.prototype.render = function () {\n        var _a = this.state, isComposing = _a.isComposing, hasPendingUpdate = _a.hasPendingUpdate, value = _a.value, nextValue = _a.nextValue;\n        var _b = this.props, inputRef = _b.inputRef, restProps = tslib_1.__rest(_b, [\"inputRef\"]);\n        return (React.createElement(\"input\", tslib_1.__assign({}, restProps, { ref: inputRef, \n            // render the pending value even if it is not confirmed by a parent's async controlled update\n            // so that the cursor does not jump to the end of input as reported in\n            // https://github.com/palantir/blueprint/issues/4298\n            value: isComposing || hasPendingUpdate ? nextValue : value, onCompositionStart: this.handleCompositionStart, onCompositionEnd: this.handleCompositionEnd, onChange: this.handleChange })));\n    };\n    AsyncControllableInput.displayName = props_1.DISPLAYNAME_PREFIX + \".AsyncControllableInput\";\n    AsyncControllableInput = tslib_1.__decorate([\n        react_lifecycles_compat_1.polyfill\n    ], AsyncControllableInput);\n    return AsyncControllableInput;\n}(React.PureComponent));\nexports.AsyncControllableInput = AsyncControllableInput;\n//# sourceMappingURL=asyncControllableInput.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$blueprintjs$core$lib$cjs$common$props"]],"~:properties",["^5",["onCompositionStart","handleChange","getDerivedStateFromProps","onChange","displayName","__esModule","handleCompositionEnd","hasPendingUpdate","value","isComposing","nextValue","handleCompositionStart","render","state","ref","AsyncControllableInput","onCompositionEnd"]],"~:compiled-at",1630405505176,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$components$forms$asyncControllableInput.js\",\n\"lineCount\":6,\n\"mappings\":\"AAAAA,cAAA,CAAA,qFAAA,CAA0G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBlJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,sBAAR,CAAiC,IAAK,EACtC,KAAIC,QAAUP,OAAA,CAAQ,iCAAR,CAAd,CACIQ,MAAQD,OAAQE,CAAAA,YAAR,CAAqBT,OAAA,CAAQ,iCAAR,CAArB,CADZ,CAEIU,0BAA4BV,OAAA,CAAQ,yEAAR,CAFhC,CAGIW,QAAUX,OAAA,CAAQ,4DAAR,CAUVM;MAAAA,CAAwC,QAAS,CAACM,MAAD,CAAS,CAE1DN,QAASA,uBAAsB,EAAG,CAC9B,IAAIO,MAAmB,IAAnBA,GAAQD,MAARC,EAA2BD,MAAOE,CAAAA,KAAP,CAAa,IAAb,CAAmBC,SAAnB,CAA3BF,EAA4D,IAChEA,MAAMG,CAAAA,KAAN,CAAc,CACVC,iBAAkB,CAAA,CADR,CAEVC,YAAa,CAAA,CAFH,CAGVC,UAAWN,KAAMO,CAAAA,KAAMf,CAAAA,KAHb,CAIVA,MAAOQ,KAAMO,CAAAA,KAAMf,CAAAA,KAJT,CAMdQ,MAAMQ,CAAAA,sBAAN,CAA+BC,QAAS,CAACC,CAAD,CAAI,CAAA,IACpCC,EADoC,CAChCC,EACRZ,MAAMa,CAAAA,QAAN,CAAe,CACXR,YAAa,CAAA,CADF,CAIXC,UAAWN,KAAMG,CAAAA,KAAMX,CAAAA,KAJZ,CAAf,CAMiD,KAAjD,IAACoB,EAAD,CAAyBE,CAAlBH,EAAkBG,CAAbd,KAAMO,CAAAA,KAAOO,EAAAA,kBAAzB,GAAgE,IAAK,EAArE,GAAyDF,EAAzD,CAAyE,IAAK,EAA9E,CAAkFA,EAAGG,CAAAA,IAAH,CAAQJ,EAAR,CAAYD,CAAZ,CAR1C,CAU5CV,MAAMgB,CAAAA,oBAAN,CAA6BC,QAAS,CAACP,CAAD,CAAI,CAAA,IAClCC,EADkC,CAC9BC,EACRZ,MAAMa,CAAAA,QAAN,CAAe,CAAER,YAAa,CAAA,CAAf,CAAf,CAC+C,KAA/C;CAACO,EAAD,CAAyBM,CAAlBP,EAAkBO,CAAblB,KAAMO,CAAAA,KAAOW,EAAAA,gBAAzB,GAA8D,IAAK,EAAnE,GAAuDN,EAAvD,CAAuE,IAAK,EAA5E,CAAgFA,EAAGG,CAAAA,IAAH,CAAQJ,EAAR,CAAYD,CAAZ,CAH1C,CAK1CV,MAAMmB,CAAAA,YAAN,CAAqBC,QAAS,CAACV,CAAD,CAAI,CAAA,IAC1BC,EAD0B,CACtBC,EAERZ,MAAMa,CAAAA,QAAN,CAAe,CAAEP,UADLI,CAAEW,CAAAA,MAAO7B,CAAAA,KACN,CAAf,CACuC,KAAvC,IAACoB,EAAD,CAAyBU,CAAlBX,EAAkBW,CAAbtB,KAAMO,CAAAA,KAAOe,EAAAA,QAAzB,GAAsD,IAAK,EAA3D,GAA+CV,EAA/C,CAA+D,IAAK,EAApE,CAAwEA,EAAGG,CAAAA,IAAH,CAAQJ,EAAR,CAAYD,CAAZ,CAJ1C,CAMlC,OAAOV,MA7BuB,CADlCN,OAAQ6B,CAAAA,SAAR,CAAkB9B,sBAAlB,CAA0CM,MAA1C,CAgCAN,uBAAuB+B,CAAAA,wBAAvB,CAAkDC,QAAS,CAACC,SAAD,CAAYC,SAAZ,CAAuB,CAC9E,MAAIA,UAAUtB,CAAAA,WAAd,EAAiDuB,IAAAA,EAAjD,GAA6BF,SAAUlC,CAAAA,KAAvC,CAIW,IAJX,CAM0BmC,SAAUrB,CAAAA,SACpC,GADkDqB,SAAUnC,CAAAA,KAC5D,CACQkC,SAAUlC,CAAAA,KAAd,GAAwBmC,SAAUrB,CAAAA,SAAlC;AAEQqB,SAAUvB,CAAAA,gBAAd,CACW,CAAEZ,MAAOkC,SAAUlC,CAAAA,KAAnB,CAA0BY,iBAAkB,CAAA,CAA5C,CADX,CAIW,CAAEZ,MAAOmC,SAAUrB,CAAAA,SAAnB,CANf,CAUQoB,SAAUlC,CAAAA,KAAd,GAAwBmC,SAAUnC,CAAAA,KAAlC,CAIW,CAAEY,iBAAkB,CAAA,CAApB,CAJX,CAOO,CAAEZ,MAAOkC,SAAUlC,CAAAA,KAAnB,CAA0Bc,UAAWoB,SAAUlC,CAAAA,KAA/C,CAAsDY,iBAAkB,CAAA,CAAxE,CAlBf,CAuBW,CAAEZ,MAAOkC,SAAUlC,CAAAA,KAAnB,CAA0Bc,UAAWoB,SAAUlC,CAAAA,KAA/C,CAAsDY,iBAAkB,CAAA,CAAxE,CA/BmE,CAkClFX,uBAAuBoC,CAAAA,SAAUC,CAAAA,MAAjC,CAA0CC,QAAS,EAAG,CAAA,IAC9CpB,GAAK,IAAKR,CAAAA,KADoC,CAC7BE,YAAcM,EAAGN,CAAAA,WADY,CACCD,iBAAmBO,EAAGP,CAAAA,gBADvB,CACyCZ,MAAQmB,EAAGnB,CAAAA,KAAOc,GAAAA,CAAYK,EAAGL,CAAAA,SAD1E,KAE9CM,GAAK,IAAKL,CAAAA,KAFoC,CAE7ByB,SAAWpB,EAAGoB,CAAAA,QAAUC,GAAAA;AAAYvC,OAAQwC,CAAAA,MAAR,CAAetB,EAAf,CAAmB,CAAC,UAAD,CAAnB,CACzD,OAAQjB,MAAMwC,CAAAA,aAAN,CAAoB,OAApB,CAA6BzC,OAAQ0C,CAAAA,QAAR,CAAiB,EAAjB,CAAqBH,EAArB,CAAgC,CAAEI,IAAKL,QAAP,CAIjExC,MAAOa,WAAA,EAAeD,gBAAf,CAAkCE,EAAlC,CAA8Cd,KAJY,CAILsB,mBAAoB,IAAKN,CAAAA,sBAJpB,CAI4CU,iBAAkB,IAAKF,CAAAA,oBAJnE,CAIyFM,SAAU,IAAKH,CAAAA,YAJxG,CAAhC,CAA7B,CAH0C,CAStD1B,uBAAuB6C,CAAAA,WAAvB,CAAqCxC,OAAQyC,CAAAA,kBAA7C,CAAkE,yBAIlE,OAHA9C,uBAGA,CAHyBC,OAAQ8C,CAAAA,UAAR,CAAmB,CACxC3C,yBAA0B4C,CAAAA,QADc,CAAnB,CAEtBhD,sBAFsB,CA7EiC,CAAlB,CAiF1CE,KAAM+C,CAAAA,aAjFoC,CAkF5CrD,QAAQI,CAAAA,sBAAR;AAAiCA,MAlHiH;\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/components/forms/asyncControllableInput.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$components$forms$asyncControllableInput\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/* !\\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.AsyncControllableInput = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar React = tslib_1.__importStar(require(\\\"react\\\"));\\nvar react_lifecycles_compat_1 = require(\\\"react-lifecycles-compat\\\");\\nvar props_1 = require(\\\"../../common/props\\\");\\n/**\\n * A stateful wrapper around the low-level <input> component which works around a\\n * [React bug](https://github.com/facebook/react/issues/3926). This bug is reproduced when an input\\n * receives CompositionEvents (for example, through IME composition) and has its value prop updated\\n * asychronously. This might happen if a component chooses to do async validation of a value\\n * returned by the input's `onChange` callback.\\n *\\n * Note: this component does not apply any Blueprint-specific styling.\\n */\\nvar AsyncControllableInput = /** @class */ (function (_super) {\\n    tslib_1.__extends(AsyncControllableInput, _super);\\n    function AsyncControllableInput() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.state = {\\n            hasPendingUpdate: false,\\n            isComposing: false,\\n            nextValue: _this.props.value,\\n            value: _this.props.value,\\n        };\\n        _this.handleCompositionStart = function (e) {\\n            var _a, _b;\\n            _this.setState({\\n                isComposing: true,\\n                // Make sure that localValue matches externalValue, in case externalValue\\n                // has changed since the last onChange event.\\n                nextValue: _this.state.value,\\n            });\\n            (_b = (_a = _this.props).onCompositionStart) === null || _b === void 0 ? void 0 : _b.call(_a, e);\\n        };\\n        _this.handleCompositionEnd = function (e) {\\n            var _a, _b;\\n            _this.setState({ isComposing: false });\\n            (_b = (_a = _this.props).onCompositionEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);\\n        };\\n        _this.handleChange = function (e) {\\n            var _a, _b;\\n            var value = e.target.value;\\n            _this.setState({ nextValue: value });\\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\\n        };\\n        return _this;\\n    }\\n    AsyncControllableInput.getDerivedStateFromProps = function (nextProps, nextState) {\\n        if (nextState.isComposing || nextProps.value === undefined) {\\n            // don't derive anything from props if:\\n            // - in uncontrolled mode, OR\\n            // - currently composing, since we'll do that after composition ends\\n            return null;\\n        }\\n        var userTriggeredUpdate = nextState.nextValue !== nextState.value;\\n        if (userTriggeredUpdate) {\\n            if (nextProps.value === nextState.nextValue) {\\n                // parent has processed and accepted our update\\n                if (nextState.hasPendingUpdate) {\\n                    return { value: nextProps.value, hasPendingUpdate: false };\\n                }\\n                else {\\n                    return { value: nextState.nextValue };\\n                }\\n            }\\n            else {\\n                if (nextProps.value === nextState.value) {\\n                    // we have sent the update to our parent, but it has not been processed yet. just wait.\\n                    // DO NOT set nextValue here, since that will temporarily render a potentially stale controlled value,\\n                    // causing the cursor to jump once the new value is accepted\\n                    return { hasPendingUpdate: true };\\n                }\\n                // accept controlled update overriding user action\\n                return { value: nextProps.value, nextValue: nextProps.value, hasPendingUpdate: false };\\n            }\\n        }\\n        else {\\n            // accept controlled update, could be confirming or denying user action\\n            return { value: nextProps.value, nextValue: nextProps.value, hasPendingUpdate: false };\\n        }\\n    };\\n    AsyncControllableInput.prototype.render = function () {\\n        var _a = this.state, isComposing = _a.isComposing, hasPendingUpdate = _a.hasPendingUpdate, value = _a.value, nextValue = _a.nextValue;\\n        var _b = this.props, inputRef = _b.inputRef, restProps = tslib_1.__rest(_b, [\\\"inputRef\\\"]);\\n        return (React.createElement(\\\"input\\\", tslib_1.__assign({}, restProps, { ref: inputRef, \\n            // render the pending value even if it is not confirmed by a parent's async controlled update\\n            // so that the cursor does not jump to the end of input as reported in\\n            // https://github.com/palantir/blueprint/issues/4298\\n            value: isComposing || hasPendingUpdate ? nextValue : value, onCompositionStart: this.handleCompositionStart, onCompositionEnd: this.handleCompositionEnd, onChange: this.handleChange })));\\n    };\\n    AsyncControllableInput.displayName = props_1.DISPLAYNAME_PREFIX + \\\".AsyncControllableInput\\\";\\n    AsyncControllableInput = tslib_1.__decorate([\\n        react_lifecycles_compat_1.polyfill\\n    ], AsyncControllableInput);\\n    return AsyncControllableInput;\\n}(React.PureComponent));\\nexports.AsyncControllableInput = AsyncControllableInput;\\n//# sourceMappingURL=asyncControllableInput.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"AsyncControllableInput\",\"tslib_1\",\"React\",\"__importStar\",\"react_lifecycles_compat_1\",\"props_1\",\"_super\",\"_this\",\"apply\",\"arguments\",\"state\",\"hasPendingUpdate\",\"isComposing\",\"nextValue\",\"props\",\"handleCompositionStart\",\"_this.handleCompositionStart\",\"e\",\"_a\",\"_b\",\"setState\",\"onCompositionStart\",\"call\",\"handleCompositionEnd\",\"_this.handleCompositionEnd\",\"onCompositionEnd\",\"handleChange\",\"_this.handleChange\",\"target\",\"onChange\",\"__extends\",\"getDerivedStateFromProps\",\"AsyncControllableInput.getDerivedStateFromProps\",\"nextProps\",\"nextState\",\"undefined\",\"prototype\",\"render\",\"AsyncControllableInput.prototype.render\",\"inputRef\",\"restProps\",\"__rest\",\"createElement\",\"__assign\",\"ref\",\"displayName\",\"DISPLAYNAME_PREFIX\",\"__decorate\",\"polyfill\",\"PureComponent\"]\n}\n"]