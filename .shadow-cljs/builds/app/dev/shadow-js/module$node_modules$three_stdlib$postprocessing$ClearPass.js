["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/postprocessing/ClearPass.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$postprocessing$ClearPass=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.ClearPass=void 0;var _three=require(\"module$node_modules$three$build$three_module\");global=require(\"module$node_modules$three_stdlib$postprocessing$Pass\");require=function(clearColor,clearAlpha){this.needsSwap=!1;this.clearColor=void 0!==clearColor?clearColor:0;this.clearAlpha=void 0!==clearAlpha?clearAlpha:0;this._oldClearColor=\nnew _three.Color};exports.ClearPass=require;require.prototype=Object.assign(Object.create(global.Pass.prototype),{constructor:require,render:function(renderer,writeBuffer,readBuffer){if(this.clearColor){renderer.getClearColor(this._oldClearColor);var oldClearAlpha=renderer.getClearAlpha();renderer.setClearColor(this.clearColor,this.clearAlpha)}renderer.setRenderTarget(this.renderToScreen?null:readBuffer);renderer.clear();this.clearColor&&renderer.setClearColor(this._oldClearColor,oldClearAlpha)}})}","~:source","shadow$provide[\"module$node_modules$three_stdlib$postprocessing$ClearPass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClearPass = void 0;\n\nvar _three = require(\"three\");\n\nvar _Pass = require(\"./Pass.js\");\n\nvar ClearPass = function ClearPass(clearColor, clearAlpha) {\n  this.needsSwap = false;\n  this.clearColor = clearColor !== undefined ? clearColor : 0x000000;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this._oldClearColor = new _three.Color();\n};\n\nexports.ClearPass = ClearPass;\nClearPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\n  constructor: ClearPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var oldClearAlpha;\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    renderer.clear();\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n  }\n});\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$three_stdlib$postprocessing$Pass"]],"~:properties",["^5",["clearColor","prototype","needsSwap","__esModule","value","render","_oldClearColor","ClearPass","clearAlpha","constructor"]],"~:compiled-at",1630917515478,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$postprocessing$ClearPass.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,SAAR,CAAoB,IAAK,EAEzB,KAAIC,OAASP,OAAA,CAAQ,8CAAR,CAETQ,OAAAA,CAAQR,OAAA,CAAQ,sDAAR,CAERM,QAAAA,CAAYA,QAAkB,CAACG,UAAD,CAAaC,UAAb,CAAyB,CACzD,IAAKC,CAAAA,SAAL,CAAiB,CAAA,CACjB,KAAKF,CAAAA,UAAL,CAAiCG,IAAAA,EAAf,GAAAH,UAAA,CAA2BA,UAA3B,CAAwC,CAC1D,KAAKC,CAAAA,UAAL,CAAiCE,IAAAA,EAAf,GAAAF,UAAA,CAA2BA,UAA3B,CAAwC,CAC1D,KAAKG,CAAAA,cAAL;AAAsB,IAAIN,MAAOO,CAAAA,KAJwB,CAO3DZ,QAAQI,CAAAA,SAAR,CAAoBA,OACpBA,QAAUS,CAAAA,SAAV,CAAsBZ,MAAOa,CAAAA,MAAP,CAAcb,MAAOc,CAAAA,MAAP,CAAcT,MAAMU,CAAAA,IAAKH,CAAAA,SAAzB,CAAd,CAAmD,CACvEI,YAAab,OAD0D,CAEvEc,OAAQA,QAAe,CAACC,QAAD,CAAWC,WAAX,CAAwBC,UAAxB,CAErB,CAGA,GAAI,IAAKd,CAAAA,UAAT,CAAqB,CACnBY,QAASG,CAAAA,aAAT,CAAuB,IAAKX,CAAAA,cAA5B,CACA,KAAAY,cAAgBJ,QAASK,CAAAA,aAAT,EAChBL,SAASM,CAAAA,aAAT,CAAuB,IAAKlB,CAAAA,UAA5B,CAAwC,IAAKC,CAAAA,UAA7C,CAHmB,CAMrBW,QAASO,CAAAA,eAAT,CAAyB,IAAKC,CAAAA,cAAL,CAAsB,IAAtB,CAA6BN,UAAtD,CACAF,SAASS,CAAAA,KAAT,EAEI,KAAKrB,CAAAA,UAAT,EACEY,QAASM,CAAAA,aAAT,CAAuB,IAAKd,CAAAA,cAA5B,CAA4CY,aAA5C,CAbF,CAJqE,CAAnD,CApBgG;\",\n\"sources\":[\"node_modules/three-stdlib/postprocessing/ClearPass.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$postprocessing$ClearPass\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ClearPass = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _Pass = require(\\\"./Pass.js\\\");\\n\\nvar ClearPass = function ClearPass(clearColor, clearAlpha) {\\n  this.needsSwap = false;\\n  this.clearColor = clearColor !== undefined ? clearColor : 0x000000;\\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\\n  this._oldClearColor = new _three.Color();\\n};\\n\\nexports.ClearPass = ClearPass;\\nClearPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\\n  constructor: ClearPass,\\n  render: function render(renderer, writeBuffer, readBuffer\\n  /*, deltaTime, maskActive */\\n  ) {\\n    var oldClearAlpha;\\n\\n    if (this.clearColor) {\\n      renderer.getClearColor(this._oldClearColor);\\n      oldClearAlpha = renderer.getClearAlpha();\\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\\n    }\\n\\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\\n    renderer.clear();\\n\\n    if (this.clearColor) {\\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\\n    }\\n  }\\n});\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"ClearPass\",\"_three\",\"_Pass\",\"clearColor\",\"clearAlpha\",\"needsSwap\",\"undefined\",\"_oldClearColor\",\"Color\",\"prototype\",\"assign\",\"create\",\"Pass\",\"constructor\",\"render\",\"renderer\",\"writeBuffer\",\"readBuffer\",\"getClearColor\",\"oldClearAlpha\",\"getClearAlpha\",\"setClearColor\",\"setRenderTarget\",\"renderToScreen\",\"clear\"]\n}\n"]