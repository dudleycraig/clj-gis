["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/misc/MD2Character.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$misc$MD2Character=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.MD2Character=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_MD2Loader=require(\"module$node_modules$three_stdlib$loaders$MD2Loader\");exports.MD2Character=function(){function loadTextures(baseUrl,textureUrls){for(var textureLoader=new _three.TextureLoader,textures=[],i=0;i<textureUrls.length;i++)textures[i]=\ntextureLoader.load(baseUrl+textureUrls[i],checkLoadingComplete),textures[i].mapping=_three.UVMapping,textures[i].name=textureUrls[i],textures[i].encoding=_three.sRGBEncoding;return textures}function createPart(geometry,skinMap){var materialWireframe=new _three.MeshLambertMaterial({color:16755200,wireframe:!0,morphTargets:!0,morphNormals:!0});skinMap=new _three.MeshLambertMaterial({color:16777215,wireframe:!1,map:skinMap,morphTargets:!0,morphNormals:!0});geometry=new _three.Mesh(geometry,skinMap);\ngeometry.rotation.y=-Math.PI/2;geometry.castShadow=!0;geometry.receiveShadow=!0;geometry.materialTexture=skinMap;geometry.materialWireframe=materialWireframe;return geometry}function checkLoadingComplete(){--scope.loadCounter;if(0===scope.loadCounter)scope.onLoadComplete()}var scope=this;this.scale=1;this.animationFPS=6;this.root=new _three.Object3D;this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.mixer=this.activeAnimation=null;this.onLoadComplete=function(){};\nthis.loadCounter=0;this.loadParts=function(config){this.loadCounter=2*config.weapons.length+config.skins.length+1;for(var weaponsTextures=[],i=0;i<config.weapons.length;i++)weaponsTextures[i]=config.weapons[i][1];this.skinsBody=loadTextures(config.baseUrl+\"skins/\",config.skins);this.skinsWeapon=loadTextures(config.baseUrl+\"skins/\",weaponsTextures);weaponsTextures=new _MD2Loader.MD2Loader;weaponsTextures.load(config.baseUrl+config.body,function(geo){var boundingBox=new _three.Box3;boundingBox.setFromBufferAttribute(geo.attributes.position);\nscope.root.position.y=-scope.scale*boundingBox.min.y;geo=createPart(geo,scope.skinsBody[0]);geo.scale.set(scope.scale,scope.scale,scope.scale);scope.root.add(geo);scope.meshBody=geo;scope.meshBody.clipOffset=0;scope.activeAnimationClipName=geo.geometry.animations[0].name;scope.mixer=new _three.AnimationMixer(geo);checkLoadingComplete()});i=function(index,name){return function(geo){geo=createPart(geo,scope.skinsWeapon[index]);geo.scale.set(scope.scale,scope.scale,scope.scale);geo.visible=!1;geo.name=\nname;scope.root.add(geo);scope.weapons[index]=geo;scope.meshWeapon=geo;checkLoadingComplete()}};for(var _i=0;_i<config.weapons.length;_i++)weaponsTextures.load(config.baseUrl+config.weapons[_i][0],i(_i,config.weapons[_i][0]))};this.setPlaybackRate=function(rate){this.mixer.timeScale=0!==rate?1/rate:0};this.setWireframe=function(wireframeEnabled){wireframeEnabled?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):\n(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))};this.setSkin=function(index){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[index])};this.setWeapon=function(index){for(var i=0;i<this.weapons.length;i++)this.weapons[i].visible=!1;if(index=this.weapons[index])index.visible=!0,this.meshWeapon=index,scope.syncWeaponAnimation()};this.setAnimation=function(clipName){if(this.meshBody){this.meshBody.activeAction&&\n(this.meshBody.activeAction.stop(),this.meshBody.activeAction=null);var action=this.mixer.clipAction(clipName,this.meshBody);action&&(this.meshBody.activeAction=action.play())}scope.activeClipName=clipName;scope.syncWeaponAnimation()};this.syncWeaponAnimation=function(){var clipName=scope.activeClipName;scope.meshWeapon&&(this.meshWeapon.activeAction&&(this.meshWeapon.activeAction.stop(),this.meshWeapon.activeAction=null),clipName=this.mixer.clipAction(clipName,this.meshWeapon))&&(this.meshWeapon.activeAction=\nclipName.syncWith(this.meshBody.activeAction).play())};this.update=function(delta){this.mixer&&this.mixer.update(delta)}}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$misc$MD2Character\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MD2Character = void 0;\n\nvar _three = require(\"three\");\n\nvar _MD2Loader = require(\"../loaders/MD2Loader.js\");\n\nvar MD2Character = function MD2Character() {\n  var scope = this;\n  this.scale = 1;\n  this.animationFPS = 6;\n  this.root = new _three.Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.activeAnimation = null;\n  this.mixer = null;\n\n  this.onLoadComplete = function () {};\n\n  this.loadCounter = 0;\n\n  this.loadParts = function (config) {\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n\n    for (var i = 0; i < config.weapons.length; i++) {\n      weaponsTextures[i] = config.weapons[i][1];\n    } // SKINS\n\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new _MD2Loader.MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new _three.Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new _three.AnimationMixer(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function generateCallback(index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n\n    for (var _i = 0; _i < config.weapons.length; _i++) {\n      loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n    }\n  };\n\n  this.setPlaybackRate = function (rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  };\n\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  };\n\n  this.setWeapon = function (index) {\n    for (var i = 0; i < this.weapons.length; i++) {\n      this.weapons[i].visible = false;\n    }\n\n    var activeWeapon = this.weapons[index];\n\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      scope.syncWeaponAnimation();\n    }\n  };\n\n  this.setAnimation = function (clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshBody);\n\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n\n    scope.activeClipName = clipName;\n    scope.syncWeaponAnimation();\n  };\n\n  this.syncWeaponAnimation = function () {\n    var clipName = scope.activeClipName;\n\n    if (scope.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshWeapon);\n\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  };\n\n  this.update = function (delta) {\n    if (this.mixer) this.mixer.update(delta);\n  };\n\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new _three.TextureLoader();\n    var textures = [];\n\n    for (var i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = _three.UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = _three.sRGBEncoding;\n    }\n\n    return textures;\n  }\n\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new _three.MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new _three.MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new _three.Mesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    return mesh;\n  }\n\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n};\n\nexports.MD2Character = MD2Character;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$three_stdlib$loaders$MD2Loader"]],"~:properties",["^5",["loadCounter","map","syncWeaponAnimation","onLoadComplete","meshBody","receiveShadow","materialWireframe","scale","MD2Character","setWireframe","castShadow","clipOffset","loadParts","__esModule","encoding","root","timeScale","update","materialTexture","setSkin","activeAnimationClipName","name","value","visible","wireframe","weapons","activeAction","activeAnimation","y","mapping","setPlaybackRate","skinsBody","skinsWeapon","morphTargets","setAnimation","meshWeapon","color","setWeapon","morphNormals","animationFPS","mixer","activeClipName","material"]],"~:compiled-at",1630917515119,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$misc$MD2Character.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/misc/MD2Character.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$misc$MD2Character\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MD2Character = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _MD2Loader = require(\\\"../loaders/MD2Loader.js\\\");\\n\\nvar MD2Character = function MD2Character() {\\n  var scope = this;\\n  this.scale = 1;\\n  this.animationFPS = 6;\\n  this.root = new _three.Object3D();\\n  this.meshBody = null;\\n  this.meshWeapon = null;\\n  this.skinsBody = [];\\n  this.skinsWeapon = [];\\n  this.weapons = [];\\n  this.activeAnimation = null;\\n  this.mixer = null;\\n\\n  this.onLoadComplete = function () {};\\n\\n  this.loadCounter = 0;\\n\\n  this.loadParts = function (config) {\\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\\n    var weaponsTextures = [];\\n\\n    for (var i = 0; i < config.weapons.length; i++) {\\n      weaponsTextures[i] = config.weapons[i][1];\\n    } // SKINS\\n\\n\\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\\n\\n    var loader = new _MD2Loader.MD2Loader();\\n    loader.load(config.baseUrl + config.body, function (geo) {\\n      var boundingBox = new _three.Box3();\\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\\n      var mesh = createPart(geo, scope.skinsBody[0]);\\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\\n      scope.root.add(mesh);\\n      scope.meshBody = mesh;\\n      scope.meshBody.clipOffset = 0;\\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\\n      scope.mixer = new _three.AnimationMixer(mesh);\\n      checkLoadingComplete();\\n    }); // WEAPONS\\n\\n    var generateCallback = function generateCallback(index, name) {\\n      return function (geo) {\\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\\n        mesh.visible = false;\\n        mesh.name = name;\\n        scope.root.add(mesh);\\n        scope.weapons[index] = mesh;\\n        scope.meshWeapon = mesh;\\n        checkLoadingComplete();\\n      };\\n    };\\n\\n    for (var _i = 0; _i < config.weapons.length; _i++) {\\n      loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\\n    }\\n  };\\n\\n  this.setPlaybackRate = function (rate) {\\n    if (rate !== 0) {\\n      this.mixer.timeScale = 1 / rate;\\n    } else {\\n      this.mixer.timeScale = 0;\\n    }\\n  };\\n\\n  this.setWireframe = function (wireframeEnabled) {\\n    if (wireframeEnabled) {\\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\\n    } else {\\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\\n    }\\n  };\\n\\n  this.setSkin = function (index) {\\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\\n      this.meshBody.material.map = this.skinsBody[index];\\n    }\\n  };\\n\\n  this.setWeapon = function (index) {\\n    for (var i = 0; i < this.weapons.length; i++) {\\n      this.weapons[i].visible = false;\\n    }\\n\\n    var activeWeapon = this.weapons[index];\\n\\n    if (activeWeapon) {\\n      activeWeapon.visible = true;\\n      this.meshWeapon = activeWeapon;\\n      scope.syncWeaponAnimation();\\n    }\\n  };\\n\\n  this.setAnimation = function (clipName) {\\n    if (this.meshBody) {\\n      if (this.meshBody.activeAction) {\\n        this.meshBody.activeAction.stop();\\n        this.meshBody.activeAction = null;\\n      }\\n\\n      var action = this.mixer.clipAction(clipName, this.meshBody);\\n\\n      if (action) {\\n        this.meshBody.activeAction = action.play();\\n      }\\n    }\\n\\n    scope.activeClipName = clipName;\\n    scope.syncWeaponAnimation();\\n  };\\n\\n  this.syncWeaponAnimation = function () {\\n    var clipName = scope.activeClipName;\\n\\n    if (scope.meshWeapon) {\\n      if (this.meshWeapon.activeAction) {\\n        this.meshWeapon.activeAction.stop();\\n        this.meshWeapon.activeAction = null;\\n      }\\n\\n      var action = this.mixer.clipAction(clipName, this.meshWeapon);\\n\\n      if (action) {\\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\\n      }\\n    }\\n  };\\n\\n  this.update = function (delta) {\\n    if (this.mixer) this.mixer.update(delta);\\n  };\\n\\n  function loadTextures(baseUrl, textureUrls) {\\n    var textureLoader = new _three.TextureLoader();\\n    var textures = [];\\n\\n    for (var i = 0; i < textureUrls.length; i++) {\\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\\n      textures[i].mapping = _three.UVMapping;\\n      textures[i].name = textureUrls[i];\\n      textures[i].encoding = _three.sRGBEncoding;\\n    }\\n\\n    return textures;\\n  }\\n\\n  function createPart(geometry, skinMap) {\\n    var materialWireframe = new _three.MeshLambertMaterial({\\n      color: 0xffaa00,\\n      wireframe: true,\\n      morphTargets: true,\\n      morphNormals: true\\n    });\\n    var materialTexture = new _three.MeshLambertMaterial({\\n      color: 0xffffff,\\n      wireframe: false,\\n      map: skinMap,\\n      morphTargets: true,\\n      morphNormals: true\\n    }); //\\n\\n    var mesh = new _three.Mesh(geometry, materialTexture);\\n    mesh.rotation.y = -Math.PI / 2;\\n    mesh.castShadow = true;\\n    mesh.receiveShadow = true; //\\n\\n    mesh.materialTexture = materialTexture;\\n    mesh.materialWireframe = materialWireframe;\\n    return mesh;\\n  }\\n\\n  function checkLoadingComplete() {\\n    scope.loadCounter -= 1;\\n    if (scope.loadCounter === 0) scope.onLoadComplete();\\n  }\\n};\\n\\nexports.MD2Character = MD2Character;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"MD2Character\",\"_three\",\"_MD2Loader\",\"loadTextures\",\"baseUrl\",\"textureUrls\",\"textureLoader\",\"TextureLoader\",\"textures\",\"i\",\"length\",\"load\",\"checkLoadingComplete\",\"mapping\",\"UVMapping\",\"name\",\"encoding\",\"sRGBEncoding\",\"createPart\",\"geometry\",\"skinMap\",\"materialWireframe\",\"MeshLambertMaterial\",\"color\",\"wireframe\",\"morphTargets\",\"morphNormals\",\"materialTexture\",\"map\",\"mesh\",\"Mesh\",\"rotation\",\"y\",\"Math\",\"PI\",\"castShadow\",\"receiveShadow\",\"scope\",\"loadCounter\",\"onLoadComplete\",\"scale\",\"animationFPS\",\"root\",\"Object3D\",\"meshWeapon\",\"meshBody\",\"skinsBody\",\"skinsWeapon\",\"weapons\",\"mixer\",\"activeAnimation\",\"this.onLoadComplete\",\"loadParts\",\"this.loadParts\",\"config\",\"skins\",\"weaponsTextures\",\"loader\",\"MD2Loader\",\"body\",\"geo\",\"boundingBox\",\"Box3\",\"setFromBufferAttribute\",\"attributes\",\"position\",\"min\",\"set\",\"add\",\"clipOffset\",\"activeAnimationClipName\",\"animations\",\"AnimationMixer\",\"generateCallback\",\"index\",\"visible\",\"_i\",\"setPlaybackRate\",\"this.setPlaybackRate\",\"rate\",\"timeScale\",\"setWireframe\",\"this.setWireframe\",\"wireframeEnabled\",\"material\",\"setSkin\",\"this.setSkin\",\"setWeapon\",\"this.setWeapon\",\"activeWeapon\",\"syncWeaponAnimation\",\"setAnimation\",\"this.setAnimation\",\"clipName\",\"activeAction\",\"stop\",\"action\",\"clipAction\",\"play\",\"activeClipName\",\"this.syncWeaponAnimation\",\"syncWith\",\"update\",\"this.update\",\"delta\"]\n}\n"]