["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@popperjs/core/lib/utils/detectOverflow.js"],"~:js","shadow$provide.module$node_modules$$popperjs$core$lib$utils$detectOverflow=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(state,options){void 0===options&&(options={});var _options=options;options=_options.placement;options=void 0===options?state.placement:options;var _options$boundary=_options.boundary,boundary=void 0===_options$boundary?\n_enums.clippingParents:_options$boundary;_options$boundary=_options.rootBoundary;var rootBoundary=void 0===_options$boundary?_enums.viewport:_options$boundary;_options$boundary=_options.elementContext;_options$boundary=void 0===_options$boundary?_enums.popper:_options$boundary;var _options$altBoundary=_options.altBoundary,altBoundary=void 0===_options$altBoundary?!1:_options$altBoundary;_options=_options.padding;_options=void 0===_options?0:_options;_options=(0,_mergePaddingObject[\"default\"])(\"number\"!==\ntypeof _options?_options:(0,_expandToHashMap[\"default\"])(_options,_enums.basePlacements));var altContext=_options$boundary===_enums.popper?_enums.reference:_enums.popper;_options$altBoundary=state.rects.popper;altBoundary=state.elements[altBoundary?altContext:_options$boundary];boundary=(0,_getClippingRect[\"default\"])((0,_instanceOf.isElement)(altBoundary)?altBoundary:altBoundary.contextElement||(0,_getDocumentElement[\"default\"])(state.elements.popper),boundary,rootBoundary);rootBoundary=(0,_getBoundingClientRect[\"default\"])(state.elements.reference);\naltBoundary=(0,_computeOffsets[\"default\"])({reference:rootBoundary,element:_options$altBoundary,strategy:\"absolute\",placement:options});_options$altBoundary=(0,_rectToClientRect[\"default\"])(Object.assign({},_options$altBoundary,altBoundary));rootBoundary=_options$boundary===_enums.popper?_options$altBoundary:rootBoundary;var overflowOffsets={top:boundary.top-rootBoundary.top+_options.top,bottom:rootBoundary.bottom-boundary.bottom+_options.bottom,left:boundary.left-rootBoundary.left+_options.left,\nright:rootBoundary.right-boundary.right+_options.right};state=state.modifiersData.offset;if(_options$boundary===_enums.popper&&state){var offset=state[options];Object.keys(overflowOffsets).forEach(function(key){var multiply=0<=[_enums.right,_enums.bottom].indexOf(key)?1:-1,axis=0<=[_enums.top,_enums.bottom].indexOf(key)?\"y\":\"x\";overflowOffsets[key]+=offset[axis]*multiply})}return overflowOffsets};var _getClippingRect=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getClippingRect\")),\n_getDocumentElement=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getDocumentElement\")),_getBoundingClientRect=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect\")),_computeOffsets=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$utils$computeOffsets\")),_rectToClientRect=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$utils$rectToClientRect\")),_enums=require(\"module$node_modules$$popperjs$core$lib$enums\"),\n_instanceOf=require(\"module$node_modules$$popperjs$core$lib$dom_utils$instanceOf\"),_mergePaddingObject=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$utils$mergePaddingObject\")),_expandToHashMap=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$utils$expandToHashMap\"))}","~:source","shadow$provide[\"module$node_modules$$popperjs$core$lib$utils$detectOverflow\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = detectOverflow;\n\nvar _getClippingRect = _interopRequireDefault(require(\"../dom-utils/getClippingRect.js\"));\n\nvar _getDocumentElement = _interopRequireDefault(require(\"../dom-utils/getDocumentElement.js\"));\n\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../dom-utils/getBoundingClientRect.js\"));\n\nvar _computeOffsets = _interopRequireDefault(require(\"./computeOffsets.js\"));\n\nvar _rectToClientRect = _interopRequireDefault(require(\"./rectToClientRect.js\"));\n\nvar _enums = require(\"../enums.js\");\n\nvar _instanceOf = require(\"../dom-utils/instanceOf.js\");\n\nvar _mergePaddingObject = _interopRequireDefault(require(\"./mergePaddingObject.js\"));\n\nvar _expandToHashMap = _interopRequireDefault(require(\"./expandToHashMap.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// eslint-disable-next-line import/no-unused-modules\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? _enums.clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? _enums.viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? _enums.popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = (0, _mergePaddingObject[\"default\"])(typeof padding !== 'number' ? padding : (0, _expandToHashMap[\"default\"])(padding, _enums.basePlacements));\n  var altContext = elementContext === _enums.popper ? _enums.reference : _enums.popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = (0, _getClippingRect[\"default\"])((0, _instanceOf.isElement)(element) ? element : element.contextElement || (0, _getDocumentElement[\"default\"])(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = (0, _getBoundingClientRect[\"default\"])(state.elements.reference);\n  var popperOffsets = (0, _computeOffsets[\"default\"])({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = (0, _rectToClientRect[\"default\"])(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === _enums.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === _enums.popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [_enums.right, _enums.bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [_enums.top, _enums.bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$popperjs$core$lib$enums","~$module$node_modules$$popperjs$core$lib$dom_utils$getClippingRect","~$module$node_modules$$popperjs$core$lib$utils$expandToHashMap","~$shadow.js","~$module$node_modules$$popperjs$core$lib$dom_utils$instanceOf","~$module$node_modules$$popperjs$core$lib$utils$rectToClientRect","~$module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect","~$module$node_modules$$popperjs$core$lib$utils$mergePaddingObject","~$module$node_modules$$popperjs$core$lib$utils$computeOffsets","~$module$node_modules$$popperjs$core$lib$dom_utils$getDocumentElement"]],"~:properties",["^5",["right","top","strategy","placement","__esModule","element","value","reference","bottom","left"]],"~:compiled-at",1630917514085,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$popperjs$core$lib$utils$detectOverflow.js\",\n\"lineCount\":7,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0BxHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAvBrCE,MAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAuBAO,QAAuB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACtB,IAAK,EAArB,GAAIA,OAAJ,GACEA,OADF,CACY,EADZ,CADsC,KAKlCC,SAAWD,OACXE,QAAAA,CAAqBD,QAASE,CAAAA,SAC9BA,QAAAA,CAAmC,IAAK,EAA5B,GAAAD,OAAA,CAAgCH,KAAMI,CAAAA,SAAtC,CAAkDD,OAP5B,KAQlCE,kBAAoBH,QAASI,CAAAA,QARK,CASlCA,SAAiC,IAAK,EAA3B,GAAAD,iBAAA;AAA+BE,MAAOC,CAAAA,eAAtC,CAAwDH,iBACnEI,kBAAAA,CAAwBP,QAASQ,CAAAA,YAVC,KAWlCA,aAAyC,IAAK,EAA/B,GAAAD,iBAAA,CAAmCF,MAAOI,CAAAA,QAA1C,CAAqDF,iBACpEG,kBAAAA,CAAwBV,QAASW,CAAAA,cACjCA,kBAAAA,CAA2C,IAAK,EAA/B,GAAAD,iBAAA,CAAmCL,MAAOO,CAAAA,MAA1C,CAAmDF,iBAblC,KAclCG,qBAAuBb,QAASc,CAAAA,WAdE,CAelCA,YAAuC,IAAK,EAA9B,GAAAD,oBAAA,CAAkC,CAAA,CAAlC,CAA0CA,oBACxDE,SAAAA,CAAmBf,QAASgB,CAAAA,OAC5BA,SAAAA,CAA+B,IAAK,EAA1B,GAAAD,QAAA,CAA8B,CAA9B,CAAkCA,QAC5CE,SAAAA,CAAgB,CAAC,CAAA,CAAGC,mBAAA,CAAoB,SAApB,CAAJ,EAAuD,QAAnB;AAAA,MAAOF,SAAP,CAA8BA,QAA9B,CAAwC,CAAC,CAAA,CAAGG,gBAAA,CAAiB,SAAjB,CAAJ,EAAiCH,QAAjC,CAA0CX,MAAOe,CAAAA,cAAjD,CAA5E,CACpB,KAAIC,WAAaV,iBAAA,GAAmBN,MAAOO,CAAAA,MAA1B,CAAmCP,MAAOiB,CAAAA,SAA1C,CAAsDjB,MAAOO,CAAAA,MAC1EW,qBAAAA,CAAazB,KAAM0B,CAAAA,KAAMZ,CAAAA,MACzBa,YAAAA,CAAU3B,KAAM4B,CAAAA,QAAN,CAAeZ,WAAA,CAAcO,UAAd,CAA2BV,iBAA1C,CACVgB,SAAAA,CAAqB,CAAC,CAAA,CAAGC,gBAAA,CAAiB,SAAjB,CAAJ,EAAiC,CAAC,CAAA,CAAGC,WAAYC,CAAAA,SAAhB,EAA2BL,WAA3B,CAAA,CAAsCA,WAAtC,CAAgDA,WAAQM,CAAAA,cAAxD,EAA0E,CAAC,CAAA,CAAGC,mBAAA,CAAoB,SAApB,CAAJ,EAAoClC,KAAM4B,CAAAA,QAASd,CAAAA,MAAnD,CAA3G,CAAuKR,QAAvK,CAAiLI,YAAjL,CACrByB,aAAAA,CAAsB,CAAC,CAAA,CAAGC,sBAAA,CAAuB,SAAvB,CAAJ,EAAuCpC,KAAM4B,CAAAA,QAASJ,CAAAA,SAAtD,CACtBa;WAAAA,CAAgB,CAAC,CAAA,CAAGC,eAAA,CAAgB,SAAhB,CAAJ,EAAgC,CAClDd,UAAWW,YADuC,CAElDR,QAASF,oBAFyC,CAGlDc,SAAU,UAHwC,CAIlDnC,UAAWA,OAJuC,CAAhC,CAMhBoC,qBAAAA,CAAmB,CAAC,CAAA,CAAGC,iBAAA,CAAkB,SAAlB,CAAJ,EAAkC7C,MAAO8C,CAAAA,MAAP,CAAc,EAAd,CAAkBjB,oBAAlB,CAA8BY,WAA9B,CAAlC,CACnBM,aAAAA,CAAoB9B,iBAAA,GAAmBN,MAAOO,CAAAA,MAA1B,CAAmC0B,oBAAnC,CAAsDL,YAG9E,KAAIS,gBAAkB,CACpBC,IAAKhB,QAAmBgB,CAAAA,GAAxBA,CAA8BF,YAAkBE,CAAAA,GAAhDA,CAAsD1B,QAAc0B,CAAAA,GADhD,CAEpBC,OAAQH,YAAkBG,CAAAA,MAA1BA,CAAmCjB,QAAmBiB,CAAAA,MAAtDA,CAA+D3B,QAAc2B,CAAAA,MAFzD,CAGpBC,KAAMlB,QAAmBkB,CAAAA,IAAzBA,CAAgCJ,YAAkBI,CAAAA,IAAlDA,CAAyD5B,QAAc4B,CAAAA,IAHnD;AAIpBC,MAAOL,YAAkBK,CAAAA,KAAzBA,CAAiCnB,QAAmBmB,CAAAA,KAApDA,CAA4D7B,QAAc6B,CAAAA,KAJtD,CAMlBC,MAAAA,CAAajD,KAAMkD,CAAAA,aAAcC,CAAAA,MAErC,IAAItC,iBAAJ,GAAuBN,MAAOO,CAAAA,MAA9B,EAAwCmC,KAAxC,CAAoD,CAClD,IAAIE,OAASF,KAAA,CAAW7C,OAAX,CACbR,OAAOwD,CAAAA,IAAP,CAAYR,eAAZ,CAA6BS,CAAAA,OAA7B,CAAqC,QAAS,CAACC,GAAD,CAAM,CAClD,IAAIC,SAAyD,CAA9C,EAAA,CAAChD,MAAOyC,CAAAA,KAAR,CAAezC,MAAOuC,CAAAA,MAAtB,CAA8BU,CAAAA,OAA9B,CAAsCF,GAAtC,CAAA,CAAkD,CAAlD,CAAsD,EAArE,CACIG,KAAmD,CAA5C,EAAA,CAAClD,MAAOsC,CAAAA,GAAR,CAAatC,MAAOuC,CAAAA,MAApB,CAA4BU,CAAAA,OAA5B,CAAoCF,GAApC,CAAA,CAAgD,GAAhD,CAAsD,GACjEV,gBAAA,CAAgBU,GAAhB,CAAA,EAAwBH,MAAA,CAAOM,IAAP,CAAxB,CAAuCF,QAHW,CAApD,CAFkD,CASpD,MAAOX,gBAnD+B,CArBxC,KAAId,iBAAmBrC,sBAAA,CAAuBH,OAAA,CAAQ,kEAAR,CAAvB,CAAvB;AAEI4C,oBAAsBzC,sBAAA,CAAuBH,OAAA,CAAQ,qEAAR,CAAvB,CAF1B,CAII8C,uBAAyB3C,sBAAA,CAAuBH,OAAA,CAAQ,wEAAR,CAAvB,CAJ7B,CAMIgD,gBAAkB7C,sBAAA,CAAuBH,OAAA,CAAQ,6DAAR,CAAvB,CANtB,CAQImD,kBAAoBhD,sBAAA,CAAuBH,OAAA,CAAQ,+DAAR,CAAvB,CARxB,CAUIiB,OAASjB,OAAA,CAAQ,8CAAR,CAVb;AAYIyC,YAAczC,OAAA,CAAQ,6DAAR,CAZlB,CAcI8B,oBAAsB3B,sBAAA,CAAuBH,OAAA,CAAQ,iEAAR,CAAvB,CAd1B,CAgBI+B,iBAAmB5B,sBAAA,CAAuBH,OAAA,CAAQ,8DAAR,CAAvB,CAxBiG;\",\n\"sources\":[\"node_modules/@popperjs/core/lib/utils/detectOverflow.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$popperjs$core$lib$utils$detectOverflow\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = detectOverflow;\\n\\nvar _getClippingRect = _interopRequireDefault(require(\\\"../dom-utils/getClippingRect.js\\\"));\\n\\nvar _getDocumentElement = _interopRequireDefault(require(\\\"../dom-utils/getDocumentElement.js\\\"));\\n\\nvar _getBoundingClientRect = _interopRequireDefault(require(\\\"../dom-utils/getBoundingClientRect.js\\\"));\\n\\nvar _computeOffsets = _interopRequireDefault(require(\\\"./computeOffsets.js\\\"));\\n\\nvar _rectToClientRect = _interopRequireDefault(require(\\\"./rectToClientRect.js\\\"));\\n\\nvar _enums = require(\\\"../enums.js\\\");\\n\\nvar _instanceOf = require(\\\"../dom-utils/instanceOf.js\\\");\\n\\nvar _mergePaddingObject = _interopRequireDefault(require(\\\"./mergePaddingObject.js\\\"));\\n\\nvar _expandToHashMap = _interopRequireDefault(require(\\\"./expandToHashMap.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n// eslint-disable-next-line import/no-unused-modules\\nfunction detectOverflow(state, options) {\\n  if (options === void 0) {\\n    options = {};\\n  }\\n\\n  var _options = options,\\n      _options$placement = _options.placement,\\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\\n      _options$boundary = _options.boundary,\\n      boundary = _options$boundary === void 0 ? _enums.clippingParents : _options$boundary,\\n      _options$rootBoundary = _options.rootBoundary,\\n      rootBoundary = _options$rootBoundary === void 0 ? _enums.viewport : _options$rootBoundary,\\n      _options$elementConte = _options.elementContext,\\n      elementContext = _options$elementConte === void 0 ? _enums.popper : _options$elementConte,\\n      _options$altBoundary = _options.altBoundary,\\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\\n      _options$padding = _options.padding,\\n      padding = _options$padding === void 0 ? 0 : _options$padding;\\n  var paddingObject = (0, _mergePaddingObject[\\\"default\\\"])(typeof padding !== 'number' ? padding : (0, _expandToHashMap[\\\"default\\\"])(padding, _enums.basePlacements));\\n  var altContext = elementContext === _enums.popper ? _enums.reference : _enums.popper;\\n  var popperRect = state.rects.popper;\\n  var element = state.elements[altBoundary ? altContext : elementContext];\\n  var clippingClientRect = (0, _getClippingRect[\\\"default\\\"])((0, _instanceOf.isElement)(element) ? element : element.contextElement || (0, _getDocumentElement[\\\"default\\\"])(state.elements.popper), boundary, rootBoundary);\\n  var referenceClientRect = (0, _getBoundingClientRect[\\\"default\\\"])(state.elements.reference);\\n  var popperOffsets = (0, _computeOffsets[\\\"default\\\"])({\\n    reference: referenceClientRect,\\n    element: popperRect,\\n    strategy: 'absolute',\\n    placement: placement\\n  });\\n  var popperClientRect = (0, _rectToClientRect[\\\"default\\\"])(Object.assign({}, popperRect, popperOffsets));\\n  var elementClientRect = elementContext === _enums.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\\n  // 0 or negative = within the clipping rect\\n\\n  var overflowOffsets = {\\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\\n  };\\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\\n\\n  if (elementContext === _enums.popper && offsetData) {\\n    var offset = offsetData[placement];\\n    Object.keys(overflowOffsets).forEach(function (key) {\\n      var multiply = [_enums.right, _enums.bottom].indexOf(key) >= 0 ? 1 : -1;\\n      var axis = [_enums.top, _enums.bottom].indexOf(key) >= 0 ? 'y' : 'x';\\n      overflowOffsets[key] += offset[axis] * multiply;\\n    });\\n  }\\n\\n  return overflowOffsets;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"detectOverflow\",\"state\",\"options\",\"_options\",\"_options$placement\",\"placement\",\"_options$boundary\",\"boundary\",\"_enums\",\"clippingParents\",\"_options$rootBoundary\",\"rootBoundary\",\"viewport\",\"_options$elementConte\",\"elementContext\",\"popper\",\"_options$altBoundary\",\"altBoundary\",\"_options$padding\",\"padding\",\"paddingObject\",\"_mergePaddingObject\",\"_expandToHashMap\",\"basePlacements\",\"altContext\",\"reference\",\"popperRect\",\"rects\",\"element\",\"elements\",\"clippingClientRect\",\"_getClippingRect\",\"_instanceOf\",\"isElement\",\"contextElement\",\"_getDocumentElement\",\"referenceClientRect\",\"_getBoundingClientRect\",\"popperOffsets\",\"_computeOffsets\",\"strategy\",\"popperClientRect\",\"_rectToClientRect\",\"assign\",\"elementClientRect\",\"overflowOffsets\",\"top\",\"bottom\",\"left\",\"right\",\"offsetData\",\"modifiersData\",\"offset\",\"keys\",\"forEach\",\"key\",\"multiply\",\"indexOf\",\"axis\"]\n}\n"]