["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@react-three/drei/core/meshBounds.js"],"~:js","shadow$provide.module$node_modules$$react_three$drei$core$meshBounds=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.meshBounds=function(raycaster,intersects){var geometry=this.geometry,matrixWorld=this.matrixWorld;void 0!==this.material&&(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere.copy(geometry.boundingSphere),_sphere.applyMatrix4(matrixWorld),!1!==raycaster.ray.intersectsSphere(_sphere)&&(_inverseMatrix.copy(matrixWorld).invert(),\n_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix),null!==geometry.boundingBox&&null===_ray.intersectBox(geometry.boundingBox,_vA)||intersects.push({distance:_vA.distanceTo(raycaster.ray.origin),point:_vA.clone(),object:this})))};global=require(\"module$node_modules$three$build$three_module\");var _inverseMatrix=new global.Matrix4,_ray=new global.Ray,_sphere=new global.Sphere,_vA=new global.Vector3}","~:source","shadow$provide[\"module$node_modules$$react_three$drei$core$meshBounds\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.meshBounds = meshBounds;\n\nvar _three = require(\"three\");\n\nvar _inverseMatrix = new _three.Matrix4();\n\nvar _ray = new _three.Ray();\n\nvar _sphere = new _three.Sphere();\n\nvar _vA = new _three.Vector3();\n\nfunction meshBounds(raycaster, intersects) {\n  var geometry = this.geometry;\n  var material = this.material;\n  var matrixWorld = this.matrixWorld;\n  if (material === undefined) return; // Checking boundingSphere distance to ray\n\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n  _sphere.copy(geometry.boundingSphere);\n\n  _sphere.applyMatrix4(matrixWorld);\n\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n  _inverseMatrix.copy(matrixWorld).invert();\n\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\n  intersects.push({\n    distance: _vA.distanceTo(raycaster.ray.origin),\n    point: _vA.clone(),\n    object: this\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["object","meshBounds","__esModule","value","distance","point"]],"~:compiled-at",1630917516215,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$react_three$drei$core$meshBounds.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAYAA,QAAmB,CAACC,SAAD,CAAYC,UAAZ,CAAwB,CACzC,IAAIC,SAAW,IAAKA,CAAAA,QAApB,CAEIC,YAAc,IAAKA,CAAAA,WACNC,KAAAA,EAAjB,GAFe,IAAKC,CAAAA,QAEpB,GAEgC,IAMhC,GANIH,QAASI,CAAAA,cAMb,EANsCJ,QAASK,CAAAA,qBAAT,EAMtC,CAJAC,OAAQC,CAAAA,IAAR,CAAaP,QAASI,CAAAA,cAAtB,CAIA,CAFAE,OAAQE,CAAAA,YAAR,CAAqBP,WAArB,CAEA,CAAgD,CAAA,CAAhD,GAAIH,SAAUW,CAAAA,GAAIC,CAAAA,gBAAd,CAA+BJ,OAA/B,CAAJ,GAEAK,cAAeJ,CAAAA,IAAf,CAAoBN,WAApB,CAAiCW,CAAAA,MAAjC,EAKA;AAHAC,IAAKN,CAAAA,IAAL,CAAUT,SAAUW,CAAAA,GAApB,CAAyBD,CAAAA,YAAzB,CAAsCG,cAAtC,CAGA,CAA6B,IAA7B,GAAIX,QAASc,CAAAA,WAAb,EAAsF,IAAtF,GAAqCD,IAAKE,CAAAA,YAAL,CAAkBf,QAASc,CAAAA,WAA3B,CAAwCE,GAAxC,CAArC,EACAjB,UAAWkB,CAAAA,IAAX,CAAgB,CACdC,SAAUF,GAAIG,CAAAA,UAAJ,CAAerB,SAAUW,CAAAA,GAAIW,CAAAA,MAA7B,CADI,CAEdC,MAAOL,GAAIM,CAAAA,KAAJ,EAFO,CAGdC,OAAQ,IAHM,CAAhB,CARA,CARA,CAJyC,CAVvCC,OAAAA,CAASjC,OAAA,CAAQ,8CAAR,CAEb,KAAIoB,eAAiB,IAAIa,MAAOC,CAAAA,OAAhC,CAEIZ,KAAO,IAAIW,MAAOE,CAAAA,GAFtB,CAIIpB,QAAU,IAAIkB,MAAOG,CAAAA,MAJzB,CAMIX,IAAM,IAAIQ,MAAOI,CAAAA,OAhB6F;\",\n\"sources\":[\"node_modules/@react-three/drei/core/meshBounds.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$react_three$drei$core$meshBounds\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.meshBounds = meshBounds;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _inverseMatrix = new _three.Matrix4();\\n\\nvar _ray = new _three.Ray();\\n\\nvar _sphere = new _three.Sphere();\\n\\nvar _vA = new _three.Vector3();\\n\\nfunction meshBounds(raycaster, intersects) {\\n  var geometry = this.geometry;\\n  var material = this.material;\\n  var matrixWorld = this.matrixWorld;\\n  if (material === undefined) return; // Checking boundingSphere distance to ray\\n\\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\\n\\n  _sphere.copy(geometry.boundingSphere);\\n\\n  _sphere.applyMatrix4(matrixWorld);\\n\\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\\n\\n  _inverseMatrix.copy(matrixWorld).invert();\\n\\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\\n\\n\\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\\n  intersects.push({\\n    distance: _vA.distanceTo(raycaster.ray.origin),\\n    point: _vA.clone(),\\n    object: this\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"meshBounds\",\"raycaster\",\"intersects\",\"geometry\",\"matrixWorld\",\"undefined\",\"material\",\"boundingSphere\",\"computeBoundingSphere\",\"_sphere\",\"copy\",\"applyMatrix4\",\"ray\",\"intersectsSphere\",\"_inverseMatrix\",\"invert\",\"_ray\",\"boundingBox\",\"intersectBox\",\"_vA\",\"push\",\"distance\",\"distanceTo\",\"origin\",\"point\",\"clone\",\"object\",\"_three\",\"Matrix4\",\"Ray\",\"Sphere\",\"Vector3\"]\n}\n"]