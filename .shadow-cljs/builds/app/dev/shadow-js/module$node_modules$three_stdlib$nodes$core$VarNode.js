["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/core/VarNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$core$VarNode=function(global,require,module,exports){function VarNode(type,value){_Node.Node.call(this,type);this.value=value}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.VarNode=VarNode;var _Node=require(\"module$node_modules$three_stdlib$nodes$core$Node\");VarNode.prototype=Object.create(_Node.Node.prototype);VarNode.prototype.constructor=VarNode;VarNode.prototype.nodeType=\"Var\";VarNode.prototype.getType=function(builder){return builder.getTypeByFormat(this.type)};\nVarNode.prototype.generate=function(builder,output){var varying=builder.getVar(this.uuid,this.type);this.value&&builder.isShader(\"vertex\")&&builder.addNodeCode(varying.name+\" \\x3d \"+this.value.build(builder,this.getType(builder))+\";\");return builder.format(varying.name,this.getType(builder),output)};VarNode.prototype.copy=function(source){_Node.Node.prototype.copy.call(this,source);this.type=source.type;this.value=source.value;return this};VarNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);\ndata||(data=this.createJSONNode(meta),data.type=this.type,this.value&&(data.value=this.value.toJSON(meta).uuid));return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$core$VarNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VarNode = VarNode;\n\nvar _Node = require(\"./Node.js\");\n\nfunction VarNode(type, value) {\n  _Node.Node.call(this, type);\n\n  this.value = value;\n}\n\nVarNode.prototype = Object.create(_Node.Node.prototype);\nVarNode.prototype.constructor = VarNode;\nVarNode.prototype.nodeType = 'Var';\n\nVarNode.prototype.getType = function (builder) {\n  return builder.getTypeByFormat(this.type);\n};\n\nVarNode.prototype.generate = function (builder, output) {\n  var varying = builder.getVar(this.uuid, this.type);\n\n  if (this.value && builder.isShader('vertex')) {\n    builder.addNodeCode(varying.name + ' = ' + this.value.build(builder, this.getType(builder)) + ';');\n  }\n\n  return builder.format(varying.name, this.getType(builder), output);\n};\n\nVarNode.prototype.copy = function (source) {\n  _Node.Node.prototype.copy.call(this, source);\n\n  this.type = source.type;\n  this.value = source.value;\n  return this;\n};\n\nVarNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.type = this.type;\n    if (this.value) data.value = this.value.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_stdlib$nodes$core$Node"]],"~:properties",["^5",["getType","copy","prototype","__esModule","generate","nodeType","value","type","VarNode","constructor","toJSON"]],"~:compiled-at",1630917515251,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$core$VarNode.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUhHC,QAASA,QAAO,CAACC,IAAD,CAAOC,KAAP,CAAc,CAC5BC,KAAMC,CAAAA,IAAKC,CAAAA,IAAX,CAAgB,IAAhB,CAAsBJ,IAAtB,CAEA,KAAKC,CAAAA,KAAL,CAAaA,KAHe,CAP9BI,MAAOC,CAAAA,cAAP,CAAsBR,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQC,CAAAA,OAAR,CAAkBA,OAElB,KAAIG,MAAQN,OAAA,CAAQ,kDAAR,CAQZG,QAAQQ,CAAAA,SAAR,CAAoBF,MAAOG,CAAAA,MAAP,CAAcN,KAAMC,CAAAA,IAAKI,CAAAA,SAAzB,CACpBR,QAAQQ,CAAAA,SAAUE,CAAAA,WAAlB,CAAgCV,OAChCA,QAAQQ,CAAAA,SAAUG,CAAAA,QAAlB,CAA6B,KAE7BX,QAAQQ,CAAAA,SAAUI,CAAAA,OAAlB,CAA4BC,QAAS,CAACC,OAAD,CAAU,CAC7C,MAAOA,QAAQC,CAAAA,eAAR,CAAwB,IAAKd,CAAAA,IAA7B,CADsC,CAI/CD;OAAQQ,CAAAA,SAAUQ,CAAAA,QAAlB,CAA6BC,QAAS,CAACH,OAAD,CAAUI,MAAV,CAAkB,CACtD,IAAIC,QAAUL,OAAQM,CAAAA,MAAR,CAAe,IAAKC,CAAAA,IAApB,CAA0B,IAAKpB,CAAAA,IAA/B,CAEV,KAAKC,CAAAA,KAAT,EAAkBY,OAAQQ,CAAAA,QAAR,CAAiB,QAAjB,CAAlB,EACER,OAAQS,CAAAA,WAAR,CAAoBJ,OAAQK,CAAAA,IAA5B,CAAmC,QAAnC,CAA2C,IAAKtB,CAAAA,KAAMuB,CAAAA,KAAX,CAAiBX,OAAjB,CAA0B,IAAKF,CAAAA,OAAL,CAAaE,OAAb,CAA1B,CAA3C,CAA8F,GAA9F,CAGF,OAAOA,QAAQY,CAAAA,MAAR,CAAeP,OAAQK,CAAAA,IAAvB,CAA6B,IAAKZ,CAAAA,OAAL,CAAaE,OAAb,CAA7B,CAAoDI,MAApD,CAP+C,CAUxDlB,QAAQQ,CAAAA,SAAUmB,CAAAA,IAAlB,CAAyBC,QAAS,CAACC,MAAD,CAAS,CACzC1B,KAAMC,CAAAA,IAAKI,CAAAA,SAAUmB,CAAAA,IAAKtB,CAAAA,IAA1B,CAA+B,IAA/B,CAAqCwB,MAArC,CAEA,KAAK5B,CAAAA,IAAL,CAAY4B,MAAO5B,CAAAA,IACnB,KAAKC,CAAAA,KAAL,CAAa2B,MAAO3B,CAAAA,KACpB,OAAO,KALkC,CAQ3CF,QAAQQ,CAAAA,SAAUsB,CAAAA,MAAlB,CAA2BC,QAAS,CAACC,IAAD,CAAO,CACzC,IAAIC,KAAO,IAAKC,CAAAA,WAAL,CAAiBF,IAAjB,CAENC;IAAL,GACEA,IAEA,CAFO,IAAKE,CAAAA,cAAL,CAAoBH,IAApB,CAEP,CADAC,IAAKhC,CAAAA,IACL,CADY,IAAKA,CAAAA,IACjB,CAAI,IAAKC,CAAAA,KAAT,GAAgB+B,IAAK/B,CAAAA,KAArB,CAA6B,IAAKA,CAAAA,KAAM4B,CAAAA,MAAX,CAAkBE,IAAlB,CAAwBX,CAAAA,IAArD,CAHF,CAMA,OAAOY,KATkC,CA1CqE;\",\n\"sources\":[\"node_modules/three-stdlib/nodes/core/VarNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$core$VarNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.VarNode = VarNode;\\n\\nvar _Node = require(\\\"./Node.js\\\");\\n\\nfunction VarNode(type, value) {\\n  _Node.Node.call(this, type);\\n\\n  this.value = value;\\n}\\n\\nVarNode.prototype = Object.create(_Node.Node.prototype);\\nVarNode.prototype.constructor = VarNode;\\nVarNode.prototype.nodeType = 'Var';\\n\\nVarNode.prototype.getType = function (builder) {\\n  return builder.getTypeByFormat(this.type);\\n};\\n\\nVarNode.prototype.generate = function (builder, output) {\\n  var varying = builder.getVar(this.uuid, this.type);\\n\\n  if (this.value && builder.isShader('vertex')) {\\n    builder.addNodeCode(varying.name + ' = ' + this.value.build(builder, this.getType(builder)) + ';');\\n  }\\n\\n  return builder.format(varying.name, this.getType(builder), output);\\n};\\n\\nVarNode.prototype.copy = function (source) {\\n  _Node.Node.prototype.copy.call(this, source);\\n\\n  this.type = source.type;\\n  this.value = source.value;\\n  return this;\\n};\\n\\nVarNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.type = this.type;\\n    if (this.value) data.value = this.value.toJSON(meta).uuid;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"VarNode\",\"type\",\"value\",\"_Node\",\"Node\",\"call\",\"Object\",\"defineProperty\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"getType\",\"VarNode.prototype.getType\",\"builder\",\"getTypeByFormat\",\"generate\",\"VarNode.prototype.generate\",\"output\",\"varying\",\"getVar\",\"uuid\",\"isShader\",\"addNodeCode\",\"name\",\"build\",\"format\",\"copy\",\"VarNode.prototype.copy\",\"source\",\"toJSON\",\"VarNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\"]\n}\n"]