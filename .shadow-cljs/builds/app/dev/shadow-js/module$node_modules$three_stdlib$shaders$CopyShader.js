["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/shaders/CopyShader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$shaders$CopyShader=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.CopyShader=void 0;exports.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:\"varying vec2 vUv;\\nvoid main() {\\n\\tvUv \\x3d uv;\\n\\tgl_Position \\x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform float opacity;\\nuniform sampler2D tDiffuse;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texel \\x3d texture2D( tDiffuse, vUv );\\n\\tgl_FragColor \\x3d opacity * texel;\\n}\"}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$shaders$CopyShader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyShader = void 0;\n\n/**\n * Full-screen textured quad shader\n */\nvar CopyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float opacity;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tgl_FragColor = opacity * texel;', '}'].join('\\n')\n};\nexports.CopyShader = CopyShader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["fragmentShader","__esModule","tDiffuse","vertexShader","value","CopyShader","uniforms","opacity"]],"~:compiled-at",1630917515495,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$shaders$CopyShader.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAiB1BJ,QAAQI,CAAAA,UAAR,CAZiBA,CACfC,SAAU,CACRC,SAAU,CACRH,MAAO,IADC,CADF,CAIRI,QAAS,CACPJ,MAAO,CADA,CAJD,CADKC,CASfI,aAAiJ,qIATlIJ,CAUfK,eAAiM,+KAVlLL,CAX+F;\",\n\"sources\":[\"node_modules/three-stdlib/shaders/CopyShader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$shaders$CopyShader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CopyShader = void 0;\\n\\n/**\\n * Full-screen textured quad shader\\n */\\nvar CopyShader = {\\n  uniforms: {\\n    tDiffuse: {\\n      value: null\\n    },\\n    opacity: {\\n      value: 1.0\\n    }\\n  },\\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\\tvUv = uv;', '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\\\n'),\\n  fragmentShader: ['uniform float opacity;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\\tvec4 texel = texture2D( tDiffuse, vUv );', '\\tgl_FragColor = opacity * texel;', '}'].join('\\\\n')\\n};\\nexports.CopyShader = CopyShader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"CopyShader\",\"uniforms\",\"tDiffuse\",\"opacity\",\"vertexShader\",\"fragmentShader\"]\n}\n"]