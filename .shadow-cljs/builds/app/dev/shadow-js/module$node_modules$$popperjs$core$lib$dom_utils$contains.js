["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@popperjs/core/lib/dom-utils/contains.js"],"~:js","shadow$provide.module$node_modules$$popperjs$core$lib$dom_utils$contains=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(parent,child){var rootNode=child.getRootNode&&child.getRootNode();if(parent.contains(child))return!0;if(rootNode&&(0,_instanceOf.isShadowRoot)(rootNode)){do{if(child&&parent.isSameNode(child))return!0;child=child.parentNode||child.host}while(child)}return!1};var _instanceOf=require(\"module$node_modules$$popperjs$core$lib$dom_utils$instanceOf\")}","~:source","shadow$provide[\"module$node_modules$$popperjs$core$lib$dom_utils$contains\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = contains;\n\nvar _instanceOf = require(\"./instanceOf.js\");\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && (0, _instanceOf.isShadowRoot)(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$popperjs$core$lib$dom_utils$instanceOf"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1630917514052,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$popperjs$core$lib$dom_utils$contains.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQ,SAAR,CAAA,CAIAI,QAAiB,CAACC,MAAD,CAASC,KAAT,CAAgB,CAC/B,IAAIC,SAAWD,KAAME,CAAAA,WAAjBD,EAAgCD,KAAME,CAAAA,WAAN,EAEpC,IAAIH,MAAOD,CAAAA,QAAP,CAAgBE,KAAhB,CAAJ,CACE,MAAO,CAAA,CAEJ,IAAIC,QAAJ,EAAgB,CAAC,CAAA,CAAGE,WAAYC,CAAAA,YAAhB,EAA8BH,QAA9B,CAAhB,EAGD,EAAG,CACD,GAAII,KAAJ,EAAYN,MAAOO,CAAAA,UAAP,CAAkBD,KAAlB,CAAZ,CACE,MAAO,CAAA,CAITA,MAAA,CAAOA,KAAKE,CAAAA,UAAZ,EAA0BF,KAAKG,CAAAA,IAN9B,CAAH,MAOSH,KAPT,CAHC,CAcL,MAAO,CAAA,CApBwB,CAFjC,KAAIF,YAAcX,OAAA,CAAQ,6DAAR,CARoG;\",\n\"sources\":[\"node_modules/@popperjs/core/lib/dom-utils/contains.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$popperjs$core$lib$dom_utils$contains\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = contains;\\n\\nvar _instanceOf = require(\\\"./instanceOf.js\\\");\\n\\nfunction contains(parent, child) {\\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\\n\\n  if (parent.contains(child)) {\\n    return true;\\n  } // then fallback to custom implementation with Shadow DOM support\\n  else if (rootNode && (0, _instanceOf.isShadowRoot)(rootNode)) {\\n      var next = child;\\n\\n      do {\\n        if (next && parent.isSameNode(next)) {\\n          return true;\\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\\n\\n\\n        next = next.parentNode || next.host;\\n      } while (next);\\n    } // Give up, the result is false\\n\\n\\n  return false;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"contains\",\"parent\",\"child\",\"rootNode\",\"getRootNode\",\"_instanceOf\",\"isShadowRoot\",\"next\",\"isSameNode\",\"parentNode\",\"host\"]\n}\n"]