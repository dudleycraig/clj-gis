["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js"],"~:js","shadow$provide.module$node_modules$$popperjs$core$lib$dom_utils$isScrollParent=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(element){element=(0,_getComputedStyle2[\"default\"])(element);return/auto|scroll|overlay|hidden/.test(element.overflow+element.overflowY+element.overflowX)};var _getComputedStyle2=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getComputedStyle\"))}","~:source","shadow$provide[\"module$node_modules$$popperjs$core$lib$dom_utils$isScrollParent\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = isScrollParent;\n\nvar _getComputedStyle2 = _interopRequireDefault(require(\"./getComputedStyle.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = (0, _getComputedStyle2[\"default\"])(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$popperjs$core$lib$dom_utils$getComputedStyle","~$shadow.js"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1630917514079,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$popperjs$core$lib$dom_utils$isScrollParent.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQ,SAAR,CAAA,CAMAI,QAAuB,CAACC,OAAD,CAAU,CAE3BC,OAAAA,CAAoB,CAAC,CAAA,CAAGC,kBAAA,CAAmB,SAAnB,CAAJ,EAAmCF,OAAnC,CAKxB,OAAO,4BAA6BG,CAAAA,IAA7B,CAJQF,OAAkBG,CAAAA,QAI1B,CAFSH,OAAkBI,CAAAA,SAE3B,CAHSJ,OAAkBK,CAAAA,SAG3B,CAPwB,CAJjC,KAAIJ,mBAEJK,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAFZ,CAAuBf,OAAA,CAAQ,mEAAR,CAAvB,CARmG;\",\n\"sources\":[\"node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$popperjs$core$lib$dom_utils$isScrollParent\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = isScrollParent;\\n\\nvar _getComputedStyle2 = _interopRequireDefault(require(\\\"./getComputedStyle.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction isScrollParent(element) {\\n  // Firefox wants us to check `-x` and `-y` variations as well\\n  var _getComputedStyle = (0, _getComputedStyle2[\\\"default\\\"])(element),\\n      overflow = _getComputedStyle.overflow,\\n      overflowX = _getComputedStyle.overflowX,\\n      overflowY = _getComputedStyle.overflowY;\\n\\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"isScrollParent\",\"element\",\"_getComputedStyle\",\"_getComputedStyle2\",\"test\",\"overflow\",\"overflowY\",\"overflowX\",\"_interopRequireDefault\",\"obj\",\"__esModule\"]\n}\n"]