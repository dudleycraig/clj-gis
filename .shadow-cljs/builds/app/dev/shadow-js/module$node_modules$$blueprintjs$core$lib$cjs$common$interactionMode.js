["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/common/interactionMode.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$common$interactionMode=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.InteractionModeEngine=void 0;global=function(){function InteractionModeEngine(container,className){var _this=this;this.container=container;this.className=className;this.isRunning=!1;this.handleKeyDown=function(e){9===e.which&&(_this.reset(),_this.container.addEventListener(\"mousedown\",_this.handleMouseDown))};this.handleMouseDown=\nfunction(){_this.reset();_this.container.classList.add(_this.className);_this.container.addEventListener(\"keydown\",_this.handleKeyDown)}}InteractionModeEngine.prototype.isActive=function(){return this.isRunning};InteractionModeEngine.prototype.start=function(){this.container.addEventListener(\"mousedown\",this.handleMouseDown);this.isRunning=!0};InteractionModeEngine.prototype.stop=function(){this.reset();this.isRunning=!1};InteractionModeEngine.prototype.reset=function(){this.container.classList.remove(this.className);\nthis.container.removeEventListener(\"keydown\",this.handleKeyDown);this.container.removeEventListener(\"mousedown\",this.handleMouseDown)};return InteractionModeEngine}();exports.InteractionModeEngine=global}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$common$interactionMode\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractionModeEngine = void 0;\nvar TAB_KEY_CODE = 9;\n/* istanbul ignore next */\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\nvar InteractionModeEngine = /** @class */ (function () {\n    function InteractionModeEngine(container, className) {\n        var _this = this;\n        this.container = container;\n        this.className = className;\n        this.isRunning = false;\n        this.handleKeyDown = function (e) {\n            // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n            // eslint-disable-next-line deprecation/deprecation\n            if (e.which === TAB_KEY_CODE) {\n                _this.reset();\n                _this.container.addEventListener(\"mousedown\", _this.handleMouseDown);\n            }\n        };\n        this.handleMouseDown = function () {\n            _this.reset();\n            _this.container.classList.add(_this.className);\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n            _this.container.addEventListener(\"keydown\", _this.handleKeyDown);\n        };\n    }\n    /** Returns whether the engine is currently running. */\n    InteractionModeEngine.prototype.isActive = function () {\n        return this.isRunning;\n    };\n    /** Enable behavior which applies the given className when in mouse mode. */\n    InteractionModeEngine.prototype.start = function () {\n        this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.isRunning = true;\n    };\n    /** Disable interaction mode behavior and remove className from container. */\n    InteractionModeEngine.prototype.stop = function () {\n        this.reset();\n        this.isRunning = false;\n    };\n    InteractionModeEngine.prototype.reset = function () {\n        this.container.classList.remove(this.className);\n        // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n        this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n        this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n    };\n    return InteractionModeEngine;\n}());\nexports.InteractionModeEngine = InteractionModeEngine;\n//# sourceMappingURL=interactionMode.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["stop","isActive","className","__esModule","InteractionModeEngine","reset","value","start","handleKeyDown","isRunning","handleMouseDown","container"]],"~:compiled-at",1630405504890,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$common$interactionMode.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,oEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBjIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAQjCA,OAAAA,CAAuC,QAAS,EAAG,CACnDA,QAASA,sBAAqB,CAACC,SAAD,CAAYC,SAAZ,CAAuB,CACjD,IAAIC,MAAQ,IACZ,KAAKF,CAAAA,SAAL,CAAiBA,SACjB,KAAKC,CAAAA,SAAL,CAAiBA,SACjB,KAAKE,CAAAA,SAAL,CAAiB,CAAA,CACjB,KAAKC,CAAAA,aAAL,CAAqBC,QAAS,CAACC,CAAD,CAAI,CAbvBC,CAgBP,GAAID,CAAEE,CAAAA,KAAN,GACIN,KAAMO,CAAAA,KAAN,EACA,CAAAP,KAAMF,CAAAA,SAAUU,CAAAA,gBAAhB,CAAiC,WAAjC,CAA8CR,KAAMS,CAAAA,eAApD,CAFJ,CAH8B,CAQlC,KAAKA,CAAAA,eAAL;AAAuBC,QAAS,EAAG,CAC/BV,KAAMO,CAAAA,KAAN,EACAP,MAAMF,CAAAA,SAAUa,CAAAA,SAAUC,CAAAA,GAA1B,CAA8BZ,KAAMD,CAAAA,SAApC,CAEAC,MAAMF,CAAAA,SAAUU,CAAAA,gBAAhB,CAAiC,SAAjC,CAA4CR,KAAME,CAAAA,aAAlD,CAJ+B,CAbc,CAqBrDL,qBAAsBgB,CAAAA,SAAUC,CAAAA,QAAhC,CAA2CC,QAAS,EAAG,CACnD,MAAO,KAAKd,CAAAA,SADuC,CAIvDJ,sBAAsBgB,CAAAA,SAAUG,CAAAA,KAAhC,CAAwCC,QAAS,EAAG,CAChD,IAAKnB,CAAAA,SAAUU,CAAAA,gBAAf,CAAgC,WAAhC,CAA6C,IAAKC,CAAAA,eAAlD,CACA,KAAKR,CAAAA,SAAL,CAAiB,CAAA,CAF+B,CAKpDJ,sBAAsBgB,CAAAA,SAAUK,CAAAA,IAAhC,CAAuCC,QAAS,EAAG,CAC/C,IAAKZ,CAAAA,KAAL,EACA,KAAKN,CAAAA,SAAL,CAAiB,CAAA,CAF8B,CAInDJ,sBAAsBgB,CAAAA,SAAUN,CAAAA,KAAhC,CAAwCa,QAAS,EAAG,CAChD,IAAKtB,CAAAA,SAAUa,CAAAA,SAAUU,CAAAA,MAAzB,CAAgC,IAAKtB,CAAAA,SAArC,CAEA;IAAKD,CAAAA,SAAUwB,CAAAA,mBAAf,CAAmC,SAAnC,CAA8C,IAAKpB,CAAAA,aAAnD,CACA,KAAKJ,CAAAA,SAAUwB,CAAAA,mBAAf,CAAmC,WAAnC,CAAgD,IAAKb,CAAAA,eAArD,CAJgD,CAMpD,OAAOZ,sBAzC4C,CAAZ,EA2C3CJ,QAAQI,CAAAA,qBAAR,CAAgCA,MArEiG;\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/common/interactionMode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$common$interactionMode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/*\\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.InteractionModeEngine = void 0;\\nvar TAB_KEY_CODE = 9;\\n/* istanbul ignore next */\\n/**\\n * A nifty little class that maintains event handlers to add a class to the container element\\n * when entering \\\"mouse mode\\\" (on a `mousedown` event) and remove it when entering \\\"keyboard mode\\\"\\n * (on a `tab` key `keydown` event).\\n */\\nvar InteractionModeEngine = /** @class */ (function () {\\n    function InteractionModeEngine(container, className) {\\n        var _this = this;\\n        this.container = container;\\n        this.className = className;\\n        this.isRunning = false;\\n        this.handleKeyDown = function (e) {\\n            // HACKHACK: https://github.com/palantir/blueprint/issues/4165\\n            // eslint-disable-next-line deprecation/deprecation\\n            if (e.which === TAB_KEY_CODE) {\\n                _this.reset();\\n                _this.container.addEventListener(\\\"mousedown\\\", _this.handleMouseDown);\\n            }\\n        };\\n        this.handleMouseDown = function () {\\n            _this.reset();\\n            _this.container.classList.add(_this.className);\\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\\n            _this.container.addEventListener(\\\"keydown\\\", _this.handleKeyDown);\\n        };\\n    }\\n    /** Returns whether the engine is currently running. */\\n    InteractionModeEngine.prototype.isActive = function () {\\n        return this.isRunning;\\n    };\\n    /** Enable behavior which applies the given className when in mouse mode. */\\n    InteractionModeEngine.prototype.start = function () {\\n        this.container.addEventListener(\\\"mousedown\\\", this.handleMouseDown);\\n        this.isRunning = true;\\n    };\\n    /** Disable interaction mode behavior and remove className from container. */\\n    InteractionModeEngine.prototype.stop = function () {\\n        this.reset();\\n        this.isRunning = false;\\n    };\\n    InteractionModeEngine.prototype.reset = function () {\\n        this.container.classList.remove(this.className);\\n        // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\\n        this.container.removeEventListener(\\\"keydown\\\", this.handleKeyDown);\\n        this.container.removeEventListener(\\\"mousedown\\\", this.handleMouseDown);\\n    };\\n    return InteractionModeEngine;\\n}());\\nexports.InteractionModeEngine = InteractionModeEngine;\\n//# sourceMappingURL=interactionMode.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"InteractionModeEngine\",\"container\",\"className\",\"_this\",\"isRunning\",\"handleKeyDown\",\"this.handleKeyDown\",\"e\",\"TAB_KEY_CODE\",\"which\",\"reset\",\"addEventListener\",\"handleMouseDown\",\"this.handleMouseDown\",\"classList\",\"add\",\"prototype\",\"isActive\",\"InteractionModeEngine.prototype.isActive\",\"start\",\"InteractionModeEngine.prototype.start\",\"stop\",\"InteractionModeEngine.prototype.stop\",\"InteractionModeEngine.prototype.reset\",\"remove\",\"removeEventListener\"]\n}\n"]