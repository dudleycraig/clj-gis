["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/is-arguments/index.js"],"~:js","shadow$provide.module$node_modules$is_arguments$index=function(global,require,module,exports){var hasToStringTag=require(\"module$node_modules$has_tostringtag$shams\")(),$toString=require(\"module$node_modules$call_bind$callBound\")(\"Object.prototype.toString\"),isStandardArguments=function(value){return hasToStringTag&&value&&\"object\"===typeof value&&Symbol.toStringTag in value?!1:\"[object Arguments]\"===$toString(value)};global=function(value){return isStandardArguments(value)?!0:null!==value&&\"object\"===\ntypeof value&&\"number\"===typeof value.length&&0<=value.length&&\"[object Array]\"!==$toString(value)&&\"[object Function]\"===$toString(value.callee)};require=function(){return isStandardArguments(arguments)}();isStandardArguments.isLegacyArguments=global;module.exports=require?isStandardArguments:global}","~:source","shadow$provide[\"module$node_modules$is_arguments$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$call_bind$callBound","~$module$node_modules$has_tostringtag$shams","~$shadow.js"]],"~:properties",["^5",["isLegacyArguments"]],"~:compiled-at",1630405504940,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$is_arguments$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnG,IAAIC,eAAiBH,OAAA,CAAQ,2CAAR,CAAA,EAArB,CAGII,UAFYJ,OAAAK,CAAQ,yCAARA,CAEA,CAAU,2BAAV,CAHhB,CAKIC,oBAAsBA,QAAoB,CAACC,KAAD,CAAQ,CACrD,MAAIJ,eAAJ,EAAsBI,KAAtB,EAAgD,QAAhD,GAA+B,MAAOA,MAAtC,EAA4DC,MAAOC,CAAAA,WAAnE,GAAkFF,MAAlF,CACQ,CAAA,CADR,CAG4B,oBAH5B,GAGOH,SAAA,CAAUG,KAAV,CAJ8C,CAOlDG,OAAAA,CAAoBA,QAAoB,CAACH,KAAD,CAAQ,CACnD,MAAID,oBAAA,CAAoBC,KAApB,CAAJ,CACQ,CAAA,CADR,CAGiB,IAHjB,GAGOA,KAHP,EAIkB,QAJlB;AAIC,MAAOA,MAJR,EAKyB,QALzB,GAKC,MAAOA,MAAMI,CAAAA,MALd,EAMiB,CANjB,EAMCJ,KAAMI,CAAAA,MANP,EAOsB,gBAPtB,GAOCP,SAAA,CAAUG,KAAV,CAPD,EAQ6B,mBAR7B,GAQCH,SAAA,CAAUG,KAAMK,CAAAA,MAAhB,CATkD,CAYhDC,QAAAA,CAA6B,QAAS,EAAG,CAC5C,MAAOP,oBAAA,CAAoBQ,SAApB,CADqC,CAAZ,EAIjCR,oBAAoBI,CAAAA,iBAApB,CAAwCA,MAExCT,OAAOC,CAAAA,OAAP,CAAiBW,OAAA,CAA4BP,mBAA5B,CAAkDI,MAjCgC;\",\n\"sources\":[\"node_modules/is-arguments/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$is_arguments$index\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar hasToStringTag = require('has-tostringtag/shams')();\\nvar callBound = require('call-bind/callBound');\\n\\nvar $toString = callBound('Object.prototype.toString');\\n\\nvar isStandardArguments = function isArguments(value) {\\n\\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\\n\\t\\treturn false;\\n\\t}\\n\\treturn $toString(value) === '[object Arguments]';\\n};\\n\\nvar isLegacyArguments = function isArguments(value) {\\n\\tif (isStandardArguments(value)) {\\n\\t\\treturn true;\\n\\t}\\n\\treturn value !== null &&\\n\\t\\ttypeof value === 'object' &&\\n\\t\\ttypeof value.length === 'number' &&\\n\\t\\tvalue.length >= 0 &&\\n\\t\\t$toString(value) !== '[object Array]' &&\\n\\t\\t$toString(value.callee) === '[object Function]';\\n};\\n\\nvar supportsStandardArguments = (function () {\\n\\treturn isStandardArguments(arguments);\\n}());\\n\\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\\n\\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"hasToStringTag\",\"$toString\",\"callBound\",\"isStandardArguments\",\"value\",\"Symbol\",\"toStringTag\",\"isLegacyArguments\",\"length\",\"callee\",\"supportsStandardArguments\",\"arguments\"]\n}\n"]