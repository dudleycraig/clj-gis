["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/core/StructNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$core$StructNode=function(global,require,module,exports){function StructNode(src){_TempNode.TempNode.call(this);this.parse(src)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.StructNode=StructNode;var _TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\"),declarationRegexp=/^struct\\s*([a-z_0-9]+)\\s*{\\s*((.|\\n)*?)}/gim,propertiesRegexp=/\\s*(\\w*?)\\s*(\\w*?)(=|;)/gim;StructNode.prototype=Object.create(_TempNode.TempNode.prototype);\nStructNode.prototype.constructor=StructNode;StructNode.prototype.nodeType=\"Struct\";StructNode.prototype.getType=function(builder){return builder.getTypeByFormat(this.name)};StructNode.prototype.getInputByName=function(name){for(var i=this.inputs.length;i--;)if(this.inputs[i].name===name)return this.inputs[i]};StructNode.prototype.generate=function(builder,output){return\"source\"===output?this.src+\";\":builder.format(\"( \"+this.src+\" )\",this.getType(builder),output)};StructNode.prototype.parse=function(src){this.src=\nsrc||\"\";this.inputs=[];if(src=declarationRegexp.exec(this.src)){for(var properties=src[2],match;match=propertiesRegexp.exec(properties);)this.inputs.push({type:match[1],name:match[2]});this.name=src[1]}else this.name=\"\";this.type=this.name};StructNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.src=this.src);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$core$StructNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StructNode = StructNode;\n\nvar _TempNode = require(\"./TempNode.js\");\n\nvar declarationRegexp = /^struct\\s*([a-z_0-9]+)\\s*{\\s*((.|\\n)*?)}/gim,\n    propertiesRegexp = /\\s*(\\w*?)\\s*(\\w*?)(\\=|\\;)/gim;\n\nfunction StructNode(src) {\n  _TempNode.TempNode.call(this);\n\n  this.parse(src);\n}\n\nStructNode.prototype = Object.create(_TempNode.TempNode.prototype);\nStructNode.prototype.constructor = StructNode;\nStructNode.prototype.nodeType = 'Struct';\n\nStructNode.prototype.getType = function (builder) {\n  return builder.getTypeByFormat(this.name);\n};\n\nStructNode.prototype.getInputByName = function (name) {\n  var i = this.inputs.length;\n\n  while (i--) {\n    if (this.inputs[i].name === name) {\n      return this.inputs[i];\n    }\n  }\n};\n\nStructNode.prototype.generate = function (builder, output) {\n  if (output === 'source') {\n    return this.src + ';';\n  } else {\n    return builder.format('( ' + this.src + ' )', this.getType(builder), output);\n  }\n};\n\nStructNode.prototype.parse = function (src) {\n  this.src = src || '';\n  this.inputs = [];\n  var declaration = declarationRegexp.exec(this.src);\n\n  if (declaration) {\n    var properties = declaration[2],\n        match;\n\n    while (match = propertiesRegexp.exec(properties)) {\n      this.inputs.push({\n        type: match[1],\n        name: match[2]\n      });\n    }\n\n    this.name = declaration[1];\n  } else {\n    this.name = '';\n  }\n\n  this.type = this.name;\n};\n\nStructNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.src = this.src;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_stdlib$nodes$core$TempNode"]],"~:properties",["^5",["getInputByName","StructNode","getType","prototype","__esModule","generate","src","name","nodeType","value","type","parse","inputs","constructor","toJSON"]],"~:compiled-at",1630917515193,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$core$StructNode.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/core/StructNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$core$StructNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.StructNode = StructNode;\\n\\nvar _TempNode = require(\\\"./TempNode.js\\\");\\n\\nvar declarationRegexp = /^struct\\\\s*([a-z_0-9]+)\\\\s*{\\\\s*((.|\\\\n)*?)}/gim,\\n    propertiesRegexp = /\\\\s*(\\\\w*?)\\\\s*(\\\\w*?)(\\\\=|\\\\;)/gim;\\n\\nfunction StructNode(src) {\\n  _TempNode.TempNode.call(this);\\n\\n  this.parse(src);\\n}\\n\\nStructNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nStructNode.prototype.constructor = StructNode;\\nStructNode.prototype.nodeType = 'Struct';\\n\\nStructNode.prototype.getType = function (builder) {\\n  return builder.getTypeByFormat(this.name);\\n};\\n\\nStructNode.prototype.getInputByName = function (name) {\\n  var i = this.inputs.length;\\n\\n  while (i--) {\\n    if (this.inputs[i].name === name) {\\n      return this.inputs[i];\\n    }\\n  }\\n};\\n\\nStructNode.prototype.generate = function (builder, output) {\\n  if (output === 'source') {\\n    return this.src + ';';\\n  } else {\\n    return builder.format('( ' + this.src + ' )', this.getType(builder), output);\\n  }\\n};\\n\\nStructNode.prototype.parse = function (src) {\\n  this.src = src || '';\\n  this.inputs = [];\\n  var declaration = declarationRegexp.exec(this.src);\\n\\n  if (declaration) {\\n    var properties = declaration[2],\\n        match;\\n\\n    while (match = propertiesRegexp.exec(properties)) {\\n      this.inputs.push({\\n        type: match[1],\\n        name: match[2]\\n      });\\n    }\\n\\n    this.name = declaration[1];\\n  } else {\\n    this.name = '';\\n  }\\n\\n  this.type = this.name;\\n};\\n\\nStructNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.src = this.src;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"StructNode\",\"src\",\"_TempNode\",\"TempNode\",\"call\",\"parse\",\"Object\",\"defineProperty\",\"value\",\"declarationRegexp\",\"propertiesRegexp\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"getType\",\"StructNode.prototype.getType\",\"builder\",\"getTypeByFormat\",\"name\",\"getInputByName\",\"StructNode.prototype.getInputByName\",\"i\",\"inputs\",\"length\",\"generate\",\"StructNode.prototype.generate\",\"output\",\"format\",\"StructNode.prototype.parse\",\"declaration\",\"exec\",\"properties\",\"match\",\"push\",\"type\",\"toJSON\",\"StructNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\"]\n}\n"]