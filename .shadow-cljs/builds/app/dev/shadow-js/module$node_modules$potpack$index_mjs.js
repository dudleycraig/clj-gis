["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/potpack/index.mjs"],"~:js","shadow$provide.module$node_modules$potpack$index_mjs=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(boxes){var area=0,maxWidth=0,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=boxes[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var box=_step.value;area+=box.w*box.h;maxWidth=Math.max(maxWidth,box.w)}}catch(err){_didIteratorError=\n!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator[\"return\"])_iterator[\"return\"]()}finally{if(_didIteratorError)throw _iteratorError;}}boxes.sort(function(a,b){return b.h-a.h});maxWidth=[{x:0,y:0,w:Math.max(Math.ceil(Math.sqrt(area/.95)),maxWidth),h:Infinity}];_didIteratorError=_iteratorNormalCompletion=0;_iteratorError=!0;_iterator=!1;_step=void 0;try{for(var _iterator2=boxes[Symbol.iterator](),_step2;!(_iteratorError=(_step2=_iterator2.next()).done);_iteratorError=\n!0)for(var _box=_step2.value,i=maxWidth.length-1;0<=i;i--){var space=maxWidth[i];if(!(_box.w>space.w||_box.h>space.h)){_box.x=space.x;_box.y=space.y;_didIteratorError=Math.max(_didIteratorError,_box.y+_box.h);_iteratorNormalCompletion=Math.max(_iteratorNormalCompletion,_box.x+_box.w);if(_box.w===space.w&&_box.h===space.h){var last=maxWidth.pop();i<maxWidth.length&&(maxWidth[i]=last)}else _box.h===space.h?(space.x+=_box.w,space.w-=_box.w):(_box.w!==space.w&&maxWidth.push({x:space.x+_box.w,y:space.y,\nw:space.w-_box.w,h:_box.h}),space.y+=_box.h,space.h-=_box.h);break}}}catch(err){_iterator=!0,_step=err}finally{try{if(!_iteratorError&&null!=_iterator2[\"return\"])_iterator2[\"return\"]()}finally{if(_iterator)throw _step;}}return{w:_iteratorNormalCompletion,h:_didIteratorError,fill:area/(_iteratorNormalCompletion*_didIteratorError)||0}}}","~:source","shadow$provide[\"module$node_modules$potpack$index_mjs\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = potpack;\n\nfunction potpack(boxes) {\n  // calculate total box area and maximum box width\n  var area = 0;\n  var maxWidth = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = boxes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var box = _step.value;\n      area += box.w * box.h;\n      maxWidth = Math.max(maxWidth, box.w);\n    } // sort the boxes for insertion by height, descending\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  boxes.sort(function (a, b) {\n    return b.h - a.h;\n  }); // aim for a squarish resulting container,\n  // slightly adjusted for sub-100% space utilization\n\n  var startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth); // start with a single empty space, unbounded at the bottom\n\n  var spaces = [{\n    x: 0,\n    y: 0,\n    w: startWidth,\n    h: Infinity\n  }];\n  var width = 0;\n  var height = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = boxes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _box = _step2.value;\n\n      // look through spaces backwards so that we check smaller spaces first\n      for (var i = spaces.length - 1; i >= 0; i--) {\n        var space = spaces[i]; // look for empty spaces that can accommodate the current box\n\n        if (_box.w > space.w || _box.h > space.h) continue; // found the space; add the box to its top-left corner\n        // |-------|-------|\n        // |  box  |       |\n        // |_______|       |\n        // |         space |\n        // |_______________|\n\n        _box.x = space.x;\n        _box.y = space.y;\n        height = Math.max(height, _box.y + _box.h);\n        width = Math.max(width, _box.x + _box.w);\n\n        if (_box.w === space.w && _box.h === space.h) {\n          // space matches the box exactly; remove it\n          var last = spaces.pop();\n          if (i < spaces.length) spaces[i] = last;\n        } else if (_box.h === space.h) {\n          // space matches the box height; update it accordingly\n          // |-------|---------------|\n          // |  box  | updated space |\n          // |_______|_______________|\n          space.x += _box.w;\n          space.w -= _box.w;\n        } else if (_box.w === space.w) {\n          // space matches the box width; update it accordingly\n          // |---------------|\n          // |      box      |\n          // |_______________|\n          // | updated space |\n          // |_______________|\n          space.y += _box.h;\n          space.h -= _box.h;\n        } else {\n          // otherwise the box splits the space into two spaces\n          // |-------|-----------|\n          // |  box  | new space |\n          // |_______|___________|\n          // | updated space     |\n          // |___________________|\n          spaces.push({\n            x: space.x + _box.w,\n            y: space.y,\n            w: space.w - _box.w,\n            h: _box.h\n          });\n          space.y += _box.h;\n          space.h -= _box.h;\n        }\n\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    w: width,\n    // container width\n    h: height,\n    // container height\n    fill: area / (width * height) || 0 // space utilization\n\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["w","x","__esModule","value","fill","y","h"]],"~:compiled-at",1630917515130,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$potpack$index_mjs.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/potpack/index.mjs\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$potpack$index_mjs\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = potpack;\\n\\nfunction potpack(boxes) {\\n  // calculate total box area and maximum box width\\n  var area = 0;\\n  var maxWidth = 0;\\n  var _iteratorNormalCompletion = true;\\n  var _didIteratorError = false;\\n  var _iteratorError = undefined;\\n\\n  try {\\n    for (var _iterator = boxes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n      var box = _step.value;\\n      area += box.w * box.h;\\n      maxWidth = Math.max(maxWidth, box.w);\\n    } // sort the boxes for insertion by height, descending\\n\\n  } catch (err) {\\n    _didIteratorError = true;\\n    _iteratorError = err;\\n  } finally {\\n    try {\\n      if (!_iteratorNormalCompletion && _iterator[\\\"return\\\"] != null) {\\n        _iterator[\\\"return\\\"]();\\n      }\\n    } finally {\\n      if (_didIteratorError) {\\n        throw _iteratorError;\\n      }\\n    }\\n  }\\n\\n  boxes.sort(function (a, b) {\\n    return b.h - a.h;\\n  }); // aim for a squarish resulting container,\\n  // slightly adjusted for sub-100% space utilization\\n\\n  var startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth); // start with a single empty space, unbounded at the bottom\\n\\n  var spaces = [{\\n    x: 0,\\n    y: 0,\\n    w: startWidth,\\n    h: Infinity\\n  }];\\n  var width = 0;\\n  var height = 0;\\n  var _iteratorNormalCompletion2 = true;\\n  var _didIteratorError2 = false;\\n  var _iteratorError2 = undefined;\\n\\n  try {\\n    for (var _iterator2 = boxes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\\n      var _box = _step2.value;\\n\\n      // look through spaces backwards so that we check smaller spaces first\\n      for (var i = spaces.length - 1; i >= 0; i--) {\\n        var space = spaces[i]; // look for empty spaces that can accommodate the current box\\n\\n        if (_box.w > space.w || _box.h > space.h) continue; // found the space; add the box to its top-left corner\\n        // |-------|-------|\\n        // |  box  |       |\\n        // |_______|       |\\n        // |         space |\\n        // |_______________|\\n\\n        _box.x = space.x;\\n        _box.y = space.y;\\n        height = Math.max(height, _box.y + _box.h);\\n        width = Math.max(width, _box.x + _box.w);\\n\\n        if (_box.w === space.w && _box.h === space.h) {\\n          // space matches the box exactly; remove it\\n          var last = spaces.pop();\\n          if (i < spaces.length) spaces[i] = last;\\n        } else if (_box.h === space.h) {\\n          // space matches the box height; update it accordingly\\n          // |-------|---------------|\\n          // |  box  | updated space |\\n          // |_______|_______________|\\n          space.x += _box.w;\\n          space.w -= _box.w;\\n        } else if (_box.w === space.w) {\\n          // space matches the box width; update it accordingly\\n          // |---------------|\\n          // |      box      |\\n          // |_______________|\\n          // | updated space |\\n          // |_______________|\\n          space.y += _box.h;\\n          space.h -= _box.h;\\n        } else {\\n          // otherwise the box splits the space into two spaces\\n          // |-------|-----------|\\n          // |  box  | new space |\\n          // |_______|___________|\\n          // | updated space     |\\n          // |___________________|\\n          spaces.push({\\n            x: space.x + _box.w,\\n            y: space.y,\\n            w: space.w - _box.w,\\n            h: _box.h\\n          });\\n          space.y += _box.h;\\n          space.h -= _box.h;\\n        }\\n\\n        break;\\n      }\\n    }\\n  } catch (err) {\\n    _didIteratorError2 = true;\\n    _iteratorError2 = err;\\n  } finally {\\n    try {\\n      if (!_iteratorNormalCompletion2 && _iterator2[\\\"return\\\"] != null) {\\n        _iterator2[\\\"return\\\"]();\\n      }\\n    } finally {\\n      if (_didIteratorError2) {\\n        throw _iteratorError2;\\n      }\\n    }\\n  }\\n\\n  return {\\n    w: width,\\n    // container width\\n    h: height,\\n    // container height\\n    fill: area / (width * height) || 0 // space utilization\\n\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"potpack\",\"boxes\",\"area\",\"maxWidth\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"undefined\",\"_iterator\",\"Symbol\",\"iterator\",\"_step\",\"done\",\"next\",\"box\",\"w\",\"h\",\"Math\",\"max\",\"err\",\"sort\",\"a\",\"b\",\"spaces\",\"x\",\"y\",\"startWidth\",\"ceil\",\"sqrt\",\"Infinity\",\"height\",\"width\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_iterator2\",\"_step2\",\"_box\",\"i\",\"length\",\"space\",\"last\",\"pop\",\"push\",\"fill\"]\n}\n"]