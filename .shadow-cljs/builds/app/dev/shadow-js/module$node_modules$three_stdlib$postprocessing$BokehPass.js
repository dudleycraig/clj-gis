["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/postprocessing/BokehPass.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$postprocessing$BokehPass=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.BokehPass=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_Pass=require(\"module$node_modules$three_stdlib$postprocessing$Pass\"),_BokehShader=require(\"module$node_modules$three_stdlib$shaders$BokehShader\");global=function(scene,camera,params){this.scene=scene;this.camera=camera;scene=void 0!==params.focus?\nparams.focus:1;var aspect=void 0!==params.aspect?params.aspect:camera.aspect,aperture=void 0!==params.aperture?params.aperture:.025,maxblur=void 0!==params.maxblur?params.maxblur:1;this.renderTargetDepth=new _three.WebGLRenderTarget(params.width||window.innerWidth||1,params.height||window.innerHeight||1,{minFilter:_three.NearestFilter,magFilter:_three.NearestFilter});this.renderTargetDepth.texture.name=\"BokehPass.depth\";this.materialDepth=new _three.MeshDepthMaterial;this.materialDepth.depthPacking=\n_three.RGBADepthPacking;this.materialDepth.blending=_three.NoBlending;void 0===_BokehShader.BokehShader&&console.error(\"THREE.BokehPass relies on BokehShader\");params=_BokehShader.BokehShader;var bokehUniforms=_three.UniformsUtils.clone(params.uniforms);bokehUniforms.tDepth.value=this.renderTargetDepth.texture;bokehUniforms.focus.value=scene;bokehUniforms.aspect.value=aspect;bokehUniforms.aperture.value=aperture;bokehUniforms.maxblur.value=maxblur;bokehUniforms.nearClip.value=camera.near;bokehUniforms.farClip.value=\ncamera.far;this.materialBokeh=new _three.ShaderMaterial({defines:Object.assign({},params.defines),uniforms:bokehUniforms,vertexShader:params.vertexShader,fragmentShader:params.fragmentShader});this.uniforms=bokehUniforms;this.needsSwap=!1;this.fsQuad=new _Pass.FullScreenQuad(this.materialBokeh);this._oldClearColor=new _three.Color};exports.BokehPass=global;global.prototype=Object.assign(Object.create(_Pass.Pass.prototype),{constructor:global,render:function(renderer,writeBuffer,readBuffer){this.scene.overrideMaterial=\nthis.materialDepth;renderer.getClearColor(this._oldClearColor);var oldClearAlpha=renderer.getClearAlpha(),oldAutoClear=renderer.autoClear;renderer.autoClear=!1;renderer.setClearColor(16777215);renderer.setClearAlpha(1);renderer.setRenderTarget(this.renderTargetDepth);renderer.clear();renderer.render(this.scene,this.camera);this.uniforms.tColor.value=readBuffer.texture;this.uniforms.nearClip.value=this.camera.near;this.uniforms.farClip.value=this.camera.far;this.renderToScreen?renderer.setRenderTarget(null):\n(renderer.setRenderTarget(writeBuffer),renderer.clear());this.fsQuad.render(renderer);this.scene.overrideMaterial=null;renderer.setClearColor(this._oldClearColor);renderer.setClearAlpha(oldClearAlpha);renderer.autoClear=oldAutoClear}})}","~:source","shadow$provide[\"module$node_modules$three_stdlib$postprocessing$BokehPass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BokehPass = void 0;\n\nvar _three = require(\"three\");\n\nvar _Pass = require(\"./Pass.js\");\n\nvar _BokehShader = require(\"../shaders/BokehShader.js\");\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\nvar BokehPass = function BokehPass(scene, camera, params) {\n  this.scene = scene;\n  this.camera = camera;\n  var focus = params.focus !== undefined ? params.focus : 1.0;\n  var aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\n  var aperture = params.aperture !== undefined ? params.aperture : 0.025;\n  var maxblur = params.maxblur !== undefined ? params.maxblur : 1.0; // render targets\n\n  var width = params.width || window.innerWidth || 1;\n  var height = params.height || window.innerHeight || 1;\n  this.renderTargetDepth = new _three.WebGLRenderTarget(width, height, {\n    minFilter: _three.NearestFilter,\n    magFilter: _three.NearestFilter\n  });\n  this.renderTargetDepth.texture.name = 'BokehPass.depth'; // depth material\n\n  this.materialDepth = new _three.MeshDepthMaterial();\n  this.materialDepth.depthPacking = _three.RGBADepthPacking;\n  this.materialDepth.blending = _three.NoBlending; // bokeh material\n\n  if (_BokehShader.BokehShader === undefined) {\n    console.error('THREE.BokehPass relies on BokehShader');\n  }\n\n  var bokehShader = _BokehShader.BokehShader;\n\n  var bokehUniforms = _three.UniformsUtils.clone(bokehShader.uniforms);\n\n  bokehUniforms['tDepth'].value = this.renderTargetDepth.texture;\n  bokehUniforms['focus'].value = focus;\n  bokehUniforms['aspect'].value = aspect;\n  bokehUniforms['aperture'].value = aperture;\n  bokehUniforms['maxblur'].value = maxblur;\n  bokehUniforms['nearClip'].value = camera.near;\n  bokehUniforms['farClip'].value = camera.far;\n  this.materialBokeh = new _three.ShaderMaterial({\n    defines: Object.assign({}, bokehShader.defines),\n    uniforms: bokehUniforms,\n    vertexShader: bokehShader.vertexShader,\n    fragmentShader: bokehShader.fragmentShader\n  });\n  this.uniforms = bokehUniforms;\n  this.needsSwap = false;\n  this.fsQuad = new _Pass.FullScreenQuad(this.materialBokeh);\n  this._oldClearColor = new _three.Color();\n};\n\nexports.BokehPass = BokehPass;\nBokehPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\n  constructor: BokehPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    // Render depth into texture\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    var oldClearAlpha = renderer.getClearAlpha();\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(0xffffff);\n    renderer.setClearAlpha(1.0);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera); // Render bokeh composite\n\n    this.uniforms['tColor'].value = readBuffer.texture;\n    this.uniforms['nearClip'].value = this.camera.near;\n    this.uniforms['farClip'].value = this.camera.far;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n});\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$three_stdlib$postprocessing$Pass","~$module$node_modules$three_stdlib$shaders$BokehShader"]],"~:properties",["^5",["fragmentShader","blending","prototype","needsSwap","materialBokeh","__esModule","overrideMaterial","camera","defines","vertexShader","name","value","fsQuad","magFilter","BokehPass","autoClear","materialDepth","render","_oldClearColor","depthPacking","uniforms","minFilter","renderTargetDepth","constructor","scene"]],"~:compiled-at",1630917515509,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$postprocessing$BokehPass.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/postprocessing/BokehPass.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$postprocessing$BokehPass\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.BokehPass = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _Pass = require(\\\"./Pass.js\\\");\\n\\nvar _BokehShader = require(\\\"../shaders/BokehShader.js\\\");\\n\\n/**\\n * Depth-of-field post-process with bokeh shader\\n */\\nvar BokehPass = function BokehPass(scene, camera, params) {\\n  this.scene = scene;\\n  this.camera = camera;\\n  var focus = params.focus !== undefined ? params.focus : 1.0;\\n  var aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\\n  var aperture = params.aperture !== undefined ? params.aperture : 0.025;\\n  var maxblur = params.maxblur !== undefined ? params.maxblur : 1.0; // render targets\\n\\n  var width = params.width || window.innerWidth || 1;\\n  var height = params.height || window.innerHeight || 1;\\n  this.renderTargetDepth = new _three.WebGLRenderTarget(width, height, {\\n    minFilter: _three.NearestFilter,\\n    magFilter: _three.NearestFilter\\n  });\\n  this.renderTargetDepth.texture.name = 'BokehPass.depth'; // depth material\\n\\n  this.materialDepth = new _three.MeshDepthMaterial();\\n  this.materialDepth.depthPacking = _three.RGBADepthPacking;\\n  this.materialDepth.blending = _three.NoBlending; // bokeh material\\n\\n  if (_BokehShader.BokehShader === undefined) {\\n    console.error('THREE.BokehPass relies on BokehShader');\\n  }\\n\\n  var bokehShader = _BokehShader.BokehShader;\\n\\n  var bokehUniforms = _three.UniformsUtils.clone(bokehShader.uniforms);\\n\\n  bokehUniforms['tDepth'].value = this.renderTargetDepth.texture;\\n  bokehUniforms['focus'].value = focus;\\n  bokehUniforms['aspect'].value = aspect;\\n  bokehUniforms['aperture'].value = aperture;\\n  bokehUniforms['maxblur'].value = maxblur;\\n  bokehUniforms['nearClip'].value = camera.near;\\n  bokehUniforms['farClip'].value = camera.far;\\n  this.materialBokeh = new _three.ShaderMaterial({\\n    defines: Object.assign({}, bokehShader.defines),\\n    uniforms: bokehUniforms,\\n    vertexShader: bokehShader.vertexShader,\\n    fragmentShader: bokehShader.fragmentShader\\n  });\\n  this.uniforms = bokehUniforms;\\n  this.needsSwap = false;\\n  this.fsQuad = new _Pass.FullScreenQuad(this.materialBokeh);\\n  this._oldClearColor = new _three.Color();\\n};\\n\\nexports.BokehPass = BokehPass;\\nBokehPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\\n  constructor: BokehPass,\\n  render: function render(renderer, writeBuffer, readBuffer\\n  /*, deltaTime, maskActive*/\\n  ) {\\n    // Render depth into texture\\n    this.scene.overrideMaterial = this.materialDepth;\\n    renderer.getClearColor(this._oldClearColor);\\n    var oldClearAlpha = renderer.getClearAlpha();\\n    var oldAutoClear = renderer.autoClear;\\n    renderer.autoClear = false;\\n    renderer.setClearColor(0xffffff);\\n    renderer.setClearAlpha(1.0);\\n    renderer.setRenderTarget(this.renderTargetDepth);\\n    renderer.clear();\\n    renderer.render(this.scene, this.camera); // Render bokeh composite\\n\\n    this.uniforms['tColor'].value = readBuffer.texture;\\n    this.uniforms['nearClip'].value = this.camera.near;\\n    this.uniforms['farClip'].value = this.camera.far;\\n\\n    if (this.renderToScreen) {\\n      renderer.setRenderTarget(null);\\n      this.fsQuad.render(renderer);\\n    } else {\\n      renderer.setRenderTarget(writeBuffer);\\n      renderer.clear();\\n      this.fsQuad.render(renderer);\\n    }\\n\\n    this.scene.overrideMaterial = null;\\n    renderer.setClearColor(this._oldClearColor);\\n    renderer.setClearAlpha(oldClearAlpha);\\n    renderer.autoClear = oldAutoClear;\\n  }\\n});\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"BokehPass\",\"_three\",\"_Pass\",\"_BokehShader\",\"scene\",\"camera\",\"params\",\"focus\",\"undefined\",\"aspect\",\"aperture\",\"maxblur\",\"renderTargetDepth\",\"WebGLRenderTarget\",\"width\",\"window\",\"innerWidth\",\"height\",\"innerHeight\",\"minFilter\",\"NearestFilter\",\"magFilter\",\"texture\",\"name\",\"materialDepth\",\"MeshDepthMaterial\",\"depthPacking\",\"RGBADepthPacking\",\"blending\",\"NoBlending\",\"BokehShader\",\"console\",\"error\",\"bokehShader\",\"bokehUniforms\",\"UniformsUtils\",\"clone\",\"uniforms\",\"near\",\"far\",\"materialBokeh\",\"ShaderMaterial\",\"defines\",\"assign\",\"vertexShader\",\"fragmentShader\",\"needsSwap\",\"fsQuad\",\"FullScreenQuad\",\"_oldClearColor\",\"Color\",\"prototype\",\"create\",\"Pass\",\"constructor\",\"render\",\"renderer\",\"writeBuffer\",\"readBuffer\",\"overrideMaterial\",\"getClearColor\",\"oldClearAlpha\",\"getClearAlpha\",\"oldAutoClear\",\"autoClear\",\"setClearColor\",\"setClearAlpha\",\"setRenderTarget\",\"clear\",\"renderToScreen\"]\n}\n"]