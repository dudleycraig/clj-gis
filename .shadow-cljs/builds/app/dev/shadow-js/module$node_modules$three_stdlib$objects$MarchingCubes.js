["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/objects/MarchingCubes.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$objects$MarchingCubes=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _possibleConstructorReturn(self,call){return!call||\"object\"!==_typeof(call)&&\"function\"!==typeof call?\n_assertThisInitialized(self):call}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");\nsubClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.triTable=exports.edgeTable=exports.MarchingCubes=void 0;var _three=require(\"module$node_modules$three$build$three_module\");\nglobal=function(_ImmediateRenderObjec){function MarchingCubes(resolution$jscomp$0,material,enableUvs,enableColors){function lerp(a,b,t){return a+(b-a)*t}function VIntX(q,offset,isol,x,y,z,valp1,valp2,c_offset1,c_offset2){isol=(isol-valp1)/(valp2-valp1);valp1=scope$jscomp$0.normal_cache;vlist[offset+0]=x+isol*scope$jscomp$0.delta;vlist[offset+1]=y;vlist[offset+2]=z;nlist[offset+0]=lerp(valp1[q+0],valp1[q+3],isol);nlist[offset+1]=lerp(valp1[q+1],valp1[q+4],isol);nlist[offset+2]=lerp(valp1[q+2],valp1[q+\n5],isol);clist[offset+0]=lerp(scope$jscomp$0.palette[3*c_offset1],scope$jscomp$0.palette[3*c_offset2],isol);clist[offset+1]=lerp(scope$jscomp$0.palette[3*c_offset1+1],scope$jscomp$0.palette[3*c_offset2+1],isol);clist[offset+2]=lerp(scope$jscomp$0.palette[3*c_offset1+2],scope$jscomp$0.palette[3*c_offset2+2],isol)}function VIntY(q,offset,isol,x,y,z,valp1,valp2,c_offset1,c_offset2){isol=(isol-valp1)/(valp2-valp1);valp1=scope$jscomp$0.normal_cache;vlist[offset+0]=x;vlist[offset+1]=y+isol*scope$jscomp$0.delta;\nvlist[offset+2]=z;x=q+3*scope$jscomp$0.yd;nlist[offset+0]=lerp(valp1[q+0],valp1[x+0],isol);nlist[offset+1]=lerp(valp1[q+1],valp1[x+1],isol);nlist[offset+2]=lerp(valp1[q+2],valp1[x+2],isol);clist[offset+0]=lerp(scope$jscomp$0.palette[3*c_offset1],scope$jscomp$0.palette[3*c_offset2],isol);clist[offset+1]=lerp(scope$jscomp$0.palette[3*c_offset1+1],scope$jscomp$0.palette[3*c_offset2+1],isol);clist[offset+2]=lerp(scope$jscomp$0.palette[3*c_offset1+2],scope$jscomp$0.palette[3*c_offset2+2],isol)}function VIntZ(q,\noffset,isol,x,y,z,valp1,valp2,c_offset1,c_offset2){isol=(isol-valp1)/(valp2-valp1);valp1=scope$jscomp$0.normal_cache;vlist[offset+0]=x;vlist[offset+1]=y;vlist[offset+2]=z+isol*scope$jscomp$0.delta;x=q+3*scope$jscomp$0.zd;nlist[offset+0]=lerp(valp1[q+0],valp1[x+0],isol);nlist[offset+1]=lerp(valp1[q+1],valp1[x+1],isol);nlist[offset+2]=lerp(valp1[q+2],valp1[x+2],isol);clist[offset+0]=lerp(scope$jscomp$0.palette[3*c_offset1],scope$jscomp$0.palette[3*c_offset2],isol);clist[offset+1]=lerp(scope$jscomp$0.palette[3*\nc_offset1+1],scope$jscomp$0.palette[3*c_offset2+1],isol);clist[offset+2]=lerp(scope$jscomp$0.palette[3*c_offset1+2],scope$jscomp$0.palette[3*c_offset2+2],isol)}function compNorm(q){var q3=3*q;0===scope$jscomp$0.normal_cache[q3]&&(scope$jscomp$0.normal_cache[q3+0]=scope$jscomp$0.field[q-1]-scope$jscomp$0.field[q+1],scope$jscomp$0.normal_cache[q3+1]=scope$jscomp$0.field[q-scope$jscomp$0.yd]-scope$jscomp$0.field[q+scope$jscomp$0.yd],scope$jscomp$0.normal_cache[q3+2]=scope$jscomp$0.field[q-scope$jscomp$0.zd]-\nscope$jscomp$0.field[q+scope$jscomp$0.zd])}function concatenate(a,b,length){var result=new Float32Array(a.length+length);result.set(a,0);result.set(b.slice(0,length),a.length);return result}if(!(this instanceof MarchingCubes))throw new TypeError(\"Cannot call a class as a function\");material=_possibleConstructorReturn(this,_getPrototypeOf(MarchingCubes).call(this,material));var scope$jscomp$0=_assertThisInitialized(material),vlist=new Float32Array(36),nlist=new Float32Array(36),clist=new Float32Array(36);\nmaterial.enableUvs=void 0!==enableUvs?enableUvs:!1;material.enableColors=void 0!==enableColors?enableColors:!1;material.init=function(resolution){this.resolution=resolution;this.isolation=80;this.size=resolution;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(3*this.size3);this.palette=new Float32Array(3*this.size3);this.maxCount=\n4096;this.count=0;this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=!1;this.positionArray=new Float32Array(3*this.maxCount);this.normalArray=new Float32Array(3*this.maxCount);this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount));this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))};material.begin=function(){this.count=0;this.hasColors=this.hasUvs=this.hasNormals=this.hasPositions=!1};material.end=function(renderCallback){if(0!==this.count){for(var i=3*this.count;i<\nthis.positionArray.length;i++)this.positionArray[i]=0;this.hasNormals=this.hasPositions=!0;this.enableUvs&&this.material.map&&(this.hasUvs=!0);this.enableColors&&this.material.vertexColors!==_three.NoColors&&(this.hasColors=!0);renderCallback(this)}};material.addBall=function(ballx,bally,ballz,strength,subtract,colors){var sign=Math.sign(strength);strength=Math.abs(strength);var userDefineColor=!(void 0===colors||null===colors),ballColor=new _three.Color(ballx,bally,ballz);if(userDefineColor)try{ballColor=\ncolors instanceof _three.Color?colors:Array.isArray(colors)?new _three.Color(Math.min(Math.abs(colors[0]),1),Math.min(Math.abs(colors[1]),1),Math.min(Math.abs(colors[2]),1)):new _three.Color(colors)}catch(err){ballColor=new _three.Color(ballx,bally,ballz)}colors=this.size*Math.sqrt(strength/subtract);userDefineColor=ballz*this.size;var ys=bally*this.size,xs=ballx*this.size,min_z=Math.floor(userDefineColor-colors);1>min_z&&(min_z=1);var max_z=Math.floor(userDefineColor+colors);max_z>this.size-1&&(max_z=\nthis.size-1);var min_y=Math.floor(ys-colors);1>min_y&&(min_y=1);var max_y=Math.floor(ys+colors);max_y>this.size-1&&(max_y=this.size-1);var min_x=Math.floor(xs-colors);1>min_x&&(min_x=1);var max_x=Math.floor(xs+colors);max_x>this.size-1&&(max_x=this.size-1);for(var x,y,y_offset,z_offset,fx,fz2,fy2;min_z<max_z;min_z++)for(z_offset=this.size2*min_z,y=min_z/this.size-ballz,fz2=y*y,y=min_y;y<max_y;y++)for(y_offset=z_offset+this.size*y,x=y/this.size-bally,fy2=x*x,x=min_x;x<max_x;x++)fx=x/this.size-ballx,\nfx=strength/(1E-6+fx*fx+fy2+fz2)-subtract,0<fx&&(this.field[y_offset+x]+=fx*sign,fx=Math.sqrt((x-xs)*(x-xs)+(y-ys)*(y-ys)+(min_z-userDefineColor)*(min_z-userDefineColor))/colors,fx=1-fx*fx*fx*(fx*(6*fx-15)+10),this.palette[3*(y_offset+x)]+=ballColor.r*fx,this.palette[3*(y_offset+x)+1]+=ballColor.g*fx,this.palette[3*(y_offset+x)+2]+=ballColor.b*fx)};material.addPlaneX=function(strength,subtract){var size=this.size,yd=this.yd,zd=this.zd,field=this.field,x,z,dist=size*Math.sqrt(strength/subtract);dist>\nsize&&(dist=size);for(x=0;x<dist;x++){var y=x/size;y*=y;var val=strength/(1E-4+y)-subtract;if(0<val)for(y=0;y<size;y++){var cxy=x+y*yd;for(z=0;z<size;z++)field[zd*z+cxy]+=val}}};material.addPlaneY=function(strength,subtract){var size=this.size,yd=this.yd,zd=this.zd,field=this.field,y,z,dist=size*Math.sqrt(strength/subtract);dist>size&&(dist=size);for(y=0;y<dist;y++){var x=y/size;x*=x;var val=strength/(1E-4+x)-subtract;if(0<val){var cy=y*yd;for(x=0;x<size;x++){var cxy=cy+x;for(z=0;z<size;z++)field[zd*\nz+cxy]+=val}}}};material.addPlaneZ=function(strength,subtract){var size=this.size,yd=this.yd,zd=this.zd,field=this.field,y,z,dist=size*Math.sqrt(strength/subtract);dist>size&&(dist=size);for(z=0;z<dist;z++){var x=z/size;x*=x;var val=strength/(1E-4+x)-subtract;if(0<val){var cz=zd*z;for(y=0;y<size;y++){var cyz=cz+y*yd;for(x=0;x<size;x++)field[cyz+x]+=val}}}};material.setCell=function(x,y,z,value){this.field[this.size2*z+this.size*y+x]=value};material.getCell=function(x,y,z){return this.field[this.size2*\nz+this.size*y+x]};material.blur=function(){for(var intensity=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,field=this.field,fieldCopy=field.slice(),size=this.size,size2=this.size2,x=0;x<size;x++)for(var y=0;y<size;y++)for(var z=0;z<size;z++){for(var index=size2*z+size*y+x,val=fieldCopy[index],count=1,x2=-1;1>=x2;x2+=2){var x3=x2+x;if(!(0>x3||x3>=size))for(var y2=-1;1>=y2;y2+=2){var y3=y2+y;if(!(0>y3||y3>=size))for(var z2=-1;1>=z2;z2+=2){var z3=z2+z;0>z3||z3>=size||(z3=fieldCopy[size2*z3+\nsize*y3+x3],count++,val+=intensity*(z3-val)/count)}}}field[index]=val}};material.reset=function(){for(var i=0;i<this.size3;i++)this.normal_cache[3*i]=0,this.field[i]=0,this.palette[3*i]=this.palette[3*i+1]=this.palette[3*i+2]=0};material.render=function(renderCallback$jscomp$0){this.begin();for(var smin2=this.size-2,z=1;z<smin2;z++)for(var z_offset=this.size2*z,fz=(z-this.halfsize)/this.halfsize,y=1;y<smin2;y++)for(var y_offset=z_offset+this.size*y,fy=(y-this.halfsize)/this.halfsize,x=1;x<smin2;x++){var fx=\n(x-this.halfsize)/this.halfsize,fy$jscomp$0=fy,fz$jscomp$0=fz,q=y_offset+x;var o1=this.isolation;var renderCallback=renderCallback$jscomp$0,q1=q+1;var o2=q+scope$jscomp$0.yd;var o3=q+scope$jscomp$0.zd;var q1y=q1+scope$jscomp$0.yd,q1z=q1+scope$jscomp$0.zd,qyz=q+scope$jscomp$0.yd+scope$jscomp$0.zd,q1yz=q1+scope$jscomp$0.yd+scope$jscomp$0.zd,cubeindex=0,field0=scope$jscomp$0.field[q],field1=scope$jscomp$0.field[q1],field2=scope$jscomp$0.field[o2],field3=scope$jscomp$0.field[q1y],field4=scope$jscomp$0.field[o3],\nfield5=scope$jscomp$0.field[q1z],field6=scope$jscomp$0.field[qyz],field7=scope$jscomp$0.field[q1yz];field0<o1&&(cubeindex|=1);field1<o1&&(cubeindex|=2);field2<o1&&(cubeindex|=8);field3<o1&&(cubeindex|=4);field4<o1&&(cubeindex|=16);field5<o1&&(cubeindex|=32);field6<o1&&(cubeindex|=128);field7<o1&&(cubeindex|=64);var bits=edgeTable[cubeindex];if(0!==bits){var d=scope$jscomp$0.delta,fx2=fx+d,fy2=fy$jscomp$0+d;d=fz$jscomp$0+d;bits&1&&(compNorm(q),compNorm(q1),VIntX(3*q,0,o1,fx,fy$jscomp$0,fz$jscomp$0,\nfield0,field1,q,q1));bits&2&&(compNorm(q1),compNorm(q1y),VIntY(3*q1,3,o1,fx2,fy$jscomp$0,fz$jscomp$0,field1,field3,q1,q1y));bits&4&&(compNorm(o2),compNorm(q1y),VIntX(3*o2,6,o1,fx,fy2,fz$jscomp$0,field2,field3,o2,q1y));bits&8&&(compNorm(q),compNorm(o2),VIntY(3*q,9,o1,fx,fy$jscomp$0,fz$jscomp$0,field0,field2,q,o2));bits&16&&(compNorm(o3),compNorm(q1z),VIntX(3*o3,12,o1,fx,fy$jscomp$0,d,field4,field5,o3,q1z));bits&32&&(compNorm(q1z),compNorm(q1yz),VIntY(3*q1z,15,o1,fx2,fy$jscomp$0,d,field5,field7,q1z,\nq1yz));bits&64&&(compNorm(qyz),compNorm(q1yz),VIntX(3*qyz,18,o1,fx,fy2,d,field6,field7,qyz,q1yz));bits&128&&(compNorm(o3),compNorm(qyz),VIntY(3*o3,21,o1,fx,fy$jscomp$0,d,field4,field6,o3,qyz));bits&256&&(compNorm(q),compNorm(o3),VIntZ(3*q,24,o1,fx,fy$jscomp$0,fz$jscomp$0,field0,field4,q,o3));bits&512&&(compNorm(q1),compNorm(q1z),VIntZ(3*q1,27,o1,fx2,fy$jscomp$0,fz$jscomp$0,field1,field5,q1,q1z));bits&1024&&(compNorm(q1y),compNorm(q1yz),VIntZ(3*q1y,30,o1,fx2,fy2,fz$jscomp$0,field3,field7,q1y,q1yz));\nbits&2048&&(compNorm(o2),compNorm(qyz),VIntZ(3*o2,33,o1,fx,fy2,fz$jscomp$0,field2,field6,o2,qyz));cubeindex<<=4;for(fy$jscomp$0=fx=0;-1!=triTable[cubeindex+fy$jscomp$0];)o1=cubeindex+fy$jscomp$0,o2=o1+1,o3=o1+2,fz$jscomp$0=vlist,q1=nlist,q=clist,o1=3*triTable[o1],o2=3*triTable[o2],o3=3*triTable[o3],q1y=renderCallback,q1z=3*scope$jscomp$0.count,scope$jscomp$0.positionArray[q1z+0]=fz$jscomp$0[o1],scope$jscomp$0.positionArray[q1z+1]=fz$jscomp$0[o1+1],scope$jscomp$0.positionArray[q1z+2]=fz$jscomp$0[o1+\n2],scope$jscomp$0.positionArray[q1z+3]=fz$jscomp$0[o2],scope$jscomp$0.positionArray[q1z+4]=fz$jscomp$0[o2+1],scope$jscomp$0.positionArray[q1z+5]=fz$jscomp$0[o2+2],scope$jscomp$0.positionArray[q1z+6]=fz$jscomp$0[o3],scope$jscomp$0.positionArray[q1z+7]=fz$jscomp$0[o3+1],scope$jscomp$0.positionArray[q1z+8]=fz$jscomp$0[o3+2],!0===scope$jscomp$0.material.flatShading?(qyz=(q1[o1+0]+q1[o2+0]+q1[o3+0])/3,q1yz=(q1[o1+1]+q1[o2+1]+q1[o3+1])/3,q1=(q1[o1+2]+q1[o2+2]+q1[o3+2])/3,scope$jscomp$0.normalArray[q1z+\n0]=qyz,scope$jscomp$0.normalArray[q1z+1]=q1yz,scope$jscomp$0.normalArray[q1z+2]=q1,scope$jscomp$0.normalArray[q1z+3]=qyz,scope$jscomp$0.normalArray[q1z+4]=q1yz,scope$jscomp$0.normalArray[q1z+5]=q1,scope$jscomp$0.normalArray[q1z+6]=qyz,scope$jscomp$0.normalArray[q1z+7]=q1yz,scope$jscomp$0.normalArray[q1z+8]=q1):(scope$jscomp$0.normalArray[q1z+0]=q1[o1+0],scope$jscomp$0.normalArray[q1z+1]=q1[o1+1],scope$jscomp$0.normalArray[q1z+2]=q1[o1+2],scope$jscomp$0.normalArray[q1z+3]=q1[o2+0],scope$jscomp$0.normalArray[q1z+\n4]=q1[o2+1],scope$jscomp$0.normalArray[q1z+5]=q1[o2+2],scope$jscomp$0.normalArray[q1z+6]=q1[o3+0],scope$jscomp$0.normalArray[q1z+7]=q1[o3+1],scope$jscomp$0.normalArray[q1z+8]=q1[o3+2]),scope$jscomp$0.enableUvs&&(q1=2*scope$jscomp$0.count,scope$jscomp$0.uvArray[q1+0]=fz$jscomp$0[o1+0],scope$jscomp$0.uvArray[q1+1]=fz$jscomp$0[o1+2],scope$jscomp$0.uvArray[q1+2]=fz$jscomp$0[o2+0],scope$jscomp$0.uvArray[q1+3]=fz$jscomp$0[o2+2],scope$jscomp$0.uvArray[q1+4]=fz$jscomp$0[o3+0],scope$jscomp$0.uvArray[q1+5]=\nfz$jscomp$0[o3+2]),scope$jscomp$0.enableColors&&(scope$jscomp$0.colorArray[q1z+0]=q[o1+0],scope$jscomp$0.colorArray[q1z+1]=q[o1+1],scope$jscomp$0.colorArray[q1z+2]=q[o1+2],scope$jscomp$0.colorArray[q1z+3]=q[o2+0],scope$jscomp$0.colorArray[q1z+4]=q[o2+1],scope$jscomp$0.colorArray[q1z+5]=q[o2+2],scope$jscomp$0.colorArray[q1z+6]=q[o3+0],scope$jscomp$0.colorArray[q1z+7]=q[o3+1],scope$jscomp$0.colorArray[q1z+8]=q[o3+2]),scope$jscomp$0.count+=3,scope$jscomp$0.count>=scope$jscomp$0.maxCount-3&&(scope$jscomp$0.hasPositions=\n!0,scope$jscomp$0.hasNormals=!0,scope$jscomp$0.enableUvs&&(scope$jscomp$0.hasUvs=!0),scope$jscomp$0.enableColors&&(scope$jscomp$0.hasColors=!0),q1y(scope$jscomp$0)),fy$jscomp$0+=3,fx++}}this.end(renderCallback$jscomp$0)};material.generateGeometry=function(){console.warn(\"THREE.MarchingCubes: generateGeometry() now returns BufferGeometry\");return this.generateBufferGeometry()};material.generateBufferGeometry=function(){var geo=new _three.BufferGeometry,posArray=new Float32Array,normArray=new Float32Array,\ncolorArray=new Float32Array,uvArray=new Float32Array,scope=this;this.render(function(object){scope.hasPositions&&(posArray=concatenate(posArray,object.positionArray,3*object.count));scope.hasNormals&&(normArray=concatenate(normArray,object.normalArray,3*object.count));scope.hasColors&&(colorArray=concatenate(colorArray,object.colorArray,3*object.count));scope.hasUvs&&(uvArray=concatenate(uvArray,object.uvArray,2*object.count));object.count=0});this.hasPositions&&geo.setAttribute(\"position\",new _three.BufferAttribute(posArray,\n3));this.hasNormals&&geo.setAttribute(\"normal\",new _three.BufferAttribute(normArray,3));this.hasColors&&geo.setAttribute(\"color\",new _three.BufferAttribute(colorArray,3));this.hasUvs&&geo.setAttribute(\"uv\",new _three.BufferAttribute(uvArray,2));return geo};material.init(resolution$jscomp$0);return material}_inherits(MarchingCubes,_ImmediateRenderObjec);return MarchingCubes}(_three.ImmediateRenderObject);exports.MarchingCubes=global;global.prototype.isMarchingCubes=!0;var edgeTable=new Int32Array([0,\n265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,\n3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,\n2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);exports.edgeTable=edgeTable;var triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,\n-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,\n1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,\n9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,\n-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,\n-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,\n6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,\n4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,\n-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,\n7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,\n-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,\n7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,\n-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,\n-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,\n-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,\n-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,\n-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,\n-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,\n8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,\n-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);exports.triTable=triTable}","~:source","shadow$provide[\"module$node_modules$three_stdlib$objects$MarchingCubes\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.triTable = exports.edgeTable = exports.MarchingCubes = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Port of http://webglsamples.org/blob/blob.html\n */\nvar MarchingCubes =\n/*#__PURE__*/\nfunction (_ImmediateRenderObjec) {\n  _inherits(MarchingCubes, _ImmediateRenderObjec);\n\n  function MarchingCubes(resolution, material, enableUvs, enableColors) {\n    var _this;\n\n    _classCallCheck(this, MarchingCubes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarchingCubes).call(this, material));\n\n    var scope = _assertThisInitialized(_this); // temp buffers used in polygonize\n\n\n    var vlist = new Float32Array(12 * 3);\n    var nlist = new Float32Array(12 * 3);\n    var clist = new Float32Array(12 * 3);\n    _this.enableUvs = enableUvs !== undefined ? enableUvs : false;\n    _this.enableColors = enableColors !== undefined ? enableColors : false; // functions have to be object properties\n    // prototype functions kill performance\n    // (tested and it was 4x slower !!!)\n\n    _this.init = function (resolution) {\n      this.resolution = resolution; // parameters\n\n      this.isolation = 80.0; // size of field, 32 is pushing it in Javascript :)\n\n      this.size = resolution;\n      this.size2 = this.size * this.size;\n      this.size3 = this.size2 * this.size;\n      this.halfsize = this.size / 2.0; // deltas\n\n      this.delta = 2.0 / this.size;\n      this.yd = this.size;\n      this.zd = this.size2;\n      this.field = new Float32Array(this.size3);\n      this.normal_cache = new Float32Array(this.size3 * 3);\n      this.palette = new Float32Array(this.size3 * 3); // immediate render mode simulator\n\n      this.maxCount = 4096; // TODO: find the fastest size for this buffer\n\n      this.count = 0;\n      this.hasPositions = false;\n      this.hasNormals = false;\n      this.hasColors = false;\n      this.hasUvs = false;\n      this.positionArray = new Float32Array(this.maxCount * 3);\n      this.normalArray = new Float32Array(this.maxCount * 3);\n\n      if (this.enableUvs) {\n        this.uvArray = new Float32Array(this.maxCount * 2);\n      }\n\n      if (this.enableColors) {\n        this.colorArray = new Float32Array(this.maxCount * 3);\n      }\n    }; ///////////////////////\n    // Polygonization\n    ///////////////////////\n\n\n    function lerp(a, b, t) {\n      return a + (b - a) * t;\n    }\n\n    function VIntX(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      var mu = (isol - valp1) / (valp2 - valp1),\n          nc = scope.normal_cache;\n      vlist[offset + 0] = x + mu * scope.delta;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q + 3], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q + 4], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q + 5], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n\n    function VIntY(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      var mu = (isol - valp1) / (valp2 - valp1),\n          nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y + mu * scope.delta;\n      vlist[offset + 2] = z;\n      var q2 = q + scope.yd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n\n    function VIntZ(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      var mu = (isol - valp1) / (valp2 - valp1),\n          nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z + mu * scope.delta;\n      var q2 = q + scope.zd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n\n    function compNorm(q) {\n      var q3 = q * 3;\n\n      if (scope.normal_cache[q3] === 0.0) {\n        scope.normal_cache[q3 + 0] = scope.field[q - 1] - scope.field[q + 1];\n        scope.normal_cache[q3 + 1] = scope.field[q - scope.yd] - scope.field[q + scope.yd];\n        scope.normal_cache[q3 + 2] = scope.field[q - scope.zd] - scope.field[q + scope.zd];\n      }\n    } // Returns total number of triangles. Fills triangles.\n    // (this is where most of time is spent - it's inner work of O(n3) loop )\n\n\n    function polygonize(fx, fy, fz, q, isol, renderCallback) {\n      // cache indices\n      var q1 = q + 1,\n          qy = q + scope.yd,\n          qz = q + scope.zd,\n          q1y = q1 + scope.yd,\n          q1z = q1 + scope.zd,\n          qyz = q + scope.yd + scope.zd,\n          q1yz = q1 + scope.yd + scope.zd;\n      var cubeindex = 0;\n      var field0 = scope.field[q],\n          field1 = scope.field[q1],\n          field2 = scope.field[qy],\n          field3 = scope.field[q1y],\n          field4 = scope.field[qz],\n          field5 = scope.field[q1z],\n          field6 = scope.field[qyz],\n          field7 = scope.field[q1yz];\n      if (field0 < isol) cubeindex |= 1;\n      if (field1 < isol) cubeindex |= 2;\n      if (field2 < isol) cubeindex |= 8;\n      if (field3 < isol) cubeindex |= 4;\n      if (field4 < isol) cubeindex |= 16;\n      if (field5 < isol) cubeindex |= 32;\n      if (field6 < isol) cubeindex |= 128;\n      if (field7 < isol) cubeindex |= 64; // if cube is entirely in/out of the surface - bail, nothing to draw\n\n      var bits = edgeTable[cubeindex];\n      if (bits === 0) return 0;\n      var d = scope.delta,\n          fx2 = fx + d,\n          fy2 = fy + d,\n          fz2 = fz + d; // top of the cube\n\n      if (bits & 1) {\n        compNorm(q);\n        compNorm(q1);\n        VIntX(q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1);\n      }\n\n      if (bits & 2) {\n        compNorm(q1);\n        compNorm(q1y);\n        VIntY(q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y);\n      }\n\n      if (bits & 4) {\n        compNorm(qy);\n        compNorm(q1y);\n        VIntX(qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y);\n      }\n\n      if (bits & 8) {\n        compNorm(q);\n        compNorm(qy);\n        VIntY(q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy);\n      } // bottom of the cube\n\n\n      if (bits & 16) {\n        compNorm(qz);\n        compNorm(q1z);\n        VIntX(qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z);\n      }\n\n      if (bits & 32) {\n        compNorm(q1z);\n        compNorm(q1yz);\n        VIntY(q1z * 3, 15, isol, fx2, fy, fz2, field5, field7, q1z, q1yz);\n      }\n\n      if (bits & 64) {\n        compNorm(qyz);\n        compNorm(q1yz);\n        VIntX(qyz * 3, 18, isol, fx, fy2, fz2, field6, field7, qyz, q1yz);\n      }\n\n      if (bits & 128) {\n        compNorm(qz);\n        compNorm(qyz);\n        VIntY(qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz);\n      } // vertical lines of the cube\n\n\n      if (bits & 256) {\n        compNorm(q);\n        compNorm(qz);\n        VIntZ(q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz);\n      }\n\n      if (bits & 512) {\n        compNorm(q1);\n        compNorm(q1z);\n        VIntZ(q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z);\n      }\n\n      if (bits & 1024) {\n        compNorm(q1y);\n        compNorm(q1yz);\n        VIntZ(q1y * 3, 30, isol, fx2, fy2, fz, field3, field7, q1y, q1yz);\n      }\n\n      if (bits & 2048) {\n        compNorm(qy);\n        compNorm(qyz);\n        VIntZ(qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz);\n      }\n\n      cubeindex <<= 4; // re-purpose cubeindex into an offset into triTable\n\n      var o1,\n          o2,\n          o3,\n          numtris = 0,\n          i = 0; // here is where triangles are created\n\n      while (triTable[cubeindex + i] != -1) {\n        o1 = cubeindex + i;\n        o2 = o1 + 1;\n        o3 = o1 + 2;\n        posnormtriv(vlist, nlist, clist, 3 * triTable[o1], 3 * triTable[o2], 3 * triTable[o3], renderCallback);\n        i += 3;\n        numtris++;\n      }\n\n      return numtris;\n    } /////////////////////////////////////\n    // Immediate render mode simulator\n    /////////////////////////////////////\n\n\n    function posnormtriv(pos, norm, colors, o1, o2, o3, renderCallback) {\n      var c = scope.count * 3; // positions\n\n      scope.positionArray[c + 0] = pos[o1];\n      scope.positionArray[c + 1] = pos[o1 + 1];\n      scope.positionArray[c + 2] = pos[o1 + 2];\n      scope.positionArray[c + 3] = pos[o2];\n      scope.positionArray[c + 4] = pos[o2 + 1];\n      scope.positionArray[c + 5] = pos[o2 + 2];\n      scope.positionArray[c + 6] = pos[o3];\n      scope.positionArray[c + 7] = pos[o3 + 1];\n      scope.positionArray[c + 8] = pos[o3 + 2]; // normals\n\n      if (scope.material.flatShading === true) {\n        var nx = (norm[o1 + 0] + norm[o2 + 0] + norm[o3 + 0]) / 3;\n        var ny = (norm[o1 + 1] + norm[o2 + 1] + norm[o3 + 1]) / 3;\n        var nz = (norm[o1 + 2] + norm[o2 + 2] + norm[o3 + 2]) / 3;\n        scope.normalArray[c + 0] = nx;\n        scope.normalArray[c + 1] = ny;\n        scope.normalArray[c + 2] = nz;\n        scope.normalArray[c + 3] = nx;\n        scope.normalArray[c + 4] = ny;\n        scope.normalArray[c + 5] = nz;\n        scope.normalArray[c + 6] = nx;\n        scope.normalArray[c + 7] = ny;\n        scope.normalArray[c + 8] = nz;\n      } else {\n        scope.normalArray[c + 0] = norm[o1 + 0];\n        scope.normalArray[c + 1] = norm[o1 + 1];\n        scope.normalArray[c + 2] = norm[o1 + 2];\n        scope.normalArray[c + 3] = norm[o2 + 0];\n        scope.normalArray[c + 4] = norm[o2 + 1];\n        scope.normalArray[c + 5] = norm[o2 + 2];\n        scope.normalArray[c + 6] = norm[o3 + 0];\n        scope.normalArray[c + 7] = norm[o3 + 1];\n        scope.normalArray[c + 8] = norm[o3 + 2];\n      } // uvs\n\n\n      if (scope.enableUvs) {\n        var d = scope.count * 2;\n        scope.uvArray[d + 0] = pos[o1 + 0];\n        scope.uvArray[d + 1] = pos[o1 + 2];\n        scope.uvArray[d + 2] = pos[o2 + 0];\n        scope.uvArray[d + 3] = pos[o2 + 2];\n        scope.uvArray[d + 4] = pos[o3 + 0];\n        scope.uvArray[d + 5] = pos[o3 + 2];\n      } // colors\n\n\n      if (scope.enableColors) {\n        scope.colorArray[c + 0] = colors[o1 + 0];\n        scope.colorArray[c + 1] = colors[o1 + 1];\n        scope.colorArray[c + 2] = colors[o1 + 2];\n        scope.colorArray[c + 3] = colors[o2 + 0];\n        scope.colorArray[c + 4] = colors[o2 + 1];\n        scope.colorArray[c + 5] = colors[o2 + 2];\n        scope.colorArray[c + 6] = colors[o3 + 0];\n        scope.colorArray[c + 7] = colors[o3 + 1];\n        scope.colorArray[c + 8] = colors[o3 + 2];\n      }\n\n      scope.count += 3;\n\n      if (scope.count >= scope.maxCount - 3) {\n        scope.hasPositions = true;\n        scope.hasNormals = true;\n\n        if (scope.enableUvs) {\n          scope.hasUvs = true;\n        }\n\n        if (scope.enableColors) {\n          scope.hasColors = true;\n        }\n\n        renderCallback(scope);\n      }\n    }\n\n    _this.begin = function () {\n      this.count = 0;\n      this.hasPositions = false;\n      this.hasNormals = false;\n      this.hasUvs = false;\n      this.hasColors = false;\n    };\n\n    _this.end = function (renderCallback) {\n      if (this.count === 0) return;\n\n      for (var i = this.count * 3; i < this.positionArray.length; i++) {\n        this.positionArray[i] = 0.0;\n      }\n\n      this.hasPositions = true;\n      this.hasNormals = true;\n\n      if (this.enableUvs && this.material.map) {\n        this.hasUvs = true;\n      }\n\n      if (this.enableColors && this.material.vertexColors !== _three.NoColors) {\n        this.hasColors = true;\n      }\n\n      renderCallback(this);\n    }; /////////////////////////////////////\n    // Metaballs\n    /////////////////////////////////////\n    // Adds a reciprocal ball (nice and blobby) that, to be fast, fades to zero after\n    // a fixed distance, determined by strength and subtract.\n\n\n    _this.addBall = function (ballx, bally, ballz, strength, subtract, colors) {\n      var sign = Math.sign(strength);\n      strength = Math.abs(strength);\n      var userDefineColor = !(colors === undefined || colors === null);\n      var ballColor = new _three.Color(ballx, bally, ballz);\n\n      if (userDefineColor) {\n        try {\n          ballColor = colors instanceof _three.Color ? colors : Array.isArray(colors) ? new _three.Color(Math.min(Math.abs(colors[0]), 1), Math.min(Math.abs(colors[1]), 1), Math.min(Math.abs(colors[2]), 1)) : new _three.Color(colors);\n        } catch (err) {\n          ballColor = new _three.Color(ballx, bally, ballz);\n        }\n      } // Let's solve the equation to find the radius:\n      // 1.0 / (0.000001 + radius^2) * strength - subtract = 0\n      // strength / (radius^2) = subtract\n      // strength = subtract * radius^2\n      // radius^2 = strength / subtract\n      // radius = sqrt(strength / subtract)\n\n\n      var radius = this.size * Math.sqrt(strength / subtract),\n          zs = ballz * this.size,\n          ys = bally * this.size,\n          xs = ballx * this.size;\n      var min_z = Math.floor(zs - radius);\n      if (min_z < 1) min_z = 1;\n      var max_z = Math.floor(zs + radius);\n      if (max_z > this.size - 1) max_z = this.size - 1;\n      var min_y = Math.floor(ys - radius);\n      if (min_y < 1) min_y = 1;\n      var max_y = Math.floor(ys + radius);\n      if (max_y > this.size - 1) max_y = this.size - 1;\n      var min_x = Math.floor(xs - radius);\n      if (min_x < 1) min_x = 1;\n      var max_x = Math.floor(xs + radius);\n      if (max_x > this.size - 1) max_x = this.size - 1; // Don't polygonize in the outer layer because normals aren't\n      // well-defined there.\n\n      var x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n\n      for (z = min_z; z < max_z; z++) {\n        z_offset = this.size2 * z;\n        fz = z / this.size - ballz;\n        fz2 = fz * fz;\n\n        for (y = min_y; y < max_y; y++) {\n          y_offset = z_offset + this.size * y;\n          fy = y / this.size - bally;\n          fy2 = fy * fy;\n\n          for (x = min_x; x < max_x; x++) {\n            fx = x / this.size - ballx;\n            val = strength / (0.000001 + fx * fx + fy2 + fz2) - subtract;\n\n            if (val > 0.0) {\n              this.field[y_offset + x] += val * sign; // optimization\n              // http://www.geisswerks.com/ryan/BLOBS/blobs.html\n\n              var ratio = Math.sqrt((x - xs) * (x - xs) + (y - ys) * (y - ys) + (z - zs) * (z - zs)) / radius;\n              var contrib = 1 - ratio * ratio * ratio * (ratio * (ratio * 6 - 15) + 10);\n              this.palette[(y_offset + x) * 3 + 0] += ballColor.r * contrib;\n              this.palette[(y_offset + x) * 3 + 1] += ballColor.g * contrib;\n              this.palette[(y_offset + x) * 3 + 2] += ballColor.b * contrib;\n            }\n          }\n        }\n      }\n    };\n\n    _this.addPlaneX = function (strength, subtract) {\n      // cache attribute lookups\n      var size = this.size,\n          yd = this.yd,\n          zd = this.zd,\n          field = this.field;\n      var x,\n          y,\n          z,\n          xx,\n          val,\n          xdiv,\n          cxy,\n          dist = size * Math.sqrt(strength / subtract);\n      if (dist > size) dist = size;\n\n      for (x = 0; x < dist; x++) {\n        xdiv = x / size;\n        xx = xdiv * xdiv;\n        val = strength / (0.0001 + xx) - subtract;\n\n        if (val > 0.0) {\n          for (y = 0; y < size; y++) {\n            cxy = x + y * yd;\n\n            for (z = 0; z < size; z++) {\n              field[zd * z + cxy] += val;\n            }\n          }\n        }\n      }\n    };\n\n    _this.addPlaneY = function (strength, subtract) {\n      // cache attribute lookups\n      var size = this.size,\n          yd = this.yd,\n          zd = this.zd,\n          field = this.field;\n      var x,\n          y,\n          z,\n          yy,\n          val,\n          ydiv,\n          cy,\n          cxy,\n          dist = size * Math.sqrt(strength / subtract);\n      if (dist > size) dist = size;\n\n      for (y = 0; y < dist; y++) {\n        ydiv = y / size;\n        yy = ydiv * ydiv;\n        val = strength / (0.0001 + yy) - subtract;\n\n        if (val > 0.0) {\n          cy = y * yd;\n\n          for (x = 0; x < size; x++) {\n            cxy = cy + x;\n\n            for (z = 0; z < size; z++) {\n              field[zd * z + cxy] += val;\n            }\n          }\n        }\n      }\n    };\n\n    _this.addPlaneZ = function (strength, subtract) {\n      // cache attribute lookups\n      var size = this.size,\n          yd = this.yd,\n          zd = this.zd,\n          field = this.field;\n      var x,\n          y,\n          z,\n          zz,\n          val,\n          zdiv,\n          cz,\n          cyz,\n          dist = size * Math.sqrt(strength / subtract);\n      if (dist > size) dist = size;\n\n      for (z = 0; z < dist; z++) {\n        zdiv = z / size;\n        zz = zdiv * zdiv;\n        val = strength / (0.0001 + zz) - subtract;\n\n        if (val > 0.0) {\n          cz = zd * z;\n\n          for (y = 0; y < size; y++) {\n            cyz = cz + y * yd;\n\n            for (x = 0; x < size; x++) {\n              field[cyz + x] += val;\n            }\n          }\n        }\n      }\n    }; /////////////////////////////////////\n    // Updates\n    /////////////////////////////////////\n\n\n    _this.setCell = function (x, y, z, value) {\n      var index = this.size2 * z + this.size * y + x;\n      this.field[index] = value;\n    };\n\n    _this.getCell = function (x, y, z) {\n      var index = this.size2 * z + this.size * y + x;\n      return this.field[index];\n    };\n\n    _this.blur = function () {\n      var intensity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var field = this.field;\n      var fieldCopy = field.slice();\n      var size = this.size;\n      var size2 = this.size2;\n\n      for (var x = 0; x < size; x++) {\n        for (var y = 0; y < size; y++) {\n          for (var z = 0; z < size; z++) {\n            var index = size2 * z + size * y + x;\n            var val = fieldCopy[index];\n            var count = 1;\n\n            for (var x2 = -1; x2 <= 1; x2 += 2) {\n              var x3 = x2 + x;\n              if (x3 < 0 || x3 >= size) continue;\n\n              for (var y2 = -1; y2 <= 1; y2 += 2) {\n                var y3 = y2 + y;\n                if (y3 < 0 || y3 >= size) continue;\n\n                for (var z2 = -1; z2 <= 1; z2 += 2) {\n                  var z3 = z2 + z;\n                  if (z3 < 0 || z3 >= size) continue;\n                  var index2 = size2 * z3 + size * y3 + x3;\n                  var val2 = fieldCopy[index2];\n                  count++;\n                  val += intensity * (val2 - val) / count;\n                }\n              }\n            }\n\n            field[index] = val;\n          }\n        }\n      }\n    };\n\n    _this.reset = function () {\n      // wipe the normal cache\n      for (var i = 0; i < this.size3; i++) {\n        this.normal_cache[i * 3] = 0.0;\n        this.field[i] = 0.0;\n        this.palette[i * 3] = this.palette[i * 3 + 1] = this.palette[i * 3 + 2] = 0.0;\n      }\n    };\n\n    _this.render = function (renderCallback) {\n      this.begin(); // Triangulate. Yeah, this is slow.\n\n      var smin2 = this.size - 2;\n\n      for (var z = 1; z < smin2; z++) {\n        var z_offset = this.size2 * z;\n        var fz = (z - this.halfsize) / this.halfsize; //+ 1\n\n        for (var y = 1; y < smin2; y++) {\n          var y_offset = z_offset + this.size * y;\n          var fy = (y - this.halfsize) / this.halfsize; //+ 1\n\n          for (var x = 1; x < smin2; x++) {\n            var fx = (x - this.halfsize) / this.halfsize; //+ 1\n\n            var q = y_offset + x;\n            polygonize(fx, fy, fz, q, this.isolation, renderCallback);\n          }\n        }\n      }\n\n      this.end(renderCallback);\n    };\n\n    _this.generateGeometry = function () {\n      console.warn('THREE.MarchingCubes: generateGeometry() now returns BufferGeometry');\n      return this.generateBufferGeometry();\n    };\n\n    function concatenate(a, b, length) {\n      var result = new Float32Array(a.length + length);\n      result.set(a, 0);\n      result.set(b.slice(0, length), a.length);\n      return result;\n    }\n\n    _this.generateBufferGeometry = function () {\n      var geo = new _three.BufferGeometry();\n      var posArray = new Float32Array();\n      var normArray = new Float32Array();\n      var colorArray = new Float32Array();\n      var uvArray = new Float32Array();\n      var scope = this;\n\n      var geo_callback = function geo_callback(object) {\n        if (scope.hasPositions) posArray = concatenate(posArray, object.positionArray, object.count * 3);\n        if (scope.hasNormals) normArray = concatenate(normArray, object.normalArray, object.count * 3);\n        if (scope.hasColors) colorArray = concatenate(colorArray, object.colorArray, object.count * 3);\n        if (scope.hasUvs) uvArray = concatenate(uvArray, object.uvArray, object.count * 2);\n        object.count = 0;\n      };\n\n      this.render(geo_callback);\n      if (this.hasPositions) geo.setAttribute('position', new _three.BufferAttribute(posArray, 3));\n      if (this.hasNormals) geo.setAttribute('normal', new _three.BufferAttribute(normArray, 3));\n      if (this.hasColors) geo.setAttribute('color', new _three.BufferAttribute(colorArray, 3));\n      if (this.hasUvs) geo.setAttribute('uv', new _three.BufferAttribute(uvArray, 2));\n      return geo;\n    };\n\n    _this.init(resolution);\n\n    return _this;\n  }\n\n  return MarchingCubes;\n}(_three.ImmediateRenderObject);\n\nexports.MarchingCubes = MarchingCubes;\nMarchingCubes.prototype.isMarchingCubes = true; /////////////////////////////////////\n// Marching cubes lookup tables\n/////////////////////////////////////\n// These tables are straight from Paul Bourke's page:\n// http://local.wasp.uwa.edu.au/~pbourke/geometry/polygonise/\n// who in turn got them from Cory Gene Bloyd.\n\nvar edgeTable = new Int32Array([0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c, 0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00, 0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c, 0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90, 0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c, 0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30, 0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac, 0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0, 0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60, 0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc, 0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0, 0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c, 0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950, 0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc, 0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0, 0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc, 0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0, 0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650, 0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc, 0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0, 0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460, 0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac, 0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0, 0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c, 0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230, 0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c, 0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190, 0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c, 0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0]);\nexports.edgeTable = edgeTable;\nvar triTable = new Int32Array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1, 3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1, 3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, 9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1, 8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1, 3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, 1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1, 4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1, 4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1, 2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1, 9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1, 10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1, 5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1, 5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1, 0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, 1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1, 8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1, 2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, 7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, 9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1, 2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1, 11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1, 9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1, 5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1, 11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1, 11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1, 9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1, 5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1, 2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1, 6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1, 3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1, 6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1, 6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, 1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1, 8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1, 7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1, 3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1, 0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, 9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1, 8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1, 5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1, 0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1, 6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1, 10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, 10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1, 8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1, 1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1, 0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, 10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1, 3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1, 6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1, 9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1, 8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1, 3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1, 6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1, 10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1, 10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1, 1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1, 7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, 7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1, 1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1, 11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1, 8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1, 0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1, 7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, 1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1, 10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1, 10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1, 0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1, 7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1, 6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1, 9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1, 6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1, 4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1, 10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1, 8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1, 1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1, 10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1, 4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1, 10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1, 9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1, 7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1, 3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1, 7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1, 3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1, 6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1, 9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1, 1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1, 4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1, 7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1, 6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1, 0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1, 6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1, 0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1, 11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1, 6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1, 5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1, 9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1, 1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1, 1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1, 10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1, 0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1, 5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1, 10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1, 11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1, 9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1, 7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1, 2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, 8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1, 9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1, 9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1, 1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, 9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1, 9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, 5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1, 0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1, 10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1, 2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1, 0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1, 0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1, 9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1, 5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1, 3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1, 5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1, 1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1, 3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1, 4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1, 9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1, 11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1, 11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1, 2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1, 9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1, 3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1, 1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1, 4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1, 3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1, 0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1, 9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1, 1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\nexports.triTable = triTable;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["getCell","size2","generateBufferGeometry","begin","MarchingCubes","setCell","edgeTable","prototype","uvArray","maxCount","hasUvs","generateGeometry","delta","enableColors","size3","__esModule","zd","reset","count","enableUvs","configurable","isMarchingCubes","value","hasPositions","addPlaneX","yd","addPlaneZ","hasColors","field","writable","addPlaneY","normalArray","normal_cache","render","init","__proto__","halfsize","triTable","palette","colorArray","size","addBall","blur","hasNormals","end","positionArray","isolation","constructor","resolution"]],"~:compiled-at",1630917515377,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$objects$MarchingCubes.js\",\n\"lineCount\":54,\n\"mappings\":\"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+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H;AAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H;AAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H;AAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H;AAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,CAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAi+H,EAAj+H,CAAf,CACfxO,QAAQ6B,CAAAA,QAAR,CAAmBA,QArsBgG;\",\n\"sources\":[\"node_modules/three-stdlib/objects/MarchingCubes.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$objects$MarchingCubes\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.triTable = exports.edgeTable = exports.MarchingCubes = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n/**\\n * Port of http://webglsamples.org/blob/blob.html\\n */\\nvar MarchingCubes =\\n/*#__PURE__*/\\nfunction (_ImmediateRenderObjec) {\\n  _inherits(MarchingCubes, _ImmediateRenderObjec);\\n\\n  function MarchingCubes(resolution, material, enableUvs, enableColors) {\\n    var _this;\\n\\n    _classCallCheck(this, MarchingCubes);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarchingCubes).call(this, material));\\n\\n    var scope = _assertThisInitialized(_this); // temp buffers used in polygonize\\n\\n\\n    var vlist = new Float32Array(12 * 3);\\n    var nlist = new Float32Array(12 * 3);\\n    var clist = new Float32Array(12 * 3);\\n    _this.enableUvs = enableUvs !== undefined ? enableUvs : false;\\n    _this.enableColors = enableColors !== undefined ? enableColors : false; // functions have to be object properties\\n    // prototype functions kill performance\\n    // (tested and it was 4x slower !!!)\\n\\n    _this.init = function (resolution) {\\n      this.resolution = resolution; // parameters\\n\\n      this.isolation = 80.0; // size of field, 32 is pushing it in Javascript :)\\n\\n      this.size = resolution;\\n      this.size2 = this.size * this.size;\\n      this.size3 = this.size2 * this.size;\\n      this.halfsize = this.size / 2.0; // deltas\\n\\n      this.delta = 2.0 / this.size;\\n      this.yd = this.size;\\n      this.zd = this.size2;\\n      this.field = new Float32Array(this.size3);\\n      this.normal_cache = new Float32Array(this.size3 * 3);\\n      this.palette = new Float32Array(this.size3 * 3); // immediate render mode simulator\\n\\n      this.maxCount = 4096; // TODO: find the fastest size for this buffer\\n\\n      this.count = 0;\\n      this.hasPositions = false;\\n      this.hasNormals = false;\\n      this.hasColors = false;\\n      this.hasUvs = false;\\n      this.positionArray = new Float32Array(this.maxCount * 3);\\n      this.normalArray = new Float32Array(this.maxCount * 3);\\n\\n      if (this.enableUvs) {\\n        this.uvArray = new Float32Array(this.maxCount * 2);\\n      }\\n\\n      if (this.enableColors) {\\n        this.colorArray = new Float32Array(this.maxCount * 3);\\n      }\\n    }; ///////////////////////\\n    // Polygonization\\n    ///////////////////////\\n\\n\\n    function lerp(a, b, t) {\\n      return a + (b - a) * t;\\n    }\\n\\n    function VIntX(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\\n      var mu = (isol - valp1) / (valp2 - valp1),\\n          nc = scope.normal_cache;\\n      vlist[offset + 0] = x + mu * scope.delta;\\n      vlist[offset + 1] = y;\\n      vlist[offset + 2] = z;\\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q + 3], mu);\\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q + 4], mu);\\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q + 5], mu);\\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\\n    }\\n\\n    function VIntY(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\\n      var mu = (isol - valp1) / (valp2 - valp1),\\n          nc = scope.normal_cache;\\n      vlist[offset + 0] = x;\\n      vlist[offset + 1] = y + mu * scope.delta;\\n      vlist[offset + 2] = z;\\n      var q2 = q + scope.yd * 3;\\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\\n    }\\n\\n    function VIntZ(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\\n      var mu = (isol - valp1) / (valp2 - valp1),\\n          nc = scope.normal_cache;\\n      vlist[offset + 0] = x;\\n      vlist[offset + 1] = y;\\n      vlist[offset + 2] = z + mu * scope.delta;\\n      var q2 = q + scope.zd * 3;\\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\\n    }\\n\\n    function compNorm(q) {\\n      var q3 = q * 3;\\n\\n      if (scope.normal_cache[q3] === 0.0) {\\n        scope.normal_cache[q3 + 0] = scope.field[q - 1] - scope.field[q + 1];\\n        scope.normal_cache[q3 + 1] = scope.field[q - scope.yd] - scope.field[q + scope.yd];\\n        scope.normal_cache[q3 + 2] = scope.field[q - scope.zd] - scope.field[q + scope.zd];\\n      }\\n    } // Returns total number of triangles. Fills triangles.\\n    // (this is where most of time is spent - it's inner work of O(n3) loop )\\n\\n\\n    function polygonize(fx, fy, fz, q, isol, renderCallback) {\\n      // cache indices\\n      var q1 = q + 1,\\n          qy = q + scope.yd,\\n          qz = q + scope.zd,\\n          q1y = q1 + scope.yd,\\n          q1z = q1 + scope.zd,\\n          qyz = q + scope.yd + scope.zd,\\n          q1yz = q1 + scope.yd + scope.zd;\\n      var cubeindex = 0;\\n      var field0 = scope.field[q],\\n          field1 = scope.field[q1],\\n          field2 = scope.field[qy],\\n          field3 = scope.field[q1y],\\n          field4 = scope.field[qz],\\n          field5 = scope.field[q1z],\\n          field6 = scope.field[qyz],\\n          field7 = scope.field[q1yz];\\n      if (field0 < isol) cubeindex |= 1;\\n      if (field1 < isol) cubeindex |= 2;\\n      if (field2 < isol) cubeindex |= 8;\\n      if (field3 < isol) cubeindex |= 4;\\n      if (field4 < isol) cubeindex |= 16;\\n      if (field5 < isol) cubeindex |= 32;\\n      if (field6 < isol) cubeindex |= 128;\\n      if (field7 < isol) cubeindex |= 64; // if cube is entirely in/out of the surface - bail, nothing to draw\\n\\n      var bits = edgeTable[cubeindex];\\n      if (bits === 0) return 0;\\n      var d = scope.delta,\\n          fx2 = fx + d,\\n          fy2 = fy + d,\\n          fz2 = fz + d; // top of the cube\\n\\n      if (bits & 1) {\\n        compNorm(q);\\n        compNorm(q1);\\n        VIntX(q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1);\\n      }\\n\\n      if (bits & 2) {\\n        compNorm(q1);\\n        compNorm(q1y);\\n        VIntY(q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y);\\n      }\\n\\n      if (bits & 4) {\\n        compNorm(qy);\\n        compNorm(q1y);\\n        VIntX(qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y);\\n      }\\n\\n      if (bits & 8) {\\n        compNorm(q);\\n        compNorm(qy);\\n        VIntY(q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy);\\n      } // bottom of the cube\\n\\n\\n      if (bits & 16) {\\n        compNorm(qz);\\n        compNorm(q1z);\\n        VIntX(qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z);\\n      }\\n\\n      if (bits & 32) {\\n        compNorm(q1z);\\n        compNorm(q1yz);\\n        VIntY(q1z * 3, 15, isol, fx2, fy, fz2, field5, field7, q1z, q1yz);\\n      }\\n\\n      if (bits & 64) {\\n        compNorm(qyz);\\n        compNorm(q1yz);\\n        VIntX(qyz * 3, 18, isol, fx, fy2, fz2, field6, field7, qyz, q1yz);\\n      }\\n\\n      if (bits & 128) {\\n        compNorm(qz);\\n        compNorm(qyz);\\n        VIntY(qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz);\\n      } // vertical lines of the cube\\n\\n\\n      if (bits & 256) {\\n        compNorm(q);\\n        compNorm(qz);\\n        VIntZ(q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz);\\n      }\\n\\n      if (bits & 512) {\\n        compNorm(q1);\\n        compNorm(q1z);\\n        VIntZ(q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z);\\n      }\\n\\n      if (bits & 1024) {\\n        compNorm(q1y);\\n        compNorm(q1yz);\\n        VIntZ(q1y * 3, 30, isol, fx2, fy2, fz, field3, field7, q1y, q1yz);\\n      }\\n\\n      if (bits & 2048) {\\n        compNorm(qy);\\n        compNorm(qyz);\\n        VIntZ(qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz);\\n      }\\n\\n      cubeindex <<= 4; // re-purpose cubeindex into an offset into triTable\\n\\n      var o1,\\n          o2,\\n          o3,\\n          numtris = 0,\\n          i = 0; // here is where triangles are created\\n\\n      while (triTable[cubeindex + i] != -1) {\\n        o1 = cubeindex + i;\\n        o2 = o1 + 1;\\n        o3 = o1 + 2;\\n        posnormtriv(vlist, nlist, clist, 3 * triTable[o1], 3 * triTable[o2], 3 * triTable[o3], renderCallback);\\n        i += 3;\\n        numtris++;\\n      }\\n\\n      return numtris;\\n    } /////////////////////////////////////\\n    // Immediate render mode simulator\\n    /////////////////////////////////////\\n\\n\\n    function posnormtriv(pos, norm, colors, o1, o2, o3, renderCallback) {\\n      var c = scope.count * 3; // positions\\n\\n      scope.positionArray[c + 0] = pos[o1];\\n      scope.positionArray[c + 1] = pos[o1 + 1];\\n      scope.positionArray[c + 2] = pos[o1 + 2];\\n      scope.positionArray[c + 3] = pos[o2];\\n      scope.positionArray[c + 4] = pos[o2 + 1];\\n      scope.positionArray[c + 5] = pos[o2 + 2];\\n      scope.positionArray[c + 6] = pos[o3];\\n      scope.positionArray[c + 7] = pos[o3 + 1];\\n      scope.positionArray[c + 8] = pos[o3 + 2]; // normals\\n\\n      if (scope.material.flatShading === true) {\\n        var nx = (norm[o1 + 0] + norm[o2 + 0] + norm[o3 + 0]) / 3;\\n        var ny = (norm[o1 + 1] + norm[o2 + 1] + norm[o3 + 1]) / 3;\\n        var nz = (norm[o1 + 2] + norm[o2 + 2] + norm[o3 + 2]) / 3;\\n        scope.normalArray[c + 0] = nx;\\n        scope.normalArray[c + 1] = ny;\\n        scope.normalArray[c + 2] = nz;\\n        scope.normalArray[c + 3] = nx;\\n        scope.normalArray[c + 4] = ny;\\n        scope.normalArray[c + 5] = nz;\\n        scope.normalArray[c + 6] = nx;\\n        scope.normalArray[c + 7] = ny;\\n        scope.normalArray[c + 8] = nz;\\n      } else {\\n        scope.normalArray[c + 0] = norm[o1 + 0];\\n        scope.normalArray[c + 1] = norm[o1 + 1];\\n        scope.normalArray[c + 2] = norm[o1 + 2];\\n        scope.normalArray[c + 3] = norm[o2 + 0];\\n        scope.normalArray[c + 4] = norm[o2 + 1];\\n        scope.normalArray[c + 5] = norm[o2 + 2];\\n        scope.normalArray[c + 6] = norm[o3 + 0];\\n        scope.normalArray[c + 7] = norm[o3 + 1];\\n        scope.normalArray[c + 8] = norm[o3 + 2];\\n      } // uvs\\n\\n\\n      if (scope.enableUvs) {\\n        var d = scope.count * 2;\\n        scope.uvArray[d + 0] = pos[o1 + 0];\\n        scope.uvArray[d + 1] = pos[o1 + 2];\\n        scope.uvArray[d + 2] = pos[o2 + 0];\\n        scope.uvArray[d + 3] = pos[o2 + 2];\\n        scope.uvArray[d + 4] = pos[o3 + 0];\\n        scope.uvArray[d + 5] = pos[o3 + 2];\\n      } // colors\\n\\n\\n      if (scope.enableColors) {\\n        scope.colorArray[c + 0] = colors[o1 + 0];\\n        scope.colorArray[c + 1] = colors[o1 + 1];\\n        scope.colorArray[c + 2] = colors[o1 + 2];\\n        scope.colorArray[c + 3] = colors[o2 + 0];\\n        scope.colorArray[c + 4] = colors[o2 + 1];\\n        scope.colorArray[c + 5] = colors[o2 + 2];\\n        scope.colorArray[c + 6] = colors[o3 + 0];\\n        scope.colorArray[c + 7] = colors[o3 + 1];\\n        scope.colorArray[c + 8] = colors[o3 + 2];\\n      }\\n\\n      scope.count += 3;\\n\\n      if (scope.count >= scope.maxCount - 3) {\\n        scope.hasPositions = true;\\n        scope.hasNormals = true;\\n\\n        if (scope.enableUvs) {\\n          scope.hasUvs = true;\\n        }\\n\\n        if (scope.enableColors) {\\n          scope.hasColors = true;\\n        }\\n\\n        renderCallback(scope);\\n      }\\n    }\\n\\n    _this.begin = function () {\\n      this.count = 0;\\n      this.hasPositions = false;\\n      this.hasNormals = false;\\n      this.hasUvs = false;\\n      this.hasColors = false;\\n    };\\n\\n    _this.end = function (renderCallback) {\\n      if (this.count === 0) return;\\n\\n      for (var i = this.count * 3; i < this.positionArray.length; i++) {\\n        this.positionArray[i] = 0.0;\\n      }\\n\\n      this.hasPositions = true;\\n      this.hasNormals = true;\\n\\n      if (this.enableUvs && this.material.map) {\\n        this.hasUvs = true;\\n      }\\n\\n      if (this.enableColors && this.material.vertexColors !== _three.NoColors) {\\n        this.hasColors = true;\\n      }\\n\\n      renderCallback(this);\\n    }; /////////////////////////////////////\\n    // Metaballs\\n    /////////////////////////////////////\\n    // Adds a reciprocal ball (nice and blobby) that, to be fast, fades to zero after\\n    // a fixed distance, determined by strength and subtract.\\n\\n\\n    _this.addBall = function (ballx, bally, ballz, strength, subtract, colors) {\\n      var sign = Math.sign(strength);\\n      strength = Math.abs(strength);\\n      var userDefineColor = !(colors === undefined || colors === null);\\n      var ballColor = new _three.Color(ballx, bally, ballz);\\n\\n      if (userDefineColor) {\\n        try {\\n          ballColor = colors instanceof _three.Color ? colors : Array.isArray(colors) ? new _three.Color(Math.min(Math.abs(colors[0]), 1), Math.min(Math.abs(colors[1]), 1), Math.min(Math.abs(colors[2]), 1)) : new _three.Color(colors);\\n        } catch (err) {\\n          ballColor = new _three.Color(ballx, bally, ballz);\\n        }\\n      } // Let's solve the equation to find the radius:\\n      // 1.0 / (0.000001 + radius^2) * strength - subtract = 0\\n      // strength / (radius^2) = subtract\\n      // strength = subtract * radius^2\\n      // radius^2 = strength / subtract\\n      // radius = sqrt(strength / subtract)\\n\\n\\n      var radius = this.size * Math.sqrt(strength / subtract),\\n          zs = ballz * this.size,\\n          ys = bally * this.size,\\n          xs = ballx * this.size;\\n      var min_z = Math.floor(zs - radius);\\n      if (min_z < 1) min_z = 1;\\n      var max_z = Math.floor(zs + radius);\\n      if (max_z > this.size - 1) max_z = this.size - 1;\\n      var min_y = Math.floor(ys - radius);\\n      if (min_y < 1) min_y = 1;\\n      var max_y = Math.floor(ys + radius);\\n      if (max_y > this.size - 1) max_y = this.size - 1;\\n      var min_x = Math.floor(xs - radius);\\n      if (min_x < 1) min_x = 1;\\n      var max_x = Math.floor(xs + radius);\\n      if (max_x > this.size - 1) max_x = this.size - 1; // Don't polygonize in the outer layer because normals aren't\\n      // well-defined there.\\n\\n      var x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\\n\\n      for (z = min_z; z < max_z; z++) {\\n        z_offset = this.size2 * z;\\n        fz = z / this.size - ballz;\\n        fz2 = fz * fz;\\n\\n        for (y = min_y; y < max_y; y++) {\\n          y_offset = z_offset + this.size * y;\\n          fy = y / this.size - bally;\\n          fy2 = fy * fy;\\n\\n          for (x = min_x; x < max_x; x++) {\\n            fx = x / this.size - ballx;\\n            val = strength / (0.000001 + fx * fx + fy2 + fz2) - subtract;\\n\\n            if (val > 0.0) {\\n              this.field[y_offset + x] += val * sign; // optimization\\n              // http://www.geisswerks.com/ryan/BLOBS/blobs.html\\n\\n              var ratio = Math.sqrt((x - xs) * (x - xs) + (y - ys) * (y - ys) + (z - zs) * (z - zs)) / radius;\\n              var contrib = 1 - ratio * ratio * ratio * (ratio * (ratio * 6 - 15) + 10);\\n              this.palette[(y_offset + x) * 3 + 0] += ballColor.r * contrib;\\n              this.palette[(y_offset + x) * 3 + 1] += ballColor.g * contrib;\\n              this.palette[(y_offset + x) * 3 + 2] += ballColor.b * contrib;\\n            }\\n          }\\n        }\\n      }\\n    };\\n\\n    _this.addPlaneX = function (strength, subtract) {\\n      // cache attribute lookups\\n      var size = this.size,\\n          yd = this.yd,\\n          zd = this.zd,\\n          field = this.field;\\n      var x,\\n          y,\\n          z,\\n          xx,\\n          val,\\n          xdiv,\\n          cxy,\\n          dist = size * Math.sqrt(strength / subtract);\\n      if (dist > size) dist = size;\\n\\n      for (x = 0; x < dist; x++) {\\n        xdiv = x / size;\\n        xx = xdiv * xdiv;\\n        val = strength / (0.0001 + xx) - subtract;\\n\\n        if (val > 0.0) {\\n          for (y = 0; y < size; y++) {\\n            cxy = x + y * yd;\\n\\n            for (z = 0; z < size; z++) {\\n              field[zd * z + cxy] += val;\\n            }\\n          }\\n        }\\n      }\\n    };\\n\\n    _this.addPlaneY = function (strength, subtract) {\\n      // cache attribute lookups\\n      var size = this.size,\\n          yd = this.yd,\\n          zd = this.zd,\\n          field = this.field;\\n      var x,\\n          y,\\n          z,\\n          yy,\\n          val,\\n          ydiv,\\n          cy,\\n          cxy,\\n          dist = size * Math.sqrt(strength / subtract);\\n      if (dist > size) dist = size;\\n\\n      for (y = 0; y < dist; y++) {\\n        ydiv = y / size;\\n        yy = ydiv * ydiv;\\n        val = strength / (0.0001 + yy) - subtract;\\n\\n        if (val > 0.0) {\\n          cy = y * yd;\\n\\n          for (x = 0; x < size; x++) {\\n            cxy = cy + x;\\n\\n            for (z = 0; z < size; z++) {\\n              field[zd * z + cxy] += val;\\n            }\\n          }\\n        }\\n      }\\n    };\\n\\n    _this.addPlaneZ = function (strength, subtract) {\\n      // cache attribute lookups\\n      var size = this.size,\\n          yd = this.yd,\\n          zd = this.zd,\\n          field = this.field;\\n      var x,\\n          y,\\n          z,\\n          zz,\\n          val,\\n          zdiv,\\n          cz,\\n          cyz,\\n          dist = size * Math.sqrt(strength / subtract);\\n      if (dist > size) dist = size;\\n\\n      for (z = 0; z < dist; z++) {\\n        zdiv = z / size;\\n        zz = zdiv * zdiv;\\n        val = strength / (0.0001 + zz) - subtract;\\n\\n        if (val > 0.0) {\\n          cz = zd * z;\\n\\n          for (y = 0; y < size; y++) {\\n            cyz = cz + y * yd;\\n\\n            for (x = 0; x < size; x++) {\\n              field[cyz + x] += val;\\n            }\\n          }\\n        }\\n      }\\n    }; /////////////////////////////////////\\n    // Updates\\n    /////////////////////////////////////\\n\\n\\n    _this.setCell = function (x, y, z, value) {\\n      var index = this.size2 * z + this.size * y + x;\\n      this.field[index] = value;\\n    };\\n\\n    _this.getCell = function (x, y, z) {\\n      var index = this.size2 * z + this.size * y + x;\\n      return this.field[index];\\n    };\\n\\n    _this.blur = function () {\\n      var intensity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\\n      var field = this.field;\\n      var fieldCopy = field.slice();\\n      var size = this.size;\\n      var size2 = this.size2;\\n\\n      for (var x = 0; x < size; x++) {\\n        for (var y = 0; y < size; y++) {\\n          for (var z = 0; z < size; z++) {\\n            var index = size2 * z + size * y + x;\\n            var val = fieldCopy[index];\\n            var count = 1;\\n\\n            for (var x2 = -1; x2 <= 1; x2 += 2) {\\n              var x3 = x2 + x;\\n              if (x3 < 0 || x3 >= size) continue;\\n\\n              for (var y2 = -1; y2 <= 1; y2 += 2) {\\n                var y3 = y2 + y;\\n                if (y3 < 0 || y3 >= size) continue;\\n\\n                for (var z2 = -1; z2 <= 1; z2 += 2) {\\n                  var z3 = z2 + z;\\n                  if (z3 < 0 || z3 >= size) continue;\\n                  var index2 = size2 * z3 + size * y3 + x3;\\n                  var val2 = fieldCopy[index2];\\n                  count++;\\n                  val += intensity * (val2 - val) / count;\\n                }\\n              }\\n            }\\n\\n            field[index] = val;\\n          }\\n        }\\n      }\\n    };\\n\\n    _this.reset = function () {\\n      // wipe the normal cache\\n      for (var i = 0; i < this.size3; i++) {\\n        this.normal_cache[i * 3] = 0.0;\\n        this.field[i] = 0.0;\\n        this.palette[i * 3] = this.palette[i * 3 + 1] = this.palette[i * 3 + 2] = 0.0;\\n      }\\n    };\\n\\n    _this.render = function (renderCallback) {\\n      this.begin(); // Triangulate. Yeah, this is slow.\\n\\n      var smin2 = this.size - 2;\\n\\n      for (var z = 1; z < smin2; z++) {\\n        var z_offset = this.size2 * z;\\n        var fz = (z - this.halfsize) / this.halfsize; //+ 1\\n\\n        for (var y = 1; y < smin2; y++) {\\n          var y_offset = z_offset + this.size * y;\\n          var fy = (y - this.halfsize) / this.halfsize; //+ 1\\n\\n          for (var x = 1; x < smin2; x++) {\\n            var fx = (x - this.halfsize) / this.halfsize; //+ 1\\n\\n            var q = y_offset + x;\\n            polygonize(fx, fy, fz, q, this.isolation, renderCallback);\\n          }\\n        }\\n      }\\n\\n      this.end(renderCallback);\\n    };\\n\\n    _this.generateGeometry = function () {\\n      console.warn('THREE.MarchingCubes: generateGeometry() now returns BufferGeometry');\\n      return this.generateBufferGeometry();\\n    };\\n\\n    function concatenate(a, b, length) {\\n      var result = new Float32Array(a.length + length);\\n      result.set(a, 0);\\n      result.set(b.slice(0, length), a.length);\\n      return result;\\n    }\\n\\n    _this.generateBufferGeometry = function () {\\n      var geo = new _three.BufferGeometry();\\n      var posArray = new Float32Array();\\n      var normArray = new Float32Array();\\n      var colorArray = new Float32Array();\\n      var uvArray = new Float32Array();\\n      var scope = this;\\n\\n      var geo_callback = function geo_callback(object) {\\n        if (scope.hasPositions) posArray = concatenate(posArray, object.positionArray, object.count * 3);\\n        if (scope.hasNormals) normArray = concatenate(normArray, object.normalArray, object.count * 3);\\n        if (scope.hasColors) colorArray = concatenate(colorArray, object.colorArray, object.count * 3);\\n        if (scope.hasUvs) uvArray = concatenate(uvArray, object.uvArray, object.count * 2);\\n        object.count = 0;\\n      };\\n\\n      this.render(geo_callback);\\n      if (this.hasPositions) geo.setAttribute('position', new _three.BufferAttribute(posArray, 3));\\n      if (this.hasNormals) geo.setAttribute('normal', new _three.BufferAttribute(normArray, 3));\\n      if (this.hasColors) geo.setAttribute('color', new _three.BufferAttribute(colorArray, 3));\\n      if (this.hasUvs) geo.setAttribute('uv', new _three.BufferAttribute(uvArray, 2));\\n      return geo;\\n    };\\n\\n    _this.init(resolution);\\n\\n    return _this;\\n  }\\n\\n  return MarchingCubes;\\n}(_three.ImmediateRenderObject);\\n\\nexports.MarchingCubes = MarchingCubes;\\nMarchingCubes.prototype.isMarchingCubes = true; /////////////////////////////////////\\n// Marching cubes lookup tables\\n/////////////////////////////////////\\n// These tables are straight from Paul Bourke's page:\\n// http://local.wasp.uwa.edu.au/~pbourke/geometry/polygonise/\\n// who in turn got them from Cory Gene Bloyd.\\n\\nvar edgeTable = new Int32Array([0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c, 0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00, 0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c, 0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90, 0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c, 0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30, 0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac, 0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0, 0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60, 0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc, 0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0, 0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c, 0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950, 0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc, 0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0, 0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc, 0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0, 0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650, 0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc, 0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0, 0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460, 0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac, 0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0, 0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c, 0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230, 0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c, 0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190, 0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c, 0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0]);\\nexports.edgeTable = edgeTable;\\nvar triTable = new Int32Array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1, 3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1, 3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, 9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1, 8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1, 3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, 1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1, 4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1, 4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1, 2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1, 9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1, 10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1, 5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1, 5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1, 0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, 1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1, 8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1, 2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, 7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, 9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1, 2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1, 11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1, 9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1, 5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1, 11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1, 11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1, 9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1, 5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1, 2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1, 6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1, 3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1, 6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1, 6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, 1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1, 8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1, 7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1, 3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1, 0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, 9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1, 8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1, 5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1, 0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1, 6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1, 10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, 10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1, 8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1, 1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1, 0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, 10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1, 3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1, 6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1, 9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1, 8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1, 3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1, 6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1, 10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1, 10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1, 1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1, 7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, 7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1, 1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1, 11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1, 8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1, 0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1, 7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, 1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1, 10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1, 10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1, 0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1, 7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1, 6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1, 9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1, 6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1, 4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1, 10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1, 8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1, 1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1, 10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1, 4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1, 10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1, 9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1, 7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1, 3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1, 7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1, 3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1, 6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1, 9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1, 1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1, 4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1, 7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1, 6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1, 0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1, 6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1, 0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1, 11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1, 6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1, 5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1, 9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1, 1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1, 1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1, 10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1, 0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1, 5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1, 10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1, 11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1, 9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1, 7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1, 2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, 8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1, 9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1, 9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1, 1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, 9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1, 9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, 5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1, 0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1, 10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1, 2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1, 0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1, 0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1, 9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1, 5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1, 3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1, 5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1, 1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1, 3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1, 4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1, 9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1, 11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1, 11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1, 2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1, 9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1, 3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1, 1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1, 4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1, 3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1, 0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1, 9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1, 1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\\nexports.triTable = triTable;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_possibleConstructorReturn\",\"self\",\"call\",\"_assertThisInitialized\",\"_getPrototypeOf\",\"o\",\"Object\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"writable\",\"configurable\",\"_setPrototypeOf\",\"p\",\"defineProperty\",\"triTable\",\"edgeTable\",\"MarchingCubes\",\"_three\",\"_ImmediateRenderObjec\",\"resolution\",\"material\",\"enableUvs\",\"enableColors\",\"lerp\",\"a\",\"b\",\"t\",\"VIntX\",\"q\",\"offset\",\"isol\",\"x\",\"y\",\"z\",\"valp1\",\"valp2\",\"c_offset1\",\"c_offset2\",\"mu\",\"nc\",\"scope\",\"normal_cache\",\"vlist\",\"delta\",\"nlist\",\"clist\",\"palette\",\"VIntY\",\"q2\",\"yd\",\"VIntZ\",\"zd\",\"compNorm\",\"q3\",\"field\",\"concatenate\",\"length\",\"result\",\"Float32Array\",\"set\",\"slice\",\"instance\",\"_this\",\"undefined\",\"init\",\"_this.init\",\"isolation\",\"size\",\"size2\",\"size3\",\"halfsize\",\"maxCount\",\"count\",\"hasUvs\",\"hasColors\",\"hasNormals\",\"hasPositions\",\"positionArray\",\"normalArray\",\"uvArray\",\"colorArray\",\"begin\",\"_this.begin\",\"end\",\"_this.end\",\"renderCallback\",\"i\",\"map\",\"vertexColors\",\"NoColors\",\"addBall\",\"_this.addBall\",\"ballx\",\"bally\",\"ballz\",\"strength\",\"subtract\",\"colors\",\"sign\",\"Math\",\"abs\",\"userDefineColor\",\"ballColor\",\"Color\",\"Array\",\"isArray\",\"min\",\"err\",\"radius\",\"sqrt\",\"zs\",\"ys\",\"xs\",\"min_z\",\"floor\",\"max_z\",\"min_y\",\"max_y\",\"min_x\",\"max_x\",\"y_offset\",\"z_offset\",\"fx\",\"fz2\",\"fy2\",\"fz\",\"fy\",\"val\",\"ratio\",\"contrib\",\"r\",\"g\",\"addPlaneX\",\"_this.addPlaneX\",\"dist\",\"xdiv\",\"xx\",\"cxy\",\"addPlaneY\",\"_this.addPlaneY\",\"ydiv\",\"yy\",\"cy\",\"addPlaneZ\",\"_this.addPlaneZ\",\"zdiv\",\"zz\",\"cz\",\"cyz\",\"setCell\",\"_this.setCell\",\"getCell\",\"_this.getCell\",\"blur\",\"_this.blur\",\"intensity\",\"arguments\",\"fieldCopy\",\"index\",\"x2\",\"x3\",\"y2\",\"y3\",\"z2\",\"z3\",\"val2\",\"reset\",\"_this.reset\",\"render\",\"_this.render\",\"smin2\",\"q1\",\"qy\",\"qz\",\"q1y\",\"q1z\",\"qyz\",\"q1yz\",\"cubeindex\",\"field0\",\"field1\",\"field2\",\"field3\",\"field4\",\"field5\",\"field6\",\"field7\",\"bits\",\"d\",\"fx2\",\"numtris\",\"o1\",\"o2\",\"o3\",\"c\",\"pos\",\"flatShading\",\"nx\",\"norm\",\"ny\",\"nz\",\"generateGeometry\",\"_this.generateGeometry\",\"console\",\"warn\",\"generateBufferGeometry\",\"_this.generateBufferGeometry\",\"geo\",\"BufferGeometry\",\"posArray\",\"normArray\",\"geo_callback\",\"object\",\"setAttribute\",\"BufferAttribute\",\"ImmediateRenderObject\",\"isMarchingCubes\",\"Int32Array\"]\n}\n"]