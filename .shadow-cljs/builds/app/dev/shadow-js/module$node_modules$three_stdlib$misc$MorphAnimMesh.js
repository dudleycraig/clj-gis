["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/misc/MorphAnimMesh.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$misc$MorphAnimMesh=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.MorphAnimMesh=void 0;var _three=require(\"module$node_modules$three$build$three_module\");global=function(geometry,material){_three.Mesh.call(this,geometry,material);this.type=\"MorphAnimMesh\";this.mixer=new _three.AnimationMixer(this);this.activeAction=null};exports.MorphAnimMesh=global;global.prototype=Object.create(_three.Mesh.prototype);\nglobal.prototype.constructor=global;global.prototype.setDirectionForward=function(){this.mixer.timeScale=1};global.prototype.setDirectionBackward=function(){this.mixer.timeScale=-1};global.prototype.playAnimation=function(label,fps){this.activeAction&&(this.activeAction.stop(),this.activeAction=null);var clip=_three.AnimationClip.findByName(this,label);if(clip)label=this.mixer.clipAction(clip),label.timeScale=clip.tracks.length*fps/clip.duration,this.activeAction=label.play();else throw Error(\"THREE.MorphAnimMesh: animations[\"+\nlabel+\"] undefined in .playAnimation()\");};global.prototype.updateAnimation=function(delta){this.mixer.update(delta)};global.prototype.copy=function(source){_three.Mesh.prototype.copy.call(this,source);this.mixer=new _three.AnimationMixer(this);return this}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$misc$MorphAnimMesh\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MorphAnimMesh = void 0;\n\nvar _three = require(\"three\");\n\nvar MorphAnimMesh = function MorphAnimMesh(geometry, material) {\n  _three.Mesh.call(this, geometry, material);\n\n  this.type = 'MorphAnimMesh';\n  this.mixer = new _three.AnimationMixer(this);\n  this.activeAction = null;\n};\n\nexports.MorphAnimMesh = MorphAnimMesh;\nMorphAnimMesh.prototype = Object.create(_three.Mesh.prototype);\nMorphAnimMesh.prototype.constructor = MorphAnimMesh;\n\nMorphAnimMesh.prototype.setDirectionForward = function () {\n  this.mixer.timeScale = 1.0;\n};\n\nMorphAnimMesh.prototype.setDirectionBackward = function () {\n  this.mixer.timeScale = -1.0;\n};\n\nMorphAnimMesh.prototype.playAnimation = function (label, fps) {\n  if (this.activeAction) {\n    this.activeAction.stop();\n    this.activeAction = null;\n  }\n\n  var clip = _three.AnimationClip.findByName(this, label);\n\n  if (clip) {\n    var action = this.mixer.clipAction(clip);\n    action.timeScale = clip.tracks.length * fps / clip.duration;\n    this.activeAction = action.play();\n  } else {\n    throw new Error('THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()');\n  }\n};\n\nMorphAnimMesh.prototype.updateAnimation = function (delta) {\n  this.mixer.update(delta);\n};\n\nMorphAnimMesh.prototype.copy = function (source) {\n  _three.Mesh.prototype.copy.call(this, source);\n\n  this.mixer = new _three.AnimationMixer(this);\n  return this;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["copy","prototype","updateAnimation","__esModule","timeScale","playAnimation","value","setDirectionForward","activeAction","setDirectionBackward","type","MorphAnimMesh","constructor","mixer"]],"~:compiled-at",1630917515110,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$misc$MorphAnimMesh.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAAwB,IAAK,EAE7B,KAAIC,OAASP,OAAA,CAAQ,8CAAR,CAETM,OAAAA,CAAgBA,QAAsB,CAACE,QAAD,CAAWC,QAAX,CAAqB,CAC7DF,MAAOG,CAAAA,IAAKC,CAAAA,IAAZ,CAAiB,IAAjB,CAAuBH,QAAvB,CAAiCC,QAAjC,CAEA,KAAKG,CAAAA,IAAL,CAAY,eACZ,KAAKC,CAAAA,KAAL,CAAa,IAAIN,MAAOO,CAAAA,cAAX,CAA0B,IAA1B,CACb,KAAKC,CAAAA,YAAL,CAAoB,IALyC,CAQ/Db,QAAQI,CAAAA,aAAR,CAAwBA,MACxBA,OAAcU,CAAAA,SAAd,CAA0Bb,MAAOc,CAAAA,MAAP,CAAcV,MAAOG,CAAAA,IAAKM,CAAAA,SAA1B,CAC1BV;MAAcU,CAAAA,SAAUE,CAAAA,WAAxB,CAAsCZ,MAEtCA,OAAcU,CAAAA,SAAUG,CAAAA,mBAAxB,CAA8CC,QAAS,EAAG,CACxD,IAAKP,CAAAA,KAAMQ,CAAAA,SAAX,CAAuB,CADiC,CAI1Df,OAAcU,CAAAA,SAAUM,CAAAA,oBAAxB,CAA+CC,QAAS,EAAG,CACzD,IAAKV,CAAAA,KAAMQ,CAAAA,SAAX,CAAuB,EADkC,CAI3Df,OAAcU,CAAAA,SAAUQ,CAAAA,aAAxB,CAAwCC,QAAS,CAACC,KAAD,CAAQC,GAAR,CAAa,CACxD,IAAKZ,CAAAA,YAAT,GACE,IAAKA,CAAAA,YAAaa,CAAAA,IAAlB,EACA,CAAA,IAAKb,CAAAA,YAAL,CAAoB,IAFtB,CAKA,KAAIc,KAAOtB,MAAOuB,CAAAA,aAAcC,CAAAA,UAArB,CAAgC,IAAhC,CAAsCL,KAAtC,CAEX,IAAIG,IAAJ,CACMG,KAEJ,CAFa,IAAKnB,CAAAA,KAAMoB,CAAAA,UAAX,CAAsBJ,IAAtB,CAEb,CADAG,KAAOX,CAAAA,SACP,CADmBQ,IAAKK,CAAAA,MAAOC,CAAAA,MAC/B,CADwCR,GACxC,CAD8CE,IAAKO,CAAAA,QACnD,CAAA,IAAKrB,CAAAA,YAAL,CAAoBiB,KAAOK,CAAAA,IAAP,EAHtB,KAKE,MAAUC,MAAJ,CAAU,kCAAV;AAA+CZ,KAA/C,CAAuD,iCAAvD,CAAN,CAb0D,CAiB9DpB,OAAcU,CAAAA,SAAUuB,CAAAA,eAAxB,CAA0CC,QAAS,CAACC,KAAD,CAAQ,CACzD,IAAK5B,CAAAA,KAAM6B,CAAAA,MAAX,CAAkBD,KAAlB,CADyD,CAI3DnC,OAAcU,CAAAA,SAAU2B,CAAAA,IAAxB,CAA+BC,QAAS,CAACC,MAAD,CAAS,CAC/CtC,MAAOG,CAAAA,IAAKM,CAAAA,SAAU2B,CAAAA,IAAKhC,CAAAA,IAA3B,CAAgC,IAAhC,CAAsCkC,MAAtC,CAEA,KAAKhC,CAAAA,KAAL,CAAa,IAAIN,MAAOO,CAAAA,cAAX,CAA0B,IAA1B,CACb,OAAO,KAJwC,CAnD+D;\",\n\"sources\":[\"node_modules/three-stdlib/misc/MorphAnimMesh.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$misc$MorphAnimMesh\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MorphAnimMesh = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar MorphAnimMesh = function MorphAnimMesh(geometry, material) {\\n  _three.Mesh.call(this, geometry, material);\\n\\n  this.type = 'MorphAnimMesh';\\n  this.mixer = new _three.AnimationMixer(this);\\n  this.activeAction = null;\\n};\\n\\nexports.MorphAnimMesh = MorphAnimMesh;\\nMorphAnimMesh.prototype = Object.create(_three.Mesh.prototype);\\nMorphAnimMesh.prototype.constructor = MorphAnimMesh;\\n\\nMorphAnimMesh.prototype.setDirectionForward = function () {\\n  this.mixer.timeScale = 1.0;\\n};\\n\\nMorphAnimMesh.prototype.setDirectionBackward = function () {\\n  this.mixer.timeScale = -1.0;\\n};\\n\\nMorphAnimMesh.prototype.playAnimation = function (label, fps) {\\n  if (this.activeAction) {\\n    this.activeAction.stop();\\n    this.activeAction = null;\\n  }\\n\\n  var clip = _three.AnimationClip.findByName(this, label);\\n\\n  if (clip) {\\n    var action = this.mixer.clipAction(clip);\\n    action.timeScale = clip.tracks.length * fps / clip.duration;\\n    this.activeAction = action.play();\\n  } else {\\n    throw new Error('THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()');\\n  }\\n};\\n\\nMorphAnimMesh.prototype.updateAnimation = function (delta) {\\n  this.mixer.update(delta);\\n};\\n\\nMorphAnimMesh.prototype.copy = function (source) {\\n  _three.Mesh.prototype.copy.call(this, source);\\n\\n  this.mixer = new _three.AnimationMixer(this);\\n  return this;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"MorphAnimMesh\",\"_three\",\"geometry\",\"material\",\"Mesh\",\"call\",\"type\",\"mixer\",\"AnimationMixer\",\"activeAction\",\"prototype\",\"create\",\"constructor\",\"setDirectionForward\",\"MorphAnimMesh.prototype.setDirectionForward\",\"timeScale\",\"setDirectionBackward\",\"MorphAnimMesh.prototype.setDirectionBackward\",\"playAnimation\",\"MorphAnimMesh.prototype.playAnimation\",\"label\",\"fps\",\"stop\",\"clip\",\"AnimationClip\",\"findByName\",\"action\",\"clipAction\",\"tracks\",\"length\",\"duration\",\"play\",\"Error\",\"updateAnimation\",\"MorphAnimMesh.prototype.updateAnimation\",\"delta\",\"update\",\"copy\",\"MorphAnimMesh.prototype.copy\",\"source\"]\n}\n"]