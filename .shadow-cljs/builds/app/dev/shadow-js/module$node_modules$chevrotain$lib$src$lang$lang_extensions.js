["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/chevrotain/lib/src/lang/lang_extensions.js"],"~:js","shadow$provide.module$node_modules$chevrotain$lib$src$lang$lang_extensions=function(global,require,module,exports){function functionName(func){return(func=func.name)?func:\"anonymous\"}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.defineNameProp=exports.functionName=exports.classNameFromInstance=void 0;var utils_1=require(\"module$node_modules$$chevrotain$utils$lib$src$api\");exports.classNameFromInstance=function(instance){return functionName(instance.constructor)};exports.functionName=\nfunctionName;exports.defineNameProp=function(obj,nameValue){var namePropDescriptor=Object.getOwnPropertyDescriptor(obj,\"name\");return utils_1.isUndefined(namePropDescriptor)||namePropDescriptor.configurable?(Object.defineProperty(obj,\"name\",{enumerable:!1,configurable:!0,writable:!1,value:nameValue}),!0):!1}}","~:source","shadow$provide[\"module$node_modules$chevrotain$lib$src$lang$lang_extensions\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineNameProp = exports.functionName = exports.classNameFromInstance = void 0;\nvar utils_1 = require(\"@chevrotain/utils\");\nfunction classNameFromInstance(instance) {\n    return functionName(instance.constructor);\n}\nexports.classNameFromInstance = classNameFromInstance;\nvar NAME = \"name\";\n/**\n * Utility to obtain Function names.\n * Note that there should not be an assumptions on the result of this function.\n * E.g: When running from minified source code the result may be auto generated.\n */\nfunction functionName(func) {\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\n    // the name has been computed in the following else block.\n    var existingNameProp = func.name;\n    /* istanbul ignore else - too many hacks for IE/old versions of node.js here*/\n    if (existingNameProp) {\n        return existingNameProp;\n    }\n    else {\n        return \"anonymous\";\n    }\n}\nexports.functionName = functionName;\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nfunction defineNameProp(obj, nameValue) {\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n    /* istanbul ignore else -> will only run in old versions of node.js */\n    if (utils_1.isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n        Object.defineProperty(obj, NAME, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameValue\n        });\n        return true;\n    }\n    /* istanbul ignore next -> will only run in old versions of node.js */\n    return false;\n}\nexports.defineNameProp = defineNameProp;\n//# sourceMappingURL=lang_extensions.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$chevrotain$utils$lib$src$api","~$shadow.js"]],"~:properties",["^5",["defineNameProp","__esModule","name","configurable","value","enumerable","classNameFromInstance","writable","functionName"]],"~:compiled-at",1630917515702,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$chevrotain$lib$src$lang$lang_extensions.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAexHC,QAASA,aAAY,CAACC,IAAD,CAAO,CAKxB,MAAA,CAFIC,IAEJ,CAFuBD,IAAKE,CAAAA,IAE5B,EACWD,IADX,CAIW,WATa,CAb5BE,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAAEO,MAAO,CAAA,CAAT,CAA7C,CACAP,QAAQQ,CAAAA,cAAR,CAAyBR,OAAQC,CAAAA,YAAjC,CAAgDD,OAAQS,CAAAA,qBAAxD,CAAgF,IAAK,EACrF,KAAIC,QAAUZ,OAAA,CAAQ,mDAAR,CAIdE,QAAQS,CAAAA,qBAAR,CAHAA,QAA8B,CAACE,QAAD,CAAW,CACrC,MAAOV,aAAA,CAAaU,QAASC,CAAAA,WAAtB,CAD8B,CAsBzCZ,QAAQC,CAAAA,YAAR;AAAuBA,YAmBvBD,QAAQQ,CAAAA,cAAR,CAfAA,QAAuB,CAACK,GAAD,CAAMC,SAAN,CAAiB,CACpC,IAAIC,mBAAqBV,MAAOW,CAAAA,wBAAP,CAAgCH,GAAhC,CAvBlBI,MAuBkB,CAEzB,OAAIP,QAAQQ,CAAAA,WAAR,CAAoBH,kBAApB,CAAJ,EAA+CA,kBAAmBI,CAAAA,YAAlE,EACId,MAAOC,CAAAA,cAAP,CAAsBO,GAAtB,CA1BGI,MA0BH,CAAiC,CAC7BG,WAAY,CAAA,CADiB,CAE7BD,aAAc,CAAA,CAFe,CAG7BE,SAAU,CAAA,CAHmB,CAI7Bd,MAAOO,SAJsB,CAAjC,CAMO,CAAA,CAAA,CAPX,EAUO,CAAA,CAb6B,CA/BgF;\",\n\"sources\":[\"node_modules/chevrotain/lib/src/lang/lang_extensions.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$chevrotain$lib$src$lang$lang_extensions\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.defineNameProp = exports.functionName = exports.classNameFromInstance = void 0;\\nvar utils_1 = require(\\\"@chevrotain/utils\\\");\\nfunction classNameFromInstance(instance) {\\n    return functionName(instance.constructor);\\n}\\nexports.classNameFromInstance = classNameFromInstance;\\nvar NAME = \\\"name\\\";\\n/**\\n * Utility to obtain Function names.\\n * Note that there should not be an assumptions on the result of this function.\\n * E.g: When running from minified source code the result may be auto generated.\\n */\\nfunction functionName(func) {\\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\\n    // the name has been computed in the following else block.\\n    var existingNameProp = func.name;\\n    /* istanbul ignore else - too many hacks for IE/old versions of node.js here*/\\n    if (existingNameProp) {\\n        return existingNameProp;\\n    }\\n    else {\\n        return \\\"anonymous\\\";\\n    }\\n}\\nexports.functionName = functionName;\\n/**\\n * @returns {boolean} - has the property been successfully defined\\n */\\nfunction defineNameProp(obj, nameValue) {\\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\\n    /* istanbul ignore else -> will only run in old versions of node.js */\\n    if (utils_1.isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\\n        Object.defineProperty(obj, NAME, {\\n            enumerable: false,\\n            configurable: true,\\n            writable: false,\\n            value: nameValue\\n        });\\n        return true;\\n    }\\n    /* istanbul ignore next -> will only run in old versions of node.js */\\n    return false;\\n}\\nexports.defineNameProp = defineNameProp;\\n//# sourceMappingURL=lang_extensions.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"functionName\",\"func\",\"existingNameProp\",\"name\",\"Object\",\"defineProperty\",\"value\",\"defineNameProp\",\"classNameFromInstance\",\"utils_1\",\"instance\",\"constructor\",\"obj\",\"nameValue\",\"namePropDescriptor\",\"getOwnPropertyDescriptor\",\"NAME\",\"isUndefined\",\"configurable\",\"enumerable\",\"writable\"]\n}\n"]