["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/math/OperatorNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$math$OperatorNode=function(global,require,module,exports){function OperatorNode(a,b,op){_TempNode.TempNode.call(this);this.a=a;this.b=b;this.op=op}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.OperatorNode=OperatorNode;var _TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\");OperatorNode.ADD=\"+\";OperatorNode.SUB=\"-\";OperatorNode.MUL=\"*\";OperatorNode.DIV=\"/\";OperatorNode.prototype=Object.create(_TempNode.TempNode.prototype);\nOperatorNode.prototype.constructor=OperatorNode;OperatorNode.prototype.nodeType=\"Operator\";OperatorNode.prototype.getType=function(builder){var a=this.a.getType(builder),b=this.b.getType(builder);return builder.isTypeMatrix(a)?\"v4\":builder.getTypeLength(b)>builder.getTypeLength(a)?b:a};OperatorNode.prototype.generate=function(builder,output){var type=this.getType(builder),a=this.a.build(builder,type),b=this.b.build(builder,type);return builder.format(\"( \"+a+\" \"+this.op+\" \"+b+\" )\",type,output)};OperatorNode.prototype.copy=\nfunction(source){_TempNode.TempNode.prototype.copy.call(this,source);this.a=source.a;this.b=source.b;this.op=source.op;return this};OperatorNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.a=this.a.toJSON(meta).uuid,data.b=this.b.toJSON(meta).uuid,data.op=this.op);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$math$OperatorNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorNode = OperatorNode;\n\nvar _TempNode = require(\"../core/TempNode.js\");\n\nfunction OperatorNode(a, b, op) {\n  _TempNode.TempNode.call(this);\n\n  this.a = a;\n  this.b = b;\n  this.op = op;\n}\n\nOperatorNode.ADD = '+';\nOperatorNode.SUB = '-';\nOperatorNode.MUL = '*';\nOperatorNode.DIV = '/';\nOperatorNode.prototype = Object.create(_TempNode.TempNode.prototype);\nOperatorNode.prototype.constructor = OperatorNode;\nOperatorNode.prototype.nodeType = 'Operator';\n\nOperatorNode.prototype.getType = function (builder) {\n  var a = this.a.getType(builder),\n      b = this.b.getType(builder);\n\n  if (builder.isTypeMatrix(a)) {\n    return 'v4';\n  } else if (builder.getTypeLength(b) > builder.getTypeLength(a)) {\n    // use the greater length vector\n    return b;\n  }\n\n  return a;\n};\n\nOperatorNode.prototype.generate = function (builder, output) {\n  var type = this.getType(builder);\n  var a = this.a.build(builder, type),\n      b = this.b.build(builder, type);\n  return builder.format('( ' + a + ' ' + this.op + ' ' + b + ' )', type, output);\n};\n\nOperatorNode.prototype.copy = function (source) {\n  _TempNode.TempNode.prototype.copy.call(this, source);\n\n  this.a = source.a;\n  this.b = source.b;\n  this.op = source.op;\n  return this;\n};\n\nOperatorNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.a = this.a.toJSON(meta).uuid;\n    data.b = this.b.toJSON(meta).uuid;\n    data.op = this.op;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_stdlib$nodes$core$TempNode"]],"~:properties",["^5",["ADD","getType","copy","prototype","__esModule","generate","SUB","nodeType","value","OperatorNode","a","DIV","b","op","MUL","constructor","toJSON"]],"~:compiled-at",1630917515200,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$math$OperatorNode.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/math/OperatorNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$math$OperatorNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.OperatorNode = OperatorNode;\\n\\nvar _TempNode = require(\\\"../core/TempNode.js\\\");\\n\\nfunction OperatorNode(a, b, op) {\\n  _TempNode.TempNode.call(this);\\n\\n  this.a = a;\\n  this.b = b;\\n  this.op = op;\\n}\\n\\nOperatorNode.ADD = '+';\\nOperatorNode.SUB = '-';\\nOperatorNode.MUL = '*';\\nOperatorNode.DIV = '/';\\nOperatorNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nOperatorNode.prototype.constructor = OperatorNode;\\nOperatorNode.prototype.nodeType = 'Operator';\\n\\nOperatorNode.prototype.getType = function (builder) {\\n  var a = this.a.getType(builder),\\n      b = this.b.getType(builder);\\n\\n  if (builder.isTypeMatrix(a)) {\\n    return 'v4';\\n  } else if (builder.getTypeLength(b) > builder.getTypeLength(a)) {\\n    // use the greater length vector\\n    return b;\\n  }\\n\\n  return a;\\n};\\n\\nOperatorNode.prototype.generate = function (builder, output) {\\n  var type = this.getType(builder);\\n  var a = this.a.build(builder, type),\\n      b = this.b.build(builder, type);\\n  return builder.format('( ' + a + ' ' + this.op + ' ' + b + ' )', type, output);\\n};\\n\\nOperatorNode.prototype.copy = function (source) {\\n  _TempNode.TempNode.prototype.copy.call(this, source);\\n\\n  this.a = source.a;\\n  this.b = source.b;\\n  this.op = source.op;\\n  return this;\\n};\\n\\nOperatorNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.a = this.a.toJSON(meta).uuid;\\n    data.b = this.b.toJSON(meta).uuid;\\n    data.op = this.op;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"OperatorNode\",\"a\",\"b\",\"op\",\"_TempNode\",\"TempNode\",\"call\",\"Object\",\"defineProperty\",\"value\",\"ADD\",\"SUB\",\"MUL\",\"DIV\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"getType\",\"OperatorNode.prototype.getType\",\"builder\",\"isTypeMatrix\",\"getTypeLength\",\"generate\",\"OperatorNode.prototype.generate\",\"output\",\"type\",\"build\",\"format\",\"copy\",\"OperatorNode.prototype.copy\",\"source\",\"toJSON\",\"OperatorNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\",\"uuid\"]\n}\n"]