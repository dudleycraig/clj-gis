["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/utils/SceneUtils.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$utils$SceneUtils=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.SceneUtils=void 0;var _three=require(\"module$node_modules$three$build$three_module\");exports.SceneUtils={createMeshesFromInstancedMesh:function(instancedMesh){for(var group=new _three.Group,count=instancedMesh.count,geometry=instancedMesh.geometry,material=instancedMesh.material,i=0;i<count;i++){var mesh=new _three.Mesh(geometry,material);\ninstancedMesh.getMatrixAt(i,mesh.matrix);mesh.matrix.decompose(mesh.position,mesh.quaternion,mesh.scale);group.add(mesh)}group.copy(instancedMesh);group.updateMatrixWorld();return group},createMultiMaterialObject:function(geometry,materials){for(var group=new _three.Group,i=0,l=materials.length;i<l;i++)group.add(new _three.Mesh(geometry,materials[i]));return group},detach:function(child,parent,scene){console.warn(\"THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.\");\nscene.attach(child)},attach:function(child,scene,parent){console.warn(\"THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.\");parent.attach(child)}}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$utils$SceneUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SceneUtils = void 0;\n\nvar _three = require(\"three\");\n\nvar SceneUtils = {\n  createMeshesFromInstancedMesh: function createMeshesFromInstancedMesh(instancedMesh) {\n    var group = new _three.Group();\n    var count = instancedMesh.count;\n    var geometry = instancedMesh.geometry;\n    var material = instancedMesh.material;\n\n    for (var i = 0; i < count; i++) {\n      var mesh = new _three.Mesh(geometry, material);\n      instancedMesh.getMatrixAt(i, mesh.matrix);\n      mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale);\n      group.add(mesh);\n    }\n\n    group.copy(instancedMesh);\n    group.updateMatrixWorld(); // ensure correct world matrices of meshes\n\n    return group;\n  },\n  createMultiMaterialObject: function createMultiMaterialObject(geometry, materials) {\n    var group = new _three.Group();\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      group.add(new _three.Mesh(geometry, materials[i]));\n    }\n\n    return group;\n  },\n  detach: function detach(child, parent, scene) {\n    console.warn('THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.');\n    scene.attach(child);\n  },\n  attach: function attach(child, scene, parent) {\n    console.warn('THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.');\n    parent.attach(child);\n  }\n};\nexports.SceneUtils = SceneUtils;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["__esModule","detach","attach","value","createMeshesFromInstancedMesh","SceneUtils","createMultiMaterialObject"]],"~:compiled-at",1630917515396,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$utils$SceneUtils.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAE1B,KAAIC,OAASP,OAAA,CAAQ,8CAAR,CAuCbE,QAAQI,CAAAA,UAAR,CArCiBA,CACfE,8BAA+BA,QAAsC,CAACC,aAAD,CAAgB,CAMnF,IALA,IAAIC,MAAQ,IAAIH,MAAOI,CAAAA,KAAvB,CACIC,MAAQH,aAAcG,CAAAA,KAD1B,CAEIC,SAAWJ,aAAcI,CAAAA,QAF7B,CAGIC,SAAWL,aAAcK,CAAAA,QAH7B,CAKSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,KAApB,CAA2BG,CAAA,EAA3B,CAAgC,CAC9B,IAAIC,KAAO,IAAIT,MAAOU,CAAAA,IAAX,CAAgBJ,QAAhB,CAA0BC,QAA1B,CACXL;aAAcS,CAAAA,WAAd,CAA0BH,CAA1B,CAA6BC,IAAKG,CAAAA,MAAlC,CACAH,KAAKG,CAAAA,MAAOC,CAAAA,SAAZ,CAAsBJ,IAAKK,CAAAA,QAA3B,CAAqCL,IAAKM,CAAAA,UAA1C,CAAsDN,IAAKO,CAAAA,KAA3D,CACAb,MAAMc,CAAAA,GAAN,CAAUR,IAAV,CAJ8B,CAOhCN,KAAMe,CAAAA,IAAN,CAAWhB,aAAX,CACAC,MAAMgB,CAAAA,iBAAN,EAEA,OAAOhB,MAhB4E,CADtEJ,CAmBfqB,0BAA2BA,QAAkC,CAACd,QAAD,CAAWe,SAAX,CAAsB,CAGjF,IAFA,IAAIlB,MAAQ,IAAIH,MAAOI,CAAAA,KAAvB,CAESI,EAAI,CAFb,CAEgBc,EAAID,SAAUE,CAAAA,MAA9B,CAAsCf,CAAtC,CAA0Cc,CAA1C,CAA6Cd,CAAA,EAA7C,CACEL,KAAMc,CAAAA,GAAN,CAAU,IAAIjB,MAAOU,CAAAA,IAAX,CAAgBJ,QAAhB,CAA0Be,SAAA,CAAUb,CAAV,CAA1B,CAAV,CAGF,OAAOL,MAP0E,CAnBpEJ,CA4BfyB,OAAQA,QAAe,CAACC,KAAD,CAAQC,MAAR,CAAgBC,KAAhB,CAAuB,CAC5CC,OAAQC,CAAAA,IAAR,CAAa,oFAAb,CACAF;KAAMG,CAAAA,MAAN,CAAaL,KAAb,CAF4C,CA5B/B1B,CAgCf+B,OAAQA,QAAe,CAACL,KAAD,CAAQE,KAAR,CAAeD,MAAf,CAAuB,CAC5CE,OAAQC,CAAAA,IAAR,CAAa,qFAAb,CACAH,OAAOI,CAAAA,MAAP,CAAcL,KAAd,CAF4C,CAhC/B1B,CAV6F;\",\n\"sources\":[\"node_modules/three-stdlib/utils/SceneUtils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$utils$SceneUtils\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SceneUtils = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar SceneUtils = {\\n  createMeshesFromInstancedMesh: function createMeshesFromInstancedMesh(instancedMesh) {\\n    var group = new _three.Group();\\n    var count = instancedMesh.count;\\n    var geometry = instancedMesh.geometry;\\n    var material = instancedMesh.material;\\n\\n    for (var i = 0; i < count; i++) {\\n      var mesh = new _three.Mesh(geometry, material);\\n      instancedMesh.getMatrixAt(i, mesh.matrix);\\n      mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale);\\n      group.add(mesh);\\n    }\\n\\n    group.copy(instancedMesh);\\n    group.updateMatrixWorld(); // ensure correct world matrices of meshes\\n\\n    return group;\\n  },\\n  createMultiMaterialObject: function createMultiMaterialObject(geometry, materials) {\\n    var group = new _three.Group();\\n\\n    for (var i = 0, l = materials.length; i < l; i++) {\\n      group.add(new _three.Mesh(geometry, materials[i]));\\n    }\\n\\n    return group;\\n  },\\n  detach: function detach(child, parent, scene) {\\n    console.warn('THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.');\\n    scene.attach(child);\\n  },\\n  attach: function attach(child, scene, parent) {\\n    console.warn('THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.');\\n    parent.attach(child);\\n  }\\n};\\nexports.SceneUtils = SceneUtils;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"SceneUtils\",\"_three\",\"createMeshesFromInstancedMesh\",\"instancedMesh\",\"group\",\"Group\",\"count\",\"geometry\",\"material\",\"i\",\"mesh\",\"Mesh\",\"getMatrixAt\",\"matrix\",\"decompose\",\"position\",\"quaternion\",\"scale\",\"add\",\"copy\",\"updateMatrixWorld\",\"createMultiMaterialObject\",\"materials\",\"l\",\"length\",\"detach\",\"child\",\"parent\",\"scene\",\"console\",\"warn\",\"attach\"]\n}\n"]