["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/utils/SwitchNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$utils$SwitchNode=function(global,require,module,exports){function SwitchNode(node,components){_Node.Node.call(this);this.node=node;this.components=components||\"x\"}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.SwitchNode=SwitchNode;var _Node=require(\"module$node_modules$three_stdlib$nodes$core$Node\");SwitchNode.prototype=Object.create(_Node.Node.prototype);SwitchNode.prototype.constructor=SwitchNode;SwitchNode.prototype.nodeType=\n\"Switch\";SwitchNode.prototype.getType=function(builder){return builder.getTypeFromLength(this.components.length)};SwitchNode.prototype.generate=function(builder,output){var type=this.node.getType(builder),node=this.node.build(builder,type),inputLength=builder.getTypeLength(type)-1;if(0<inputLength){type=0;var components=builder.colorToVectorProperties(this.components),i,len=components.length;for(i=0;i<len;i++)type=Math.max(type,builder.getIndexByElement(components.charAt(i)));type>inputLength&&(type=\ninputLength);node+=\".\";for(i=0;i<len;i++)inputLength=builder.getIndexByElement(components.charAt(i)),inputLength>type&&(inputLength=type),node+=builder.getElementByIndex(inputLength);return builder.format(node,this.getType(builder),output)}return builder.format(node,type,output)};SwitchNode.prototype.copy=function(source){_Node.Node.prototype.copy.call(this,source);this.node=source.node;this.components=source.components;return this};SwitchNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);\ndata||(data=this.createJSONNode(meta),data.node=this.node.toJSON(meta).uuid,data.components=this.components);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$utils$SwitchNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SwitchNode = SwitchNode;\n\nvar _Node = require(\"../core/Node.js\");\n\nfunction SwitchNode(node, components) {\n  _Node.Node.call(this);\n\n  this.node = node;\n  this.components = components || 'x';\n}\n\nSwitchNode.prototype = Object.create(_Node.Node.prototype);\nSwitchNode.prototype.constructor = SwitchNode;\nSwitchNode.prototype.nodeType = 'Switch';\n\nSwitchNode.prototype.getType = function (builder) {\n  return builder.getTypeFromLength(this.components.length);\n};\n\nSwitchNode.prototype.generate = function (builder, output) {\n  var type = this.node.getType(builder),\n      node = this.node.build(builder, type),\n      inputLength = builder.getTypeLength(type) - 1;\n\n  if (inputLength > 0) {\n    // get max length\n    var outputLength = 0,\n        components = builder.colorToVectorProperties(this.components);\n    var i,\n        len = components.length;\n\n    for (i = 0; i < len; i++) {\n      outputLength = Math.max(outputLength, builder.getIndexByElement(components.charAt(i)));\n    }\n\n    if (outputLength > inputLength) outputLength = inputLength; // split\n\n    node += '.';\n\n    for (i = 0; i < len; i++) {\n      var idx = builder.getIndexByElement(components.charAt(i));\n      if (idx > outputLength) idx = outputLength;\n      node += builder.getElementByIndex(idx);\n    }\n\n    return builder.format(node, this.getType(builder), output);\n  } else {\n    // join\n    return builder.format(node, type, output);\n  }\n};\n\nSwitchNode.prototype.copy = function (source) {\n  _Node.Node.prototype.copy.call(this, source);\n\n  this.node = source.node;\n  this.components = source.components;\n  return this;\n};\n\nSwitchNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.node = this.node.toJSON(meta).uuid;\n    data.components = this.components;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_stdlib$nodes$core$Node"]],"~:properties",["^5",["getType","copy","prototype","__esModule","generate","nodeType","value","components","SwitchNode","node","constructor","toJSON"]],"~:compiled-at",1630917515245,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$utils$SwitchNode.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/utils/SwitchNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$utils$SwitchNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SwitchNode = SwitchNode;\\n\\nvar _Node = require(\\\"../core/Node.js\\\");\\n\\nfunction SwitchNode(node, components) {\\n  _Node.Node.call(this);\\n\\n  this.node = node;\\n  this.components = components || 'x';\\n}\\n\\nSwitchNode.prototype = Object.create(_Node.Node.prototype);\\nSwitchNode.prototype.constructor = SwitchNode;\\nSwitchNode.prototype.nodeType = 'Switch';\\n\\nSwitchNode.prototype.getType = function (builder) {\\n  return builder.getTypeFromLength(this.components.length);\\n};\\n\\nSwitchNode.prototype.generate = function (builder, output) {\\n  var type = this.node.getType(builder),\\n      node = this.node.build(builder, type),\\n      inputLength = builder.getTypeLength(type) - 1;\\n\\n  if (inputLength > 0) {\\n    // get max length\\n    var outputLength = 0,\\n        components = builder.colorToVectorProperties(this.components);\\n    var i,\\n        len = components.length;\\n\\n    for (i = 0; i < len; i++) {\\n      outputLength = Math.max(outputLength, builder.getIndexByElement(components.charAt(i)));\\n    }\\n\\n    if (outputLength > inputLength) outputLength = inputLength; // split\\n\\n    node += '.';\\n\\n    for (i = 0; i < len; i++) {\\n      var idx = builder.getIndexByElement(components.charAt(i));\\n      if (idx > outputLength) idx = outputLength;\\n      node += builder.getElementByIndex(idx);\\n    }\\n\\n    return builder.format(node, this.getType(builder), output);\\n  } else {\\n    // join\\n    return builder.format(node, type, output);\\n  }\\n};\\n\\nSwitchNode.prototype.copy = function (source) {\\n  _Node.Node.prototype.copy.call(this, source);\\n\\n  this.node = source.node;\\n  this.components = source.components;\\n  return this;\\n};\\n\\nSwitchNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.node = this.node.toJSON(meta).uuid;\\n    data.components = this.components;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"SwitchNode\",\"node\",\"components\",\"_Node\",\"Node\",\"call\",\"Object\",\"defineProperty\",\"value\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"getType\",\"SwitchNode.prototype.getType\",\"builder\",\"getTypeFromLength\",\"length\",\"generate\",\"SwitchNode.prototype.generate\",\"output\",\"type\",\"build\",\"inputLength\",\"getTypeLength\",\"outputLength\",\"colorToVectorProperties\",\"i\",\"len\",\"Math\",\"max\",\"getIndexByElement\",\"charAt\",\"idx\",\"getElementByIndex\",\"format\",\"copy\",\"SwitchNode.prototype.copy\",\"source\",\"toJSON\",\"SwitchNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\",\"uuid\"]\n}\n"]