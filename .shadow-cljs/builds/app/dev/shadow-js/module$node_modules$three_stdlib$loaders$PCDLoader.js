["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/loaders/PCDLoader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$loaders$PCDLoader=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=\ndescriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};\nreturn _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};\nreturn _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.PCDLoader=void 0;var _three=require(\"module$node_modules$three$build$three_module\");global=function(_Loader){function PCDLoader(manager){if(!(this instanceof PCDLoader))throw new TypeError(\"Cannot call a class as a function\");manager=_getPrototypeOf(PCDLoader).call(this,manager);if(!manager||\"object\"!==_typeof(manager)&&\"function\"!==typeof manager){if(void 0===this)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\nmanager=this}manager.littleEndian=!0;return manager}_inherits(PCDLoader,_Loader);_createClass(PCDLoader,[{key:\"load\",value:function(url,onLoad,onProgress,onError){var scope=this,loader=new _three.FileLoader(scope.manager);loader.setPath(scope.path);loader.setResponseType(\"arraybuffer\");loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(data){try{onLoad(scope.parse(data,url))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},\nonProgress,onError)}},{key:\"parse\",value:function(data$jscomp$0,url){function decompressLZF(inData,outLength){var inLength=inData.length,outData=new Uint8Array(outLength),inPtr=0,outPtr=0;do{var ctrl=inData[inPtr++];if(32>ctrl){ctrl++;if(outPtr+ctrl>outLength)throw Error(\"Output buffer is not large enough\");if(inPtr+ctrl>inLength)throw Error(\"Invalid compressed data\");do outData[outPtr++]=inData[inPtr++];while(--ctrl)}else{var len=ctrl>>5;ctrl=outPtr-((ctrl&31)<<8)-1;if(inPtr>=inLength)throw Error(\"Invalid compressed data\");\nif(7===len&&(len+=inData[inPtr++],inPtr>=inLength))throw Error(\"Invalid compressed data\");ctrl-=inData[inPtr++];if(outPtr+len+2>outLength)throw Error(\"Output buffer is not large enough\");if(0>ctrl)throw Error(\"Invalid compressed data\");if(ctrl>=outPtr)throw Error(\"Invalid compressed data\");do outData[outPtr++]=outData[ctrl++];while(--len+2)}}while(inPtr<inLength);return outData}var textData=_three.LoaderUtils.decodeText(new Uint8Array(data$jscomp$0)),PCDheader=function(data){var PCDheader={},result1=\ndata.search(/[\\r\\n]DATA\\s(\\S*)\\s/i),result2=/[\\r\\n]DATA\\s(\\S*)\\s/i.exec(data.substr(result1-1));PCDheader.data=result2[1];PCDheader.headerLen=result2[0].length+result1;PCDheader.str=data.substr(0,PCDheader.headerLen);PCDheader.str=PCDheader.str.replace(/#.*/gi,\"\");PCDheader.version=/VERSION (.*)/i.exec(PCDheader.str);PCDheader.fields=/FIELDS (.*)/i.exec(PCDheader.str);PCDheader.size=/SIZE (.*)/i.exec(PCDheader.str);PCDheader.type=/TYPE (.*)/i.exec(PCDheader.str);PCDheader.count=/COUNT (.*)/i.exec(PCDheader.str);\nPCDheader.width=/WIDTH (.*)/i.exec(PCDheader.str);PCDheader.height=/HEIGHT (.*)/i.exec(PCDheader.str);PCDheader.viewpoint=/VIEWPOINT (.*)/i.exec(PCDheader.str);PCDheader.points=/POINTS (.*)/i.exec(PCDheader.str);null!==PCDheader.version&&(PCDheader.version=parseFloat(PCDheader.version[1]));null!==PCDheader.fields&&(PCDheader.fields=PCDheader.fields[1].split(\" \"));null!==PCDheader.type&&(PCDheader.type=PCDheader.type[1].split(\" \"));null!==PCDheader.width&&(PCDheader.width=parseInt(PCDheader.width[1]));\nnull!==PCDheader.height&&(PCDheader.height=parseInt(PCDheader.height[1]));null!==PCDheader.viewpoint&&(PCDheader.viewpoint=PCDheader.viewpoint[1]);null!==PCDheader.points&&(PCDheader.points=parseInt(PCDheader.points[1],10));null===PCDheader.points&&(PCDheader.points=PCDheader.width*PCDheader.height);null!==PCDheader.size&&(PCDheader.size=PCDheader.size[1].split(\" \").map(function(x){return parseInt(x,10)}));if(null!==PCDheader.count)PCDheader.count=PCDheader.count[1].split(\" \").map(function(x){return parseInt(x,\n10)});else for(PCDheader.count=[],data=0,result1=PCDheader.fields.length;data<result1;data++)PCDheader.count.push(1);PCDheader.offset={};result1=data=0;for(result2=PCDheader.fields.length;result1<result2;result1++)\"ascii\"===PCDheader.data?PCDheader.offset[PCDheader.fields[result1]]=result1:(PCDheader.offset[PCDheader.fields[result1]]=data,data+=PCDheader.size[result1]*PCDheader.count[result1]);PCDheader.rowSize=data;return PCDheader}(textData),position=[],normal=[],color=[];if(\"ascii\"===PCDheader.data){var offset=\nPCDheader.offset;textData=textData.substr(PCDheader.headerLen).split(\"\\n\");for(var i=0,l=textData.length;i<l;i++)if(\"\"!==textData[i]){var line=textData[i].split(\" \");void 0!==offset.x&&(position.push(parseFloat(line[offset.x])),position.push(parseFloat(line[offset.y])),position.push(parseFloat(line[offset.z])));if(void 0!==offset.rgb){var rgb=parseFloat(line[offset.rgb]);color.push((rgb>>16&255)/255,(rgb>>8&255)/255,(rgb>>0&255)/255)}void 0!==offset.normal_x&&(normal.push(parseFloat(line[offset.normal_x])),\nnormal.push(parseFloat(line[offset.normal_y])),normal.push(parseFloat(line[offset.normal_z])))}}if(\"binary_compressed\"===PCDheader.data)for(offset=new Uint32Array(data$jscomp$0.slice(PCDheader.headerLen,PCDheader.headerLen+8)),textData=offset[1],offset=decompressLZF(new Uint8Array(data$jscomp$0,PCDheader.headerLen+8,offset[0]),textData),offset=new DataView(offset.buffer),textData=PCDheader.offset,i=0;i<PCDheader.points;i++)void 0!==textData.x&&(position.push(offset.getFloat32(PCDheader.points*textData.x+\nPCDheader.size[0]*i,this.littleEndian)),position.push(offset.getFloat32(PCDheader.points*textData.y+PCDheader.size[1]*i,this.littleEndian)),position.push(offset.getFloat32(PCDheader.points*textData.z+PCDheader.size[2]*i,this.littleEndian))),void 0!==textData.rgb&&(color.push(offset.getUint8(PCDheader.points*textData.rgb+PCDheader.size[3]*i)/255),color.push(offset.getUint8(PCDheader.points*textData.rgb+PCDheader.size[3]*i+1)/255),color.push(offset.getUint8(PCDheader.points*textData.rgb+PCDheader.size[3]*\ni+2)/255)),void 0!==textData.normal_x&&(normal.push(offset.getFloat32(PCDheader.points*textData.normal_x+PCDheader.size[4]*i,this.littleEndian)),normal.push(offset.getFloat32(PCDheader.points*textData.normal_y+PCDheader.size[5]*i,this.littleEndian)),normal.push(offset.getFloat32(PCDheader.points*textData.normal_z+PCDheader.size[6]*i,this.littleEndian)));if(\"binary\"===PCDheader.data)for(data$jscomp$0=new DataView(data$jscomp$0,PCDheader.headerLen),offset=PCDheader.offset,i=textData=0;textData<PCDheader.points;textData++,\ni+=PCDheader.rowSize)void 0!==offset.x&&(position.push(data$jscomp$0.getFloat32(i+offset.x,this.littleEndian)),position.push(data$jscomp$0.getFloat32(i+offset.y,this.littleEndian)),position.push(data$jscomp$0.getFloat32(i+offset.z,this.littleEndian))),void 0!==offset.rgb&&(color.push(data$jscomp$0.getUint8(i+offset.rgb+2)/255),color.push(data$jscomp$0.getUint8(i+offset.rgb+1)/255),color.push(data$jscomp$0.getUint8(i+offset.rgb+0)/255)),void 0!==offset.normal_x&&(normal.push(data$jscomp$0.getFloat32(i+\noffset.normal_x,this.littleEndian)),normal.push(data$jscomp$0.getFloat32(i+offset.normal_y,this.littleEndian)),normal.push(data$jscomp$0.getFloat32(i+offset.normal_z,this.littleEndian)));PCDheader=new _three.BufferGeometry;0<position.length&&PCDheader.setAttribute(\"position\",new _three.Float32BufferAttribute(position,3));0<normal.length&&PCDheader.setAttribute(\"normal\",new _three.Float32BufferAttribute(normal,3));0<color.length&&PCDheader.setAttribute(\"color\",new _three.Float32BufferAttribute(color,\n3));PCDheader.computeBoundingSphere();position=new _three.PointsMaterial({size:.005});0<color.length?position.vertexColors=!0:position.color.setHex(16777215*Math.random());color=new _three.Points(PCDheader,position);url=url.split(\"\").reverse().join(\"\");url=/([^\\/]*)/.exec(url);url=url[1].split(\"\").reverse().join(\"\");color.name=url;return color}}]);return PCDLoader}(_three.Loader);exports.PCDLoader=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$loaders$PCDLoader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PCDLoader = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar PCDLoader =\n/*#__PURE__*/\nfunction (_Loader) {\n  _inherits(PCDLoader, _Loader);\n\n  function PCDLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, PCDLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PCDLoader).call(this, manager));\n    _this.littleEndian = true;\n    return _this;\n  }\n\n  _createClass(PCDLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new _three.FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (data) {\n        try {\n          onLoad(scope.parse(data, url));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data, url) {\n      // from https://gitlab.com/taketwo/three-pcd-loader/blob/master/decompress-lzf.js\n      function decompressLZF(inData, outLength) {\n        var inLength = inData.length;\n        var outData = new Uint8Array(outLength);\n        var inPtr = 0;\n        var outPtr = 0;\n        var ctrl;\n        var len;\n        var ref;\n\n        do {\n          ctrl = inData[inPtr++];\n\n          if (ctrl < 1 << 5) {\n            ctrl++;\n            if (outPtr + ctrl > outLength) throw new Error('Output buffer is not large enough');\n            if (inPtr + ctrl > inLength) throw new Error('Invalid compressed data');\n\n            do {\n              outData[outPtr++] = inData[inPtr++];\n            } while (--ctrl);\n          } else {\n            len = ctrl >> 5;\n            ref = outPtr - ((ctrl & 0x1f) << 8) - 1;\n            if (inPtr >= inLength) throw new Error('Invalid compressed data');\n\n            if (len === 7) {\n              len += inData[inPtr++];\n              if (inPtr >= inLength) throw new Error('Invalid compressed data');\n            }\n\n            ref -= inData[inPtr++];\n            if (outPtr + len + 2 > outLength) throw new Error('Output buffer is not large enough');\n            if (ref < 0) throw new Error('Invalid compressed data');\n            if (ref >= outPtr) throw new Error('Invalid compressed data');\n\n            do {\n              outData[outPtr++] = outData[ref++];\n            } while (--len + 2);\n          }\n        } while (inPtr < inLength);\n\n        return outData;\n      }\n\n      function parseHeader(data) {\n        var PCDheader = {};\n        var result1 = data.search(/[\\r\\n]DATA\\s(\\S*)\\s/i);\n        var result2 = /[\\r\\n]DATA\\s(\\S*)\\s/i.exec(data.substr(result1 - 1));\n        PCDheader.data = result2[1];\n        PCDheader.headerLen = result2[0].length + result1;\n        PCDheader.str = data.substr(0, PCDheader.headerLen); // remove comments\n\n        PCDheader.str = PCDheader.str.replace(/\\#.*/gi, ''); // parse\n\n        PCDheader.version = /VERSION (.*)/i.exec(PCDheader.str);\n        PCDheader.fields = /FIELDS (.*)/i.exec(PCDheader.str);\n        PCDheader.size = /SIZE (.*)/i.exec(PCDheader.str);\n        PCDheader.type = /TYPE (.*)/i.exec(PCDheader.str);\n        PCDheader.count = /COUNT (.*)/i.exec(PCDheader.str);\n        PCDheader.width = /WIDTH (.*)/i.exec(PCDheader.str);\n        PCDheader.height = /HEIGHT (.*)/i.exec(PCDheader.str);\n        PCDheader.viewpoint = /VIEWPOINT (.*)/i.exec(PCDheader.str);\n        PCDheader.points = /POINTS (.*)/i.exec(PCDheader.str); // evaluate\n\n        if (PCDheader.version !== null) PCDheader.version = parseFloat(PCDheader.version[1]);\n        if (PCDheader.fields !== null) PCDheader.fields = PCDheader.fields[1].split(' ');\n        if (PCDheader.type !== null) PCDheader.type = PCDheader.type[1].split(' ');\n        if (PCDheader.width !== null) PCDheader.width = parseInt(PCDheader.width[1]);\n        if (PCDheader.height !== null) PCDheader.height = parseInt(PCDheader.height[1]);\n        if (PCDheader.viewpoint !== null) PCDheader.viewpoint = PCDheader.viewpoint[1];\n        if (PCDheader.points !== null) PCDheader.points = parseInt(PCDheader.points[1], 10);\n        if (PCDheader.points === null) PCDheader.points = PCDheader.width * PCDheader.height;\n\n        if (PCDheader.size !== null) {\n          PCDheader.size = PCDheader.size[1].split(' ').map(function (x) {\n            return parseInt(x, 10);\n          });\n        }\n\n        if (PCDheader.count !== null) {\n          PCDheader.count = PCDheader.count[1].split(' ').map(function (x) {\n            return parseInt(x, 10);\n          });\n        } else {\n          PCDheader.count = [];\n\n          for (var i = 0, l = PCDheader.fields.length; i < l; i++) {\n            PCDheader.count.push(1);\n          }\n        }\n\n        PCDheader.offset = {};\n        var sizeSum = 0;\n\n        for (var _i = 0, _l = PCDheader.fields.length; _i < _l; _i++) {\n          if (PCDheader.data === 'ascii') {\n            PCDheader.offset[PCDheader.fields[_i]] = _i;\n          } else {\n            PCDheader.offset[PCDheader.fields[_i]] = sizeSum;\n            sizeSum += PCDheader.size[_i] * PCDheader.count[_i];\n          }\n        } // for binary only\n\n\n        PCDheader.rowSize = sizeSum;\n        return PCDheader;\n      }\n\n      var textData = _three.LoaderUtils.decodeText(new Uint8Array(data)); // parse header (always ascii format)\n\n\n      var PCDheader = parseHeader(textData); // parse data\n\n      var position = [];\n      var normal = [];\n      var color = []; // ascii\n\n      if (PCDheader.data === 'ascii') {\n        var offset = PCDheader.offset;\n        var pcdData = textData.substr(PCDheader.headerLen);\n        var lines = pcdData.split('\\n');\n\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (lines[i] === '') continue;\n          var line = lines[i].split(' ');\n\n          if (offset.x !== undefined) {\n            position.push(parseFloat(line[offset.x]));\n            position.push(parseFloat(line[offset.y]));\n            position.push(parseFloat(line[offset.z]));\n          }\n\n          if (offset.rgb !== undefined) {\n            var rgb = parseFloat(line[offset.rgb]);\n            var r = rgb >> 16 & 0x0000ff;\n            var g = rgb >> 8 & 0x0000ff;\n            var b = rgb >> 0 & 0x0000ff;\n            color.push(r / 255, g / 255, b / 255);\n          }\n\n          if (offset.normal_x !== undefined) {\n            normal.push(parseFloat(line[offset.normal_x]));\n            normal.push(parseFloat(line[offset.normal_y]));\n            normal.push(parseFloat(line[offset.normal_z]));\n          }\n        }\n      } // binary-compressed\n      // normally data in PCD files are organized as array of structures: XYZRGBXYZRGB\n      // binary compressed PCD files organize their data as structure of arrays: XXYYZZRGBRGB\n      // that requires a totally different parsing approach compared to non-compressed data\n\n\n      if (PCDheader.data === 'binary_compressed') {\n        var sizes = new Uint32Array(data.slice(PCDheader.headerLen, PCDheader.headerLen + 8));\n        var compressedSize = sizes[0];\n        var decompressedSize = sizes[1];\n        var decompressed = decompressLZF(new Uint8Array(data, PCDheader.headerLen + 8, compressedSize), decompressedSize);\n        var dataview = new DataView(decompressed.buffer);\n        var _offset = PCDheader.offset;\n\n        for (var _i2 = 0; _i2 < PCDheader.points; _i2++) {\n          if (_offset.x !== undefined) {\n            position.push(dataview.getFloat32(PCDheader.points * _offset.x + PCDheader.size[0] * _i2, this.littleEndian));\n            position.push(dataview.getFloat32(PCDheader.points * _offset.y + PCDheader.size[1] * _i2, this.littleEndian));\n            position.push(dataview.getFloat32(PCDheader.points * _offset.z + PCDheader.size[2] * _i2, this.littleEndian));\n          }\n\n          if (_offset.rgb !== undefined) {\n            color.push(dataview.getUint8(PCDheader.points * _offset.rgb + PCDheader.size[3] * _i2 + 0) / 255.0);\n            color.push(dataview.getUint8(PCDheader.points * _offset.rgb + PCDheader.size[3] * _i2 + 1) / 255.0);\n            color.push(dataview.getUint8(PCDheader.points * _offset.rgb + PCDheader.size[3] * _i2 + 2) / 255.0);\n          }\n\n          if (_offset.normal_x !== undefined) {\n            normal.push(dataview.getFloat32(PCDheader.points * _offset.normal_x + PCDheader.size[4] * _i2, this.littleEndian));\n            normal.push(dataview.getFloat32(PCDheader.points * _offset.normal_y + PCDheader.size[5] * _i2, this.littleEndian));\n            normal.push(dataview.getFloat32(PCDheader.points * _offset.normal_z + PCDheader.size[6] * _i2, this.littleEndian));\n          }\n        }\n      } // binary\n\n\n      if (PCDheader.data === 'binary') {\n        var _dataview = new DataView(data, PCDheader.headerLen);\n\n        var _offset2 = PCDheader.offset;\n\n        for (var _i3 = 0, row = 0; _i3 < PCDheader.points; _i3++, row += PCDheader.rowSize) {\n          if (_offset2.x !== undefined) {\n            position.push(_dataview.getFloat32(row + _offset2.x, this.littleEndian));\n            position.push(_dataview.getFloat32(row + _offset2.y, this.littleEndian));\n            position.push(_dataview.getFloat32(row + _offset2.z, this.littleEndian));\n          }\n\n          if (_offset2.rgb !== undefined) {\n            color.push(_dataview.getUint8(row + _offset2.rgb + 2) / 255.0);\n            color.push(_dataview.getUint8(row + _offset2.rgb + 1) / 255.0);\n            color.push(_dataview.getUint8(row + _offset2.rgb + 0) / 255.0);\n          }\n\n          if (_offset2.normal_x !== undefined) {\n            normal.push(_dataview.getFloat32(row + _offset2.normal_x, this.littleEndian));\n            normal.push(_dataview.getFloat32(row + _offset2.normal_y, this.littleEndian));\n            normal.push(_dataview.getFloat32(row + _offset2.normal_z, this.littleEndian));\n          }\n        }\n      } // build geometry\n\n\n      var geometry = new _three.BufferGeometry();\n      if (position.length > 0) geometry.setAttribute('position', new _three.Float32BufferAttribute(position, 3));\n      if (normal.length > 0) geometry.setAttribute('normal', new _three.Float32BufferAttribute(normal, 3));\n      if (color.length > 0) geometry.setAttribute('color', new _three.Float32BufferAttribute(color, 3));\n      geometry.computeBoundingSphere(); // build material\n\n      var material = new _three.PointsMaterial({\n        size: 0.005\n      });\n\n      if (color.length > 0) {\n        material.vertexColors = true;\n      } else {\n        material.color.setHex(Math.random() * 0xffffff);\n      } // build point cloud\n\n\n      var mesh = new _three.Points(geometry, material);\n      var name = url.split('').reverse().join('');\n      name = /([^\\/]*)/.exec(name);\n      name = name[1].split('').reverse().join('');\n      mesh.name = name;\n      return mesh;\n    }\n  }]);\n\n  return PCDLoader;\n}(_three.Loader);\n\nexports.PCDLoader = PCDLoader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["width","headerLen","viewpoint","offset","prototype","height","str","points","key","littleEndian","__esModule","count","PCDLoader","name","configurable","value","enumerable","vertexColors","writable","rowSize","type","version","__proto__","fields","size","data","constructor"]],"~:compiled-at",1630917515951,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$loaders$PCDLoader.js\",\n\"lineCount\":18,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/loaders/PCDLoader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$loaders$PCDLoader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PCDLoader = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\nvar PCDLoader =\\n/*#__PURE__*/\\nfunction (_Loader) {\\n  _inherits(PCDLoader, _Loader);\\n\\n  function PCDLoader(manager) {\\n    var _this;\\n\\n    _classCallCheck(this, PCDLoader);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PCDLoader).call(this, manager));\\n    _this.littleEndian = true;\\n    return _this;\\n  }\\n\\n  _createClass(PCDLoader, [{\\n    key: \\\"load\\\",\\n    value: function load(url, onLoad, onProgress, onError) {\\n      var scope = this;\\n      var loader = new _three.FileLoader(scope.manager);\\n      loader.setPath(scope.path);\\n      loader.setResponseType('arraybuffer');\\n      loader.setRequestHeader(scope.requestHeader);\\n      loader.setWithCredentials(scope.withCredentials);\\n      loader.load(url, function (data) {\\n        try {\\n          onLoad(scope.parse(data, url));\\n        } catch (e) {\\n          if (onError) {\\n            onError(e);\\n          } else {\\n            console.error(e);\\n          }\\n\\n          scope.manager.itemError(url);\\n        }\\n      }, onProgress, onError);\\n    }\\n  }, {\\n    key: \\\"parse\\\",\\n    value: function parse(data, url) {\\n      // from https://gitlab.com/taketwo/three-pcd-loader/blob/master/decompress-lzf.js\\n      function decompressLZF(inData, outLength) {\\n        var inLength = inData.length;\\n        var outData = new Uint8Array(outLength);\\n        var inPtr = 0;\\n        var outPtr = 0;\\n        var ctrl;\\n        var len;\\n        var ref;\\n\\n        do {\\n          ctrl = inData[inPtr++];\\n\\n          if (ctrl < 1 << 5) {\\n            ctrl++;\\n            if (outPtr + ctrl > outLength) throw new Error('Output buffer is not large enough');\\n            if (inPtr + ctrl > inLength) throw new Error('Invalid compressed data');\\n\\n            do {\\n              outData[outPtr++] = inData[inPtr++];\\n            } while (--ctrl);\\n          } else {\\n            len = ctrl >> 5;\\n            ref = outPtr - ((ctrl & 0x1f) << 8) - 1;\\n            if (inPtr >= inLength) throw new Error('Invalid compressed data');\\n\\n            if (len === 7) {\\n              len += inData[inPtr++];\\n              if (inPtr >= inLength) throw new Error('Invalid compressed data');\\n            }\\n\\n            ref -= inData[inPtr++];\\n            if (outPtr + len + 2 > outLength) throw new Error('Output buffer is not large enough');\\n            if (ref < 0) throw new Error('Invalid compressed data');\\n            if (ref >= outPtr) throw new Error('Invalid compressed data');\\n\\n            do {\\n              outData[outPtr++] = outData[ref++];\\n            } while (--len + 2);\\n          }\\n        } while (inPtr < inLength);\\n\\n        return outData;\\n      }\\n\\n      function parseHeader(data) {\\n        var PCDheader = {};\\n        var result1 = data.search(/[\\\\r\\\\n]DATA\\\\s(\\\\S*)\\\\s/i);\\n        var result2 = /[\\\\r\\\\n]DATA\\\\s(\\\\S*)\\\\s/i.exec(data.substr(result1 - 1));\\n        PCDheader.data = result2[1];\\n        PCDheader.headerLen = result2[0].length + result1;\\n        PCDheader.str = data.substr(0, PCDheader.headerLen); // remove comments\\n\\n        PCDheader.str = PCDheader.str.replace(/\\\\#.*/gi, ''); // parse\\n\\n        PCDheader.version = /VERSION (.*)/i.exec(PCDheader.str);\\n        PCDheader.fields = /FIELDS (.*)/i.exec(PCDheader.str);\\n        PCDheader.size = /SIZE (.*)/i.exec(PCDheader.str);\\n        PCDheader.type = /TYPE (.*)/i.exec(PCDheader.str);\\n        PCDheader.count = /COUNT (.*)/i.exec(PCDheader.str);\\n        PCDheader.width = /WIDTH (.*)/i.exec(PCDheader.str);\\n        PCDheader.height = /HEIGHT (.*)/i.exec(PCDheader.str);\\n        PCDheader.viewpoint = /VIEWPOINT (.*)/i.exec(PCDheader.str);\\n        PCDheader.points = /POINTS (.*)/i.exec(PCDheader.str); // evaluate\\n\\n        if (PCDheader.version !== null) PCDheader.version = parseFloat(PCDheader.version[1]);\\n        if (PCDheader.fields !== null) PCDheader.fields = PCDheader.fields[1].split(' ');\\n        if (PCDheader.type !== null) PCDheader.type = PCDheader.type[1].split(' ');\\n        if (PCDheader.width !== null) PCDheader.width = parseInt(PCDheader.width[1]);\\n        if (PCDheader.height !== null) PCDheader.height = parseInt(PCDheader.height[1]);\\n        if (PCDheader.viewpoint !== null) PCDheader.viewpoint = PCDheader.viewpoint[1];\\n        if (PCDheader.points !== null) PCDheader.points = parseInt(PCDheader.points[1], 10);\\n        if (PCDheader.points === null) PCDheader.points = PCDheader.width * PCDheader.height;\\n\\n        if (PCDheader.size !== null) {\\n          PCDheader.size = PCDheader.size[1].split(' ').map(function (x) {\\n            return parseInt(x, 10);\\n          });\\n        }\\n\\n        if (PCDheader.count !== null) {\\n          PCDheader.count = PCDheader.count[1].split(' ').map(function (x) {\\n            return parseInt(x, 10);\\n          });\\n        } else {\\n          PCDheader.count = [];\\n\\n          for (var i = 0, l = PCDheader.fields.length; i < l; i++) {\\n            PCDheader.count.push(1);\\n          }\\n        }\\n\\n        PCDheader.offset = {};\\n        var sizeSum = 0;\\n\\n        for (var _i = 0, _l = PCDheader.fields.length; _i < _l; _i++) {\\n          if (PCDheader.data === 'ascii') {\\n            PCDheader.offset[PCDheader.fields[_i]] = _i;\\n          } else {\\n            PCDheader.offset[PCDheader.fields[_i]] = sizeSum;\\n            sizeSum += PCDheader.size[_i] * PCDheader.count[_i];\\n          }\\n        } // for binary only\\n\\n\\n        PCDheader.rowSize = sizeSum;\\n        return PCDheader;\\n      }\\n\\n      var textData = _three.LoaderUtils.decodeText(new Uint8Array(data)); // parse header (always ascii format)\\n\\n\\n      var PCDheader = parseHeader(textData); // parse data\\n\\n      var position = [];\\n      var normal = [];\\n      var color = []; // ascii\\n\\n      if (PCDheader.data === 'ascii') {\\n        var offset = PCDheader.offset;\\n        var pcdData = textData.substr(PCDheader.headerLen);\\n        var lines = pcdData.split('\\\\n');\\n\\n        for (var i = 0, l = lines.length; i < l; i++) {\\n          if (lines[i] === '') continue;\\n          var line = lines[i].split(' ');\\n\\n          if (offset.x !== undefined) {\\n            position.push(parseFloat(line[offset.x]));\\n            position.push(parseFloat(line[offset.y]));\\n            position.push(parseFloat(line[offset.z]));\\n          }\\n\\n          if (offset.rgb !== undefined) {\\n            var rgb = parseFloat(line[offset.rgb]);\\n            var r = rgb >> 16 & 0x0000ff;\\n            var g = rgb >> 8 & 0x0000ff;\\n            var b = rgb >> 0 & 0x0000ff;\\n            color.push(r / 255, g / 255, b / 255);\\n          }\\n\\n          if (offset.normal_x !== undefined) {\\n            normal.push(parseFloat(line[offset.normal_x]));\\n            normal.push(parseFloat(line[offset.normal_y]));\\n            normal.push(parseFloat(line[offset.normal_z]));\\n          }\\n        }\\n      } // binary-compressed\\n      // normally data in PCD files are organized as array of structures: XYZRGBXYZRGB\\n      // binary compressed PCD files organize their data as structure of arrays: XXYYZZRGBRGB\\n      // that requires a totally different parsing approach compared to non-compressed data\\n\\n\\n      if (PCDheader.data === 'binary_compressed') {\\n        var sizes = new Uint32Array(data.slice(PCDheader.headerLen, PCDheader.headerLen + 8));\\n        var compressedSize = sizes[0];\\n        var decompressedSize = sizes[1];\\n        var decompressed = decompressLZF(new Uint8Array(data, PCDheader.headerLen + 8, compressedSize), decompressedSize);\\n        var dataview = new DataView(decompressed.buffer);\\n        var _offset = PCDheader.offset;\\n\\n        for (var _i2 = 0; _i2 < PCDheader.points; _i2++) {\\n          if (_offset.x !== undefined) {\\n            position.push(dataview.getFloat32(PCDheader.points * _offset.x + PCDheader.size[0] * _i2, this.littleEndian));\\n            position.push(dataview.getFloat32(PCDheader.points * _offset.y + PCDheader.size[1] * _i2, this.littleEndian));\\n            position.push(dataview.getFloat32(PCDheader.points * _offset.z + PCDheader.size[2] * _i2, this.littleEndian));\\n          }\\n\\n          if (_offset.rgb !== undefined) {\\n            color.push(dataview.getUint8(PCDheader.points * _offset.rgb + PCDheader.size[3] * _i2 + 0) / 255.0);\\n            color.push(dataview.getUint8(PCDheader.points * _offset.rgb + PCDheader.size[3] * _i2 + 1) / 255.0);\\n            color.push(dataview.getUint8(PCDheader.points * _offset.rgb + PCDheader.size[3] * _i2 + 2) / 255.0);\\n          }\\n\\n          if (_offset.normal_x !== undefined) {\\n            normal.push(dataview.getFloat32(PCDheader.points * _offset.normal_x + PCDheader.size[4] * _i2, this.littleEndian));\\n            normal.push(dataview.getFloat32(PCDheader.points * _offset.normal_y + PCDheader.size[5] * _i2, this.littleEndian));\\n            normal.push(dataview.getFloat32(PCDheader.points * _offset.normal_z + PCDheader.size[6] * _i2, this.littleEndian));\\n          }\\n        }\\n      } // binary\\n\\n\\n      if (PCDheader.data === 'binary') {\\n        var _dataview = new DataView(data, PCDheader.headerLen);\\n\\n        var _offset2 = PCDheader.offset;\\n\\n        for (var _i3 = 0, row = 0; _i3 < PCDheader.points; _i3++, row += PCDheader.rowSize) {\\n          if (_offset2.x !== undefined) {\\n            position.push(_dataview.getFloat32(row + _offset2.x, this.littleEndian));\\n            position.push(_dataview.getFloat32(row + _offset2.y, this.littleEndian));\\n            position.push(_dataview.getFloat32(row + _offset2.z, this.littleEndian));\\n          }\\n\\n          if (_offset2.rgb !== undefined) {\\n            color.push(_dataview.getUint8(row + _offset2.rgb + 2) / 255.0);\\n            color.push(_dataview.getUint8(row + _offset2.rgb + 1) / 255.0);\\n            color.push(_dataview.getUint8(row + _offset2.rgb + 0) / 255.0);\\n          }\\n\\n          if (_offset2.normal_x !== undefined) {\\n            normal.push(_dataview.getFloat32(row + _offset2.normal_x, this.littleEndian));\\n            normal.push(_dataview.getFloat32(row + _offset2.normal_y, this.littleEndian));\\n            normal.push(_dataview.getFloat32(row + _offset2.normal_z, this.littleEndian));\\n          }\\n        }\\n      } // build geometry\\n\\n\\n      var geometry = new _three.BufferGeometry();\\n      if (position.length > 0) geometry.setAttribute('position', new _three.Float32BufferAttribute(position, 3));\\n      if (normal.length > 0) geometry.setAttribute('normal', new _three.Float32BufferAttribute(normal, 3));\\n      if (color.length > 0) geometry.setAttribute('color', new _three.Float32BufferAttribute(color, 3));\\n      geometry.computeBoundingSphere(); // build material\\n\\n      var material = new _three.PointsMaterial({\\n        size: 0.005\\n      });\\n\\n      if (color.length > 0) {\\n        material.vertexColors = true;\\n      } else {\\n        material.color.setHex(Math.random() * 0xffffff);\\n      } // build point cloud\\n\\n\\n      var mesh = new _three.Points(geometry, material);\\n      var name = url.split('').reverse().join('');\\n      name = /([^\\\\/]*)/.exec(name);\\n      name = name[1].split('').reverse().join('');\\n      mesh.name = name;\\n      return mesh;\\n    }\\n  }]);\\n\\n  return PCDLoader;\\n}(_three.Loader);\\n\\nexports.PCDLoader = PCDLoader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"_getPrototypeOf\",\"o\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"_setPrototypeOf\",\"p\",\"PCDLoader\",\"_three\",\"_Loader\",\"manager\",\"instance\",\"call\",\"self\",\"ReferenceError\",\"_this\",\"littleEndian\",\"load\",\"url\",\"onLoad\",\"onProgress\",\"onError\",\"scope\",\"loader\",\"FileLoader\",\"setPath\",\"path\",\"setResponseType\",\"setRequestHeader\",\"requestHeader\",\"setWithCredentials\",\"withCredentials\",\"data\",\"parse\",\"e\",\"console\",\"error\",\"itemError\",\"decompressLZF\",\"inData\",\"outLength\",\"inLength\",\"outData\",\"Uint8Array\",\"inPtr\",\"outPtr\",\"ctrl\",\"Error\",\"len\",\"ref\",\"textData\",\"LoaderUtils\",\"decodeText\",\"PCDheader\",\"parseHeader\",\"result1\",\"search\",\"result2\",\"exec\",\"substr\",\"headerLen\",\"str\",\"replace\",\"version\",\"fields\",\"size\",\"type\",\"count\",\"width\",\"height\",\"viewpoint\",\"points\",\"parseFloat\",\"split\",\"parseInt\",\"map\",\"x\",\"l\",\"push\",\"offset\",\"_i\",\"sizeSum\",\"_l\",\"rowSize\",\"position\",\"normal\",\"color\",\"lines\",\"pcdData\",\"line\",\"undefined\",\"y\",\"z\",\"rgb\",\"normal_x\",\"normal_y\",\"normal_z\",\"sizes\",\"_i2\",\"Uint32Array\",\"slice\",\"decompressedSize\",\"decompressed\",\"compressedSize\",\"dataview\",\"DataView\",\"buffer\",\"_offset\",\"getFloat32\",\"getUint8\",\"_dataview\",\"row\",\"_offset2\",\"_i3\",\"geometry\",\"BufferGeometry\",\"setAttribute\",\"Float32BufferAttribute\",\"computeBoundingSphere\",\"material\",\"PointsMaterial\",\"vertexColors\",\"setHex\",\"Math\",\"random\",\"mesh\",\"Points\",\"name\",\"reverse\",\"join\",\"Loader\"]\n}\n"]