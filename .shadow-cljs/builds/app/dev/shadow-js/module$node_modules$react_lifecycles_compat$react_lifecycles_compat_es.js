["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"],"~:js","shadow$provide.module$node_modules$react_lifecycles_compat$react_lifecycles_compat_es=function(global,require,module,exports){function componentWillMount(){var state=this.constructor.getDerivedStateFromProps(this.props,this.state);null!==state&&void 0!==state&&this.setState(state)}function componentWillReceiveProps(nextProps){this.setState(function(prevState){prevState=this.constructor.getDerivedStateFromProps(nextProps,prevState);return null!==prevState&&void 0!==prevState?prevState:null}.bind(this))}\nfunction componentWillUpdate(nextProps,nextState){try{var prevProps=this.props,prevState=this.state;this.props=nextProps;this.state=nextState;this.__reactInternalSnapshotFlag=!0;this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(prevProps,prevState)}finally{this.props=prevProps,this.state=prevState}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.polyfill=function(Component){var prototype=Component.prototype;if(!prototype||!prototype.isReactComponent)throw Error(\"Can only polyfill class components\");\nif(\"function\"!==typeof Component.getDerivedStateFromProps&&\"function\"!==typeof prototype.getSnapshotBeforeUpdate)return Component;var foundWillMountName=null,foundWillReceivePropsName=null,foundWillUpdateName=null;\"function\"===typeof prototype.componentWillMount?foundWillMountName=\"componentWillMount\":\"function\"===typeof prototype.UNSAFE_componentWillMount&&(foundWillMountName=\"UNSAFE_componentWillMount\");\"function\"===typeof prototype.componentWillReceiveProps?foundWillReceivePropsName=\"componentWillReceiveProps\":\n\"function\"===typeof prototype.UNSAFE_componentWillReceiveProps&&(foundWillReceivePropsName=\"UNSAFE_componentWillReceiveProps\");\"function\"===typeof prototype.componentWillUpdate?foundWillUpdateName=\"componentWillUpdate\":\"function\"===typeof prototype.UNSAFE_componentWillUpdate&&(foundWillUpdateName=\"UNSAFE_componentWillUpdate\");if(null!==foundWillMountName||null!==foundWillReceivePropsName||null!==foundWillUpdateName)throw Error(\"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\"+\n(Component.displayName||Component.name)+\" uses \"+(\"function\"===typeof Component.getDerivedStateFromProps?\"getDerivedStateFromProps()\":\"getSnapshotBeforeUpdate()\")+\" but also contains the following legacy lifecycles:\"+(null!==foundWillMountName?\"\\n  \"+foundWillMountName:\"\")+(null!==foundWillReceivePropsName?\"\\n  \"+foundWillReceivePropsName:\"\")+(null!==foundWillUpdateName?\"\\n  \"+foundWillUpdateName:\"\")+\"\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\nhttps://fb.me/react-async-component-lifecycle-hooks\");\n\"function\"===typeof Component.getDerivedStateFromProps&&(prototype.componentWillMount=componentWillMount,prototype.componentWillReceiveProps=componentWillReceiveProps);if(\"function\"===typeof prototype.getSnapshotBeforeUpdate){if(\"function\"!==typeof prototype.componentDidUpdate)throw Error(\"Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype\");prototype.componentWillUpdate=componentWillUpdate;var componentDidUpdate=prototype.componentDidUpdate;\nprototype.componentDidUpdate=function(prevProps,prevState,maybeSnapshot){componentDidUpdate.call(this,prevProps,prevState,this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:maybeSnapshot)}}return Component};componentWillMount.__suppressDeprecationWarning=!0;componentWillReceiveProps.__suppressDeprecationWarning=!0;componentWillUpdate.__suppressDeprecationWarning=!0}","~:source","shadow$provide[\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_es\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.polyfill = polyfill;\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  } // Binding \"this\" is important for shallow renderer support.\n\n\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n} // React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\n\n\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n\n\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  } // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n\n\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  } // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n\n\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["componentWillMount","__suppressDeprecationWarning","__reactInternalSnapshot","__reactInternalSnapshotFlag","__esModule","value","componentDidUpdate","props","componentWillUpdate","state","polyfill","componentWillReceiveProps"]],"~:compiled-at",1630917513944,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_es.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_es\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.polyfill = polyfill;\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\nfunction componentWillMount() {\\n  // Call this.constructor.gDSFP to support sub-classes.\\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\\n\\n  if (state !== null && state !== undefined) {\\n    this.setState(state);\\n  }\\n}\\n\\nfunction componentWillReceiveProps(nextProps) {\\n  // Call this.constructor.gDSFP to support sub-classes.\\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\\n  function updater(prevState) {\\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\\n    return state !== null && state !== undefined ? state : null;\\n  } // Binding \\\"this\\\" is important for shallow renderer support.\\n\\n\\n  this.setState(updater.bind(this));\\n}\\n\\nfunction componentWillUpdate(nextProps, nextState) {\\n  try {\\n    var prevProps = this.props;\\n    var prevState = this.state;\\n    this.props = nextProps;\\n    this.state = nextState;\\n    this.__reactInternalSnapshotFlag = true;\\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\\n  } finally {\\n    this.props = prevProps;\\n    this.state = prevState;\\n  }\\n} // React may warn about cWM/cWRP/cWU methods being deprecated.\\n// Add a flag to suppress these warnings for this special case.\\n\\n\\ncomponentWillMount.__suppressDeprecationWarning = true;\\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\\ncomponentWillUpdate.__suppressDeprecationWarning = true;\\n\\nfunction polyfill(Component) {\\n  var prototype = Component.prototype;\\n\\n  if (!prototype || !prototype.isReactComponent) {\\n    throw new Error('Can only polyfill class components');\\n  }\\n\\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\\n    return Component;\\n  } // If new component APIs are defined, \\\"unsafe\\\" lifecycles won't be called.\\n  // Error if any of these lifecycles are present,\\n  // Because they would work differently between older and newer (16.3+) versions of React.\\n\\n\\n  var foundWillMountName = null;\\n  var foundWillReceivePropsName = null;\\n  var foundWillUpdateName = null;\\n\\n  if (typeof prototype.componentWillMount === 'function') {\\n    foundWillMountName = 'componentWillMount';\\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\\n    foundWillMountName = 'UNSAFE_componentWillMount';\\n  }\\n\\n  if (typeof prototype.componentWillReceiveProps === 'function') {\\n    foundWillReceivePropsName = 'componentWillReceiveProps';\\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\\n  }\\n\\n  if (typeof prototype.componentWillUpdate === 'function') {\\n    foundWillUpdateName = 'componentWillUpdate';\\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\\n  }\\n\\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\\n    var componentName = Component.displayName || Component.name;\\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\\\n\\\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\\\n  ' + foundWillUpdateName : '') + '\\\\n\\\\nThe above lifecycles should be removed. Learn more about this warning here:\\\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\\n  } // React <= 16.2 does not support static getDerivedStateFromProps.\\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\\n\\n\\n  if (typeof Component.getDerivedStateFromProps === 'function') {\\n    prototype.componentWillMount = componentWillMount;\\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\\n  } // React <= 16.2 does not support getSnapshotBeforeUpdate.\\n  // As a workaround, use cWU to invoke the new lifecycle.\\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\\n\\n\\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\\n    if (typeof prototype.componentDidUpdate !== 'function') {\\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\\n    }\\n\\n    prototype.componentWillUpdate = componentWillUpdate;\\n    var componentDidUpdate = prototype.componentDidUpdate;\\n\\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\\n      // 16.3+ will not execute our will-update method;\\n      // It will pass a snapshot value to did-update though.\\n      // Older versions will require our polyfilled will-update value.\\n      // We need to handle both cases, but can't just check for the presence of \\\"maybeSnapshot\\\",\\n      // Because for <= 15.x versions this might be a \\\"prevContext\\\" object.\\n      // We also can't just check \\\"__reactInternalSnapshot\\\",\\n      // Because get-snapshot might return a falsy value.\\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\\n    };\\n  }\\n\\n  return Component;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"componentWillMount\",\"state\",\"constructor\",\"getDerivedStateFromProps\",\"props\",\"undefined\",\"setState\",\"componentWillReceiveProps\",\"nextProps\",\"updater\",\"prevState\",\"bind\",\"componentWillUpdate\",\"nextState\",\"prevProps\",\"__reactInternalSnapshotFlag\",\"__reactInternalSnapshot\",\"getSnapshotBeforeUpdate\",\"Object\",\"defineProperty\",\"value\",\"polyfill\",\"Component\",\"prototype\",\"isReactComponent\",\"Error\",\"foundWillMountName\",\"foundWillReceivePropsName\",\"foundWillUpdateName\",\"UNSAFE_componentWillMount\",\"UNSAFE_componentWillReceiveProps\",\"UNSAFE_componentWillUpdate\",\"displayName\",\"name\",\"newApiName\",\"componentDidUpdate\",\"prototype.componentDidUpdate\",\"maybeSnapshot\",\"call\",\"snapshot\",\"__suppressDeprecationWarning\"]\n}\n"]