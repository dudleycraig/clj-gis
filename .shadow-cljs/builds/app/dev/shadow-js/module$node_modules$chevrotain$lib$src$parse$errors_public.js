["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/chevrotain/lib/src/parse/errors_public.js"],"~:js","shadow$provide.module$node_modules$chevrotain$lib$src$parse$errors_public=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.defaultGrammarValidatorErrorProvider=exports.defaultGrammarResolverErrorProvider=exports.defaultParserErrorProvider=void 0;var tokens_public_1=require(\"module$node_modules$chevrotain$lib$src$scan$tokens_public\"),utils=require(\"module$node_modules$$chevrotain$utils$lib$src$api\"),utils_1=require(\"module$node_modules$$chevrotain$utils$lib$src$api\"),\ngast_public_1=require(\"module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_public\"),gast_1=require(\"module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast\");exports.defaultParserErrorProvider={buildMismatchTokenMessage:function(_a){var expected=_a.expected;_a=_a.actual;return\"Expecting \"+(tokens_public_1.hasTokenLabel(expected)?\"--\\x3e \"+tokens_public_1.tokenLabel(expected)+\" \\x3c--\":\"token of type --\\x3e \"+expected.name+\" \\x3c--\")+\" but found --\\x3e '\"+_a.image+\"' \\x3c--\"},buildNotAllInputParsedMessage:function(_a){return\"Redundant input, expecting EOF but found: \"+\n_a.firstRedundant.image},buildNoViableAltMessage:function(_a){var expectedPathsPerAlt=_a.expectedPathsPerAlt,customUserDescription=_a.customUserDescription;_a=\"\\nbut found: '\"+utils_1.first(_a.actual).image+\"'\";if(customUserDescription)return\"Expecting: \"+customUserDescription+_a;expectedPathsPerAlt=utils_1.reduce(expectedPathsPerAlt,function(result,currAltPaths){return result.concat(currAltPaths)},[]);expectedPathsPerAlt=utils_1.map(expectedPathsPerAlt,function(currPath){return\"[\"+utils_1.map(currPath,\nfunction(currTokenType){return tokens_public_1.tokenLabel(currTokenType)}).join(\", \")+\"]\"});return\"Expecting: one of these possible Token sequences:\\n\"+utils_1.map(expectedPathsPerAlt,function(itemMsg,idx){return\"  \"+(idx+1)+\". \"+itemMsg}).join(\"\\n\")+_a},buildEarlyExitMessage:function(_a){var expectedIterationPaths=_a.expectedIterationPaths,customUserDescription=_a.customUserDescription;_a=\"\\nbut found: '\"+utils_1.first(_a.actual).image+\"'\";return customUserDescription?\"Expecting: \"+customUserDescription+\n_a:\"Expecting: expecting at least one iteration which starts with one of these possible Token sequences::\\n  \\x3c\"+(utils_1.map(expectedIterationPaths,function(currPath){return\"[\"+utils_1.map(currPath,function(currTokenType){return tokens_public_1.tokenLabel(currTokenType)}).join(\",\")+\"]\"}).join(\" ,\")+\"\\x3e\")+_a}};Object.freeze(exports.defaultParserErrorProvider);exports.defaultGrammarResolverErrorProvider={buildRuleNotFoundError:function(topLevelRule,undefinedRule){return\"Invalid grammar, reference to a rule which is not defined: -\\x3e\"+\nundefinedRule.nonTerminalName+\"\\x3c-\\ninside top level rule: -\\x3e\"+topLevelRule.name+\"\\x3c-\"}};exports.defaultGrammarValidatorErrorProvider={buildDuplicateFoundError:function(topLevelRule,duplicateProds){topLevelRule=topLevelRule.name;var duplicateProd=utils_1.first(duplicateProds),index=duplicateProd.idx,dslName=gast_1.getProductionDslName(duplicateProd);duplicateProd=duplicateProd instanceof gast_public_1.Terminal?duplicateProd.terminalType.name:duplicateProd instanceof gast_public_1.NonTerminal?\nduplicateProd.nonTerminalName:\"\";duplicateProds=\"-\\x3e\"+dslName+(0<index?index:\"\")+\"\\x3c- \"+(duplicateProd?\"with argument: -\\x3e\"+duplicateProd+\"\\x3c-\":\"\")+\"\\n                  appears more than once (\"+duplicateProds.length+\" times) in the top level rule: -\\x3e\"+topLevelRule+\"\\x3c-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";duplicateProds=duplicateProds.replace(/[ \\t]+/g,\" \");return duplicateProds=duplicateProds.replace(/\\s\\s+/g,\n\"\\n\")},buildNamespaceConflictError:function(rule){return\"Namespace conflict found in grammar.\\nThe grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: \\x3c\"+(rule.name+\"\\x3e.\\nTo resolve this make sure each Terminal and Non-Terminal names are unique\\nThis is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\nand Non-Terminal names start with a lower case letter.\")},buildAlternationPrefixAmbiguityError:function(options){var pathMsg=utils_1.map(options.prefixPath,\nfunction(currTok){return tokens_public_1.tokenLabel(currTok)}).join(\", \"),occurrence=0===options.alternation.idx?\"\":options.alternation.idx;return\"Ambiguous alternatives: \\x3c\"+options.ambiguityIndices.join(\" ,\")+\"\\x3e due to common lookahead prefix\\nin \\x3cOR\"+(occurrence+\"\\x3e inside \\x3c\"+options.topLevelRule.name+\"\\x3e Rule,\\n\\x3c\")+(pathMsg+\"\\x3e may appears as a prefix path in all these alternatives.\\nSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\nFor Further details.\")},\nbuildAlternationAmbiguityError:function(options){var pathMsg=utils_1.map(options.prefixPath,function(currtok){return tokens_public_1.tokenLabel(currtok)}).join(\", \"),occurrence=0===options.alternation.idx?\"\":options.alternation.idx;return\"Ambiguous Alternatives Detected: \\x3c\"+options.ambiguityIndices.join(\" ,\")+\"\\x3e in \\x3cOR\"+occurrence+\"\\x3e inside \\x3c\"+(options.topLevelRule.name+\"\\x3e Rule,\\n\\x3c\")+(pathMsg+\"\\x3e may appears as a prefix path in all these alternatives.\\nSee: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\nFor Further details.\")},\nbuildEmptyRepetitionError:function(options){var dslName=gast_1.getProductionDslName(options.repetition);0!==options.repetition.idx&&(dslName+=options.repetition.idx);return\"The repetition \\x3c\"+dslName+\"\\x3e within Rule \\x3c\"+options.topLevelRule.name+\"\\x3e can never consume any tokens.\\nThis could lead to an infinite loop.\"},buildTokenNameError:function(options){return\"deprecated\"},buildEmptyAlternationError:function(options){return\"Ambiguous empty alternative: \\x3c\"+(options.emptyChoiceIdx+1)+\"\\x3e in \\x3cOR\"+\n(options.alternation.idx+\"\\x3e inside \\x3c\"+options.topLevelRule.name+\"\\x3e Rule.\\nOnly the last alternative may be an empty alternative.\")},buildTooManyAlternativesError:function(options){return\"An Alternation cannot have more than 256 alternatives:\\n\\x3cOR\"+(options.alternation.idx+\"\\x3e inside \\x3c\"+options.topLevelRule.name+\"\\x3e Rule.\\n has \"+(options.alternation.definition.length+1)+\" alternatives.\")},buildLeftRecursionError:function(options){var ruleName=options.topLevelRule.name;options=utils.map(options.leftRecursionPath,\nfunction(currRule){return currRule.name});options=ruleName+\" --\\x3e \"+options.concat([ruleName]).join(\" --\\x3e \");return\"Left Recursion found in grammar.\\nrule: \\x3c\"+(ruleName+\"\\x3e can be invoked from itself (directly or indirectly)\\nwithout consuming any Tokens. The grammar path that causes this is: \\n \")+(options+\"\\n To fix this refactor your grammar to remove the left recursion.\\nsee: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\")},buildInvalidRuleNameError:function(options){return\"deprecated\"},\nbuildDuplicateRuleNameError:function(options){return\"Duplicate definition, rule: -\\x3e\"+(options.topLevelRule instanceof gast_public_1.Rule?options.topLevelRule.name:options.topLevelRule)+\"\\x3c- is already defined in the grammar: -\\x3e\"+options.grammarName+\"\\x3c-\"}}}","~:source","shadow$provide[\"module$node_modules$chevrotain$lib$src$parse$errors_public\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.defaultParserErrorProvider = void 0;\nvar tokens_public_1 = require(\"../scan/tokens_public\");\nvar utils = require(\"@chevrotain/utils\");\nvar utils_1 = require(\"@chevrotain/utils\");\nvar gast_public_1 = require(\"./grammar/gast/gast_public\");\nvar gast_1 = require(\"./grammar/gast/gast\");\nexports.defaultParserErrorProvider = {\n    buildMismatchTokenMessage: function (_a) {\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\n        var hasLabel = tokens_public_1.hasTokenLabel(expected);\n        var expectedMsg = hasLabel\n            ? \"--> \" + tokens_public_1.tokenLabel(expected) + \" <--\"\n            : \"token of type --> \" + expected.name + \" <--\";\n        var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n        return msg;\n    },\n    buildNotAllInputParsedMessage: function (_a) {\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage: function (_a) {\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = utils_1.first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var allLookAheadPaths = utils_1.reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\n            var nextValidTokenSequences = utils_1.map(allLookAheadPaths, function (currPath) {\n                return \"[\" + utils_1.map(currPath, function (currTokenType) { return tokens_public_1.tokenLabel(currTokenType); }).join(\", \") + \"]\";\n            });\n            var nextValidSequenceItems = utils_1.map(nextValidTokenSequences, function (itemMsg, idx) { return \"  \" + (idx + 1) + \". \" + itemMsg; });\n            var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage: function (_a) {\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = utils_1.first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var nextValidTokenSequences = utils_1.map(expectedIterationPaths, function (currPath) {\n                return \"[\" + utils_1.map(currPath, function (currTokenType) { return tokens_public_1.tokenLabel(currTokenType); }).join(\",\") + \"]\";\n            });\n            var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" +\n                (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    }\n};\nObject.freeze(exports.defaultParserErrorProvider);\nexports.defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n        var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    }\n};\nexports.defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof gast_public_1.Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof gast_public_1.NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        var topLevelName = topLevelRule.name;\n        var duplicateProd = utils_1.first(duplicateProds);\n        var index = duplicateProd.idx;\n        var dslName = gast_1.getProductionDslName(duplicateProd);\n        var extraArgument = getExtraProductionArgument(duplicateProd);\n        var hasExplicitIndex = index > 0;\n        var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError: function (rule) {\n        var errMsg = \"Namespace conflict found in grammar.\\n\" +\n            (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") +\n            \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" +\n            \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" +\n            \"and Non-Terminal names start with a lower case letter.\";\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError: function (options) {\n        var pathMsg = utils_1.map(options.prefixPath, function (currTok) {\n            return tokens_public_1.tokenLabel(currTok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" +\n            (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") +\n            \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" +\n            \"For Further details.\";\n        return errMsg;\n    },\n    buildAlternationAmbiguityError: function (options) {\n        var pathMsg = utils_1.map(options.prefixPath, function (currtok) {\n            return tokens_public_1.tokenLabel(currtok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" +\n            (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n        currMessage =\n            currMessage +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" +\n                \"For Further details.\";\n        return currMessage;\n    },\n    buildEmptyRepetitionError: function (options) {\n        var dslName = gast_1.getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" +\n            \"This could lead to an infinite loop.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError: function (options) {\n        var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" +\n            (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") +\n            \"Only the last alternative may be an empty alternative.\";\n        return errMsg;\n    },\n    buildTooManyAlternativesError: function (options) {\n        var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" +\n            (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length + 1) + \" alternatives.\");\n        return errMsg;\n    },\n    buildLeftRecursionError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var pathNames = utils.map(options.leftRecursionPath, function (currRule) { return currRule.name; });\n        var leftRecursivePath = ruleName + \" --> \" + pathNames\n            .concat([ruleName])\n            .join(\" --> \");\n        var errMsg = \"Left Recursion found in grammar.\\n\" +\n            (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") +\n            (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") +\n            \" To fix this refactor your grammar to remove the left recursion.\\n\" +\n            \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError: function (options) {\n        var ruleName;\n        if (options.topLevelRule instanceof gast_public_1.Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n        return errMsg;\n    }\n};\n//# sourceMappingURL=errors_public.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$chevrotain$utils$lib$src$api","~$module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast","~$shadow.js","~$module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_public","~$module$node_modules$chevrotain$lib$src$scan$tokens_public"]],"~:properties",["^5",["defaultGrammarResolverErrorProvider","buildNamespaceConflictError","buildDuplicateFoundError","buildTooManyAlternativesError","buildLeftRecursionError","buildInvalidRuleNameError","buildEarlyExitMessage","__esModule","buildEmptyAlternationError","buildEmptyRepetitionError","buildNoViableAltMessage","value","buildNotAllInputParsedMessage","defaultGrammarValidatorErrorProvider","buildDuplicateRuleNameError","buildMismatchTokenMessage","defaultParserErrorProvider","buildAlternationAmbiguityError","buildAlternationPrefixAmbiguityError","buildRuleNotFoundError","buildTokenNameError"]],"~:compiled-at",1630917515684,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$chevrotain$lib$src$parse$errors_public.js\",\n\"lineCount\":14,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/chevrotain/lib/src/parse/errors_public.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$chevrotain$lib$src$parse$errors_public\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.defaultParserErrorProvider = void 0;\\nvar tokens_public_1 = require(\\\"../scan/tokens_public\\\");\\nvar utils = require(\\\"@chevrotain/utils\\\");\\nvar utils_1 = require(\\\"@chevrotain/utils\\\");\\nvar gast_public_1 = require(\\\"./grammar/gast/gast_public\\\");\\nvar gast_1 = require(\\\"./grammar/gast/gast\\\");\\nexports.defaultParserErrorProvider = {\\n    buildMismatchTokenMessage: function (_a) {\\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\\n        var hasLabel = tokens_public_1.hasTokenLabel(expected);\\n        var expectedMsg = hasLabel\\n            ? \\\"--\\u003e \\\" + tokens_public_1.tokenLabel(expected) + \\\" <--\\\"\\n            : \\\"token of type --\\u003e \\\" + expected.name + \\\" <--\\\";\\n        var msg = \\\"Expecting \\\" + expectedMsg + \\\" but found --\\u003e '\\\" + actual.image + \\\"' <--\\\";\\n        return msg;\\n    },\\n    buildNotAllInputParsedMessage: function (_a) {\\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\\n        return \\\"Redundant input, expecting EOF but found: \\\" + firstRedundant.image;\\n    },\\n    buildNoViableAltMessage: function (_a) {\\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\\n        var errPrefix = \\\"Expecting: \\\";\\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\\n        var actualText = utils_1.first(actual).image;\\n        var errSuffix = \\\"\\\\nbut found: '\\\" + actualText + \\\"'\\\";\\n        if (customUserDescription) {\\n            return errPrefix + customUserDescription + errSuffix;\\n        }\\n        else {\\n            var allLookAheadPaths = utils_1.reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\\n            var nextValidTokenSequences = utils_1.map(allLookAheadPaths, function (currPath) {\\n                return \\\"[\\\" + utils_1.map(currPath, function (currTokenType) { return tokens_public_1.tokenLabel(currTokenType); }).join(\\\", \\\") + \\\"]\\\";\\n            });\\n            var nextValidSequenceItems = utils_1.map(nextValidTokenSequences, function (itemMsg, idx) { return \\\"  \\\" + (idx + 1) + \\\". \\\" + itemMsg; });\\n            var calculatedDescription = \\\"one of these possible Token sequences:\\\\n\\\" + nextValidSequenceItems.join(\\\"\\\\n\\\");\\n            return errPrefix + calculatedDescription + errSuffix;\\n        }\\n    },\\n    buildEarlyExitMessage: function (_a) {\\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\\n        var errPrefix = \\\"Expecting: \\\";\\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\\n        var actualText = utils_1.first(actual).image;\\n        var errSuffix = \\\"\\\\nbut found: '\\\" + actualText + \\\"'\\\";\\n        if (customUserDescription) {\\n            return errPrefix + customUserDescription + errSuffix;\\n        }\\n        else {\\n            var nextValidTokenSequences = utils_1.map(expectedIterationPaths, function (currPath) {\\n                return \\\"[\\\" + utils_1.map(currPath, function (currTokenType) { return tokens_public_1.tokenLabel(currTokenType); }).join(\\\",\\\") + \\\"]\\\";\\n            });\\n            var calculatedDescription = \\\"expecting at least one iteration which starts with one of these possible Token sequences::\\\\n  \\\" +\\n                (\\\"<\\\" + nextValidTokenSequences.join(\\\" ,\\\") + \\\">\\\");\\n            return errPrefix + calculatedDescription + errSuffix;\\n        }\\n    }\\n};\\nObject.freeze(exports.defaultParserErrorProvider);\\nexports.defaultGrammarResolverErrorProvider = {\\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\\n        var msg = \\\"Invalid grammar, reference to a rule which is not defined: ->\\\" +\\n            undefinedRule.nonTerminalName +\\n            \\\"<-\\\\n\\\" +\\n            \\\"inside top level rule: ->\\\" +\\n            topLevelRule.name +\\n            \\\"<-\\\";\\n        return msg;\\n    }\\n};\\nexports.defaultGrammarValidatorErrorProvider = {\\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\\n        function getExtraProductionArgument(prod) {\\n            if (prod instanceof gast_public_1.Terminal) {\\n                return prod.terminalType.name;\\n            }\\n            else if (prod instanceof gast_public_1.NonTerminal) {\\n                return prod.nonTerminalName;\\n            }\\n            else {\\n                return \\\"\\\";\\n            }\\n        }\\n        var topLevelName = topLevelRule.name;\\n        var duplicateProd = utils_1.first(duplicateProds);\\n        var index = duplicateProd.idx;\\n        var dslName = gast_1.getProductionDslName(duplicateProd);\\n        var extraArgument = getExtraProductionArgument(duplicateProd);\\n        var hasExplicitIndex = index > 0;\\n        var msg = \\\"->\\\" + dslName + (hasExplicitIndex ? index : \\\"\\\") + \\\"<- \\\" + (extraArgument ? \\\"with argument: ->\\\" + extraArgument + \\\"<-\\\" : \\\"\\\") + \\\"\\\\n                  appears more than once (\\\" + duplicateProds.length + \\\" times) in the top level rule: ->\\\" + topLevelName + \\\"<-.                  \\\\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\\\n                  \\\";\\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\\n        msg = msg.replace(/[ \\\\t]+/g, \\\" \\\");\\n        msg = msg.replace(/\\\\s\\\\s+/g, \\\"\\\\n\\\");\\n        return msg;\\n    },\\n    buildNamespaceConflictError: function (rule) {\\n        var errMsg = \\\"Namespace conflict found in grammar.\\\\n\\\" +\\n            (\\\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\\\" + rule.name + \\\">.\\\\n\\\") +\\n            \\\"To resolve this make sure each Terminal and Non-Terminal names are unique\\\\n\\\" +\\n            \\\"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\\\n\\\" +\\n            \\\"and Non-Terminal names start with a lower case letter.\\\";\\n        return errMsg;\\n    },\\n    buildAlternationPrefixAmbiguityError: function (options) {\\n        var pathMsg = utils_1.map(options.prefixPath, function (currTok) {\\n            return tokens_public_1.tokenLabel(currTok);\\n        }).join(\\\", \\\");\\n        var occurrence = options.alternation.idx === 0 ? \\\"\\\" : options.alternation.idx;\\n        var errMsg = \\\"Ambiguous alternatives: <\\\" + options.ambiguityIndices.join(\\\" ,\\\") + \\\"> due to common lookahead prefix\\\\n\\\" +\\n            (\\\"in <OR\\\" + occurrence + \\\"> inside <\\\" + options.topLevelRule.name + \\\"> Rule,\\\\n\\\") +\\n            (\\\"<\\\" + pathMsg + \\\"> may appears as a prefix path in all these alternatives.\\\\n\\\") +\\n            \\\"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\\\n\\\" +\\n            \\\"For Further details.\\\";\\n        return errMsg;\\n    },\\n    buildAlternationAmbiguityError: function (options) {\\n        var pathMsg = utils_1.map(options.prefixPath, function (currtok) {\\n            return tokens_public_1.tokenLabel(currtok);\\n        }).join(\\\", \\\");\\n        var occurrence = options.alternation.idx === 0 ? \\\"\\\" : options.alternation.idx;\\n        var currMessage = \\\"Ambiguous Alternatives Detected: <\\\" + options.ambiguityIndices.join(\\\" ,\\\") + \\\"> in <OR\\\" + occurrence + \\\">\\\" +\\n            (\\\" inside <\\\" + options.topLevelRule.name + \\\"> Rule,\\\\n\\\") +\\n            (\\\"<\\\" + pathMsg + \\\"> may appears as a prefix path in all these alternatives.\\\\n\\\");\\n        currMessage =\\n            currMessage +\\n                \\\"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\\\n\\\" +\\n                \\\"For Further details.\\\";\\n        return currMessage;\\n    },\\n    buildEmptyRepetitionError: function (options) {\\n        var dslName = gast_1.getProductionDslName(options.repetition);\\n        if (options.repetition.idx !== 0) {\\n            dslName += options.repetition.idx;\\n        }\\n        var errMsg = \\\"The repetition <\\\" + dslName + \\\"> within Rule <\\\" + options.topLevelRule.name + \\\"> can never consume any tokens.\\\\n\\\" +\\n            \\\"This could lead to an infinite loop.\\\";\\n        return errMsg;\\n    },\\n    // TODO: remove - `errors_public` from nyc.config.js exclude\\n    //       once this method is fully removed from this file\\n    buildTokenNameError: function (options) {\\n        /* istanbul ignore next */\\n        return \\\"deprecated\\\";\\n    },\\n    buildEmptyAlternationError: function (options) {\\n        var errMsg = \\\"Ambiguous empty alternative: <\\\" + (options.emptyChoiceIdx + 1) + \\\">\\\" +\\n            (\\\" in <OR\\\" + options.alternation.idx + \\\"> inside <\\\" + options.topLevelRule.name + \\\"> Rule.\\\\n\\\") +\\n            \\\"Only the last alternative may be an empty alternative.\\\";\\n        return errMsg;\\n    },\\n    buildTooManyAlternativesError: function (options) {\\n        var errMsg = \\\"An Alternation cannot have more than 256 alternatives:\\\\n\\\" +\\n            (\\\"<OR\\\" + options.alternation.idx + \\\"> inside <\\\" + options.topLevelRule.name + \\\"> Rule.\\\\n has \\\" + (options.alternation.definition.length + 1) + \\\" alternatives.\\\");\\n        return errMsg;\\n    },\\n    buildLeftRecursionError: function (options) {\\n        var ruleName = options.topLevelRule.name;\\n        var pathNames = utils.map(options.leftRecursionPath, function (currRule) { return currRule.name; });\\n        var leftRecursivePath = ruleName + \\\" --\\u003e \\\" + pathNames\\n            .concat([ruleName])\\n            .join(\\\" --\\u003e \\\");\\n        var errMsg = \\\"Left Recursion found in grammar.\\\\n\\\" +\\n            (\\\"rule: <\\\" + ruleName + \\\"> can be invoked from itself (directly or indirectly)\\\\n\\\") +\\n            (\\\"without consuming any Tokens. The grammar path that causes this is: \\\\n \\\" + leftRecursivePath + \\\"\\\\n\\\") +\\n            \\\" To fix this refactor your grammar to remove the left recursion.\\\\n\\\" +\\n            \\\"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\\\";\\n        return errMsg;\\n    },\\n    // TODO: remove - `errors_public` from nyc.config.js exclude\\n    //       once this method is fully removed from this file\\n    buildInvalidRuleNameError: function (options) {\\n        /* istanbul ignore next */\\n        return \\\"deprecated\\\";\\n    },\\n    buildDuplicateRuleNameError: function (options) {\\n        var ruleName;\\n        if (options.topLevelRule instanceof gast_public_1.Rule) {\\n            ruleName = options.topLevelRule.name;\\n        }\\n        else {\\n            ruleName = options.topLevelRule;\\n        }\\n        var errMsg = \\\"Duplicate definition, rule: ->\\\" + ruleName + \\\"<- is already defined in the grammar: ->\\\" + options.grammarName + \\\"<-\\\";\\n        return errMsg;\\n    }\\n};\\n//# sourceMappingURL=errors_public.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"defaultGrammarValidatorErrorProvider\",\"defaultGrammarResolverErrorProvider\",\"defaultParserErrorProvider\",\"tokens_public_1\",\"utils\",\"utils_1\",\"gast_public_1\",\"gast_1\",\"buildMismatchTokenMessage\",\"_a\",\"expected\",\"actual\",\"hasTokenLabel\",\"hasLabel\",\"expectedMsg\",\"tokenLabel\",\"name\",\"image\",\"buildNotAllInputParsedMessage\",\"firstRedundant\",\"buildNoViableAltMessage\",\"expectedPathsPerAlt\",\"customUserDescription\",\"errSuffix\",\"first\",\"errPrefix\",\"allLookAheadPaths\",\"reduce\",\"result\",\"currAltPaths\",\"concat\",\"nextValidTokenSequences\",\"map\",\"currPath\",\"currTokenType\",\"join\",\"nextValidSequenceItems\",\"itemMsg\",\"idx\",\"calculatedDescription\",\"buildEarlyExitMessage\",\"expectedIterationPaths\",\"freeze\",\"buildRuleNotFoundError\",\"topLevelRule\",\"undefinedRule\",\"nonTerminalName\",\"buildDuplicateFoundError\",\"duplicateProds\",\"topLevelName\",\"duplicateProd\",\"index\",\"dslName\",\"getProductionDslName\",\"Terminal\",\"terminalType\",\"NonTerminal\",\"msg\",\"extraArgument\",\"length\",\"replace\",\"buildNamespaceConflictError\",\"rule\",\"buildAlternationPrefixAmbiguityError\",\"options\",\"pathMsg\",\"prefixPath\",\"currTok\",\"occurrence\",\"alternation\",\"ambiguityIndices\",\"buildAlternationAmbiguityError\",\"currtok\",\"buildEmptyRepetitionError\",\"repetition\",\"buildTokenNameError\",\"buildEmptyAlternationError\",\"emptyChoiceIdx\",\"buildTooManyAlternativesError\",\"definition\",\"buildLeftRecursionError\",\"ruleName\",\"pathNames\",\"leftRecursionPath\",\"currRule\",\"leftRecursivePath\",\"buildInvalidRuleNameError\",\"buildDuplicateRuleNameError\",\"Rule\",\"grammarName\"]\n}\n"]