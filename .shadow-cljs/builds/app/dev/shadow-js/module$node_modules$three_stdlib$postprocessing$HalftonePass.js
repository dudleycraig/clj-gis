["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/postprocessing/HalftonePass.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$postprocessing$HalftonePass=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.HalftonePass=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_Pass=require(\"module$node_modules$three_stdlib$postprocessing$Pass\"),_HalftoneShader=require(\"module$node_modules$three_stdlib$shaders$HalftoneShader\");global=function(width,height,params){void 0===_HalftoneShader.HalftoneShader&&console.error(\"THREE.HalftonePass requires HalftoneShader\");\nthis.uniforms=_three.UniformsUtils.clone(_HalftoneShader.HalftoneShader.uniforms);this.material=new _three.ShaderMaterial({uniforms:this.uniforms,fragmentShader:_HalftoneShader.HalftoneShader.fragmentShader,vertexShader:_HalftoneShader.HalftoneShader.vertexShader});this.uniforms.width.value=width;this.uniforms.height.value=height;for(var key in params)params.hasOwnProperty(key)&&this.uniforms.hasOwnProperty(key)&&(this.uniforms[key].value=params[key]);this.fsQuad=new _Pass.FullScreenQuad(this.material)};\nexports.HalftonePass=global;global.prototype=Object.assign(Object.create(_Pass.Pass.prototype),{constructor:global,render:function(renderer,writeBuffer,readBuffer){this.material.uniforms.tDiffuse.value=readBuffer.texture;this.renderToScreen?renderer.setRenderTarget(null):(renderer.setRenderTarget(writeBuffer),this.clear&&renderer.clear());this.fsQuad.render(renderer)},setSize:function(width,height){this.uniforms.width.value=width;this.uniforms.height.value=height}})}","~:source","shadow$provide[\"module$node_modules$three_stdlib$postprocessing$HalftonePass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HalftonePass = void 0;\n\nvar _three = require(\"three\");\n\nvar _Pass = require(\"./Pass.js\");\n\nvar _HalftoneShader = require(\"../shaders/HalftoneShader.js\");\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\nvar HalftonePass = function HalftonePass(width, height, params) {\n  if (_HalftoneShader.HalftoneShader === undefined) {\n    console.error('THREE.HalftonePass requires HalftoneShader');\n  }\n\n  this.uniforms = _three.UniformsUtils.clone(_HalftoneShader.HalftoneShader.uniforms);\n  this.material = new _three.ShaderMaterial({\n    uniforms: this.uniforms,\n    fragmentShader: _HalftoneShader.HalftoneShader.fragmentShader,\n    vertexShader: _HalftoneShader.HalftoneShader.vertexShader\n  }); // set params\n\n  this.uniforms.width.value = width;\n  this.uniforms.height.value = height;\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n      this.uniforms[key].value = params[key];\n    }\n  }\n\n  this.fsQuad = new _Pass.FullScreenQuad(this.material);\n};\n\nexports.HalftonePass = HalftonePass;\nHalftonePass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\n  constructor: HalftonePass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  setSize: function setSize(width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n});\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$three_stdlib$postprocessing$Pass","~$module$node_modules$three_stdlib$shaders$HalftoneShader"]],"~:properties",["^5",["fragmentShader","prototype","__esModule","HalftonePass","vertexShader","value","fsQuad","render","setSize","uniforms","constructor","material"]],"~:compiled-at",1630917515482,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$postprocessing$HalftonePass.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,YAAR,CAAuB,IAAK,EAE5B,KAAIC,OAASP,OAAA,CAAQ,8CAAR,CAAb,CAEIQ,MAAQR,OAAA,CAAQ,sDAAR,CAFZ,CAIIS,gBAAkBT,OAAA,CAAQ,yDAAR,CAKlBM,OAAAA,CAAeA,QAAqB,CAACI,KAAD,CAAQC,MAAR,CAAgBC,MAAhB,CAAwB,CACvBC,IAAAA,EAAvC,GAAIJ,eAAgBK,CAAAA,cAApB,EACEC,OAAQC,CAAAA,KAAR,CAAc,4CAAd,CAGF;IAAKC,CAAAA,QAAL,CAAgBV,MAAOW,CAAAA,aAAcC,CAAAA,KAArB,CAA2BV,eAAgBK,CAAAA,cAAeG,CAAAA,QAA1D,CAChB,KAAKG,CAAAA,QAAL,CAAgB,IAAIb,MAAOc,CAAAA,cAAX,CAA0B,CACxCJ,SAAU,IAAKA,CAAAA,QADyB,CAExCK,eAAgBb,eAAgBK,CAAAA,cAAeQ,CAAAA,cAFP,CAGxCC,aAAcd,eAAgBK,CAAAA,cAAeS,CAAAA,YAHL,CAA1B,CAMhB,KAAKN,CAAAA,QAASP,CAAAA,KAAML,CAAAA,KAApB,CAA4BK,KAC5B,KAAKO,CAAAA,QAASN,CAAAA,MAAON,CAAAA,KAArB,CAA6BM,MAE7B,KAAKa,IAAIA,GAAT,GAAgBZ,OAAhB,CACMA,MAAOa,CAAAA,cAAP,CAAsBD,GAAtB,CAAJ,EAAkC,IAAKP,CAAAA,QAASQ,CAAAA,cAAd,CAA6BD,GAA7B,CAAlC,GACE,IAAKP,CAAAA,QAAL,CAAcO,GAAd,CAAmBnB,CAAAA,KADrB,CAC6BO,MAAA,CAAOY,GAAP,CAD7B,CAKF,KAAKE,CAAAA,MAAL,CAAc,IAAIlB,KAAMmB,CAAAA,cAAV,CAAyB,IAAKP,CAAAA,QAA9B,CArBgD,CAwBhElB;OAAQI,CAAAA,YAAR,CAAuBA,MACvBA,OAAasB,CAAAA,SAAb,CAAyBzB,MAAO0B,CAAAA,MAAP,CAAc1B,MAAO2B,CAAAA,MAAP,CAActB,KAAMuB,CAAAA,IAAKH,CAAAA,SAAzB,CAAd,CAAmD,CAC1EI,YAAa1B,MAD6D,CAE1E2B,OAAQA,QAAe,CAACC,QAAD,CAAWC,WAAX,CAAwBC,UAAxB,CAErB,CACA,IAAKhB,CAAAA,QAASH,CAAAA,QAAd,CAAA,QAAmCZ,CAAAA,KAAnC,CAA2C+B,UAAWC,CAAAA,OAElD,KAAKC,CAAAA,cAAT,CACEJ,QAASK,CAAAA,eAAT,CAAyB,IAAzB,CADF,EAIEL,QAASK,CAAAA,eAAT,CAAyBJ,WAAzB,CACA,CAAI,IAAKK,CAAAA,KAAT,EAAgBN,QAASM,CAAAA,KAAT,EALlB,CAEE,KAAKd,CAAAA,MAAOO,CAAAA,MAAZ,CAAmBC,QAAnB,CALF,CAJwE,CAgB1EO,QAASA,QAAgB,CAAC/B,KAAD,CAAQC,MAAR,CAAgB,CACvC,IAAKM,CAAAA,QAASP,CAAAA,KAAML,CAAAA,KAApB,CAA4BK,KAC5B,KAAKO,CAAAA,QAASN,CAAAA,MAAON,CAAAA,KAArB,CAA6BM,MAFU,CAhBiC,CAAnD,CA1CgG;\",\n\"sources\":[\"node_modules/three-stdlib/postprocessing/HalftonePass.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$postprocessing$HalftonePass\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.HalftonePass = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _Pass = require(\\\"./Pass.js\\\");\\n\\nvar _HalftoneShader = require(\\\"../shaders/HalftoneShader.js\\\");\\n\\n/**\\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\\n */\\nvar HalftonePass = function HalftonePass(width, height, params) {\\n  if (_HalftoneShader.HalftoneShader === undefined) {\\n    console.error('THREE.HalftonePass requires HalftoneShader');\\n  }\\n\\n  this.uniforms = _three.UniformsUtils.clone(_HalftoneShader.HalftoneShader.uniforms);\\n  this.material = new _three.ShaderMaterial({\\n    uniforms: this.uniforms,\\n    fragmentShader: _HalftoneShader.HalftoneShader.fragmentShader,\\n    vertexShader: _HalftoneShader.HalftoneShader.vertexShader\\n  }); // set params\\n\\n  this.uniforms.width.value = width;\\n  this.uniforms.height.value = height;\\n\\n  for (var key in params) {\\n    if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\\n      this.uniforms[key].value = params[key];\\n    }\\n  }\\n\\n  this.fsQuad = new _Pass.FullScreenQuad(this.material);\\n};\\n\\nexports.HalftonePass = HalftonePass;\\nHalftonePass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\\n  constructor: HalftonePass,\\n  render: function render(renderer, writeBuffer, readBuffer\\n  /*, deltaTime, maskActive*/\\n  ) {\\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\\n\\n    if (this.renderToScreen) {\\n      renderer.setRenderTarget(null);\\n      this.fsQuad.render(renderer);\\n    } else {\\n      renderer.setRenderTarget(writeBuffer);\\n      if (this.clear) renderer.clear();\\n      this.fsQuad.render(renderer);\\n    }\\n  },\\n  setSize: function setSize(width, height) {\\n    this.uniforms.width.value = width;\\n    this.uniforms.height.value = height;\\n  }\\n});\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"HalftonePass\",\"_three\",\"_Pass\",\"_HalftoneShader\",\"width\",\"height\",\"params\",\"undefined\",\"HalftoneShader\",\"console\",\"error\",\"uniforms\",\"UniformsUtils\",\"clone\",\"material\",\"ShaderMaterial\",\"fragmentShader\",\"vertexShader\",\"key\",\"hasOwnProperty\",\"fsQuad\",\"FullScreenQuad\",\"prototype\",\"assign\",\"create\",\"Pass\",\"constructor\",\"render\",\"renderer\",\"writeBuffer\",\"readBuffer\",\"texture\",\"renderToScreen\",\"setRenderTarget\",\"clear\",\"setSize\"]\n}\n"]