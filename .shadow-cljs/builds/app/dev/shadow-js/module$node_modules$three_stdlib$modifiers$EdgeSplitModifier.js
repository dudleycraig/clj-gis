["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/modifiers/EdgeSplitModifier.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$modifiers$EdgeSplitModifier=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _getRequireWildcardCache(){if(\"function\"!==typeof WeakMap)return null;var cache=new WeakMap;\n_getRequireWildcardCache=function(){return cache};return cache}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.EdgeSplitModifier=void 0;var _defineProperty2=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$babel$runtime$helpers$esm$defineProperty\")),_three=require(\"module$node_modules$three$build$three_module\"),BufferGeometryUtils=function(obj){if(obj&&obj.__esModule)return obj;if(null===obj||\"object\"!==_typeof(obj)&&\"function\"!==typeof obj)return{\"default\":obj};\nvar cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj[\"default\"]=obj;cache&&cache.set(obj,newObj);return newObj}(require(\"module$node_modules$three_stdlib$utils$BufferGeometryUtils\"));\nexports.EdgeSplitModifier=function EdgeSplitModifier(){var _this=this;if(!(this instanceof EdgeSplitModifier))throw new TypeError(\"Cannot call a class as a function\");(0,_defineProperty2[\"default\"])(this,\"A\",new _three.Vector3);(0,_defineProperty2[\"default\"])(this,\"B\",new _three.Vector3);(0,_defineProperty2[\"default\"])(this,\"C\",new _three.Vector3);(0,_defineProperty2[\"default\"])(this,\"positions\",[]);(0,_defineProperty2[\"default\"])(this,\"normals\",new Float32Array);(0,_defineProperty2[\"default\"])(this,\n\"indexes\",[]);(0,_defineProperty2[\"default\"])(this,\"pointToIndexMap\",[]);(0,_defineProperty2[\"default\"])(this,\"splitIndexes\",[]);(0,_defineProperty2[\"default\"])(this,\"oldNormals\",[]);(0,_defineProperty2[\"default\"])(this,\"computeNormals\",function(){_this.normals=new Float32Array(3*_this.indexes.length);for(var i=0;i<_this.indexes.length;i+=3){var index=_this.indexes[i];_this.A.set(_this.positions[3*index],_this.positions[3*index+1],_this.positions[3*index+2]);index=_this.indexes[i+1];_this.B.set(_this.positions[3*\nindex],_this.positions[3*index+1],_this.positions[3*index+2]);index=_this.indexes[i+2];_this.C.set(_this.positions[3*index],_this.positions[3*index+1],_this.positions[3*index+2]);_this.C.sub(_this.B);_this.A.sub(_this.B);index=_this.C.cross(_this.A).normalize();for(var j=0;3>j;j++)_this.normals[3*(i+j)]=index.x,_this.normals[3*(i+j)+1]=index.y,_this.normals[3*(i+j)+2]=index.z}});(0,_defineProperty2[\"default\"])(this,\"mapPositionsToIndexes\",function(){_this.pointToIndexMap=Array(_this.positions.length/\n3);for(var i=0;i<_this.indexes.length;i++){var index=_this.indexes[i];null==_this.pointToIndexMap[index]&&(_this.pointToIndexMap[index]=[]);_this.pointToIndexMap[index].push(i)}});(0,_defineProperty2[\"default\"])(this,\"edgeSplitToGroups\",function(indexes,cutOff,firstIndex){_this.A.set(_this.normals[3*firstIndex],_this.normals[3*firstIndex+1],_this.normals[3*firstIndex+2]).normalize();var result={splitGroup:[],currentGroup:[firstIndex]},_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=\nvoid 0;try{for(var _iterator=indexes[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var j=_step.value;j!==firstIndex&&(_this.B.set(_this.normals[3*j],_this.normals[3*j+1],_this.normals[3*j+2]).normalize(),_this.B.dot(_this.A)<cutOff?result.splitGroup.push(j):result.currentGroup.push(j))}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator[\"return\"])_iterator[\"return\"]()}finally{if(_didIteratorError)throw _iteratorError;\n}}return result});(0,_defineProperty2[\"default\"])(this,\"edgeSplit\",function(indexes,cutOff){var original=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(0!==indexes.length){var groupResults=[],_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=indexes[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)groupResults.push(_this.edgeSplitToGroups(indexes,cutOff,_step2.value))}catch(err){_didIteratorError2=\n!0,_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&null!=_iterator2[\"return\"])_iterator2[\"return\"]()}finally{if(_didIteratorError2)throw _iteratorError2;}}_iteratorNormalCompletion2=groupResults[0];for(_didIteratorError2=0;_didIteratorError2<groupResults.length;_didIteratorError2++)_iteratorError2=groupResults[_didIteratorError2],_iteratorError2.currentGroup.length>_iteratorNormalCompletion2.currentGroup.length&&(_iteratorNormalCompletion2=_iteratorError2);null!=original&&_this.splitIndexes.push({original,\nindexes:_iteratorNormalCompletion2.currentGroup});_iteratorNormalCompletion2.splitGroup.length&&_this.edgeSplit(_iteratorNormalCompletion2.splitGroup,cutOff,original||_iteratorNormalCompletion2.currentGroup[0])}});(0,_defineProperty2[\"default\"])(this,\"modify\",function(geometry,cutOffAngle){var tryKeepNormals=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!0,hadNormals=!1;geometry.attributes.normal&&(hadNormals=!0,geometry=geometry.clone(),!0===tryKeepNormals&&null!==geometry.index&&(_this.oldNormals=\ngeometry.attributes.normal.array),geometry.deleteAttribute(\"normal\"));if(null==geometry.index){if(void 0===BufferGeometryUtils)throw\"THREE.EdgeSplitModifier relies on BufferGeometryUtils\";geometry=(0,BufferGeometryUtils.mergeVertices)(geometry)}_this.indexes=geometry.index.array;_this.positions=geometry.getAttribute(\"position\").array;_this.computeNormals();_this.mapPositionsToIndexes();_this.splitIndexes=[];tryKeepNormals=!0;var _didIteratorError3=!1,_iteratorError3=void 0;try{for(var _iterator3=\n_this.pointToIndexMap[Symbol.iterator](),_step3;!(tryKeepNormals=(_step3=_iterator3.next()).done);tryKeepNormals=!0)_this.edgeSplit(_step3.value,Math.cos(cutOffAngle)-.001)}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{if(!tryKeepNormals&&null!=_iterator3[\"return\"])_iterator3[\"return\"]()}finally{if(_didIteratorError3)throw _iteratorError3;}}_iterator3={};_step3=0;for(tryKeepNormals=Object.keys(geometry.attributes);_step3<tryKeepNormals.length;_step3++){_didIteratorError3=tryKeepNormals[_step3];\n_iteratorError3=geometry.attributes[_didIteratorError3];var newArray=new _iteratorError3.array.constructor((_this.indexes.length+_this.splitIndexes.length)*_iteratorError3.itemSize);newArray.set(_iteratorError3.array);_iterator3[_didIteratorError3]=new _three.BufferAttribute(newArray,_iteratorError3.itemSize,_iteratorError3.normalized)}_step3=new Uint32Array(_this.indexes.length);_step3.set(_this.indexes);for(tryKeepNormals=0;tryKeepNormals<_this.splitIndexes.length;tryKeepNormals++){_didIteratorError3=\n_this.splitIndexes[tryKeepNormals];_iteratorError3=_this.indexes[_didIteratorError3.original];newArray=0;for(var _Object$values=Object.values(_iterator3);newArray<_Object$values.length;newArray++)for(var attribute=_Object$values[newArray],j=0;j<attribute.itemSize;j++)attribute.array[(_this.indexes.length+tryKeepNormals)*attribute.itemSize+j]=attribute.array[_iteratorError3*attribute.itemSize+j];_iteratorError3=!0;newArray=!1;_Object$values=void 0;try{for(var _iterator4=_didIteratorError3.indexes[Symbol.iterator](),\n_step4;!(_iteratorError3=(_step4=_iterator4.next()).done);_iteratorError3=!0)_step3[_step4.value]=_this.indexes.length+tryKeepNormals}catch(err){newArray=!0,_Object$values=err}finally{try{if(!_iteratorError3&&null!=_iterator4[\"return\"])_iterator4[\"return\"]()}finally{if(newArray)throw _Object$values;}}}geometry=new _three.BufferGeometry;geometry.setIndex(new _three.BufferAttribute(_step3,1));_iterator4=0;for(_step4=Object.keys(_iterator3);_iterator4<_step4.length;_iterator4++)_step3=_step4[_iterator4],\ngeometry.setAttribute(_step3,_iterator3[_step3]);if(hadNormals&&(geometry.computeVertexNormals(),null!==_this.oldNormals)){hadNormals=Array(_this.oldNormals.length/3).fill(!1);_iterator4=!0;_step4=!1;_iterator3=void 0;try{for(var _iterator5=_this.splitIndexes[Symbol.iterator](),_step5;!(_iterator4=(_step5=_iterator5.next()).done);_iterator4=!0)hadNormals[_step5.value.original]=!0}catch(err){_step4=!0,_iterator3=err}finally{try{if(!_iterator4&&null!=_iterator5[\"return\"])_iterator5[\"return\"]()}finally{if(_step4)throw _iterator3;\n}}for(_iterator5=0;_iterator5<hadNormals.length;_iterator5++)if(!1===hadNormals[_iterator5])for(_step5=0;3>_step5;_step5++)geometry.attributes.normal.array[3*_iterator5+_step5]=_this.oldNormals[3*_iterator5+_step5]}return geometry})}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$modifiers$EdgeSplitModifier\"] = function(global,require,module,exports) {\n\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EdgeSplitModifier = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/defineProperty\"));\n\nvar _three = require(\"three\");\n\nvar BufferGeometryUtils = _interopRequireWildcard(require(\"../utils/BufferGeometryUtils.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EdgeSplitModifier = function EdgeSplitModifier() {\n  var _this = this;\n\n  _classCallCheck(this, EdgeSplitModifier);\n\n  (0, _defineProperty2[\"default\"])(this, \"A\", new _three.Vector3());\n  (0, _defineProperty2[\"default\"])(this, \"B\", new _three.Vector3());\n  (0, _defineProperty2[\"default\"])(this, \"C\", new _three.Vector3());\n  (0, _defineProperty2[\"default\"])(this, \"positions\", []);\n  (0, _defineProperty2[\"default\"])(this, \"normals\", new Float32Array());\n  (0, _defineProperty2[\"default\"])(this, \"indexes\", []);\n  (0, _defineProperty2[\"default\"])(this, \"pointToIndexMap\", []);\n  (0, _defineProperty2[\"default\"])(this, \"splitIndexes\", []);\n  (0, _defineProperty2[\"default\"])(this, \"oldNormals\", []);\n  (0, _defineProperty2[\"default\"])(this, \"computeNormals\", function () {\n    _this.normals = new Float32Array(_this.indexes.length * 3);\n\n    for (var i = 0; i < _this.indexes.length; i += 3) {\n      var index = _this.indexes[i];\n\n      _this.A.set(_this.positions[3 * index], _this.positions[3 * index + 1], _this.positions[3 * index + 2]);\n\n      index = _this.indexes[i + 1];\n\n      _this.B.set(_this.positions[3 * index], _this.positions[3 * index + 1], _this.positions[3 * index + 2]);\n\n      index = _this.indexes[i + 2];\n\n      _this.C.set(_this.positions[3 * index], _this.positions[3 * index + 1], _this.positions[3 * index + 2]);\n\n      _this.C.sub(_this.B);\n\n      _this.A.sub(_this.B);\n\n      var normal = _this.C.cross(_this.A).normalize();\n\n      for (var j = 0; j < 3; j++) {\n        _this.normals[3 * (i + j)] = normal.x;\n        _this.normals[3 * (i + j) + 1] = normal.y;\n        _this.normals[3 * (i + j) + 2] = normal.z;\n      }\n    }\n  });\n  (0, _defineProperty2[\"default\"])(this, \"mapPositionsToIndexes\", function () {\n    _this.pointToIndexMap = Array(_this.positions.length / 3);\n\n    for (var i = 0; i < _this.indexes.length; i++) {\n      var index = _this.indexes[i];\n\n      if (_this.pointToIndexMap[index] == null) {\n        _this.pointToIndexMap[index] = [];\n      }\n\n      _this.pointToIndexMap[index].push(i);\n    }\n  });\n  (0, _defineProperty2[\"default\"])(this, \"edgeSplitToGroups\", function (indexes, cutOff, firstIndex) {\n    _this.A.set(_this.normals[3 * firstIndex], _this.normals[3 * firstIndex + 1], _this.normals[3 * firstIndex + 2]).normalize();\n\n    var result = {\n      splitGroup: [],\n      currentGroup: [firstIndex]\n    };\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = indexes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var j = _step.value;\n\n        if (j !== firstIndex) {\n          _this.B.set(_this.normals[3 * j], _this.normals[3 * j + 1], _this.normals[3 * j + 2]).normalize();\n\n          if (_this.B.dot(_this.A) < cutOff) {\n            result.splitGroup.push(j);\n          } else {\n            result.currentGroup.push(j);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return result;\n  });\n  (0, _defineProperty2[\"default\"])(this, \"edgeSplit\", function (indexes, cutOff) {\n    var original = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    if (indexes.length === 0) return;\n    var groupResults = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = indexes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var index = _step2.value;\n        groupResults.push(_this.edgeSplitToGroups(indexes, cutOff, index));\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    var result = groupResults[0];\n\n    for (var _i = 0, _groupResults = groupResults; _i < _groupResults.length; _i++) {\n      var groupResult = _groupResults[_i];\n\n      if (groupResult.currentGroup.length > result.currentGroup.length) {\n        result = groupResult;\n      }\n    }\n\n    if (original != null) {\n      _this.splitIndexes.push({\n        original: original,\n        indexes: result.currentGroup\n      });\n    }\n\n    if (result.splitGroup.length) {\n      _this.edgeSplit(result.splitGroup, cutOff, original || result.currentGroup[0]);\n    }\n  });\n  (0, _defineProperty2[\"default\"])(this, \"modify\", function (geometry, cutOffAngle) {\n    var tryKeepNormals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var hadNormals = false;\n\n    if (geometry.attributes.normal) {\n      hadNormals = true;\n      geometry = geometry.clone();\n\n      if (tryKeepNormals === true && geometry.index !== null) {\n        _this.oldNormals = geometry.attributes.normal.array;\n      }\n\n      geometry.deleteAttribute('normal');\n    }\n\n    if (geometry.index == null) {\n      if (BufferGeometryUtils === undefined) {\n        throw 'THREE.EdgeSplitModifier relies on BufferGeometryUtils';\n      }\n\n      geometry = (0, BufferGeometryUtils.mergeVertices)(geometry);\n    }\n\n    _this.indexes = geometry.index.array;\n    _this.positions = geometry.getAttribute('position').array;\n\n    _this.computeNormals();\n\n    _this.mapPositionsToIndexes();\n\n    _this.splitIndexes = [];\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = _this.pointToIndexMap[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var vertexIndexes = _step3.value;\n\n        _this.edgeSplit(vertexIndexes, Math.cos(cutOffAngle) - 0.001);\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    var newAttributes = {};\n\n    for (var _i2 = 0, _Object$keys = Object.keys(geometry.attributes); _i2 < _Object$keys.length; _i2++) {\n      var name = _Object$keys[_i2];\n      var oldAttribute = geometry.attributes[name]; // @ts-ignore\n\n      var newArray = new oldAttribute.array.constructor((_this.indexes.length + _this.splitIndexes.length) * oldAttribute.itemSize);\n      newArray.set(oldAttribute.array);\n      newAttributes[name] = new _three.BufferAttribute(newArray, oldAttribute.itemSize, oldAttribute.normalized);\n    }\n\n    var newIndexes = new Uint32Array(_this.indexes.length);\n    newIndexes.set(_this.indexes);\n\n    for (var i = 0; i < _this.splitIndexes.length; i++) {\n      var split = _this.splitIndexes[i];\n      var index = _this.indexes[split.original];\n\n      for (var _i3 = 0, _Object$values = Object.values(newAttributes); _i3 < _Object$values.length; _i3++) {\n        var attribute = _Object$values[_i3];\n\n        for (var j = 0; j < attribute.itemSize; j++) {\n          // @ts-expect-error ArrayLike can't be mutated, but this works – https://github.com/three-types/three-ts-types/issues/35\n          attribute.array[(_this.indexes.length + i) * attribute.itemSize + j] = attribute.array[index * attribute.itemSize + j];\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = split.indexes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _j = _step4.value;\n          newIndexes[_j] = _this.indexes.length + i;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n\n    geometry = new _three.BufferGeometry();\n    geometry.setIndex(new _three.BufferAttribute(newIndexes, 1));\n\n    for (var _i4 = 0, _Object$keys2 = Object.keys(newAttributes); _i4 < _Object$keys2.length; _i4++) {\n      var _name = _Object$keys2[_i4];\n      geometry.setAttribute(_name, newAttributes[_name]);\n    }\n\n    if (hadNormals) {\n      geometry.computeVertexNormals();\n\n      if (_this.oldNormals !== null) {\n        var changedNormals = new Array(_this.oldNormals.length / 3).fill(false);\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = _this.splitIndexes[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var splitData = _step5.value;\n            changedNormals[splitData.original] = true;\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        for (var _i5 = 0; _i5 < changedNormals.length; _i5++) {\n          if (changedNormals[_i5] === false) {\n            for (var _j2 = 0; _j2 < 3; _j2++) {\n              // @ts-expect-error ArrayLike can't be mutated, but this works – https://github.com/three-types/three-ts-types/issues/35\n              geometry.attributes.normal.array[3 * _i5 + _j2] = _this.oldNormals[3 * _i5 + _j2];\n            }\n          }\n        }\n      }\n    }\n\n    return geometry;\n  });\n};\n\nexports.EdgeSplitModifier = EdgeSplitModifier;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$esm$defineProperty","~$module$node_modules$three_stdlib$utils$BufferGeometryUtils"]],"~:properties",["^5",["currentGroup","splitIndexes","pointToIndexMap","original","__esModule","normals","value","positions","EdgeSplitModifier","oldNormals","splitGroup","indexes"]],"~:compiled-at",1630917515181,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$modifiers$EdgeSplitModifier.js\",\n\"lineCount\":18,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/modifiers/EdgeSplitModifier.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$modifiers$EdgeSplitModifier\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.EdgeSplitModifier = void 0;\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/defineProperty\\\"));\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar BufferGeometryUtils = _interopRequireWildcard(require(\\\"../utils/BufferGeometryUtils.js\\\"));\\n\\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \\\"function\\\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { \\\"default\\\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\\\"default\\\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar EdgeSplitModifier = function EdgeSplitModifier() {\\n  var _this = this;\\n\\n  _classCallCheck(this, EdgeSplitModifier);\\n\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"A\\\", new _three.Vector3());\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"B\\\", new _three.Vector3());\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"C\\\", new _three.Vector3());\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"positions\\\", []);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"normals\\\", new Float32Array());\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"indexes\\\", []);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"pointToIndexMap\\\", []);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"splitIndexes\\\", []);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"oldNormals\\\", []);\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"computeNormals\\\", function () {\\n    _this.normals = new Float32Array(_this.indexes.length * 3);\\n\\n    for (var i = 0; i < _this.indexes.length; i += 3) {\\n      var index = _this.indexes[i];\\n\\n      _this.A.set(_this.positions[3 * index], _this.positions[3 * index + 1], _this.positions[3 * index + 2]);\\n\\n      index = _this.indexes[i + 1];\\n\\n      _this.B.set(_this.positions[3 * index], _this.positions[3 * index + 1], _this.positions[3 * index + 2]);\\n\\n      index = _this.indexes[i + 2];\\n\\n      _this.C.set(_this.positions[3 * index], _this.positions[3 * index + 1], _this.positions[3 * index + 2]);\\n\\n      _this.C.sub(_this.B);\\n\\n      _this.A.sub(_this.B);\\n\\n      var normal = _this.C.cross(_this.A).normalize();\\n\\n      for (var j = 0; j < 3; j++) {\\n        _this.normals[3 * (i + j)] = normal.x;\\n        _this.normals[3 * (i + j) + 1] = normal.y;\\n        _this.normals[3 * (i + j) + 2] = normal.z;\\n      }\\n    }\\n  });\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"mapPositionsToIndexes\\\", function () {\\n    _this.pointToIndexMap = Array(_this.positions.length / 3);\\n\\n    for (var i = 0; i < _this.indexes.length; i++) {\\n      var index = _this.indexes[i];\\n\\n      if (_this.pointToIndexMap[index] == null) {\\n        _this.pointToIndexMap[index] = [];\\n      }\\n\\n      _this.pointToIndexMap[index].push(i);\\n    }\\n  });\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"edgeSplitToGroups\\\", function (indexes, cutOff, firstIndex) {\\n    _this.A.set(_this.normals[3 * firstIndex], _this.normals[3 * firstIndex + 1], _this.normals[3 * firstIndex + 2]).normalize();\\n\\n    var result = {\\n      splitGroup: [],\\n      currentGroup: [firstIndex]\\n    };\\n    var _iteratorNormalCompletion = true;\\n    var _didIteratorError = false;\\n    var _iteratorError = undefined;\\n\\n    try {\\n      for (var _iterator = indexes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n        var j = _step.value;\\n\\n        if (j !== firstIndex) {\\n          _this.B.set(_this.normals[3 * j], _this.normals[3 * j + 1], _this.normals[3 * j + 2]).normalize();\\n\\n          if (_this.B.dot(_this.A) < cutOff) {\\n            result.splitGroup.push(j);\\n          } else {\\n            result.currentGroup.push(j);\\n          }\\n        }\\n      }\\n    } catch (err) {\\n      _didIteratorError = true;\\n      _iteratorError = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion && _iterator[\\\"return\\\"] != null) {\\n          _iterator[\\\"return\\\"]();\\n        }\\n      } finally {\\n        if (_didIteratorError) {\\n          throw _iteratorError;\\n        }\\n      }\\n    }\\n\\n    return result;\\n  });\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"edgeSplit\\\", function (indexes, cutOff) {\\n    var original = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\n    if (indexes.length === 0) return;\\n    var groupResults = [];\\n    var _iteratorNormalCompletion2 = true;\\n    var _didIteratorError2 = false;\\n    var _iteratorError2 = undefined;\\n\\n    try {\\n      for (var _iterator2 = indexes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\\n        var index = _step2.value;\\n        groupResults.push(_this.edgeSplitToGroups(indexes, cutOff, index));\\n      }\\n    } catch (err) {\\n      _didIteratorError2 = true;\\n      _iteratorError2 = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion2 && _iterator2[\\\"return\\\"] != null) {\\n          _iterator2[\\\"return\\\"]();\\n        }\\n      } finally {\\n        if (_didIteratorError2) {\\n          throw _iteratorError2;\\n        }\\n      }\\n    }\\n\\n    var result = groupResults[0];\\n\\n    for (var _i = 0, _groupResults = groupResults; _i < _groupResults.length; _i++) {\\n      var groupResult = _groupResults[_i];\\n\\n      if (groupResult.currentGroup.length > result.currentGroup.length) {\\n        result = groupResult;\\n      }\\n    }\\n\\n    if (original != null) {\\n      _this.splitIndexes.push({\\n        original: original,\\n        indexes: result.currentGroup\\n      });\\n    }\\n\\n    if (result.splitGroup.length) {\\n      _this.edgeSplit(result.splitGroup, cutOff, original || result.currentGroup[0]);\\n    }\\n  });\\n  (0, _defineProperty2[\\\"default\\\"])(this, \\\"modify\\\", function (geometry, cutOffAngle) {\\n    var tryKeepNormals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\\n    var hadNormals = false;\\n\\n    if (geometry.attributes.normal) {\\n      hadNormals = true;\\n      geometry = geometry.clone();\\n\\n      if (tryKeepNormals === true && geometry.index !== null) {\\n        _this.oldNormals = geometry.attributes.normal.array;\\n      }\\n\\n      geometry.deleteAttribute('normal');\\n    }\\n\\n    if (geometry.index == null) {\\n      if (BufferGeometryUtils === undefined) {\\n        throw 'THREE.EdgeSplitModifier relies on BufferGeometryUtils';\\n      }\\n\\n      geometry = (0, BufferGeometryUtils.mergeVertices)(geometry);\\n    }\\n\\n    _this.indexes = geometry.index.array;\\n    _this.positions = geometry.getAttribute('position').array;\\n\\n    _this.computeNormals();\\n\\n    _this.mapPositionsToIndexes();\\n\\n    _this.splitIndexes = [];\\n    var _iteratorNormalCompletion3 = true;\\n    var _didIteratorError3 = false;\\n    var _iteratorError3 = undefined;\\n\\n    try {\\n      for (var _iterator3 = _this.pointToIndexMap[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\\n        var vertexIndexes = _step3.value;\\n\\n        _this.edgeSplit(vertexIndexes, Math.cos(cutOffAngle) - 0.001);\\n      }\\n    } catch (err) {\\n      _didIteratorError3 = true;\\n      _iteratorError3 = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion3 && _iterator3[\\\"return\\\"] != null) {\\n          _iterator3[\\\"return\\\"]();\\n        }\\n      } finally {\\n        if (_didIteratorError3) {\\n          throw _iteratorError3;\\n        }\\n      }\\n    }\\n\\n    var newAttributes = {};\\n\\n    for (var _i2 = 0, _Object$keys = Object.keys(geometry.attributes); _i2 < _Object$keys.length; _i2++) {\\n      var name = _Object$keys[_i2];\\n      var oldAttribute = geometry.attributes[name]; // @ts-ignore\\n\\n      var newArray = new oldAttribute.array.constructor((_this.indexes.length + _this.splitIndexes.length) * oldAttribute.itemSize);\\n      newArray.set(oldAttribute.array);\\n      newAttributes[name] = new _three.BufferAttribute(newArray, oldAttribute.itemSize, oldAttribute.normalized);\\n    }\\n\\n    var newIndexes = new Uint32Array(_this.indexes.length);\\n    newIndexes.set(_this.indexes);\\n\\n    for (var i = 0; i < _this.splitIndexes.length; i++) {\\n      var split = _this.splitIndexes[i];\\n      var index = _this.indexes[split.original];\\n\\n      for (var _i3 = 0, _Object$values = Object.values(newAttributes); _i3 < _Object$values.length; _i3++) {\\n        var attribute = _Object$values[_i3];\\n\\n        for (var j = 0; j < attribute.itemSize; j++) {\\n          // @ts-expect-error ArrayLike can't be mutated, but this works \\u2013 https://github.com/three-types/three-ts-types/issues/35\\n          attribute.array[(_this.indexes.length + i) * attribute.itemSize + j] = attribute.array[index * attribute.itemSize + j];\\n        }\\n      }\\n\\n      var _iteratorNormalCompletion4 = true;\\n      var _didIteratorError4 = false;\\n      var _iteratorError4 = undefined;\\n\\n      try {\\n        for (var _iterator4 = split.indexes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\\n          var _j = _step4.value;\\n          newIndexes[_j] = _this.indexes.length + i;\\n        }\\n      } catch (err) {\\n        _didIteratorError4 = true;\\n        _iteratorError4 = err;\\n      } finally {\\n        try {\\n          if (!_iteratorNormalCompletion4 && _iterator4[\\\"return\\\"] != null) {\\n            _iterator4[\\\"return\\\"]();\\n          }\\n        } finally {\\n          if (_didIteratorError4) {\\n            throw _iteratorError4;\\n          }\\n        }\\n      }\\n    }\\n\\n    geometry = new _three.BufferGeometry();\\n    geometry.setIndex(new _three.BufferAttribute(newIndexes, 1));\\n\\n    for (var _i4 = 0, _Object$keys2 = Object.keys(newAttributes); _i4 < _Object$keys2.length; _i4++) {\\n      var _name = _Object$keys2[_i4];\\n      geometry.setAttribute(_name, newAttributes[_name]);\\n    }\\n\\n    if (hadNormals) {\\n      geometry.computeVertexNormals();\\n\\n      if (_this.oldNormals !== null) {\\n        var changedNormals = new Array(_this.oldNormals.length / 3).fill(false);\\n        var _iteratorNormalCompletion5 = true;\\n        var _didIteratorError5 = false;\\n        var _iteratorError5 = undefined;\\n\\n        try {\\n          for (var _iterator5 = _this.splitIndexes[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\\n            var splitData = _step5.value;\\n            changedNormals[splitData.original] = true;\\n          }\\n        } catch (err) {\\n          _didIteratorError5 = true;\\n          _iteratorError5 = err;\\n        } finally {\\n          try {\\n            if (!_iteratorNormalCompletion5 && _iterator5[\\\"return\\\"] != null) {\\n              _iterator5[\\\"return\\\"]();\\n            }\\n          } finally {\\n            if (_didIteratorError5) {\\n              throw _iteratorError5;\\n            }\\n          }\\n        }\\n\\n        for (var _i5 = 0; _i5 < changedNormals.length; _i5++) {\\n          if (changedNormals[_i5] === false) {\\n            for (var _j2 = 0; _j2 < 3; _j2++) {\\n              // @ts-expect-error ArrayLike can't be mutated, but this works \\u2013 https://github.com/three-types/three-ts-types/issues/35\\n              geometry.attributes.normal.array[3 * _i5 + _j2] = _this.oldNormals[3 * _i5 + _j2];\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\n    return geometry;\\n  });\\n};\\n\\nexports.EdgeSplitModifier = EdgeSplitModifier;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_getRequireWildcardCache\",\"WeakMap\",\"cache\",\"Object\",\"defineProperty\",\"value\",\"EdgeSplitModifier\",\"_defineProperty2\",\"_interopRequireDefault\",\"__esModule\",\"_three\",\"BufferGeometryUtils\",\"_interopRequireWildcard\",\"has\",\"get\",\"newObj\",\"hasPropertyDescriptor\",\"getOwnPropertyDescriptor\",\"key\",\"hasOwnProperty\",\"call\",\"desc\",\"set\",\"_this\",\"instance\",\"TypeError\",\"Vector3\",\"Float32Array\",\"normals\",\"indexes\",\"length\",\"i\",\"index\",\"A\",\"positions\",\"B\",\"C\",\"sub\",\"normal\",\"cross\",\"normalize\",\"j\",\"x\",\"y\",\"z\",\"pointToIndexMap\",\"Array\",\"push\",\"cutOff\",\"firstIndex\",\"result\",\"splitGroup\",\"currentGroup\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"undefined\",\"_iterator\",\"_step\",\"done\",\"next\",\"dot\",\"err\",\"original\",\"arguments\",\"groupResults\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_iterator2\",\"_step2\",\"edgeSplitToGroups\",\"_i\",\"groupResult\",\"splitIndexes\",\"edgeSplit\",\"geometry\",\"cutOffAngle\",\"tryKeepNormals\",\"hadNormals\",\"attributes\",\"clone\",\"oldNormals\",\"array\",\"deleteAttribute\",\"mergeVertices\",\"getAttribute\",\"computeNormals\",\"mapPositionsToIndexes\",\"_iteratorNormalCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_iterator3\",\"_step3\",\"Math\",\"cos\",\"newAttributes\",\"_i2\",\"_Object$keys\",\"keys\",\"name\",\"oldAttribute\",\"newArray\",\"itemSize\",\"BufferAttribute\",\"normalized\",\"newIndexes\",\"Uint32Array\",\"split\",\"_i3\",\"_Object$values\",\"values\",\"attribute\",\"_iteratorNormalCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_iterator4\",\"_step4\",\"BufferGeometry\",\"setIndex\",\"_i4\",\"_Object$keys2\",\"_name\",\"setAttribute\",\"computeVertexNormals\",\"changedNormals\",\"fill\",\"_iteratorNormalCompletion5\",\"_didIteratorError5\",\"_iteratorError5\",\"_iterator5\",\"_step5\",\"_i5\",\"_j2\"]\n}\n"]