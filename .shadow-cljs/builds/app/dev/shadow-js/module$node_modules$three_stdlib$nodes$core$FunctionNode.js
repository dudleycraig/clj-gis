["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/core/FunctionNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$core$FunctionNode=function(global,require,module,exports){function FunctionNode(src,includes,extensions,keywords,type){this.isMethod=void 0===type;this.isInterface=!1;_TempNode.TempNode.call(this,type);this.parse(src,includes,extensions,keywords)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.FunctionNode=FunctionNode;var _TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\"),_NodeLib=require(\"module$node_modules$three_stdlib$nodes$core$NodeLib\"),\ndeclarationRegexp=/^\\s*([a-z_0-9]+)\\s([a-z_0-9]+)\\s*\\((.*?)\\)/i,propertiesRegexp=/[a-z_0-9]+/gi;FunctionNode.prototype=Object.create(_TempNode.TempNode.prototype);FunctionNode.prototype.constructor=FunctionNode;FunctionNode.prototype.nodeType=\"Function\";FunctionNode.prototype.useKeywords=!0;FunctionNode.prototype.getShared=function(){return!this.isMethod};FunctionNode.prototype.getType=function(builder){return builder.getTypeByFormat(this.type)};FunctionNode.prototype.getInputByName=function(name){for(var i=\nthis.inputs.length;i--;)if(this.inputs[i].name===name)return this.inputs[i]};FunctionNode.prototype.getIncludeByName=function(name){for(var i=this.includes.length;i--;)if(this.includes[i].name===name)return this.includes[i]};FunctionNode.prototype.generate=function(builder,output){var match,offset=0,src=this.src;for(match=0;match<this.includes.length;match++)builder.include(this.includes[match],this);for(var ext in this.extensions)builder.extensions[ext]=!0;for(ext=[];match=propertiesRegexp.exec(this.src);)ext.push(match);\nfor(var _i=0;_i<ext.length;_i++){match=ext[_i];var prop=match[0],isGlobal=this.isMethod?!this.getInputByName(prop):!0,reference=prop;if(this.keywords[prop]||this.useKeywords&&isGlobal&&_NodeLib.NodeLib.containsKeyword(prop))isGlobal=this.keywords[prop],isGlobal||(reference=_NodeLib.NodeLib.getKeywordData(prop),reference.cache&&(isGlobal=builder.keywords[prop]),isGlobal=isGlobal||_NodeLib.NodeLib.getKeyword(prop,builder),reference.cache&&(builder.keywords[prop]=isGlobal)),reference=isGlobal.build(builder);\nprop!==reference&&(src=src.substring(0,match.index+offset)+reference+src.substring(match.index+prop.length+offset),offset+=reference.length-prop.length);void 0===this.getIncludeByName(reference)&&_NodeLib.NodeLib.contains(reference)&&builder.include(_NodeLib.NodeLib.get(reference))}return\"source\"===output?src:this.isMethod?(this.isInterface||builder.include(this,!1,src),this.name):builder.format(\"( \"+src+\" )\",this.getType(builder),output)};FunctionNode.prototype.parse=function(src,includes,extensions,\nkeywords){this.src=src||\"\";this.includes=includes||[];this.extensions=extensions||{};this.keywords=keywords||{};if(this.isMethod)if(src=this.src.match(declarationRegexp),this.inputs=[],src&&4==src.length){this.type=src[1];this.name=src[2];if(src=src[3].match(propertiesRegexp))for(includes=0;includes<src.length;){extensions=src[includes++];\"in\"===extensions||\"out\"===extensions||\"inout\"===extensions?keywords=src[includes++]:(keywords=extensions,extensions=\"\");var name=src[includes++];this.inputs.push({name,\ntype:keywords,qualifier:extensions})}this.isInterface=-1===this.src.indexOf(\"{\")}else this.name=this.type=\"\"};FunctionNode.prototype.copy=function(source){_TempNode.TempNode.prototype.copy.call(this,source);this.isMethod=source.isMethod;this.useKeywords=source.useKeywords;this.parse(source.src,source.includes,source.extensions,source.keywords);void 0!==source.type&&(this.type=source.type);return this};FunctionNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);if(!data){data=this.createJSONNode(meta);\ndata.src=this.src;data.isMethod=this.isMethod;data.useKeywords=this.useKeywords;this.isMethod||(data.type=this.type);data.extensions=JSON.parse(JSON.stringify(this.extensions));data.keywords={};for(var keyword in this.keywords)data.keywords[keyword]=this.keywords[keyword].toJSON(meta).uuid;if(this.includes.length)for(data.includes=[],keyword=0;keyword<this.includes.length;keyword++)data.includes.push(this.includes[keyword].toJSON(meta).uuid)}return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$core$FunctionNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionNode = FunctionNode;\n\nvar _TempNode = require(\"./TempNode.js\");\n\nvar _NodeLib = require(\"./NodeLib.js\");\n\nvar declarationRegexp = /^\\s*([a-z_0-9]+)\\s([a-z_0-9]+)\\s*\\((.*?)\\)/i,\n    propertiesRegexp = /[a-z_0-9]+/gi;\n\nfunction FunctionNode(src, includes, extensions, keywords, type) {\n  this.isMethod = type === undefined;\n  this.isInterface = false;\n\n  _TempNode.TempNode.call(this, type);\n\n  this.parse(src, includes, extensions, keywords);\n}\n\nFunctionNode.prototype = Object.create(_TempNode.TempNode.prototype);\nFunctionNode.prototype.constructor = FunctionNode;\nFunctionNode.prototype.nodeType = 'Function';\nFunctionNode.prototype.useKeywords = true;\n\nFunctionNode.prototype.getShared = function ()\n/* builder, output */\n{\n  return !this.isMethod;\n};\n\nFunctionNode.prototype.getType = function (builder) {\n  return builder.getTypeByFormat(this.type);\n};\n\nFunctionNode.prototype.getInputByName = function (name) {\n  var i = this.inputs.length;\n\n  while (i--) {\n    if (this.inputs[i].name === name) {\n      return this.inputs[i];\n    }\n  }\n};\n\nFunctionNode.prototype.getIncludeByName = function (name) {\n  var i = this.includes.length;\n\n  while (i--) {\n    if (this.includes[i].name === name) {\n      return this.includes[i];\n    }\n  }\n};\n\nFunctionNode.prototype.generate = function (builder, output) {\n  var match,\n      offset = 0,\n      src = this.src;\n\n  for (var i = 0; i < this.includes.length; i++) {\n    builder.include(this.includes[i], this);\n  }\n\n  for (var ext in this.extensions) {\n    builder.extensions[ext] = true;\n  }\n\n  var matches = [];\n\n  while (match = propertiesRegexp.exec(this.src)) {\n    matches.push(match);\n  }\n\n  for (var _i = 0; _i < matches.length; _i++) {\n    var match = matches[_i];\n    var prop = match[0],\n        isGlobal = this.isMethod ? !this.getInputByName(prop) : true,\n        reference = prop;\n\n    if (this.keywords[prop] || this.useKeywords && isGlobal && _NodeLib.NodeLib.containsKeyword(prop)) {\n      var node = this.keywords[prop];\n\n      if (!node) {\n        var keyword = _NodeLib.NodeLib.getKeywordData(prop);\n\n        if (keyword.cache) node = builder.keywords[prop];\n        node = node || _NodeLib.NodeLib.getKeyword(prop, builder);\n        if (keyword.cache) builder.keywords[prop] = node;\n      }\n\n      reference = node.build(builder);\n    }\n\n    if (prop !== reference) {\n      src = src.substring(0, match.index + offset) + reference + src.substring(match.index + prop.length + offset);\n      offset += reference.length - prop.length;\n    }\n\n    if (this.getIncludeByName(reference) === undefined && _NodeLib.NodeLib.contains(reference)) {\n      builder.include(_NodeLib.NodeLib.get(reference));\n    }\n  }\n\n  if (output === 'source') {\n    return src;\n  } else if (this.isMethod) {\n    if (!this.isInterface) {\n      builder.include(this, false, src);\n    }\n\n    return this.name;\n  } else {\n    return builder.format('( ' + src + ' )', this.getType(builder), output);\n  }\n};\n\nFunctionNode.prototype.parse = function (src, includes, extensions, keywords) {\n  this.src = src || '';\n  this.includes = includes || [];\n  this.extensions = extensions || {};\n  this.keywords = keywords || {};\n\n  if (this.isMethod) {\n    var match = this.src.match(declarationRegexp);\n    this.inputs = [];\n\n    if (match && match.length == 4) {\n      this.type = match[1];\n      this.name = match[2];\n      var inputs = match[3].match(propertiesRegexp);\n\n      if (inputs) {\n        var i = 0;\n\n        while (i < inputs.length) {\n          var qualifier = inputs[i++];\n          var type, name;\n\n          if (qualifier === 'in' || qualifier === 'out' || qualifier === 'inout') {\n            type = inputs[i++];\n          } else {\n            type = qualifier;\n            qualifier = '';\n          }\n\n          name = inputs[i++];\n          this.inputs.push({\n            name: name,\n            type: type,\n            qualifier: qualifier\n          });\n        }\n      }\n\n      this.isInterface = this.src.indexOf('{') === -1;\n    } else {\n      this.type = '';\n      this.name = '';\n    }\n  }\n};\n\nFunctionNode.prototype.copy = function (source) {\n  _TempNode.TempNode.prototype.copy.call(this, source);\n\n  this.isMethod = source.isMethod;\n  this.useKeywords = source.useKeywords;\n  this.parse(source.src, source.includes, source.extensions, source.keywords);\n  if (source.type !== undefined) this.type = source.type;\n  return this;\n};\n\nFunctionNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.src = this.src;\n    data.isMethod = this.isMethod;\n    data.useKeywords = this.useKeywords;\n    if (!this.isMethod) data.type = this.type;\n    data.extensions = JSON.parse(JSON.stringify(this.extensions));\n    data.keywords = {};\n\n    for (var keyword in this.keywords) {\n      data.keywords[keyword] = this.keywords[keyword].toJSON(meta).uuid;\n    }\n\n    if (this.includes.length) {\n      data.includes = [];\n\n      for (var i = 0; i < this.includes.length; i++) {\n        data.includes.push(this.includes[i].toJSON(meta).uuid);\n      }\n    }\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_stdlib$nodes$core$NodeLib","~$module$node_modules$three_stdlib$nodes$core$TempNode"]],"~:properties",["^5",["extensions","getInputByName","FunctionNode","includes","getType","copy","prototype","getIncludeByName","__esModule","useKeywords","generate","isInterface","src","name","nodeType","value","getShared","qualifier","keywords","type","parse","isMethod","inputs","constructor","toJSON"]],"~:compiled-at",1630917515198,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$core$FunctionNode.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/core/FunctionNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$core$FunctionNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FunctionNode = FunctionNode;\\n\\nvar _TempNode = require(\\\"./TempNode.js\\\");\\n\\nvar _NodeLib = require(\\\"./NodeLib.js\\\");\\n\\nvar declarationRegexp = /^\\\\s*([a-z_0-9]+)\\\\s([a-z_0-9]+)\\\\s*\\\\((.*?)\\\\)/i,\\n    propertiesRegexp = /[a-z_0-9]+/gi;\\n\\nfunction FunctionNode(src, includes, extensions, keywords, type) {\\n  this.isMethod = type === undefined;\\n  this.isInterface = false;\\n\\n  _TempNode.TempNode.call(this, type);\\n\\n  this.parse(src, includes, extensions, keywords);\\n}\\n\\nFunctionNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nFunctionNode.prototype.constructor = FunctionNode;\\nFunctionNode.prototype.nodeType = 'Function';\\nFunctionNode.prototype.useKeywords = true;\\n\\nFunctionNode.prototype.getShared = function ()\\n/* builder, output */\\n{\\n  return !this.isMethod;\\n};\\n\\nFunctionNode.prototype.getType = function (builder) {\\n  return builder.getTypeByFormat(this.type);\\n};\\n\\nFunctionNode.prototype.getInputByName = function (name) {\\n  var i = this.inputs.length;\\n\\n  while (i--) {\\n    if (this.inputs[i].name === name) {\\n      return this.inputs[i];\\n    }\\n  }\\n};\\n\\nFunctionNode.prototype.getIncludeByName = function (name) {\\n  var i = this.includes.length;\\n\\n  while (i--) {\\n    if (this.includes[i].name === name) {\\n      return this.includes[i];\\n    }\\n  }\\n};\\n\\nFunctionNode.prototype.generate = function (builder, output) {\\n  var match,\\n      offset = 0,\\n      src = this.src;\\n\\n  for (var i = 0; i < this.includes.length; i++) {\\n    builder.include(this.includes[i], this);\\n  }\\n\\n  for (var ext in this.extensions) {\\n    builder.extensions[ext] = true;\\n  }\\n\\n  var matches = [];\\n\\n  while (match = propertiesRegexp.exec(this.src)) {\\n    matches.push(match);\\n  }\\n\\n  for (var _i = 0; _i < matches.length; _i++) {\\n    var match = matches[_i];\\n    var prop = match[0],\\n        isGlobal = this.isMethod ? !this.getInputByName(prop) : true,\\n        reference = prop;\\n\\n    if (this.keywords[prop] || this.useKeywords && isGlobal && _NodeLib.NodeLib.containsKeyword(prop)) {\\n      var node = this.keywords[prop];\\n\\n      if (!node) {\\n        var keyword = _NodeLib.NodeLib.getKeywordData(prop);\\n\\n        if (keyword.cache) node = builder.keywords[prop];\\n        node = node || _NodeLib.NodeLib.getKeyword(prop, builder);\\n        if (keyword.cache) builder.keywords[prop] = node;\\n      }\\n\\n      reference = node.build(builder);\\n    }\\n\\n    if (prop !== reference) {\\n      src = src.substring(0, match.index + offset) + reference + src.substring(match.index + prop.length + offset);\\n      offset += reference.length - prop.length;\\n    }\\n\\n    if (this.getIncludeByName(reference) === undefined && _NodeLib.NodeLib.contains(reference)) {\\n      builder.include(_NodeLib.NodeLib.get(reference));\\n    }\\n  }\\n\\n  if (output === 'source') {\\n    return src;\\n  } else if (this.isMethod) {\\n    if (!this.isInterface) {\\n      builder.include(this, false, src);\\n    }\\n\\n    return this.name;\\n  } else {\\n    return builder.format('( ' + src + ' )', this.getType(builder), output);\\n  }\\n};\\n\\nFunctionNode.prototype.parse = function (src, includes, extensions, keywords) {\\n  this.src = src || '';\\n  this.includes = includes || [];\\n  this.extensions = extensions || {};\\n  this.keywords = keywords || {};\\n\\n  if (this.isMethod) {\\n    var match = this.src.match(declarationRegexp);\\n    this.inputs = [];\\n\\n    if (match && match.length == 4) {\\n      this.type = match[1];\\n      this.name = match[2];\\n      var inputs = match[3].match(propertiesRegexp);\\n\\n      if (inputs) {\\n        var i = 0;\\n\\n        while (i < inputs.length) {\\n          var qualifier = inputs[i++];\\n          var type, name;\\n\\n          if (qualifier === 'in' || qualifier === 'out' || qualifier === 'inout') {\\n            type = inputs[i++];\\n          } else {\\n            type = qualifier;\\n            qualifier = '';\\n          }\\n\\n          name = inputs[i++];\\n          this.inputs.push({\\n            name: name,\\n            type: type,\\n            qualifier: qualifier\\n          });\\n        }\\n      }\\n\\n      this.isInterface = this.src.indexOf('{') === -1;\\n    } else {\\n      this.type = '';\\n      this.name = '';\\n    }\\n  }\\n};\\n\\nFunctionNode.prototype.copy = function (source) {\\n  _TempNode.TempNode.prototype.copy.call(this, source);\\n\\n  this.isMethod = source.isMethod;\\n  this.useKeywords = source.useKeywords;\\n  this.parse(source.src, source.includes, source.extensions, source.keywords);\\n  if (source.type !== undefined) this.type = source.type;\\n  return this;\\n};\\n\\nFunctionNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.src = this.src;\\n    data.isMethod = this.isMethod;\\n    data.useKeywords = this.useKeywords;\\n    if (!this.isMethod) data.type = this.type;\\n    data.extensions = JSON.parse(JSON.stringify(this.extensions));\\n    data.keywords = {};\\n\\n    for (var keyword in this.keywords) {\\n      data.keywords[keyword] = this.keywords[keyword].toJSON(meta).uuid;\\n    }\\n\\n    if (this.includes.length) {\\n      data.includes = [];\\n\\n      for (var i = 0; i < this.includes.length; i++) {\\n        data.includes.push(this.includes[i].toJSON(meta).uuid);\\n      }\\n    }\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"FunctionNode\",\"src\",\"includes\",\"extensions\",\"keywords\",\"type\",\"isMethod\",\"undefined\",\"isInterface\",\"_TempNode\",\"TempNode\",\"call\",\"parse\",\"Object\",\"defineProperty\",\"value\",\"_NodeLib\",\"declarationRegexp\",\"propertiesRegexp\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"useKeywords\",\"getShared\",\"FunctionNode.prototype.getShared\",\"getType\",\"FunctionNode.prototype.getType\",\"builder\",\"getTypeByFormat\",\"getInputByName\",\"FunctionNode.prototype.getInputByName\",\"name\",\"i\",\"inputs\",\"length\",\"getIncludeByName\",\"FunctionNode.prototype.getIncludeByName\",\"generate\",\"FunctionNode.prototype.generate\",\"output\",\"match\",\"offset\",\"include\",\"ext\",\"matches\",\"exec\",\"push\",\"_i\",\"prop\",\"isGlobal\",\"reference\",\"NodeLib\",\"containsKeyword\",\"node\",\"keyword\",\"getKeywordData\",\"cache\",\"getKeyword\",\"build\",\"substring\",\"index\",\"contains\",\"get\",\"format\",\"FunctionNode.prototype.parse\",\"qualifier\",\"indexOf\",\"copy\",\"FunctionNode.prototype.copy\",\"source\",\"toJSON\",\"FunctionNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\",\"JSON\",\"stringify\",\"uuid\"]\n}\n"]