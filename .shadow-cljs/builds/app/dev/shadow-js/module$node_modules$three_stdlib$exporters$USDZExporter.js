["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/exporters/USDZExporter.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$exporters$USDZExporter=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);\nstaticProps&&_defineProperties(Constructor,staticProps);return Constructor}function imgToU8(image){var scale,canvas,context,blob;return regeneratorRuntime.async(function(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(!(\"undefined\"!==typeof HTMLImageElement&&image instanceof HTMLImageElement||\"undefined\"!==typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||\"undefined\"!==typeof OffscreenCanvas&&image instanceof OffscreenCanvas||\"undefined\"!==typeof ImageBitmap&&image instanceof\nImageBitmap)){_context2.next=15;break}scale=1024/Math.max(image.width,image.height);canvas=document.createElement(\"canvas\");canvas.width=image.width*Math.min(1,scale);canvas.height=image.height*Math.min(1,scale);context=canvas.getContext(\"2d\");context.drawImage(image,0,0,canvas.width,canvas.height);_context2.next=9;return regeneratorRuntime.awrap(new Promise(function(resolve){return canvas.toBlob(resolve,\"image/jpeg\",1)}));case 9:return blob=_context2.sent,_context2.t0=Uint8Array,_context2.next=13,\nregeneratorRuntime.awrap(blob.arrayBuffer());case 13:return _context2.t1=_context2.sent,_context2.abrupt(\"return\",new _context2.t0(_context2.t1));case 15:case \"end\":return _context2.stop()}})}function buildMatrixRow(array,offset){return\"(\".concat(array[offset+0],\", \").concat(array[offset+1],\", \").concat(array[offset+2],\", \").concat(array[offset+3],\")\")}function buildVector3Array(attribute,count){if(void 0===attribute)return console.warn(\"USDZExporter: Normals missing.\"),Array(count).fill(\"(0, 0, 0)\").join(\", \");\ncount=[];attribute=attribute.array;for(var i=0;i<attribute.length;i+=3)count.push(\"(\".concat(attribute[i+0].toPrecision(PRECISION),\", \").concat(attribute[i+1].toPrecision(PRECISION),\", \").concat(attribute[i+2].toPrecision(PRECISION),\")\"));return count.join(\", \")}function buildMaterials(materials){var array=[],uuid;for(uuid in materials){var JSCompiler_temp_const=array,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.push;var JSCompiler_inline_result=materials[uuid];var parameters=[];null!==JSCompiler_inline_result.map?\nparameters.push(\"\".concat(\"            \",\"color3f inputs:diffuseColor.connect \\x3d \\x3c/Textures/Texture_\").concat(JSCompiler_inline_result.map.id,\".outputs:rgb\\x3e\")):parameters.push(\"\".concat(\"            \",\"color3f inputs:diffuseColor \\x3d \").concat(buildColor(JSCompiler_inline_result.color)));null!==JSCompiler_inline_result.emissiveMap?parameters.push(\"\".concat(\"            \",\"color3f inputs:emissiveColor.connect \\x3d \\x3c/Textures/Texture_\").concat(JSCompiler_inline_result.emissiveMap.id,\".outputs:rgb\\x3e\")):\n0<JSCompiler_inline_result.emissive.getHex()&&parameters.push(\"\".concat(\"            \",\"color3f inputs:emissiveColor \\x3d \").concat(buildColor(JSCompiler_inline_result.emissive)));null!==JSCompiler_inline_result.normalMap&&parameters.push(\"\".concat(\"            \",\"normal3f inputs:normal.connect \\x3d \\x3c/Textures/Texture_\").concat(JSCompiler_inline_result.normalMap.id,\".outputs:rgb\\x3e\"));null!==JSCompiler_inline_result.aoMap&&parameters.push(\"\".concat(\"            \",\"float inputs:occlusion.connect \\x3d \\x3c/Textures/Texture_\").concat(JSCompiler_inline_result.aoMap.id,\n\".outputs:r\\x3e\"));null!==JSCompiler_inline_result.roughnessMap?parameters.push(\"\".concat(\"            \",\"float inputs:roughness.connect \\x3d \\x3c/Textures/Texture_\").concat(JSCompiler_inline_result.roughnessMap.id,\".outputs:g\\x3e\")):parameters.push(\"\".concat(\"            \",\"float inputs:roughness \\x3d \").concat(JSCompiler_inline_result.roughness));null!==JSCompiler_inline_result.metalnessMap?parameters.push(\"\".concat(\"            \",\"float inputs:metallic.connect \\x3d \\x3c/Textures/Texture_\").concat(JSCompiler_inline_result.metalnessMap.id,\n\".outputs:b\\x3e\")):parameters.push(\"\".concat(\"            \",\"float inputs:metallic \\x3d \").concat(JSCompiler_inline_result.metalness));JSCompiler_inline_result='\\n    def Material \"Material_'.concat(JSCompiler_inline_result.id,'\"\\n    {\\n        token outputs:surface.connect \\x3d \\x3c/Materials/Material_').concat(JSCompiler_inline_result.id,'/PreviewSurface.outputs:surface\\x3e\\n\\n        def Shader \"PreviewSurface\"\\n        {\\n            uniform token info:id \\x3d \"UsdPreviewSurface\"\\n').concat(parameters.join(\"\\n\"),\n\"\\n            int inputs:useSpecularWorkflow \\x3d 0\\n            token outputs:surface\\n        }\\n    }\\n\");JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,JSCompiler_inline_result)}return'def \"Materials\"\\n{\\n'.concat(array.join(\"\"),\"\\n}\\n\\n\")}function buildTextures(textures){var array=[],uuid;for(uuid in textures){var JSCompiler_temp_const=array,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.push;var JSCompiler_inline_result=textures[uuid];JSCompiler_inline_result='\\n    def Shader \"Texture_'.concat(JSCompiler_inline_result.id,\n'\"\\n    {\\n        uniform token info:id \\x3d \"UsdUVTexture\"\\n        asset inputs:file \\x3d @textures/Texture_').concat(JSCompiler_inline_result.id,'.jpg@\\n        token inputs:wrapS \\x3d \"repeat\"\\n        token inputs:wrapT \\x3d \"repeat\"\\n        float outputs:r\\n        float outputs:g\\n        float outputs:b\\n        float3 outputs:rgb\\n    }\\n');JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,JSCompiler_inline_result)}return'def \"Textures\"\\n{\\n'.concat(array.join(\"\"),\"\\n}\\n\\n\")}function buildColor(color){return\"(\".concat(color.r,\n\", \").concat(color.g,\", \").concat(color.b,\")\")}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.USDZExporter=void 0;var _fflate=require(\"module$node_modules$fflate$esm$browser\");global=function(){function USDZExporter(){if(!(this instanceof USDZExporter))throw new TypeError(\"Cannot call a class as a function\");}_createClass(USDZExporter,[{key:\"parse\",value:function(scene){var output,materials,textures,files,uuid,texture,offset,filename,file,headerSize,offsetMod64,padLength,padding;return regeneratorRuntime.async(function(_context){for(;;)switch(_context.prev=\n_context.next){case 0:output='#usda 1.0\\n(\\n    customLayerData \\x3d {\\n        string creator \\x3d \"Three.js USDZExporter\"\\n    }\\n    metersPerUnit \\x3d 1\\n    upAxis \\x3d \"Y\"\\n)\\n\\n',materials={},textures={},scene.traverse(function(object){if(object.isMesh){var geometry=object.geometry,material=object.material;materials[material.uuid]=material;null!==material.map&&(textures[material.map.uuid]=material.map);null!==material.normalMap&&(textures[material.normalMap.uuid]=material.normalMap);null!==\nmaterial.aoMap&&(textures[material.aoMap.uuid]=material.aoMap);null!==material.roughnessMap&&(textures[material.roughnessMap.uuid]=material.roughnessMap);null!==material.metalnessMap&&(textures[material.metalnessMap.uuid]=material.metalnessMap);null!==material.emissiveMap&&(textures[material.emissiveMap.uuid]=material.emissiveMap);var JSCompiler_temp_const=output,name=\"Geometry_\".concat(geometry.id),attributes=geometry.attributes,count=attributes.position.count;\"uv2\"in attributes&&console.warn(\"THREE.USDZExporter: uv2 not supported yet.\");\nvar attribute=attributes.uv;if(void 0===attribute){console.warn(\"USDZExporter: UVs missing.\");var JSCompiler_temp_const$jscomp$0=Array(count).fill(\"(0, 0)\").join(\", \")}else{JSCompiler_temp_const$jscomp$0=[];attribute=attribute.array;for(var i=0;i<attribute.length;i+=2)JSCompiler_temp_const$jscomp$0.push(\"(\".concat(attribute[i+0].toPrecision(PRECISION),\", \").concat(1-attribute[i+1].toPrecision(PRECISION),\")\"));JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const$jscomp$0.join(\", \")}attribute=buildVector3Array(attributes.position,\ncount);attributes=buildVector3Array(attributes.normal,count);material=material.id;name='def Mesh \"'.concat(name,'\"\\n    {\\n        int[] faceVertexCounts \\x3d [').concat(Array((null!==geometry.index?geometry.index.array.length:geometry.attributes.position.count)/3).fill(3).join(\", \"),\"]\\n        int[] faceVertexIndices \\x3d [\");count=name.concat;if(null!==geometry.index)geometry=geometry.index.array.join(\", \");else{i=[];geometry=geometry.attributes.position.count;for(var i$jscomp$0=0;i$jscomp$0<geometry;i$jscomp$0++)i.push(i$jscomp$0);\ngeometry=i.join(\", \")}geometry=count.call(name,geometry,\"]\\n        rel material:binding \\x3d \\x3c/Materials/Material_\").concat(material,\"\\x3e\\n        normal3f[] normals \\x3d [\").concat(attributes,'] (\\n            interpolation \\x3d \"vertex\"\\n        )\\n        point3f[] points \\x3d [').concat(attribute,\"]\\n        float2[] primvars:st \\x3d [\").concat(JSCompiler_temp_const$jscomp$0,'] (\\n            interpolation \\x3d \"vertex\"\\n        )\\n        uniform token subdivisionScheme \\x3d \"none\"\\n    }\\n');\nJSCompiler_temp_const$jscomp$0=\"Object_\".concat(object.id);object=object.matrixWorld.elements;object=\"( \".concat(buildMatrixRow(object,0),\", \").concat(buildMatrixRow(object,4),\", \").concat(buildMatrixRow(object,8),\", \").concat(buildMatrixRow(object,12),\" )\");object='def Xform \"'.concat(JSCompiler_temp_const$jscomp$0,'\"\\n{\\n    matrix4d xformOp:transform \\x3d ').concat(object,'\\n    uniform token[] xformOpOrder \\x3d [\"xformOp:transform\"]\\n\\n    ').concat(geometry,\"\\n}\\n\\n\");output=JSCompiler_temp_const+\nobject}}),output+=buildMaterials(materials),output+=buildTextures(textures),files={\"model.usda\":(0,_fflate.strToU8)(output)},_context.t0=regeneratorRuntime.keys(textures);case 8:if((_context.t1=_context.t0()).done){_context.next=16;break}uuid=_context.t1.value;texture=textures[uuid];_context.next=13;return regeneratorRuntime.awrap(imgToU8(texture.image));case 13:files[\"textures/Texture_\".concat(texture.id,\".jpg\")]=_context.sent;_context.next=8;break;case 16:offset=0;for(filename in files)file=files[filename],\nheaderSize=34+filename.length,offset+=headerSize,offsetMod64=offset&63,4!==offsetMod64&&(padLength=64-offsetMod64,padding=new Uint8Array(padLength),files[filename]=[file,{extra:{12345:padding}}]),offset=file.length;return _context.abrupt(\"return\",(0,_fflate.zipSync)(files,{level:0}));case 19:case \"end\":return _context.stop()}})}}]);return USDZExporter}();exports.USDZExporter=global;var PRECISION=7}","~:source","shadow$provide[\"module$node_modules$three_stdlib$exporters$USDZExporter\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.USDZExporter = void 0;\n\nvar _fflate = require(\"fflate\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar USDZExporter =\n/*#__PURE__*/\nfunction () {\n  function USDZExporter() {\n    _classCallCheck(this, USDZExporter);\n  }\n\n  _createClass(USDZExporter, [{\n    key: \"parse\",\n    value: function parse(scene) {\n      var output, materials, textures, files, uuid, texture, offset, filename, file, headerSize, offsetMod64, padLength, padding;\n      return regeneratorRuntime.async(function parse$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              output = buildHeader();\n              materials = {};\n              textures = {};\n              scene.traverse(function (object) {\n                if (object.isMesh) {\n                  var geometry = object.geometry;\n                  var material = object.material;\n                  materials[material.uuid] = material;\n                  if (material.map !== null) textures[material.map.uuid] = material.map;\n                  if (material.normalMap !== null) textures[material.normalMap.uuid] = material.normalMap;\n                  if (material.aoMap !== null) textures[material.aoMap.uuid] = material.aoMap;\n                  if (material.roughnessMap !== null) textures[material.roughnessMap.uuid] = material.roughnessMap;\n                  if (material.metalnessMap !== null) textures[material.metalnessMap.uuid] = material.metalnessMap;\n                  if (material.emissiveMap !== null) textures[material.emissiveMap.uuid] = material.emissiveMap;\n                  output += buildXform(object, buildMesh(geometry, material));\n                }\n              });\n              output += buildMaterials(materials);\n              output += buildTextures(textures);\n              files = {\n                'model.usda': (0, _fflate.strToU8)(output)\n              };\n              _context.t0 = regeneratorRuntime.keys(textures);\n\n            case 8:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 16;\n                break;\n              }\n\n              uuid = _context.t1.value;\n              texture = textures[uuid];\n              _context.next = 13;\n              return regeneratorRuntime.awrap(imgToU8(texture.image));\n\n            case 13:\n              files[\"textures/Texture_\".concat(texture.id, \".jpg\")] = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 16:\n              // 64 byte alignment\n              // https://github.com/101arrowz/fflate/issues/39#issuecomment-777263109\n              offset = 0;\n\n              for (filename in files) {\n                file = files[filename];\n                headerSize = 34 + filename.length;\n                offset += headerSize;\n                offsetMod64 = offset & 63;\n\n                if (offsetMod64 !== 4) {\n                  padLength = 64 - offsetMod64;\n                  padding = new Uint8Array(padLength);\n                  files[filename] = [file, {\n                    extra: {\n                      12345: padding\n                    }\n                  }];\n                }\n\n                offset = file.length;\n              }\n\n              return _context.abrupt(\"return\", (0, _fflate.zipSync)(files, {\n                level: 0\n              }));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return USDZExporter;\n}();\n\nexports.USDZExporter = USDZExporter;\n\nfunction imgToU8(image) {\n  var scale, canvas, context, blob;\n  return regeneratorRuntime.async(function imgToU8$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap)) {\n            _context2.next = 15;\n            break;\n          }\n\n          scale = 1024 / Math.max(image.width, image.height);\n          canvas = document.createElement('canvas');\n          canvas.width = image.width * Math.min(1, scale);\n          canvas.height = image.height * Math.min(1, scale);\n          context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, canvas.width, canvas.height);\n          _context2.next = 9;\n          return regeneratorRuntime.awrap(new Promise(function (resolve) {\n            return canvas.toBlob(resolve, 'image/jpeg', 1);\n          }));\n\n        case 9:\n          blob = _context2.sent;\n          _context2.t0 = Uint8Array;\n          _context2.next = 13;\n          return regeneratorRuntime.awrap(blob.arrayBuffer());\n\n        case 13:\n          _context2.t1 = _context2.sent;\n          return _context2.abrupt(\"return\", new _context2.t0(_context2.t1));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n} //\n\n\nvar PRECISION = 7;\n\nfunction buildHeader() {\n  return \"#usda 1.0\\n(\\n    customLayerData = {\\n        string creator = \\\"Three.js USDZExporter\\\"\\n    }\\n    metersPerUnit = 1\\n    upAxis = \\\"Y\\\"\\n)\\n\\n\";\n} // Xform\n\n\nfunction buildXform(object, define) {\n  var name = \"Object_\".concat(object.id);\n  var transform = buildMatrix(object.matrixWorld);\n  return \"def Xform \\\"\".concat(name, \"\\\"\\n{\\n    matrix4d xformOp:transform = \").concat(transform, \"\\n    uniform token[] xformOpOrder = [\\\"xformOp:transform\\\"]\\n\\n    \").concat(define, \"\\n}\\n\\n\");\n}\n\nfunction buildMatrix(matrix) {\n  var array = matrix.elements;\n  return \"( \".concat(buildMatrixRow(array, 0), \", \").concat(buildMatrixRow(array, 4), \", \").concat(buildMatrixRow(array, 8), \", \").concat(buildMatrixRow(array, 12), \" )\");\n}\n\nfunction buildMatrixRow(array, offset) {\n  return \"(\".concat(array[offset + 0], \", \").concat(array[offset + 1], \", \").concat(array[offset + 2], \", \").concat(array[offset + 3], \")\");\n} // Mesh\n\n\nfunction buildMesh(geometry, material) {\n  var name = \"Geometry_\".concat(geometry.id);\n  var attributes = geometry.attributes;\n  var count = attributes.position.count;\n\n  if ('uv2' in attributes) {\n    console.warn('THREE.USDZExporter: uv2 not supported yet.');\n  }\n\n  return \"def Mesh \\\"\".concat(name, \"\\\"\\n    {\\n        int[] faceVertexCounts = [\").concat(buildMeshVertexCount(geometry), \"]\\n        int[] faceVertexIndices = [\").concat(buildMeshVertexIndices(geometry), \"]\\n        rel material:binding = </Materials/Material_\").concat(material.id, \">\\n        normal3f[] normals = [\").concat(buildVector3Array(attributes.normal, count), \"] (\\n            interpolation = \\\"vertex\\\"\\n        )\\n        point3f[] points = [\").concat(buildVector3Array(attributes.position, count), \"]\\n        float2[] primvars:st = [\").concat(buildVector2Array(attributes.uv, count), \"] (\\n            interpolation = \\\"vertex\\\"\\n        )\\n        uniform token subdivisionScheme = \\\"none\\\"\\n    }\\n\");\n}\n\nfunction buildMeshVertexCount(geometry) {\n  var count = geometry.index !== null ? geometry.index.array.length : geometry.attributes.position.count;\n  return Array(count / 3).fill(3).join(', ');\n}\n\nfunction buildMeshVertexIndices(geometry) {\n  if (geometry.index !== null) {\n    return geometry.index.array.join(', ');\n  }\n\n  var array = [];\n  var length = geometry.attributes.position.count;\n\n  for (var i = 0; i < length; i++) {\n    array.push(i);\n  }\n\n  return array.join(', ');\n}\n\nfunction buildVector3Array(attribute, count) {\n  if (attribute === undefined) {\n    console.warn('USDZExporter: Normals missing.');\n    return Array(count).fill('(0, 0, 0)').join(', ');\n  }\n\n  var array = [];\n  var data = attribute.array;\n\n  for (var i = 0; i < data.length; i += 3) {\n    array.push(\"(\".concat(data[i + 0].toPrecision(PRECISION), \", \").concat(data[i + 1].toPrecision(PRECISION), \", \").concat(data[i + 2].toPrecision(PRECISION), \")\"));\n  }\n\n  return array.join(', ');\n}\n\nfunction buildVector2Array(attribute, count) {\n  if (attribute === undefined) {\n    console.warn('USDZExporter: UVs missing.');\n    return Array(count).fill('(0, 0)').join(', ');\n  }\n\n  var array = [];\n  var data = attribute.array;\n\n  for (var i = 0; i < data.length; i += 2) {\n    array.push(\"(\".concat(data[i + 0].toPrecision(PRECISION), \", \").concat(1 - data[i + 1].toPrecision(PRECISION), \")\"));\n  }\n\n  return array.join(', ');\n} // Materials\n\n\nfunction buildMaterials(materials) {\n  var array = [];\n\n  for (var uuid in materials) {\n    var material = materials[uuid];\n    array.push(buildMaterial(material));\n  }\n\n  return \"def \\\"Materials\\\"\\n{\\n\".concat(array.join(''), \"\\n}\\n\\n\");\n}\n\nfunction buildMaterial(material) {\n  // https://graphics.pixar.com/usd/docs/UsdPreviewSurface-Proposal.html\n  var pad = '            ';\n  var parameters = [];\n\n  if (material.map !== null) {\n    parameters.push(\"\".concat(pad, \"color3f inputs:diffuseColor.connect = </Textures/Texture_\").concat(material.map.id, \".outputs:rgb>\"));\n  } else {\n    parameters.push(\"\".concat(pad, \"color3f inputs:diffuseColor = \").concat(buildColor(material.color)));\n  }\n\n  if (material.emissiveMap !== null) {\n    parameters.push(\"\".concat(pad, \"color3f inputs:emissiveColor.connect = </Textures/Texture_\").concat(material.emissiveMap.id, \".outputs:rgb>\"));\n  } else if (material.emissive.getHex() > 0) {\n    parameters.push(\"\".concat(pad, \"color3f inputs:emissiveColor = \").concat(buildColor(material.emissive)));\n  }\n\n  if (material.normalMap !== null) {\n    parameters.push(\"\".concat(pad, \"normal3f inputs:normal.connect = </Textures/Texture_\").concat(material.normalMap.id, \".outputs:rgb>\"));\n  }\n\n  if (material.aoMap !== null) {\n    parameters.push(\"\".concat(pad, \"float inputs:occlusion.connect = </Textures/Texture_\").concat(material.aoMap.id, \".outputs:r>\"));\n  }\n\n  if (material.roughnessMap !== null) {\n    parameters.push(\"\".concat(pad, \"float inputs:roughness.connect = </Textures/Texture_\").concat(material.roughnessMap.id, \".outputs:g>\"));\n  } else {\n    parameters.push(\"\".concat(pad, \"float inputs:roughness = \").concat(material.roughness));\n  }\n\n  if (material.metalnessMap !== null) {\n    parameters.push(\"\".concat(pad, \"float inputs:metallic.connect = </Textures/Texture_\").concat(material.metalnessMap.id, \".outputs:b>\"));\n  } else {\n    parameters.push(\"\".concat(pad, \"float inputs:metallic = \").concat(material.metalness));\n  }\n\n  return \"\\n    def Material \\\"Material_\".concat(material.id, \"\\\"\\n    {\\n        token outputs:surface.connect = </Materials/Material_\").concat(material.id, \"/PreviewSurface.outputs:surface>\\n\\n        def Shader \\\"PreviewSurface\\\"\\n        {\\n            uniform token info:id = \\\"UsdPreviewSurface\\\"\\n\").concat(parameters.join('\\n'), \"\\n            int inputs:useSpecularWorkflow = 0\\n            token outputs:surface\\n        }\\n    }\\n\");\n}\n\nfunction buildTextures(textures) {\n  var array = [];\n\n  for (var uuid in textures) {\n    var texture = textures[uuid];\n    array.push(buildTexture(texture));\n  }\n\n  return \"def \\\"Textures\\\"\\n{\\n\".concat(array.join(''), \"\\n}\\n\\n\");\n}\n\nfunction buildTexture(texture) {\n  return \"\\n    def Shader \\\"Texture_\".concat(texture.id, \"\\\"\\n    {\\n        uniform token info:id = \\\"UsdUVTexture\\\"\\n        asset inputs:file = @textures/Texture_\").concat(texture.id, \".jpg@\\n        token inputs:wrapS = \\\"repeat\\\"\\n        token inputs:wrapT = \\\"repeat\\\"\\n        float outputs:r\\n        float outputs:g\\n        float outputs:b\\n        float3 outputs:rgb\\n    }\\n\");\n}\n\nfunction buildColor(color) {\n  return \"(\".concat(color.r, \", \").concat(color.g, \", \").concat(color.b, \")\");\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fflate$esm$browser"]],"~:properties",["^5",["width","next","t1","height","key","__esModule","level","configurable","value","enumerable","prev","writable","extra","t0","USDZExporter"]],"~:compiled-at",1630917515300,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$exporters$USDZExporter.js\",\n\"lineCount\":20,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/exporters/USDZExporter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$exporters$USDZExporter\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.USDZExporter = void 0;\\n\\nvar _fflate = require(\\\"fflate\\\");\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nvar USDZExporter =\\n/*#__PURE__*/\\nfunction () {\\n  function USDZExporter() {\\n    _classCallCheck(this, USDZExporter);\\n  }\\n\\n  _createClass(USDZExporter, [{\\n    key: \\\"parse\\\",\\n    value: function parse(scene) {\\n      var output, materials, textures, files, uuid, texture, offset, filename, file, headerSize, offsetMod64, padLength, padding;\\n      return regeneratorRuntime.async(function parse$(_context) {\\n        while (1) {\\n          switch (_context.prev = _context.next) {\\n            case 0:\\n              output = buildHeader();\\n              materials = {};\\n              textures = {};\\n              scene.traverse(function (object) {\\n                if (object.isMesh) {\\n                  var geometry = object.geometry;\\n                  var material = object.material;\\n                  materials[material.uuid] = material;\\n                  if (material.map !== null) textures[material.map.uuid] = material.map;\\n                  if (material.normalMap !== null) textures[material.normalMap.uuid] = material.normalMap;\\n                  if (material.aoMap !== null) textures[material.aoMap.uuid] = material.aoMap;\\n                  if (material.roughnessMap !== null) textures[material.roughnessMap.uuid] = material.roughnessMap;\\n                  if (material.metalnessMap !== null) textures[material.metalnessMap.uuid] = material.metalnessMap;\\n                  if (material.emissiveMap !== null) textures[material.emissiveMap.uuid] = material.emissiveMap;\\n                  output += buildXform(object, buildMesh(geometry, material));\\n                }\\n              });\\n              output += buildMaterials(materials);\\n              output += buildTextures(textures);\\n              files = {\\n                'model.usda': (0, _fflate.strToU8)(output)\\n              };\\n              _context.t0 = regeneratorRuntime.keys(textures);\\n\\n            case 8:\\n              if ((_context.t1 = _context.t0()).done) {\\n                _context.next = 16;\\n                break;\\n              }\\n\\n              uuid = _context.t1.value;\\n              texture = textures[uuid];\\n              _context.next = 13;\\n              return regeneratorRuntime.awrap(imgToU8(texture.image));\\n\\n            case 13:\\n              files[\\\"textures/Texture_\\\".concat(texture.id, \\\".jpg\\\")] = _context.sent;\\n              _context.next = 8;\\n              break;\\n\\n            case 16:\\n              // 64 byte alignment\\n              // https://github.com/101arrowz/fflate/issues/39#issuecomment-777263109\\n              offset = 0;\\n\\n              for (filename in files) {\\n                file = files[filename];\\n                headerSize = 34 + filename.length;\\n                offset += headerSize;\\n                offsetMod64 = offset & 63;\\n\\n                if (offsetMod64 !== 4) {\\n                  padLength = 64 - offsetMod64;\\n                  padding = new Uint8Array(padLength);\\n                  files[filename] = [file, {\\n                    extra: {\\n                      12345: padding\\n                    }\\n                  }];\\n                }\\n\\n                offset = file.length;\\n              }\\n\\n              return _context.abrupt(\\\"return\\\", (0, _fflate.zipSync)(files, {\\n                level: 0\\n              }));\\n\\n            case 19:\\n            case \\\"end\\\":\\n              return _context.stop();\\n          }\\n        }\\n      });\\n    }\\n  }]);\\n\\n  return USDZExporter;\\n}();\\n\\nexports.USDZExporter = USDZExporter;\\n\\nfunction imgToU8(image) {\\n  var scale, canvas, context, blob;\\n  return regeneratorRuntime.async(function imgToU8$(_context2) {\\n    while (1) {\\n      switch (_context2.prev = _context2.next) {\\n        case 0:\\n          if (!(typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap)) {\\n            _context2.next = 15;\\n            break;\\n          }\\n\\n          scale = 1024 / Math.max(image.width, image.height);\\n          canvas = document.createElement('canvas');\\n          canvas.width = image.width * Math.min(1, scale);\\n          canvas.height = image.height * Math.min(1, scale);\\n          context = canvas.getContext('2d');\\n          context.drawImage(image, 0, 0, canvas.width, canvas.height);\\n          _context2.next = 9;\\n          return regeneratorRuntime.awrap(new Promise(function (resolve) {\\n            return canvas.toBlob(resolve, 'image/jpeg', 1);\\n          }));\\n\\n        case 9:\\n          blob = _context2.sent;\\n          _context2.t0 = Uint8Array;\\n          _context2.next = 13;\\n          return regeneratorRuntime.awrap(blob.arrayBuffer());\\n\\n        case 13:\\n          _context2.t1 = _context2.sent;\\n          return _context2.abrupt(\\\"return\\\", new _context2.t0(_context2.t1));\\n\\n        case 15:\\n        case \\\"end\\\":\\n          return _context2.stop();\\n      }\\n    }\\n  });\\n} //\\n\\n\\nvar PRECISION = 7;\\n\\nfunction buildHeader() {\\n  return \\\"#usda 1.0\\\\n(\\\\n    customLayerData = {\\\\n        string creator = \\\\\\\"Three.js USDZExporter\\\\\\\"\\\\n    }\\\\n    metersPerUnit = 1\\\\n    upAxis = \\\\\\\"Y\\\\\\\"\\\\n)\\\\n\\\\n\\\";\\n} // Xform\\n\\n\\nfunction buildXform(object, define) {\\n  var name = \\\"Object_\\\".concat(object.id);\\n  var transform = buildMatrix(object.matrixWorld);\\n  return \\\"def Xform \\\\\\\"\\\".concat(name, \\\"\\\\\\\"\\\\n{\\\\n    matrix4d xformOp:transform = \\\").concat(transform, \\\"\\\\n    uniform token[] xformOpOrder = [\\\\\\\"xformOp:transform\\\\\\\"]\\\\n\\\\n    \\\").concat(define, \\\"\\\\n}\\\\n\\\\n\\\");\\n}\\n\\nfunction buildMatrix(matrix) {\\n  var array = matrix.elements;\\n  return \\\"( \\\".concat(buildMatrixRow(array, 0), \\\", \\\").concat(buildMatrixRow(array, 4), \\\", \\\").concat(buildMatrixRow(array, 8), \\\", \\\").concat(buildMatrixRow(array, 12), \\\" )\\\");\\n}\\n\\nfunction buildMatrixRow(array, offset) {\\n  return \\\"(\\\".concat(array[offset + 0], \\\", \\\").concat(array[offset + 1], \\\", \\\").concat(array[offset + 2], \\\", \\\").concat(array[offset + 3], \\\")\\\");\\n} // Mesh\\n\\n\\nfunction buildMesh(geometry, material) {\\n  var name = \\\"Geometry_\\\".concat(geometry.id);\\n  var attributes = geometry.attributes;\\n  var count = attributes.position.count;\\n\\n  if ('uv2' in attributes) {\\n    console.warn('THREE.USDZExporter: uv2 not supported yet.');\\n  }\\n\\n  return \\\"def Mesh \\\\\\\"\\\".concat(name, \\\"\\\\\\\"\\\\n    {\\\\n        int[] faceVertexCounts = [\\\").concat(buildMeshVertexCount(geometry), \\\"]\\\\n        int[] faceVertexIndices = [\\\").concat(buildMeshVertexIndices(geometry), \\\"]\\\\n        rel material:binding = </Materials/Material_\\\").concat(material.id, \\\">\\\\n        normal3f[] normals = [\\\").concat(buildVector3Array(attributes.normal, count), \\\"] (\\\\n            interpolation = \\\\\\\"vertex\\\\\\\"\\\\n        )\\\\n        point3f[] points = [\\\").concat(buildVector3Array(attributes.position, count), \\\"]\\\\n        float2[] primvars:st = [\\\").concat(buildVector2Array(attributes.uv, count), \\\"] (\\\\n            interpolation = \\\\\\\"vertex\\\\\\\"\\\\n        )\\\\n        uniform token subdivisionScheme = \\\\\\\"none\\\\\\\"\\\\n    }\\\\n\\\");\\n}\\n\\nfunction buildMeshVertexCount(geometry) {\\n  var count = geometry.index !== null ? geometry.index.array.length : geometry.attributes.position.count;\\n  return Array(count / 3).fill(3).join(', ');\\n}\\n\\nfunction buildMeshVertexIndices(geometry) {\\n  if (geometry.index !== null) {\\n    return geometry.index.array.join(', ');\\n  }\\n\\n  var array = [];\\n  var length = geometry.attributes.position.count;\\n\\n  for (var i = 0; i < length; i++) {\\n    array.push(i);\\n  }\\n\\n  return array.join(', ');\\n}\\n\\nfunction buildVector3Array(attribute, count) {\\n  if (attribute === undefined) {\\n    console.warn('USDZExporter: Normals missing.');\\n    return Array(count).fill('(0, 0, 0)').join(', ');\\n  }\\n\\n  var array = [];\\n  var data = attribute.array;\\n\\n  for (var i = 0; i < data.length; i += 3) {\\n    array.push(\\\"(\\\".concat(data[i + 0].toPrecision(PRECISION), \\\", \\\").concat(data[i + 1].toPrecision(PRECISION), \\\", \\\").concat(data[i + 2].toPrecision(PRECISION), \\\")\\\"));\\n  }\\n\\n  return array.join(', ');\\n}\\n\\nfunction buildVector2Array(attribute, count) {\\n  if (attribute === undefined) {\\n    console.warn('USDZExporter: UVs missing.');\\n    return Array(count).fill('(0, 0)').join(', ');\\n  }\\n\\n  var array = [];\\n  var data = attribute.array;\\n\\n  for (var i = 0; i < data.length; i += 2) {\\n    array.push(\\\"(\\\".concat(data[i + 0].toPrecision(PRECISION), \\\", \\\").concat(1 - data[i + 1].toPrecision(PRECISION), \\\")\\\"));\\n  }\\n\\n  return array.join(', ');\\n} // Materials\\n\\n\\nfunction buildMaterials(materials) {\\n  var array = [];\\n\\n  for (var uuid in materials) {\\n    var material = materials[uuid];\\n    array.push(buildMaterial(material));\\n  }\\n\\n  return \\\"def \\\\\\\"Materials\\\\\\\"\\\\n{\\\\n\\\".concat(array.join(''), \\\"\\\\n}\\\\n\\\\n\\\");\\n}\\n\\nfunction buildMaterial(material) {\\n  // https://graphics.pixar.com/usd/docs/UsdPreviewSurface-Proposal.html\\n  var pad = '            ';\\n  var parameters = [];\\n\\n  if (material.map !== null) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"color3f inputs:diffuseColor.connect = </Textures/Texture_\\\").concat(material.map.id, \\\".outputs:rgb>\\\"));\\n  } else {\\n    parameters.push(\\\"\\\".concat(pad, \\\"color3f inputs:diffuseColor = \\\").concat(buildColor(material.color)));\\n  }\\n\\n  if (material.emissiveMap !== null) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"color3f inputs:emissiveColor.connect = </Textures/Texture_\\\").concat(material.emissiveMap.id, \\\".outputs:rgb>\\\"));\\n  } else if (material.emissive.getHex() > 0) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"color3f inputs:emissiveColor = \\\").concat(buildColor(material.emissive)));\\n  }\\n\\n  if (material.normalMap !== null) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"normal3f inputs:normal.connect = </Textures/Texture_\\\").concat(material.normalMap.id, \\\".outputs:rgb>\\\"));\\n  }\\n\\n  if (material.aoMap !== null) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"float inputs:occlusion.connect = </Textures/Texture_\\\").concat(material.aoMap.id, \\\".outputs:r>\\\"));\\n  }\\n\\n  if (material.roughnessMap !== null) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"float inputs:roughness.connect = </Textures/Texture_\\\").concat(material.roughnessMap.id, \\\".outputs:g>\\\"));\\n  } else {\\n    parameters.push(\\\"\\\".concat(pad, \\\"float inputs:roughness = \\\").concat(material.roughness));\\n  }\\n\\n  if (material.metalnessMap !== null) {\\n    parameters.push(\\\"\\\".concat(pad, \\\"float inputs:metallic.connect = </Textures/Texture_\\\").concat(material.metalnessMap.id, \\\".outputs:b>\\\"));\\n  } else {\\n    parameters.push(\\\"\\\".concat(pad, \\\"float inputs:metallic = \\\").concat(material.metalness));\\n  }\\n\\n  return \\\"\\\\n    def Material \\\\\\\"Material_\\\".concat(material.id, \\\"\\\\\\\"\\\\n    {\\\\n        token outputs:surface.connect = </Materials/Material_\\\").concat(material.id, \\\"/PreviewSurface.outputs:surface>\\\\n\\\\n        def Shader \\\\\\\"PreviewSurface\\\\\\\"\\\\n        {\\\\n            uniform token info:id = \\\\\\\"UsdPreviewSurface\\\\\\\"\\\\n\\\").concat(parameters.join('\\\\n'), \\\"\\\\n            int inputs:useSpecularWorkflow = 0\\\\n            token outputs:surface\\\\n        }\\\\n    }\\\\n\\\");\\n}\\n\\nfunction buildTextures(textures) {\\n  var array = [];\\n\\n  for (var uuid in textures) {\\n    var texture = textures[uuid];\\n    array.push(buildTexture(texture));\\n  }\\n\\n  return \\\"def \\\\\\\"Textures\\\\\\\"\\\\n{\\\\n\\\".concat(array.join(''), \\\"\\\\n}\\\\n\\\\n\\\");\\n}\\n\\nfunction buildTexture(texture) {\\n  return \\\"\\\\n    def Shader \\\\\\\"Texture_\\\".concat(texture.id, \\\"\\\\\\\"\\\\n    {\\\\n        uniform token info:id = \\\\\\\"UsdUVTexture\\\\\\\"\\\\n        asset inputs:file = @textures/Texture_\\\").concat(texture.id, \\\".jpg@\\\\n        token inputs:wrapS = \\\\\\\"repeat\\\\\\\"\\\\n        token inputs:wrapT = \\\\\\\"repeat\\\\\\\"\\\\n        float outputs:r\\\\n        float outputs:g\\\\n        float outputs:b\\\\n        float3 outputs:rgb\\\\n    }\\\\n\\\");\\n}\\n\\nfunction buildColor(color) {\\n  return \\\"(\\\".concat(color.r, \\\", \\\").concat(color.g, \\\", \\\").concat(color.b, \\\")\\\");\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"prototype\",\"imgToU8\",\"image\",\"scale\",\"canvas\",\"context\",\"blob\",\"regeneratorRuntime\",\"async\",\"imgToU8$\",\"_context2\",\"prev\",\"next\",\"HTMLImageElement\",\"HTMLCanvasElement\",\"OffscreenCanvas\",\"ImageBitmap\",\"Math\",\"max\",\"width\",\"height\",\"document\",\"createElement\",\"min\",\"getContext\",\"drawImage\",\"awrap\",\"Promise\",\"resolve\",\"toBlob\",\"sent\",\"t0\",\"Uint8Array\",\"arrayBuffer\",\"t1\",\"abrupt\",\"stop\",\"buildMatrixRow\",\"array\",\"offset\",\"concat\",\"buildVector3Array\",\"attribute\",\"count\",\"undefined\",\"console\",\"warn\",\"Array\",\"fill\",\"join\",\"data\",\"push\",\"toPrecision\",\"PRECISION\",\"buildMaterials\",\"materials\",\"uuid\",\"material\",\"parameters\",\"map\",\"pad\",\"id\",\"buildColor\",\"color\",\"emissiveMap\",\"emissive\",\"getHex\",\"normalMap\",\"aoMap\",\"roughnessMap\",\"roughness\",\"metalnessMap\",\"metalness\",\"buildTextures\",\"textures\",\"texture\",\"r\",\"g\",\"b\",\"value\",\"USDZExporter\",\"_fflate\",\"instance\",\"TypeError\",\"parse\",\"scene\",\"output\",\"files\",\"filename\",\"file\",\"headerSize\",\"offsetMod64\",\"padLength\",\"padding\",\"parse$\",\"_context\",\"traverse\",\"object\",\"isMesh\",\"geometry\",\"name\",\"attributes\",\"position\",\"uv\",\"normal\",\"index\",\"matrixWorld\",\"elements\",\"transform\",\"define\",\"strToU8\",\"keys\",\"done\",\"extra\",\"zipSync\",\"level\"]\n}\n"]