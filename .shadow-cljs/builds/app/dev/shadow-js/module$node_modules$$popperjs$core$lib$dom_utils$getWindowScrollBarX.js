["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js"],"~:js","shadow$provide.module$node_modules$$popperjs$core$lib$dom_utils$getWindowScrollBarX=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(element){return(0,_getBoundingClientRect[\"default\"])((0,_getDocumentElement[\"default\"])(element)).left+(0,_getWindowScroll[\"default\"])(element).scrollLeft};var _getBoundingClientRect=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect\")),\n_getDocumentElement=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getDocumentElement\")),_getWindowScroll=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getWindowScroll\"))}","~:source","shadow$provide[\"module$node_modules$$popperjs$core$lib$dom_utils$getWindowScrollBarX\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getWindowScrollBarX;\n\nvar _getBoundingClientRect = _interopRequireDefault(require(\"./getBoundingClientRect.js\"));\n\nvar _getDocumentElement = _interopRequireDefault(require(\"./getDocumentElement.js\"));\n\nvar _getWindowScroll = _interopRequireDefault(require(\"./getWindowScroll.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return (0, _getBoundingClientRect[\"default\"])((0, _getDocumentElement[\"default\"])(element)).left + (0, _getWindowScroll[\"default\"])(element).scrollLeft;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$popperjs$core$lib$dom_utils$getWindowScroll","~$shadow.js","~$module$node_modules$$popperjs$core$lib$dom_utils$getBoundingClientRect","~$module$node_modules$$popperjs$core$lib$dom_utils$getDocumentElement"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1630917514076,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$popperjs$core$lib$dom_utils$getWindowScrollBarX.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,oEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAcjIC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAUAO,QAA4B,CAACC,OAAD,CAAU,CAQpC,MAAO,CAAC,CAAA,CAAGC,sBAAA,CAAuB,SAAvB,CAAJ,EAAuC,CAAC,CAAA,CAAGC,mBAAA,CAAoB,SAApB,CAAJ,EAAoCF,OAApC,CAAvC,CAAqFG,CAAAA,IAA5F,CAAmG,CAAC,CAAA,CAAGC,gBAAA,CAAiB,SAAjB,CAAJ,EAAiCJ,OAAjC,CAA0CK,CAAAA,UARzG,CARtC,KAAIJ,uBAAyBR,sBAAA,CAAuBH,OAAA,CAAQ,wEAAR,CAAvB,CAA7B;AAEIY,oBAAsBT,sBAAA,CAAuBH,OAAA,CAAQ,qEAAR,CAAvB,CAF1B,CAIIc,iBAAmBX,sBAAA,CAAuBH,OAAA,CAAQ,kEAAR,CAAvB,CAZ0G;\",\n\"sources\":[\"node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$popperjs$core$lib$dom_utils$getWindowScrollBarX\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = getWindowScrollBarX;\\n\\nvar _getBoundingClientRect = _interopRequireDefault(require(\\\"./getBoundingClientRect.js\\\"));\\n\\nvar _getDocumentElement = _interopRequireDefault(require(\\\"./getDocumentElement.js\\\"));\\n\\nvar _getWindowScroll = _interopRequireDefault(require(\\\"./getWindowScroll.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction getWindowScrollBarX(element) {\\n  // If <html> has a CSS width greater than the viewport, then this will be\\n  // incorrect for RTL.\\n  // Popper 1 is broken in this case and never had a bug report so let's assume\\n  // it's not an issue. I don't think anyone ever specifies width on <html>\\n  // anyway.\\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\\n  // this (e.g. Edge 2019, IE11, Safari)\\n  return (0, _getBoundingClientRect[\\\"default\\\"])((0, _getDocumentElement[\\\"default\\\"])(element)).left + (0, _getWindowScroll[\\\"default\\\"])(element).scrollLeft;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"getWindowScrollBarX\",\"element\",\"_getBoundingClientRect\",\"_getDocumentElement\",\"left\",\"_getWindowScroll\",\"scrollLeft\"]\n}\n"]