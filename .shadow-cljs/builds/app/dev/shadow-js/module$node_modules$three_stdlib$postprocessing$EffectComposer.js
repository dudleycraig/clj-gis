["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/postprocessing/EffectComposer.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$postprocessing$EffectComposer=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,\nprotoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.EffectComposer=void 0;var _defineProperty2=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$babel$runtime$helpers$esm$defineProperty\")),_three=require(\"module$node_modules$three$build$three_module\"),_CopyShader=require(\"module$node_modules$three_stdlib$shaders$CopyShader\"),_ShaderPass=require(\"module$node_modules$three_stdlib$postprocessing$ShaderPass\"),\n_MaskPass=require(\"module$node_modules$three_stdlib$postprocessing$MaskPass\");global=function(){function EffectComposer(renderer,renderTarget){if(!(this instanceof EffectComposer))throw new TypeError(\"Cannot call a class as a function\");(0,_defineProperty2[\"default\"])(this,\"renderer\",void 0);(0,_defineProperty2[\"default\"])(this,\"_pixelRatio\",void 0);(0,_defineProperty2[\"default\"])(this,\"_width\",void 0);(0,_defineProperty2[\"default\"])(this,\"_height\",void 0);(0,_defineProperty2[\"default\"])(this,\"renderTarget1\",\nvoid 0);(0,_defineProperty2[\"default\"])(this,\"renderTarget2\",void 0);(0,_defineProperty2[\"default\"])(this,\"writeBuffer\",void 0);(0,_defineProperty2[\"default\"])(this,\"readBuffer\",void 0);(0,_defineProperty2[\"default\"])(this,\"renderToScreen\",void 0);(0,_defineProperty2[\"default\"])(this,\"passes\",[]);(0,_defineProperty2[\"default\"])(this,\"copyPass\",void 0);(0,_defineProperty2[\"default\"])(this,\"clock\",void 0);this.renderer=renderer;if(void 0===renderTarget){renderTarget={minFilter:_three.LinearFilter,magFilter:_three.LinearFilter,\nformat:_three.RGBAFormat};var size=renderer.getSize(new _three.Vector2);this._pixelRatio=renderer.getPixelRatio();this._width=size.width;this._height=size.height;renderTarget=new _three.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,renderTarget);renderTarget.texture.name=\"EffectComposer.rt1\"}else this._pixelRatio=1,this._width=renderTarget.width,this._height=renderTarget.height;this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.renderTarget2.texture.name=\n\"EffectComposer.rt2\";this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.renderToScreen=!0;void 0===_CopyShader.CopyShader&&console.error(\"THREE.EffectComposer relies on CopyShader\");void 0===_ShaderPass.ShaderPass&&console.error(\"THREE.EffectComposer relies on ShaderPass\");this.copyPass=new _ShaderPass.ShaderPass(_CopyShader.CopyShader);this.clock=new _three.Clock}_createClass(EffectComposer,[{key:\"swapBuffers\",value:function(){var tmp=this.readBuffer;this.readBuffer=this.writeBuffer;\nthis.writeBuffer=tmp}},{key:\"addPass\",value:function(pass){this.passes.push(pass);pass.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:\"insertPass\",value:function(pass,index){this.passes.splice(index,0,pass);pass.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:\"removePass\",value:function(pass){pass=this.passes.indexOf(pass);-1!==pass&&this.passes.splice(pass,1)}},{key:\"isLastEnabledPass\",value:function(passIndex){for(passIndex+=1;passIndex<this.passes.length;passIndex++)if(this.passes[passIndex].enabled)return!1;\nreturn!0}},{key:\"render\",value:function(deltaTime){void 0===deltaTime&&(deltaTime=this.clock.getDelta());for(var currentRenderTarget=this.renderer.getRenderTarget(),maskActive=!1,il=this.passes.length,i=0;i<il;i++){var pass=this.passes[i];if(!1!==pass.enabled){pass.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i);pass.render(this.renderer,this.writeBuffer,this.readBuffer,deltaTime,maskActive);if(pass.needsSwap){if(maskActive){var context=this.renderer.getContext(),stencil=this.renderer.state.buffers.stencil;\nstencil.setFunc(context.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,deltaTime);stencil.setFunc(context.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==_MaskPass.MaskPass&&(pass instanceof _MaskPass.MaskPass?maskActive=!0:pass instanceof _MaskPass.ClearMaskPass&&(maskActive=!1))}}this.renderer.setRenderTarget(currentRenderTarget)}},{key:\"reset\",value:function(renderTarget){void 0===renderTarget&&(renderTarget=this.renderer.getSize(new _three.Vector2),\nthis._pixelRatio=this.renderer.getPixelRatio(),this._width=renderTarget.width,this._height=renderTarget.height,renderTarget=this.renderTarget1.clone(),renderTarget.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio));this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2}},{key:\"setSize\",value:function(width,height){this._width=width;this._height=\nheight;width=this._width*this._pixelRatio;height=this._height*this._pixelRatio;this.renderTarget1.setSize(width,height);this.renderTarget2.setSize(width,height);for(var i=0;i<this.passes.length;i++)this.passes[i].setSize(width,height)}},{key:\"setPixelRatio\",value:function(pixelRatio){this._pixelRatio=pixelRatio;this.setSize(this._width,this._height)}}]);return EffectComposer}();exports.EffectComposer=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$postprocessing$EffectComposer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EffectComposer = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/defineProperty\"));\n\nvar _three = require(\"three\");\n\nvar _CopyShader = require(\"../shaders/CopyShader.js\");\n\nvar _ShaderPass = require(\"./ShaderPass.js\");\n\nvar _MaskPass = require(\"./MaskPass.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EffectComposer =\n/*#__PURE__*/\nfunction () {\n  function EffectComposer(renderer, renderTarget) {\n    _classCallCheck(this, EffectComposer);\n\n    (0, _defineProperty2[\"default\"])(this, \"renderer\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_pixelRatio\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_width\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_height\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"renderTarget1\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"renderTarget2\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"writeBuffer\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"readBuffer\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"renderToScreen\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"passes\", []);\n    (0, _defineProperty2[\"default\"])(this, \"copyPass\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"clock\", void 0);\n    this.renderer = renderer;\n\n    if (renderTarget === undefined) {\n      var parameters = {\n        minFilter: _three.LinearFilter,\n        magFilter: _three.LinearFilter,\n        format: _three.RGBAFormat\n      };\n      var size = renderer.getSize(new _three.Vector2());\n      this._pixelRatio = renderer.getPixelRatio();\n      this._width = size.width;\n      this._height = size.height;\n      renderTarget = new _three.WebGLRenderTarget(this._width * this._pixelRatio, this._height * this._pixelRatio, parameters);\n      renderTarget.texture.name = 'EffectComposer.rt1';\n    } else {\n      this._pixelRatio = 1;\n      this._width = renderTarget.width;\n      this._height = renderTarget.height;\n    }\n\n    this.renderTarget1 = renderTarget;\n    this.renderTarget2 = renderTarget.clone();\n    this.renderTarget2.texture.name = 'EffectComposer.rt2';\n    this.writeBuffer = this.renderTarget1;\n    this.readBuffer = this.renderTarget2;\n    this.renderToScreen = true; // dependencies\n\n    if (_CopyShader.CopyShader === undefined) {\n      console.error('THREE.EffectComposer relies on CopyShader');\n    }\n\n    if (_ShaderPass.ShaderPass === undefined) {\n      console.error('THREE.EffectComposer relies on ShaderPass');\n    }\n\n    this.copyPass = new _ShaderPass.ShaderPass(_CopyShader.CopyShader);\n    this.clock = new _three.Clock();\n  }\n\n  _createClass(EffectComposer, [{\n    key: \"swapBuffers\",\n    value: function swapBuffers() {\n      var tmp = this.readBuffer;\n      this.readBuffer = this.writeBuffer;\n      this.writeBuffer = tmp;\n    }\n  }, {\n    key: \"addPass\",\n    value: function addPass(pass) {\n      this.passes.push(pass);\n      pass.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);\n    }\n  }, {\n    key: \"insertPass\",\n    value: function insertPass(pass, index) {\n      this.passes.splice(index, 0, pass);\n      pass.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);\n    }\n  }, {\n    key: \"removePass\",\n    value: function removePass(pass) {\n      var index = this.passes.indexOf(pass);\n\n      if (index !== -1) {\n        this.passes.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"isLastEnabledPass\",\n    value: function isLastEnabledPass(passIndex) {\n      for (var i = passIndex + 1; i < this.passes.length; i++) {\n        if (this.passes[i].enabled) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render(deltaTime) {\n      // deltaTime value is in seconds\n      if (deltaTime === undefined) {\n        deltaTime = this.clock.getDelta();\n      }\n\n      var currentRenderTarget = this.renderer.getRenderTarget();\n      var maskActive = false;\n      var il = this.passes.length;\n\n      for (var i = 0; i < il; i++) {\n        var pass = this.passes[i];\n        if (pass.enabled === false) continue;\n        pass.renderToScreen = this.renderToScreen && this.isLastEnabledPass(i);\n        pass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive);\n\n        if (pass.needsSwap) {\n          if (maskActive) {\n            var context = this.renderer.getContext();\n            var stencil = this.renderer.state.buffers.stencil; //context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n            stencil.setFunc(context.NOTEQUAL, 1, 0xffffffff);\n            this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime); //context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n            stencil.setFunc(context.EQUAL, 1, 0xffffffff);\n          }\n\n          this.swapBuffers();\n        }\n\n        if (_MaskPass.MaskPass !== undefined) {\n          if (pass instanceof _MaskPass.MaskPass) {\n            maskActive = true;\n          } else if (pass instanceof _MaskPass.ClearMaskPass) {\n            maskActive = false;\n          }\n        }\n      }\n\n      this.renderer.setRenderTarget(currentRenderTarget);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(renderTarget) {\n      if (renderTarget === undefined) {\n        var size = this.renderer.getSize(new _three.Vector2());\n        this._pixelRatio = this.renderer.getPixelRatio();\n        this._width = size.width;\n        this._height = size.height;\n        renderTarget = this.renderTarget1.clone();\n        renderTarget.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);\n      }\n\n      this.renderTarget1.dispose();\n      this.renderTarget2.dispose();\n      this.renderTarget1 = renderTarget;\n      this.renderTarget2 = renderTarget.clone();\n      this.writeBuffer = this.renderTarget1;\n      this.readBuffer = this.renderTarget2;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this._width = width;\n      this._height = height;\n      var effectiveWidth = this._width * this._pixelRatio;\n      var effectiveHeight = this._height * this._pixelRatio;\n      this.renderTarget1.setSize(effectiveWidth, effectiveHeight);\n      this.renderTarget2.setSize(effectiveWidth, effectiveHeight);\n\n      for (var i = 0; i < this.passes.length; i++) {\n        this.passes[i].setSize(effectiveWidth, effectiveHeight);\n      }\n    }\n  }, {\n    key: \"setPixelRatio\",\n    value: function setPixelRatio(pixelRatio) {\n      this._pixelRatio = pixelRatio;\n      this.setSize(this._width, this._height);\n    }\n  }]);\n\n  return EffectComposer;\n}();\n\nexports.EffectComposer = EffectComposer;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$shaders$CopyShader","~$shadow.js","~$module$node_modules$three_stdlib$postprocessing$ShaderPass","~$module$node_modules$three_stdlib$postprocessing$MaskPass","~$module$node_modules$$babel$runtime$helpers$esm$defineProperty"]],"~:properties",["^5",["renderer","copyPass","renderTarget2","key","renderTarget1","EffectComposer","__esModule","readBuffer","_width","name","configurable","value","enumerable","magFilter","writable","_height","clock","_pixelRatio","writeBuffer","minFilter","renderToScreen","format"]],"~:compiled-at",1630917515530,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$postprocessing$EffectComposer.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/postprocessing/EffectComposer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$postprocessing$EffectComposer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.EffectComposer = void 0;\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/defineProperty\\\"));\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _CopyShader = require(\\\"../shaders/CopyShader.js\\\");\\n\\nvar _ShaderPass = require(\\\"./ShaderPass.js\\\");\\n\\nvar _MaskPass = require(\\\"./MaskPass.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nvar EffectComposer =\\n/*#__PURE__*/\\nfunction () {\\n  function EffectComposer(renderer, renderTarget) {\\n    _classCallCheck(this, EffectComposer);\\n\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"renderer\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"_pixelRatio\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"_width\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"_height\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"renderTarget1\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"renderTarget2\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"writeBuffer\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"readBuffer\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"renderToScreen\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"passes\\\", []);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"copyPass\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"clock\\\", void 0);\\n    this.renderer = renderer;\\n\\n    if (renderTarget === undefined) {\\n      var parameters = {\\n        minFilter: _three.LinearFilter,\\n        magFilter: _three.LinearFilter,\\n        format: _three.RGBAFormat\\n      };\\n      var size = renderer.getSize(new _three.Vector2());\\n      this._pixelRatio = renderer.getPixelRatio();\\n      this._width = size.width;\\n      this._height = size.height;\\n      renderTarget = new _three.WebGLRenderTarget(this._width * this._pixelRatio, this._height * this._pixelRatio, parameters);\\n      renderTarget.texture.name = 'EffectComposer.rt1';\\n    } else {\\n      this._pixelRatio = 1;\\n      this._width = renderTarget.width;\\n      this._height = renderTarget.height;\\n    }\\n\\n    this.renderTarget1 = renderTarget;\\n    this.renderTarget2 = renderTarget.clone();\\n    this.renderTarget2.texture.name = 'EffectComposer.rt2';\\n    this.writeBuffer = this.renderTarget1;\\n    this.readBuffer = this.renderTarget2;\\n    this.renderToScreen = true; // dependencies\\n\\n    if (_CopyShader.CopyShader === undefined) {\\n      console.error('THREE.EffectComposer relies on CopyShader');\\n    }\\n\\n    if (_ShaderPass.ShaderPass === undefined) {\\n      console.error('THREE.EffectComposer relies on ShaderPass');\\n    }\\n\\n    this.copyPass = new _ShaderPass.ShaderPass(_CopyShader.CopyShader);\\n    this.clock = new _three.Clock();\\n  }\\n\\n  _createClass(EffectComposer, [{\\n    key: \\\"swapBuffers\\\",\\n    value: function swapBuffers() {\\n      var tmp = this.readBuffer;\\n      this.readBuffer = this.writeBuffer;\\n      this.writeBuffer = tmp;\\n    }\\n  }, {\\n    key: \\\"addPass\\\",\\n    value: function addPass(pass) {\\n      this.passes.push(pass);\\n      pass.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);\\n    }\\n  }, {\\n    key: \\\"insertPass\\\",\\n    value: function insertPass(pass, index) {\\n      this.passes.splice(index, 0, pass);\\n      pass.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);\\n    }\\n  }, {\\n    key: \\\"removePass\\\",\\n    value: function removePass(pass) {\\n      var index = this.passes.indexOf(pass);\\n\\n      if (index !== -1) {\\n        this.passes.splice(index, 1);\\n      }\\n    }\\n  }, {\\n    key: \\\"isLastEnabledPass\\\",\\n    value: function isLastEnabledPass(passIndex) {\\n      for (var i = passIndex + 1; i < this.passes.length; i++) {\\n        if (this.passes[i].enabled) {\\n          return false;\\n        }\\n      }\\n\\n      return true;\\n    }\\n  }, {\\n    key: \\\"render\\\",\\n    value: function render(deltaTime) {\\n      // deltaTime value is in seconds\\n      if (deltaTime === undefined) {\\n        deltaTime = this.clock.getDelta();\\n      }\\n\\n      var currentRenderTarget = this.renderer.getRenderTarget();\\n      var maskActive = false;\\n      var il = this.passes.length;\\n\\n      for (var i = 0; i < il; i++) {\\n        var pass = this.passes[i];\\n        if (pass.enabled === false) continue;\\n        pass.renderToScreen = this.renderToScreen && this.isLastEnabledPass(i);\\n        pass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive);\\n\\n        if (pass.needsSwap) {\\n          if (maskActive) {\\n            var context = this.renderer.getContext();\\n            var stencil = this.renderer.state.buffers.stencil; //context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\\n\\n            stencil.setFunc(context.NOTEQUAL, 1, 0xffffffff);\\n            this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime); //context.stencilFunc( context.EQUAL, 1, 0xffffffff );\\n\\n            stencil.setFunc(context.EQUAL, 1, 0xffffffff);\\n          }\\n\\n          this.swapBuffers();\\n        }\\n\\n        if (_MaskPass.MaskPass !== undefined) {\\n          if (pass instanceof _MaskPass.MaskPass) {\\n            maskActive = true;\\n          } else if (pass instanceof _MaskPass.ClearMaskPass) {\\n            maskActive = false;\\n          }\\n        }\\n      }\\n\\n      this.renderer.setRenderTarget(currentRenderTarget);\\n    }\\n  }, {\\n    key: \\\"reset\\\",\\n    value: function reset(renderTarget) {\\n      if (renderTarget === undefined) {\\n        var size = this.renderer.getSize(new _three.Vector2());\\n        this._pixelRatio = this.renderer.getPixelRatio();\\n        this._width = size.width;\\n        this._height = size.height;\\n        renderTarget = this.renderTarget1.clone();\\n        renderTarget.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);\\n      }\\n\\n      this.renderTarget1.dispose();\\n      this.renderTarget2.dispose();\\n      this.renderTarget1 = renderTarget;\\n      this.renderTarget2 = renderTarget.clone();\\n      this.writeBuffer = this.renderTarget1;\\n      this.readBuffer = this.renderTarget2;\\n    }\\n  }, {\\n    key: \\\"setSize\\\",\\n    value: function setSize(width, height) {\\n      this._width = width;\\n      this._height = height;\\n      var effectiveWidth = this._width * this._pixelRatio;\\n      var effectiveHeight = this._height * this._pixelRatio;\\n      this.renderTarget1.setSize(effectiveWidth, effectiveHeight);\\n      this.renderTarget2.setSize(effectiveWidth, effectiveHeight);\\n\\n      for (var i = 0; i < this.passes.length; i++) {\\n        this.passes[i].setSize(effectiveWidth, effectiveHeight);\\n      }\\n    }\\n  }, {\\n    key: \\\"setPixelRatio\\\",\\n    value: function setPixelRatio(pixelRatio) {\\n      this._pixelRatio = pixelRatio;\\n      this.setSize(this._width, this._height);\\n    }\\n  }]);\\n\\n  return EffectComposer;\\n}();\\n\\nexports.EffectComposer = EffectComposer;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"prototype\",\"value\",\"EffectComposer\",\"_defineProperty2\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_three\",\"_CopyShader\",\"_ShaderPass\",\"_MaskPass\",\"renderer\",\"renderTarget\",\"instance\",\"TypeError\",\"undefined\",\"parameters\",\"minFilter\",\"LinearFilter\",\"magFilter\",\"format\",\"RGBAFormat\",\"size\",\"getSize\",\"Vector2\",\"_pixelRatio\",\"getPixelRatio\",\"_width\",\"width\",\"_height\",\"height\",\"WebGLRenderTarget\",\"texture\",\"name\",\"renderTarget1\",\"renderTarget2\",\"clone\",\"writeBuffer\",\"readBuffer\",\"renderToScreen\",\"CopyShader\",\"console\",\"error\",\"ShaderPass\",\"copyPass\",\"clock\",\"Clock\",\"swapBuffers\",\"tmp\",\"addPass\",\"pass\",\"passes\",\"push\",\"setSize\",\"insertPass\",\"index\",\"splice\",\"removePass\",\"indexOf\",\"isLastEnabledPass\",\"passIndex\",\"enabled\",\"render\",\"deltaTime\",\"getDelta\",\"currentRenderTarget\",\"getRenderTarget\",\"maskActive\",\"il\",\"needsSwap\",\"context\",\"getContext\",\"stencil\",\"state\",\"buffers\",\"setFunc\",\"NOTEQUAL\",\"EQUAL\",\"MaskPass\",\"ClearMaskPass\",\"setRenderTarget\",\"reset\",\"dispose\",\"effectiveWidth\",\"effectiveHeight\",\"setPixelRatio\",\"pixelRatio\"]\n}\n"]