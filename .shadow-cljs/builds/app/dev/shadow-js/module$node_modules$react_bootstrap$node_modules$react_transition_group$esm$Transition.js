["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-bootstrap/node_modules/react-transition-group/esm/Transition.js"],"~:js","shadow$provide.module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$Transition=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}function noop(){}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=exports.EXITING=exports.ENTERED=exports.ENTERING=exports.EXITED=exports.UNMOUNTED=void 0;var _objectWithoutPropertiesLoose2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$esm$objectWithoutPropertiesLoose\")),\n_inheritsLoose2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$esm$inheritsLoose\")),_propTypes=_interopRequireDefault(require(\"module$node_modules$prop_types$index\")),_react=_interopRequireDefault(require(\"module$node_modules$react$index\")),_reactDom=_interopRequireDefault(require(\"module$node_modules$react_dom$index\")),_config=_interopRequireDefault(require(\"module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$config\")),_PropTypes=require(\"module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$utils$PropTypes\"),\n_TransitionGroupContext=_interopRequireDefault(require(\"module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$TransitionGroupContext\"));exports.UNMOUNTED=\"unmounted\";exports.EXITED=\"exited\";exports.ENTERING=\"entering\";exports.ENTERED=\"entered\";exports.EXITING=\"exiting\";global=function(_React$Component){function Transition(props,context){var _this=_React$Component.call(this,props,context)||this;context=context&&!context.isMounting?props.enter:props.appear;_this.appearStatus=null;\nprops[\"in\"]?context?(props=\"exited\",_this.appearStatus=\"entering\"):props=\"entered\":props=props.unmountOnExit||props.mountOnEnter?\"unmounted\":\"exited\";_this.state={status:props};_this.nextCallback=null;return _this}(0,_inheritsLoose2[\"default\"])(Transition,_React$Component);Transition.getDerivedStateFromProps=function(_ref,prevState){return _ref[\"in\"]&&\"unmounted\"===prevState.status?{status:\"exited\"}:null};var _proto=Transition.prototype;_proto.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)};\n_proto.componentDidUpdate=function(prevProps){var nextStatus=null;if(prevProps!==this.props)if(prevProps=this.state.status,this.props[\"in\"])\"entering\"!==prevProps&&\"entered\"!==prevProps&&(nextStatus=\"entering\");else if(\"entering\"===prevProps||\"entered\"===prevProps)nextStatus=\"exiting\";this.updateStatus(!1,nextStatus)};_proto.componentWillUnmount=function(){this.cancelNextCallback()};_proto.getTimeouts=function(){var timeout=this.props.timeout,enter,appear;var exit=enter=appear=timeout;null!=timeout&&\n\"number\"!==typeof timeout&&(exit=timeout.exit,enter=timeout.enter,appear=void 0!==timeout.appear?timeout.appear:enter);return{exit,enter,appear}};_proto.updateStatus=function(mounting,nextStatus){void 0===mounting&&(mounting=!1);null!==nextStatus?(this.cancelNextCallback(),\"entering\"===nextStatus?this.performEnter(mounting):this.performExit()):this.props.unmountOnExit&&\"exited\"===this.state.status&&this.setState({status:\"unmounted\"})};_proto.performEnter=function(mounting){var _this2=this,enter=this.props.enter,\nappearing=this.context?this.context.isMounting:mounting,_ref2=this.props.nodeRef?[appearing]:[_reactDom[\"default\"].findDOMNode(this),appearing],maybeNode=_ref2[0],maybeAppearing=_ref2[1];_ref2=this.getTimeouts();var enterTimeout=appearing?_ref2.appear:_ref2.enter;!mounting&&!enter||_config[\"default\"].disabled?this.safeSetState({status:\"entered\"},function(){_this2.props.onEntered(maybeNode)}):(this.props.onEnter(maybeNode,maybeAppearing),this.safeSetState({status:\"entering\"},function(){_this2.props.onEntering(maybeNode,\nmaybeAppearing);_this2.onTransitionEnd(enterTimeout,function(){_this2.safeSetState({status:\"entered\"},function(){_this2.props.onEntered(maybeNode,maybeAppearing)})})}))};_proto.performExit=function(){var _this3=this,exit=this.props.exit,timeouts=this.getTimeouts(),maybeNode=this.props.nodeRef?void 0:_reactDom[\"default\"].findDOMNode(this);!exit||_config[\"default\"].disabled?this.safeSetState({status:\"exited\"},function(){_this3.props.onExited(maybeNode)}):(this.props.onExit(maybeNode),this.safeSetState({status:\"exiting\"},\nfunction(){_this3.props.onExiting(maybeNode);_this3.onTransitionEnd(timeouts.exit,function(){_this3.safeSetState({status:\"exited\"},function(){_this3.props.onExited(maybeNode)})})}))};_proto.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)};_proto.safeSetState=function(nextState,callback){callback=this.setNextCallback(callback);this.setState(nextState,callback)};_proto.setNextCallback=function(callback){var _this4=this,active=!0;this.nextCallback=\nfunction(event){active&&(active=!1,_this4.nextCallback=null,callback(event))};this.nextCallback.cancel=function(){active=!1};return this.nextCallback};_proto.onTransitionEnd=function(timeout,handler){this.setNextCallback(handler);handler=this.props.nodeRef?this.props.nodeRef.current:_reactDom[\"default\"].findDOMNode(this);var doesNotHaveTimeoutOrListener=null==timeout&&!this.props.addEndListener;!handler||doesNotHaveTimeoutOrListener?setTimeout(this.nextCallback,0):(this.props.addEndListener&&(handler=\nthis.props.nodeRef?[this.nextCallback]:[handler,this.nextCallback],this.props.addEndListener(handler[0],handler[1])),null!=timeout&&setTimeout(this.nextCallback,timeout))};_proto.render=function(){var status=this.state.status;if(\"unmounted\"===status)return null;var _this$props=this.props,children=_this$props.children;_this$props=(0,_objectWithoutPropertiesLoose2[\"default\"])(_this$props,\"children in mountOnEnter unmountOnExit appear enter exit timeout addEndListener onEnter onEntering onEntered onExit onExiting onExited nodeRef\".split(\" \"));\nreturn _react[\"default\"].createElement(_TransitionGroupContext[\"default\"].Provider,{value:null},\"function\"===typeof children?children(status,_this$props):_react[\"default\"].cloneElement(_react[\"default\"].Children.only(children),_this$props))};return Transition}(_react[\"default\"].Component);global.contextType=_TransitionGroupContext[\"default\"];global.propTypes={nodeRef:_propTypes[\"default\"].shape({current:\"undefined\"===typeof Element?_propTypes[\"default\"].any:function(propValue,key,componentName,location,\npropFullName,secret){var value=propValue[key];return _propTypes[\"default\"].instanceOf(value&&\"ownerDocument\"in value?value.ownerDocument.defaultView.Element:Element)(propValue,key,componentName,location,propFullName,secret)}}),children:_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func.isRequired,_propTypes[\"default\"].element.isRequired]).isRequired,\"in\":_propTypes[\"default\"].bool,mountOnEnter:_propTypes[\"default\"].bool,unmountOnExit:_propTypes[\"default\"].bool,appear:_propTypes[\"default\"].bool,\nenter:_propTypes[\"default\"].bool,exit:_propTypes[\"default\"].bool,timeout:function(props){var pt=_PropTypes.timeoutsShape;props.addEndListener||(pt=pt.isRequired);for(var _len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];return pt.apply(void 0,[props].concat(args))},addEndListener:_propTypes[\"default\"].func,onEnter:_propTypes[\"default\"].func,onEntering:_propTypes[\"default\"].func,onEntered:_propTypes[\"default\"].func,onExit:_propTypes[\"default\"].func,\nonExiting:_propTypes[\"default\"].func,onExited:_propTypes[\"default\"].func};global.defaultProps={\"in\":!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:noop,onEntering:noop,onEntered:noop,onExit:noop,onExiting:noop,onExited:noop};global.UNMOUNTED=\"unmounted\";global.EXITED=\"exited\";global.ENTERING=\"entering\";global.ENTERED=\"entered\";global.EXITING=\"exiting\";exports[\"default\"]=global}","~:source","shadow$provide[\"module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$Transition\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nvar _TransitionGroupContext = _interopRequireDefault(require(\"./TransitionGroupContext\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2[\"default\"])(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props[\"in\"]) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref[\"in\"];\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props[\"in\"]) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [_reactDom[\"default\"].findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || _config[\"default\"].disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : _reactDom[\"default\"].findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || _config[\"default\"].disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom[\"default\"].findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props[\"in\"],\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      _react[\"default\"].createElement(_TransitionGroupContext[\"default\"].Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : _react[\"default\"].cloneElement(_react[\"default\"].Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(_react[\"default\"].Component);\n\nTransition.contextType = _TransitionGroupContext[\"default\"];\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: _propTypes[\"default\"].shape({\n    current: typeof Element === 'undefined' ? _propTypes[\"default\"].any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return _propTypes[\"default\"].instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func.isRequired, _propTypes[\"default\"].element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  \"in\": _propTypes[\"default\"].bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: _propTypes[\"default\"].bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: _propTypes[\"default\"].bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: _propTypes[\"default\"].bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: _propTypes[\"default\"].bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: _propTypes[\"default\"].bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: _propTypes[\"default\"].func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: _propTypes[\"default\"].func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: _propTypes[\"default\"].func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: _propTypes[\"default\"].func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: _propTypes[\"default\"].func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: _propTypes[\"default\"].func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: _propTypes[\"default\"].func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  \"in\": false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nvar _default = Transition;\nexports[\"default\"] = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$utils$PropTypes","~$module$node_modules$react_dom$index","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$config","~$module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$TransitionGroupContext","~$module$node_modules$$babel$runtime$helpers$esm$inheritsLoose","~$module$node_modules$$babel$runtime$helpers$esm$objectWithoutPropertiesLoose"]],"~:properties",["^5",["nodeRef","appear","EXITED","getDerivedStateFromProps","onExited","cancel","unmountOnExit","cancelNextCallback","safeSetState","updateStatus","performEnter","children","__esModule","EXITING","propTypes","appearStatus","value","addEndListener","setNextCallback","UNMOUNTED","onEntering","getTimeouts","status","timeout","onExit","componentDidUpdate","performExit","onEntered","current","contextType","componentDidMount","defaultProps","render","onExiting","state","exit","onTransitionEnd","componentWillUnmount","nextCallback","mountOnEnter","ENTERED","onEnter","ENTERING","enter"]],"~:compiled-at",1630917513980,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$Transition.js\",\n\"lineCount\":15,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-bootstrap/node_modules/react-transition-group/esm/Transition.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_bootstrap$node_modules$react_transition_group$esm$Transition\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\\n\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\"));\\n\\nvar _inheritsLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/inheritsLoose\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _reactDom = _interopRequireDefault(require(\\\"react-dom\\\"));\\n\\nvar _config = _interopRequireDefault(require(\\\"./config\\\"));\\n\\nvar _PropTypes = require(\\\"./utils/PropTypes\\\");\\n\\nvar _TransitionGroupContext = _interopRequireDefault(require(\\\"./TransitionGroupContext\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nvar UNMOUNTED = 'unmounted';\\nexports.UNMOUNTED = UNMOUNTED;\\nvar EXITED = 'exited';\\nexports.EXITED = EXITED;\\nvar ENTERING = 'entering';\\nexports.ENTERING = ENTERING;\\nvar ENTERED = 'entered';\\nexports.ENTERED = ENTERED;\\nvar EXITING = 'exiting';\\n/**\\n * The Transition component lets you describe a transition from one component\\n * state to another _over time_ with a simple declarative API. Most commonly\\n * it's used to animate the mounting and unmounting of a component, but can also\\n * be used to describe in-place transition states as well.\\n *\\n * ---\\n *\\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\\n * transitions in CSS, you'll probably want to use\\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\\n * instead. It inherits all the features of `Transition`, but contains\\n * additional features necessary to play nice with CSS transitions (hence the\\n * name of the component).\\n *\\n * ---\\n *\\n * By default the `Transition` component does not alter the behavior of the\\n * component it renders, it only tracks \\\"enter\\\" and \\\"exit\\\" states for the\\n * components. It's up to you to give meaning and effect to those states. For\\n * example we can add styles to a component when it enters or exits:\\n *\\n * ```jsx\\n * import { Transition } from 'react-transition-group';\\n *\\n * const duration = 300;\\n *\\n * const defaultStyle = {\\n *   transition: `opacity ${duration}ms ease-in-out`,\\n *   opacity: 0,\\n * }\\n *\\n * const transitionStyles = {\\n *   entering: { opacity: 1 },\\n *   entered:  { opacity: 1 },\\n *   exiting:  { opacity: 0 },\\n *   exited:  { opacity: 0 },\\n * };\\n *\\n * const Fade = ({ in: inProp }) => (\\n *   <Transition in={inProp} timeout={duration}>\\n *     {state => (\\n *       <div style={{\\n *         ...defaultStyle,\\n *         ...transitionStyles[state]\\n *       }}>\\n *         I'm a fade Transition!\\n *       </div>\\n *     )}\\n *   </Transition>\\n * );\\n * ```\\n *\\n * There are 4 main states a Transition can be in:\\n *  - `'entering'`\\n *  - `'entered'`\\n *  - `'exiting'`\\n *  - `'exited'`\\n *\\n * Transition state is toggled via the `in` prop. When `true` the component\\n * begins the \\\"Enter\\\" stage. During this stage, the component will shift from\\n * its current transition state, to `'entering'` for the duration of the\\n * transition and then to the `'entered'` stage once it's complete. Let's take\\n * the following example (we'll use the\\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\\n *\\n * ```jsx\\n * function App() {\\n *   const [inProp, setInProp] = useState(false);\\n *   return (\\n *     <div>\\n *       <Transition in={inProp} timeout={500}>\\n *         {state => (\\n *           // ...\\n *         )}\\n *       </Transition>\\n *       <button onClick={() => setInProp(true)}>\\n *         Click to Enter\\n *       </button>\\n *     </div>\\n *   );\\n * }\\n * ```\\n *\\n * When the button is clicked the component will shift to the `'entering'` state\\n * and stay there for 500ms (the value of `timeout`) before it finally switches\\n * to `'entered'`.\\n *\\n * When `in` is `false` the same thing happens except the state moves from\\n * `'exiting'` to `'exited'`.\\n */\\n\\nexports.EXITING = EXITING;\\n\\nvar Transition =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  (0, _inheritsLoose2[\\\"default\\\"])(Transition, _React$Component);\\n\\n  function Transition(props, context) {\\n    var _this;\\n\\n    _this = _React$Component.call(this, props, context) || this;\\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\\n\\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\\n    var initialStatus;\\n    _this.appearStatus = null;\\n\\n    if (props[\\\"in\\\"]) {\\n      if (appear) {\\n        initialStatus = EXITED;\\n        _this.appearStatus = ENTERING;\\n      } else {\\n        initialStatus = ENTERED;\\n      }\\n    } else {\\n      if (props.unmountOnExit || props.mountOnEnter) {\\n        initialStatus = UNMOUNTED;\\n      } else {\\n        initialStatus = EXITED;\\n      }\\n    }\\n\\n    _this.state = {\\n      status: initialStatus\\n    };\\n    _this.nextCallback = null;\\n    return _this;\\n  }\\n\\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\\n    var nextIn = _ref[\\\"in\\\"];\\n\\n    if (nextIn && prevState.status === UNMOUNTED) {\\n      return {\\n        status: EXITED\\n      };\\n    }\\n\\n    return null;\\n  } // getSnapshotBeforeUpdate(prevProps) {\\n  //   let nextStatus = null\\n  //   if (prevProps !== this.props) {\\n  //     const { status } = this.state\\n  //     if (this.props.in) {\\n  //       if (status !== ENTERING && status !== ENTERED) {\\n  //         nextStatus = ENTERING\\n  //       }\\n  //     } else {\\n  //       if (status === ENTERING || status === ENTERED) {\\n  //         nextStatus = EXITING\\n  //       }\\n  //     }\\n  //   }\\n  //   return { nextStatus }\\n  // }\\n  ;\\n\\n  var _proto = Transition.prototype;\\n\\n  _proto.componentDidMount = function componentDidMount() {\\n    this.updateStatus(true, this.appearStatus);\\n  };\\n\\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\\n    var nextStatus = null;\\n\\n    if (prevProps !== this.props) {\\n      var status = this.state.status;\\n\\n      if (this.props[\\\"in\\\"]) {\\n        if (status !== ENTERING && status !== ENTERED) {\\n          nextStatus = ENTERING;\\n        }\\n      } else {\\n        if (status === ENTERING || status === ENTERED) {\\n          nextStatus = EXITING;\\n        }\\n      }\\n    }\\n\\n    this.updateStatus(false, nextStatus);\\n  };\\n\\n  _proto.componentWillUnmount = function componentWillUnmount() {\\n    this.cancelNextCallback();\\n  };\\n\\n  _proto.getTimeouts = function getTimeouts() {\\n    var timeout = this.props.timeout;\\n    var exit, enter, appear;\\n    exit = enter = appear = timeout;\\n\\n    if (timeout != null && typeof timeout !== 'number') {\\n      exit = timeout.exit;\\n      enter = timeout.enter; // TODO: remove fallback for next major\\n\\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\\n    }\\n\\n    return {\\n      exit: exit,\\n      enter: enter,\\n      appear: appear\\n    };\\n  };\\n\\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\\n    if (mounting === void 0) {\\n      mounting = false;\\n    }\\n\\n    if (nextStatus !== null) {\\n      // nextStatus will always be ENTERING or EXITING.\\n      this.cancelNextCallback();\\n\\n      if (nextStatus === ENTERING) {\\n        this.performEnter(mounting);\\n      } else {\\n        this.performExit();\\n      }\\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\\n      this.setState({\\n        status: UNMOUNTED\\n      });\\n    }\\n  };\\n\\n  _proto.performEnter = function performEnter(mounting) {\\n    var _this2 = this;\\n\\n    var enter = this.props.enter;\\n    var appearing = this.context ? this.context.isMounting : mounting;\\n\\n    var _ref2 = this.props.nodeRef ? [appearing] : [_reactDom[\\\"default\\\"].findDOMNode(this), appearing],\\n        maybeNode = _ref2[0],\\n        maybeAppearing = _ref2[1];\\n\\n    var timeouts = this.getTimeouts();\\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\\n    // if we are mounting and running this it means appear _must_ be set\\n\\n    if (!mounting && !enter || _config[\\\"default\\\"].disabled) {\\n      this.safeSetState({\\n        status: ENTERED\\n      }, function () {\\n        _this2.props.onEntered(maybeNode);\\n      });\\n      return;\\n    }\\n\\n    this.props.onEnter(maybeNode, maybeAppearing);\\n    this.safeSetState({\\n      status: ENTERING\\n    }, function () {\\n      _this2.props.onEntering(maybeNode, maybeAppearing);\\n\\n      _this2.onTransitionEnd(enterTimeout, function () {\\n        _this2.safeSetState({\\n          status: ENTERED\\n        }, function () {\\n          _this2.props.onEntered(maybeNode, maybeAppearing);\\n        });\\n      });\\n    });\\n  };\\n\\n  _proto.performExit = function performExit() {\\n    var _this3 = this;\\n\\n    var exit = this.props.exit;\\n    var timeouts = this.getTimeouts();\\n    var maybeNode = this.props.nodeRef ? undefined : _reactDom[\\\"default\\\"].findDOMNode(this); // no exit animation skip right to EXITED\\n\\n    if (!exit || _config[\\\"default\\\"].disabled) {\\n      this.safeSetState({\\n        status: EXITED\\n      }, function () {\\n        _this3.props.onExited(maybeNode);\\n      });\\n      return;\\n    }\\n\\n    this.props.onExit(maybeNode);\\n    this.safeSetState({\\n      status: EXITING\\n    }, function () {\\n      _this3.props.onExiting(maybeNode);\\n\\n      _this3.onTransitionEnd(timeouts.exit, function () {\\n        _this3.safeSetState({\\n          status: EXITED\\n        }, function () {\\n          _this3.props.onExited(maybeNode);\\n        });\\n      });\\n    });\\n  };\\n\\n  _proto.cancelNextCallback = function cancelNextCallback() {\\n    if (this.nextCallback !== null) {\\n      this.nextCallback.cancel();\\n      this.nextCallback = null;\\n    }\\n  };\\n\\n  _proto.safeSetState = function safeSetState(nextState, callback) {\\n    // This shouldn't be necessary, but there are weird race conditions with\\n    // setState callbacks and unmounting in testing, so always make sure that\\n    // we can cancel any pending setState callbacks after we unmount.\\n    callback = this.setNextCallback(callback);\\n    this.setState(nextState, callback);\\n  };\\n\\n  _proto.setNextCallback = function setNextCallback(callback) {\\n    var _this4 = this;\\n\\n    var active = true;\\n\\n    this.nextCallback = function (event) {\\n      if (active) {\\n        active = false;\\n        _this4.nextCallback = null;\\n        callback(event);\\n      }\\n    };\\n\\n    this.nextCallback.cancel = function () {\\n      active = false;\\n    };\\n\\n    return this.nextCallback;\\n  };\\n\\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\\n    this.setNextCallback(handler);\\n    var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom[\\\"default\\\"].findDOMNode(this);\\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\\n\\n    if (!node || doesNotHaveTimeoutOrListener) {\\n      setTimeout(this.nextCallback, 0);\\n      return;\\n    }\\n\\n    if (this.props.addEndListener) {\\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\\n          maybeNode = _ref3[0],\\n          maybeNextCallback = _ref3[1];\\n\\n      this.props.addEndListener(maybeNode, maybeNextCallback);\\n    }\\n\\n    if (timeout != null) {\\n      setTimeout(this.nextCallback, timeout);\\n    }\\n  };\\n\\n  _proto.render = function render() {\\n    var status = this.state.status;\\n\\n    if (status === UNMOUNTED) {\\n      return null;\\n    }\\n\\n    var _this$props = this.props,\\n        children = _this$props.children,\\n        _in = _this$props[\\\"in\\\"],\\n        _mountOnEnter = _this$props.mountOnEnter,\\n        _unmountOnExit = _this$props.unmountOnExit,\\n        _appear = _this$props.appear,\\n        _enter = _this$props.enter,\\n        _exit = _this$props.exit,\\n        _timeout = _this$props.timeout,\\n        _addEndListener = _this$props.addEndListener,\\n        _onEnter = _this$props.onEnter,\\n        _onEntering = _this$props.onEntering,\\n        _onEntered = _this$props.onEntered,\\n        _onExit = _this$props.onExit,\\n        _onExiting = _this$props.onExiting,\\n        _onExited = _this$props.onExited,\\n        _nodeRef = _this$props.nodeRef,\\n        childProps = (0, _objectWithoutPropertiesLoose2[\\\"default\\\"])(_this$props, [\\\"children\\\", \\\"in\\\", \\\"mountOnEnter\\\", \\\"unmountOnExit\\\", \\\"appear\\\", \\\"enter\\\", \\\"exit\\\", \\\"timeout\\\", \\\"addEndListener\\\", \\\"onEnter\\\", \\\"onEntering\\\", \\\"onEntered\\\", \\\"onExit\\\", \\\"onExiting\\\", \\\"onExited\\\", \\\"nodeRef\\\"]);\\n    return (\\n      /*#__PURE__*/\\n      // allows for nested Transitions\\n      _react[\\\"default\\\"].createElement(_TransitionGroupContext[\\\"default\\\"].Provider, {\\n        value: null\\n      }, typeof children === 'function' ? children(status, childProps) : _react[\\\"default\\\"].cloneElement(_react[\\\"default\\\"].Children.only(children), childProps))\\n    );\\n  };\\n\\n  return Transition;\\n}(_react[\\\"default\\\"].Component);\\n\\nTransition.contextType = _TransitionGroupContext[\\\"default\\\"];\\nTransition.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? {\\n  /**\\n   * A React reference to DOM element that need to transition:\\n   * https://stackoverflow.com/a/51127130/4671932\\n   *\\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\\n   *      (e.g. `onEnter`) because user already has direct access to the node.\\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\\n   *     (see\\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\\n   */\\n  nodeRef: _propTypes[\\\"default\\\"].shape({\\n    current: typeof Element === 'undefined' ? _propTypes[\\\"default\\\"].any : function (propValue, key, componentName, location, propFullName, secret) {\\n      var value = propValue[key];\\n      return _propTypes[\\\"default\\\"].instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\\n    }\\n  }),\\n\\n  /**\\n   * A `function` child can be used instead of a React element. This function is\\n   * called with the current transition status (`'entering'`, `'entered'`,\\n   * `'exiting'`, `'exited'`), which can be used to apply context\\n   * specific props to a component.\\n   *\\n   * ```jsx\\n   * <Transition in={this.state.in} timeout={150}>\\n   *   {state => (\\n   *     <MyComponent className={`fade fade-${state}`} />\\n   *   )}\\n   * </Transition>\\n   * ```\\n   */\\n  children: _propTypes[\\\"default\\\"].oneOfType([_propTypes[\\\"default\\\"].func.isRequired, _propTypes[\\\"default\\\"].element.isRequired]).isRequired,\\n\\n  /**\\n   * Show the component; triggers the enter or exit states\\n   */\\n  \\\"in\\\": _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * By default the child component is mounted immediately along with\\n   * the parent `Transition` component. If you want to \\\"lazy mount\\\" the component on the\\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\\n   * mounted, even on \\\"exited\\\", unless you also specify `unmountOnExit`.\\n   */\\n  mountOnEnter: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * By default the child component stays mounted after it reaches the `'exited'` state.\\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\\n   */\\n  unmountOnExit: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * By default the child component does not perform the enter transition when\\n   * it first mounts, regardless of the value of `in`. If you want this\\n   * behavior, set both `appear` and `in` to `true`.\\n   *\\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\\n   * > only adds an additional enter transition. However, in the\\n   * > `<CSSTransition>` component that first enter transition does result in\\n   * > additional `.appear-*` classes, that way you can choose to style it\\n   * > differently.\\n   */\\n  appear: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * Enable or disable enter transitions.\\n   */\\n  enter: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * Enable or disable exit transitions.\\n   */\\n  exit: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * The duration of the transition, in milliseconds.\\n   * Required unless `addEndListener` is provided.\\n   *\\n   * You may specify a single timeout for all transitions:\\n   *\\n   * ```jsx\\n   * timeout={500}\\n   * ```\\n   *\\n   * or individually:\\n   *\\n   * ```jsx\\n   * timeout={{\\n   *  appear: 500,\\n   *  enter: 300,\\n   *  exit: 500,\\n   * }}\\n   * ```\\n   *\\n   * - `appear` defaults to the value of `enter`\\n   * - `enter` defaults to `0`\\n   * - `exit` defaults to `0`\\n   *\\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\\n   */\\n  timeout: function timeout(props) {\\n    var pt = _PropTypes.timeoutsShape;\\n    if (!props.addEndListener) pt = pt.isRequired;\\n\\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n      args[_key - 1] = arguments[_key];\\n    }\\n\\n    return pt.apply(void 0, [props].concat(args));\\n  },\\n\\n  /**\\n   * Add a custom transition end trigger. Called with the transitioning\\n   * DOM node and a `done` callback. Allows for more fine grained transition end\\n   * logic. Timeouts are still used as a fallback if provided.\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\\n   *\\n   * ```jsx\\n   * addEndListener={(node, done) => {\\n   *   // use the css transitionend event to mark the finish of a transition\\n   *   node.addEventListener('transitionend', done, false);\\n   * }}\\n   * ```\\n   */\\n  addEndListener: _propTypes[\\\"default\\\"].func,\\n\\n  /**\\n   * Callback fired before the \\\"entering\\\" status is applied. An extra parameter\\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\\n   *\\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\\n   */\\n  onEnter: _propTypes[\\\"default\\\"].func,\\n\\n  /**\\n   * Callback fired after the \\\"entering\\\" status is applied. An extra parameter\\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\\n   *\\n   * @type Function(node: HtmlElement, isAppearing: bool)\\n   */\\n  onEntering: _propTypes[\\\"default\\\"].func,\\n\\n  /**\\n   * Callback fired after the \\\"entered\\\" status is applied. An extra parameter\\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\\n   *\\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\\n   */\\n  onEntered: _propTypes[\\\"default\\\"].func,\\n\\n  /**\\n   * Callback fired before the \\\"exiting\\\" status is applied.\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\\n   *\\n   * @type Function(node: HtmlElement) -> void\\n   */\\n  onExit: _propTypes[\\\"default\\\"].func,\\n\\n  /**\\n   * Callback fired after the \\\"exiting\\\" status is applied.\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\\n   *\\n   * @type Function(node: HtmlElement) -> void\\n   */\\n  onExiting: _propTypes[\\\"default\\\"].func,\\n\\n  /**\\n   * Callback fired after the \\\"exited\\\" status is applied.\\n   *\\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\\n   *\\n   * @type Function(node: HtmlElement) -> void\\n   */\\n  onExited: _propTypes[\\\"default\\\"].func\\n} : {}; // Name the function so it is clearer in the documentation\\n\\nfunction noop() {}\\n\\nTransition.defaultProps = {\\n  \\\"in\\\": false,\\n  mountOnEnter: false,\\n  unmountOnExit: false,\\n  appear: false,\\n  enter: true,\\n  exit: true,\\n  onEnter: noop,\\n  onEntering: noop,\\n  onEntered: noop,\\n  onExit: noop,\\n  onExiting: noop,\\n  onExited: noop\\n};\\nTransition.UNMOUNTED = UNMOUNTED;\\nTransition.EXITED = EXITED;\\nTransition.ENTERING = ENTERING;\\nTransition.ENTERED = ENTERED;\\nTransition.EXITING = EXITING;\\nvar _default = Transition;\\nexports[\\\"default\\\"] = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"noop\",\"Object\",\"defineProperty\",\"value\",\"EXITING\",\"ENTERED\",\"ENTERING\",\"EXITED\",\"UNMOUNTED\",\"_objectWithoutPropertiesLoose2\",\"_inheritsLoose2\",\"_propTypes\",\"_react\",\"_reactDom\",\"_config\",\"_PropTypes\",\"_TransitionGroupContext\",\"Transition\",\"_React$Component\",\"props\",\"context\",\"_this\",\"call\",\"appear\",\"isMounting\",\"enter\",\"appearStatus\",\"initialStatus\",\"unmountOnExit\",\"mountOnEnter\",\"state\",\"status\",\"nextCallback\",\"getDerivedStateFromProps\",\"Transition.getDerivedStateFromProps\",\"_ref\",\"prevState\",\"nextIn\",\"_proto\",\"prototype\",\"componentDidMount\",\"_proto.componentDidMount\",\"updateStatus\",\"componentDidUpdate\",\"_proto.componentDidUpdate\",\"prevProps\",\"nextStatus\",\"componentWillUnmount\",\"_proto.componentWillUnmount\",\"cancelNextCallback\",\"getTimeouts\",\"_proto.getTimeouts\",\"timeout\",\"exit\",\"undefined\",\"_proto.updateStatus\",\"mounting\",\"performEnter\",\"performExit\",\"setState\",\"_proto.performEnter\",\"_this2\",\"appearing\",\"_ref2\",\"nodeRef\",\"findDOMNode\",\"maybeNode\",\"maybeAppearing\",\"timeouts\",\"enterTimeout\",\"disabled\",\"safeSetState\",\"onEntered\",\"onEnter\",\"onEntering\",\"onTransitionEnd\",\"_proto.performExit\",\"_this3\",\"onExited\",\"onExit\",\"onExiting\",\"_proto.cancelNextCallback\",\"cancel\",\"_proto.safeSetState\",\"nextState\",\"callback\",\"setNextCallback\",\"_proto.setNextCallback\",\"_this4\",\"active\",\"this.nextCallback\",\"event\",\"this.nextCallback.cancel\",\"_proto.onTransitionEnd\",\"handler\",\"node\",\"current\",\"doesNotHaveTimeoutOrListener\",\"addEndListener\",\"setTimeout\",\"_ref3\",\"maybeNextCallback\",\"render\",\"_proto.render\",\"_this$props\",\"children\",\"childProps\",\"createElement\",\"Provider\",\"cloneElement\",\"Children\",\"only\",\"Component\",\"contextType\",\"propTypes\",\"shape\",\"Element\",\"any\",\"propValue\",\"key\",\"componentName\",\"location\",\"propFullName\",\"secret\",\"instanceOf\",\"ownerDocument\",\"defaultView\",\"oneOfType\",\"func\",\"isRequired\",\"element\",\"bool\",\"pt\",\"timeoutsShape\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"apply\",\"concat\",\"defaultProps\"]\n}\n"]