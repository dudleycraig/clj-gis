["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/geometries/ConvexGeometry.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$geometries$ConvexGeometry=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||\nObject.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,\np){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.ConvexGeometry=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_ConvexHull=require(\"module$node_modules$three_stdlib$math$ConvexHull\");global=function(_BufferGeometry){function ConvexGeometry(points){if(!(this instanceof ConvexGeometry))throw new TypeError(\"Cannot call a class as a function\");var _this=_getPrototypeOf(ConvexGeometry).call(this);\nif(!_this||\"object\"!==_typeof(_this)&&\"function\"!==typeof _this){if(void 0===this)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");_this=this}var vertices=[],normals=[];void 0===_ConvexHull.ConvexHull&&console.error(\"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull\");points=(new _ConvexHull.ConvexHull).setFromPoints(points).faces;for(var i=0;i<points.length;i++){var face=points[i],edge=face.edge;do{var point=edge.head().point;vertices.push(point.x,\npoint.y,point.z);normals.push(face.normal.x,face.normal.y,face.normal.z);edge=edge.next}while(edge!==face.edge)}_this.setAttribute(\"position\",new _three.Float32BufferAttribute(vertices,3));_this.setAttribute(\"normal\",new _three.Float32BufferAttribute(normals,3));return _this}_inherits(ConvexGeometry,_BufferGeometry);return ConvexGeometry}(_three.BufferGeometry);exports.ConvexGeometry=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$geometries$ConvexGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConvexGeometry = void 0;\n\nvar _three = require(\"three\");\n\nvar _ConvexHull = require(\"../math/ConvexHull.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ConvexGeometry =\n/*#__PURE__*/\nfunction (_BufferGeometry) {\n  _inherits(ConvexGeometry, _BufferGeometry);\n\n  function ConvexGeometry(points) {\n    var _this;\n\n    _classCallCheck(this, ConvexGeometry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConvexGeometry).call(this)); // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    if (_ConvexHull.ConvexHull === undefined) {\n      console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\n    }\n\n    var convexHull = new _ConvexHull.ConvexHull().setFromPoints(points); // generate vertices and normals\n\n    var faces = convexHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge; // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    } // build geometry\n\n\n    _this.setAttribute('position', new _three.Float32BufferAttribute(vertices, 3));\n\n    _this.setAttribute('normal', new _three.Float32BufferAttribute(normals, 3));\n\n    return _this;\n  }\n\n  return ConvexGeometry;\n}(_three.BufferGeometry);\n\nexports.ConvexGeometry = ConvexGeometry;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$math$ConvexHull","~$shadow.js"]],"~:properties",["^5",["prototype","__esModule","configurable","value","writable","ConvexGeometry","__proto__","constructor"]],"~:compiled-at",1630917515100,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$geometries$ConvexGeometry.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYvHC,QAASA,QAAO,CAACC,YAAD,CAAM,CAA6ED,OAAA,CAArD,UAAtB,GAAI,MAAOE,OAAX,EAA+D,QAA/D,GAAoC,MAAOA,OAAOC,CAAAA,QAAlD,CAAqFH,QAAgB,CAACC,GAAD,CAAM,CAAE,MAAO,OAAOA,IAAhB,CAA3G,CAAsJD,QAAgB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAyB,UAAzB,GAAO,MAAOC,OAAd,EAAuCD,GAAIG,CAAAA,WAA3C,GAA2DF,MAA3D,EAAqED,GAArE,GAA6EC,MAAOG,CAAAA,SAApF,CAAgG,QAAhG,CAA2G,MAAOJ,IAA3H,CAAqI,OAAOD,QAAA,CAAQC,YAAR,CAA1T,CAQtBK,QAASA,gBAAe,CAACC,UAAD,CAAI,CAAED,eAAA,CAAkBE,MAAOC,CAAAA,cAAP,CAAwBD,MAAOE,CAAAA,cAA/B,CAAgDJ,QAAwB,CAACC,CAAD,CAAI,CAAE,MAAOA,EAAEI,CAAAA,SAAT;AAAsBH,MAAOE,CAAAA,cAAP,CAAsBH,CAAtB,CAAxB,CAAqD,OAAOD,gBAAA,CAAgBC,UAAhB,CAA5J,CAE5BK,QAASA,UAAS,CAACC,QAAD,CAAWC,UAAX,CAAuB,CAAE,GAA0B,UAA1B,GAAI,MAAOA,WAAX,EAAuD,IAAvD,GAAwCA,UAAxC,CAA+D,KAAM,KAAIC,SAAJ,CAAc,oDAAd,CAAN,CAA6EF,QAASR,CAAAA,SAAT,CAAqBG,MAAOQ,CAAAA,MAAP,CAAcF,UAAd,EAA4BA,UAAWT,CAAAA,SAAvC,CAAkD,CAAED,YAAa,CAAEa,MAAOJ,QAAT,CAAmBK,SAAU,CAAA,CAA7B,CAAmCC,aAAc,CAAA,CAAjD,CAAf,CAAlD,CAAiIL,WAAJ,EAAgBM,eAAA,CAAgBP,QAAhB,CAA0BC,UAA1B,CAAhT,CAEzCM,QAASA,gBAAe,CAACb,UAAD,CAAIc,UAAJ,CAAO,CAAED,eAAA,CAAkBZ,MAAOC,CAAAA,cAAzB,EAA2CW,QAAwB,CAACb,CAAD;AAAIc,CAAJ,CAAO,CAAEd,CAAEI,CAAAA,SAAF,CAAcU,CAAG,OAAOd,EAA1B,CAAgC,OAAOa,gBAAA,CAAgBb,UAAhB,CAAmBc,UAAnB,CAAnH,CArB/Bb,MAAOc,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CkB,MAAO,CAAA,CADoC,CAA7C,CAGAlB,QAAQwB,CAAAA,cAAR,CAAyB,IAAK,EAE9B,KAAIC,OAAS3B,OAAA,CAAQ,8CAAR,CAAb,CAEI4B,YAAc5B,OAAA,CAAQ,kDAAR,CAgBd0B,OAAAA,CAEJ,QAAS,CAACG,eAAD,CAAkB,CAGzBH,QAASA,eAAc,CAACI,MAAD,CAAS,CAjBgB,GAAI,EAoBlCC,IApBkC,WAoB5BL,eApB4B,CAAJ,CAA0C,KAAM,KAAIR,SAAJ,CAAc,mCAAd,CAAN,CAsB/C,IAAA,MAAAT,eAAA,CAAgBiB,cAAhB,CAAgCM,CAAAA,IAAhC,CAAqC,IAArC,CApBK;GAAIA,CAAAA,KAAJ,EAA+B,QAA/B,GAAa7B,OAAA,CAAQ6B,KAAR,CAAb,EAA2D,UAA3D,GAA2C,MAAOA,MAAlD,CAAA,CAEV,GAAa,IAAK,EAAlB,GAF0GC,IAE1G,CAAuB,KAAM,KAAIC,cAAJ,CAAmB,2DAAnB,CAAN,CAAyF,KAAA,CAFND,IAAhG,CAsB9C,IAAIE,SAAW,EAAf,CACIC,QAAU,EAEiBC,KAAAA,EAA/B,GAAIT,WAAYU,CAAAA,UAAhB,EACEC,OAAQC,CAAAA,KAAR,CAAc,uEAAd,CAKEC,OAAAA,CAF0CC,CAA7B,IAAId,WAAYU,CAAAA,UAAaI,EAAAA,aAA7BC,CAA2Cb,MAA3Ca,CAEMF,CAAAA,KAEvB,KAAK,IAAIG,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,MAAMI,CAAAA,MAA1B,CAAkCD,CAAA,EAAlC,CAAuC,CACrC,IAAIE,KAAOL,MAAA,CAAMG,CAAN,CAAX,CACIG,KAAOD,IAAKC,CAAAA,IAEhB,GAAG,CACD,IAAIC,MAAQD,IAAKE,CAAAA,IAAL,EAAYD,CAAAA,KACxBb,SAASe,CAAAA,IAAT,CAAcF,KAAMG,CAAAA,CAApB;AAAuBH,KAAMI,CAAAA,CAA7B,CAAgCJ,KAAMK,CAAAA,CAAtC,CACAjB,QAAQc,CAAAA,IAAR,CAAaJ,IAAKQ,CAAAA,MAAOH,CAAAA,CAAzB,CAA4BL,IAAKQ,CAAAA,MAAOF,CAAAA,CAAxC,CAA2CN,IAAKQ,CAAAA,MAAOD,CAAAA,CAAvD,CACAN,KAAA,CAAOA,IAAKQ,CAAAA,IAJX,CAAH,MAKSR,IALT,GAKkBD,IAAKC,CAAAA,IALvB,CAJqC,CAavCS,KAAMC,CAAAA,YAAN,CAAmB,UAAnB,CAA+B,IAAI9B,MAAO+B,CAAAA,sBAAX,CAAkCvB,QAAlC,CAA4C,CAA5C,CAA/B,CAEAqB,MAAMC,CAAAA,YAAN,CAAmB,QAAnB,CAA6B,IAAI9B,MAAO+B,CAAAA,sBAAX,CAAkCtB,OAAlC,CAA2C,CAA3C,CAA7B,CAEA,OAAOoB,MAnCuB,CAFhCzC,SAAA,CAAUW,cAAV,CAA0BG,eAA1B,CAwCA,OAAOH,eAzCkB,CAA3B,CA0CEC,MAAOgC,CAAAA,cA1CT,CA4CAzD,QAAQwB,CAAAA,cAAR,CAAyBA,MAxE8F;\",\n\"sources\":[\"node_modules/three-stdlib/geometries/ConvexGeometry.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$geometries$ConvexGeometry\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ConvexGeometry = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _ConvexHull = require(\\\"../math/ConvexHull.js\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\nvar ConvexGeometry =\\n/*#__PURE__*/\\nfunction (_BufferGeometry) {\\n  _inherits(ConvexGeometry, _BufferGeometry);\\n\\n  function ConvexGeometry(points) {\\n    var _this;\\n\\n    _classCallCheck(this, ConvexGeometry);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConvexGeometry).call(this)); // buffers\\n\\n    var vertices = [];\\n    var normals = [];\\n\\n    if (_ConvexHull.ConvexHull === undefined) {\\n      console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\\n    }\\n\\n    var convexHull = new _ConvexHull.ConvexHull().setFromPoints(points); // generate vertices and normals\\n\\n    var faces = convexHull.faces;\\n\\n    for (var i = 0; i < faces.length; i++) {\\n      var face = faces[i];\\n      var edge = face.edge; // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\\n\\n      do {\\n        var point = edge.head().point;\\n        vertices.push(point.x, point.y, point.z);\\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\\n        edge = edge.next;\\n      } while (edge !== face.edge);\\n    } // build geometry\\n\\n\\n    _this.setAttribute('position', new _three.Float32BufferAttribute(vertices, 3));\\n\\n    _this.setAttribute('normal', new _three.Float32BufferAttribute(normals, 3));\\n\\n    return _this;\\n  }\\n\\n  return ConvexGeometry;\\n}(_three.BufferGeometry);\\n\\nexports.ConvexGeometry = ConvexGeometry;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_getPrototypeOf\",\"o\",\"Object\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"writable\",\"configurable\",\"_setPrototypeOf\",\"p\",\"defineProperty\",\"ConvexGeometry\",\"_three\",\"_ConvexHull\",\"_BufferGeometry\",\"points\",\"instance\",\"call\",\"self\",\"ReferenceError\",\"vertices\",\"normals\",\"undefined\",\"ConvexHull\",\"console\",\"error\",\"faces\",\"setFromPoints\",\"convexHull\",\"i\",\"length\",\"face\",\"edge\",\"point\",\"head\",\"push\",\"x\",\"y\",\"z\",\"normal\",\"next\",\"_this\",\"setAttribute\",\"Float32BufferAttribute\",\"BufferGeometry\"]\n}\n"]