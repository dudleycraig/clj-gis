["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js"],"~:js","shadow$provide.module$node_modules$$popperjs$core$lib$dom_utils$getViewportRect=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(element){var win=(0,_getWindow[\"default\"])(element),html=(0,_getDocumentElement[\"default\"])(element);win=win.visualViewport;var width=html.clientWidth;html=html.clientHeight;var x=0,y=0;win&&(width=win.width,html=win.height,\n/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(x=win.offsetLeft,y=win.offsetTop));return{width,height:html,x:x+(0,_getWindowScrollBarX[\"default\"])(element),y}};var _getWindow=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getWindow\")),_getDocumentElement=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getDocumentElement\")),_getWindowScrollBarX=_interopRequireDefault(require(\"module$node_modules$$popperjs$core$lib$dom_utils$getWindowScrollBarX\"))}","~:source","shadow$provide[\"module$node_modules$$popperjs$core$lib$dom_utils$getViewportRect\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getViewportRect;\n\nvar _getWindow = _interopRequireDefault(require(\"./getWindow.js\"));\n\nvar _getDocumentElement = _interopRequireDefault(require(\"./getDocumentElement.js\"));\n\nvar _getWindowScrollBarX = _interopRequireDefault(require(\"./getWindowScrollBarX.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getViewportRect(element) {\n  var win = (0, _getWindow[\"default\"])(element);\n  var html = (0, _getDocumentElement[\"default\"])(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + (0, _getWindowScrollBarX[\"default\"])(element),\n    y: y\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$popperjs$core$lib$dom_utils$getWindowScrollBarX","~$module$node_modules$$popperjs$core$lib$dom_utils$getWindow","~$module$node_modules$$popperjs$core$lib$dom_utils$getDocumentElement"]],"~:properties",["^5",["width","height","x","__esModule","value","y"]],"~:compiled-at",1630917514077,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$popperjs$core$lib$dom_utils$getViewportRect.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc7HC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAUAO,QAAwB,CAACC,OAAD,CAAU,CAChC,IAAIC,IAAM,CAAC,CAAA,CAAGC,UAAA,CAAW,SAAX,CAAJ,EAA2BF,OAA3B,CAAV,CACIG,KAAO,CAAC,CAAA,CAAGC,mBAAA,CAAoB,SAApB,CAAJ,EAAoCJ,OAApC,CACPK,IAAAA,CAAiBJ,GAAII,CAAAA,cACzB,KAAIC,MAAQH,IAAKI,CAAAA,WACbC,KAAAA,CAASL,IAAKM,CAAAA,YAClB,KAAIC,EAAI,CAAR,CACIC,EAAI,CAMJN,IAAJ,GACEC,KAUA,CAVQD,GAAeC,CAAAA,KAUvB,CATAE,IASA,CATSH,GAAeG,CAAAA,MASxB;AAAK,gCAAiCI,CAAAA,IAAjC,CAAsCC,SAAUC,CAAAA,SAAhD,CAAL,GACEJ,CACA,CADIL,GAAeU,CAAAA,UACnB,CAAAJ,CAAA,CAAIN,GAAeW,CAAAA,SAFrB,CAXF,CAiBA,OAAO,CACEV,KADF,CAELE,OAAQA,IAFH,CAGLE,EAAGA,CAAHA,CAAO,CAAC,CAAA,CAAGO,oBAAA,CAAqB,SAArB,CAAJ,EAAqCjB,OAArC,CAHF,CAIFW,CAJE,CA9ByB,CARlC,KAAIT,WAAaT,sBAAA,CAAuBH,OAAA,CAAQ,4DAAR,CAAvB,CAAjB,CAEIc,oBAAsBX,sBAAA,CAAuBH,OAAA,CAAQ,qEAAR,CAAvB,CAF1B,CAII2B,qBAAuBxB,sBAAA,CAAuBH,OAAA,CAAQ,sEAAR,CAAvB,CAZkG;\",\n\"sources\":[\"node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$popperjs$core$lib$dom_utils$getViewportRect\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = getViewportRect;\\n\\nvar _getWindow = _interopRequireDefault(require(\\\"./getWindow.js\\\"));\\n\\nvar _getDocumentElement = _interopRequireDefault(require(\\\"./getDocumentElement.js\\\"));\\n\\nvar _getWindowScrollBarX = _interopRequireDefault(require(\\\"./getWindowScrollBarX.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction getViewportRect(element) {\\n  var win = (0, _getWindow[\\\"default\\\"])(element);\\n  var html = (0, _getDocumentElement[\\\"default\\\"])(element);\\n  var visualViewport = win.visualViewport;\\n  var width = html.clientWidth;\\n  var height = html.clientHeight;\\n  var x = 0;\\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\\n  // can be obscured underneath it.\\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\\n  // if it isn't open, so if this isn't available, the popper will be detected\\n  // to overflow the bottom of the screen too early.\\n\\n  if (visualViewport) {\\n    width = visualViewport.width;\\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\\n    // errors due to floating point numbers, so we need to check precision.\\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\\n    // Feature detection fails in mobile emulation mode in Chrome.\\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\\n    // 0.001\\n    // Fallback here: \\\"Not Safari\\\" userAgent\\n\\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\\n      x = visualViewport.offsetLeft;\\n      y = visualViewport.offsetTop;\\n    }\\n  }\\n\\n  return {\\n    width: width,\\n    height: height,\\n    x: x + (0, _getWindowScrollBarX[\\\"default\\\"])(element),\\n    y: y\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"getViewportRect\",\"element\",\"win\",\"_getWindow\",\"html\",\"_getDocumentElement\",\"visualViewport\",\"width\",\"clientWidth\",\"height\",\"clientHeight\",\"x\",\"y\",\"test\",\"navigator\",\"userAgent\",\"offsetLeft\",\"offsetTop\",\"_getWindowScrollBarX\"]\n}\n"]