["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-mesh-bvh/src/Utils/RayIntersectTriUtilities.js"],"~:js","shadow$provide.module$node_modules$three_mesh_bvh$src$Utils$RayIntersectTriUtilities=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.intersectTris=function(mesh,geo,raycaster,ray,offset,count,intersections){var i=offset;for(offset+=count;i<offset;i++)(0,_ThreeIntersectionUtilities.intersectTri)(mesh,geo,raycaster,ray,i,intersections)};exports.intersectClosestTri=function(mesh,geo,raycaster,ray,offset,count){var dist=Infinity,res=null,i=offset;\nfor(offset+=count;i<offset;i++)(count=(0,_ThreeIntersectionUtilities.intersectTri)(mesh,geo,raycaster,ray,i))&&count.distance<dist&&(res=count,dist=count.distance);return res};var _ThreeIntersectionUtilities=require(\"module$node_modules$three_mesh_bvh$src$Utils$ThreeIntersectionUtilities\")}","~:source","shadow$provide[\"module$node_modules$three_mesh_bvh$src$Utils$RayIntersectTriUtilities\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intersectTris = intersectTris;\nexports.intersectClosestTri = intersectClosestTri;\n\nvar _ThreeIntersectionUtilities = require(\"./ThreeIntersectionUtilities.js\");\n\nfunction intersectTris(mesh, geo, raycaster, ray, offset, count, intersections) {\n  for (var i = offset, end = offset + count; i < end; i++) {\n    (0, _ThreeIntersectionUtilities.intersectTri)(mesh, geo, raycaster, ray, i, intersections);\n  }\n}\n\nfunction intersectClosestTri(mesh, geo, raycaster, ray, offset, count) {\n  var dist = Infinity;\n  var res = null;\n\n  for (var i = offset, end = offset + count; i < end; i++) {\n    var intersection = (0, _ThreeIntersectionUtilities.intersectTri)(mesh, geo, raycaster, ray, i);\n\n    if (intersection && intersection.distance < dist) {\n      res = intersection;\n      dist = intersection.distance;\n    }\n  }\n\n  return res;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three_mesh_bvh$src$Utils$ThreeIntersectionUtilities"]],"~:properties",["^5",["__esModule","intersectClosestTri","intersectTris","value"]],"~:compiled-at",1630917516181,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_mesh_bvh$src$Utils$RayIntersectTriUtilities.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAKAA,QAAsB,CAACC,IAAD,CAAOC,GAAP,CAAYC,SAAZ,CAAuBC,GAAvB,CAA4BC,MAA5B,CAAoCC,KAApC,CAA2CC,aAA3C,CAA0D,CAAA,IACrEC,EAAIH,MAAb,KAA2BA,MAA3B,EAAoCC,KAApC,CAA2CE,CAA3C,CAA+CC,MAA/C,CAAoDD,CAAA,EAApD,CACE,CAAC,CAAA,CAAGE,2BAA4BC,CAAAA,YAAhC,EAA8CV,IAA9C,CAAoDC,GAApD,CAAyDC,SAAzD,CAAoEC,GAApE,CAAyEI,CAAzE,CAA4ED,aAA5E,CAF4E,CAJhFX,QAAQgB,CAAAA,mBAAR,CAUAA,QAA4B,CAACX,IAAD,CAAOC,GAAP,CAAYC,SAAZ,CAAuBC,GAAvB,CAA4BC,MAA5B,CAAoCC,KAApC,CAA2C,CACrE,IAAIO,KAAOC,QAAX,CACIC,IAAM,IADV,CAGSP,EAAIH,MAAb;IAA2BA,MAA3B,EAAoCC,KAApC,CAA2CE,CAA3C,CAA+CC,MAA/C,CAAoDD,CAAA,EAApD,CAGE,CAFIQ,KAEJ,CAFmB,CAAC,CAAA,CAAGN,2BAA4BC,CAAAA,YAAhC,EAA8CV,IAA9C,CAAoDC,GAApD,CAAyDC,SAAzD,CAAoEC,GAApE,CAAyEI,CAAzE,CAEnB,GAAoBQ,KAAaC,CAAAA,QAAjC,CAA4CJ,IAA5C,GACEE,GACA,CADMC,KACN,CAAAH,IAAA,CAAOG,KAAaC,CAAAA,QAFtB,CAMF,OAAOF,IAb8D,CARvE,KAAIL,4BAA8BhB,OAAA,CAAQ,yEAAR,CATgG;\",\n\"sources\":[\"node_modules/three-mesh-bvh/src/Utils/RayIntersectTriUtilities.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_mesh_bvh$src$Utils$RayIntersectTriUtilities\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.intersectTris = intersectTris;\\nexports.intersectClosestTri = intersectClosestTri;\\n\\nvar _ThreeIntersectionUtilities = require(\\\"./ThreeIntersectionUtilities.js\\\");\\n\\nfunction intersectTris(mesh, geo, raycaster, ray, offset, count, intersections) {\\n  for (var i = offset, end = offset + count; i < end; i++) {\\n    (0, _ThreeIntersectionUtilities.intersectTri)(mesh, geo, raycaster, ray, i, intersections);\\n  }\\n}\\n\\nfunction intersectClosestTri(mesh, geo, raycaster, ray, offset, count) {\\n  var dist = Infinity;\\n  var res = null;\\n\\n  for (var i = offset, end = offset + count; i < end; i++) {\\n    var intersection = (0, _ThreeIntersectionUtilities.intersectTri)(mesh, geo, raycaster, ray, i);\\n\\n    if (intersection && intersection.distance < dist) {\\n      res = intersection;\\n      dist = intersection.distance;\\n    }\\n  }\\n\\n  return res;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"intersectTris\",\"mesh\",\"geo\",\"raycaster\",\"ray\",\"offset\",\"count\",\"intersections\",\"i\",\"end\",\"_ThreeIntersectionUtilities\",\"intersectTri\",\"intersectClosestTri\",\"dist\",\"Infinity\",\"res\",\"intersection\",\"distance\"]\n}\n"]