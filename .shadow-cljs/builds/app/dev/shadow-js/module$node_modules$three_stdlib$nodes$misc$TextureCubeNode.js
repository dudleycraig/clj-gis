["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/misc/TextureCubeNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$misc$TextureCubeNode=function(global,require,module,exports){function TextureCubeNode(value,uv,bias){_TempNode.TempNode.call(this,\"v4\");this.value=value;this.radianceNode=new _TextureCubeUVNode.TextureCubeUVNode(this.value,uv||new _ReflectNode.ReflectNode(_ReflectNode.ReflectNode.VECTOR),bias);this.irradianceNode=new _TextureCubeUVNode.TextureCubeUVNode(this.value,new _NormalNode.NormalNode(_NormalNode.NormalNode.WORLD),(new _FloatNode.FloatNode(1)).setReadonly(!0))}\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.TextureCubeNode=TextureCubeNode;var _TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\"),_FloatNode=require(\"module$node_modules$three_stdlib$nodes$inputs$FloatNode\"),_TextureCubeUVNode=require(\"module$node_modules$three_stdlib$nodes$misc$TextureCubeUVNode\"),_ReflectNode=require(\"module$node_modules$three_stdlib$nodes$accessors$ReflectNode\"),_NormalNode=require(\"module$node_modules$three_stdlib$nodes$accessors$NormalNode\");\nTextureCubeNode.prototype=Object.create(_TempNode.TempNode.prototype);TextureCubeNode.prototype.constructor=TextureCubeNode;TextureCubeNode.prototype.nodeType=\"TextureCube\";TextureCubeNode.prototype.generate=function(builder,output){if(builder.isShader(\"fragment\"))return builder.require(\"irradiance\"),builder.context.bias&&builder.context.bias.setTexture(this.value),(\"irradiance\"===builder.slot?this.irradianceNode:this.radianceNode).build(builder,output);console.warn(\"THREE.TextureCubeNode is not compatible with \"+\nbuilder.shader+\" shader.\");return builder.format(\"vec4( 0.0 )\",this.getType(builder),output)};TextureCubeNode.prototype.copy=function(source){_TempNode.TempNode.prototype.copy.call(this,source);this.value=source.value;return this};TextureCubeNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.value=this.value.toJSON(meta).uuid);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$misc$TextureCubeNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextureCubeNode = TextureCubeNode;\n\nvar _TempNode = require(\"../core/TempNode.js\");\n\nvar _FloatNode = require(\"../inputs/FloatNode.js\");\n\nvar _TextureCubeUVNode = require(\"./TextureCubeUVNode.js\");\n\nvar _ReflectNode = require(\"../accessors/ReflectNode.js\");\n\nvar _NormalNode = require(\"../accessors/NormalNode.js\");\n\nfunction TextureCubeNode(value, uv, bias) {\n  _TempNode.TempNode.call(this, 'v4');\n\n  this.value = value;\n  this.radianceNode = new _TextureCubeUVNode.TextureCubeUVNode(this.value, uv || new _ReflectNode.ReflectNode(_ReflectNode.ReflectNode.VECTOR), // bias should be replaced in builder.context in build process\n  bias);\n  this.irradianceNode = new _TextureCubeUVNode.TextureCubeUVNode(this.value, new _NormalNode.NormalNode(_NormalNode.NormalNode.WORLD), new _FloatNode.FloatNode(1).setReadonly(true));\n}\n\nTextureCubeNode.prototype = Object.create(_TempNode.TempNode.prototype);\nTextureCubeNode.prototype.constructor = TextureCubeNode;\nTextureCubeNode.prototype.nodeType = 'TextureCube';\n\nTextureCubeNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    builder.require('irradiance');\n\n    if (builder.context.bias) {\n      builder.context.bias.setTexture(this.value);\n    }\n\n    var scopeNode = builder.slot === 'irradiance' ? this.irradianceNode : this.radianceNode;\n    return scopeNode.build(builder, output);\n  } else {\n    console.warn('THREE.TextureCubeNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\n  }\n};\n\nTextureCubeNode.prototype.copy = function (source) {\n  _TempNode.TempNode.prototype.copy.call(this, source);\n\n  this.value = source.value;\n  return this;\n};\n\nTextureCubeNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three_stdlib$nodes$accessors$NormalNode","~$module$node_modules$three_stdlib$nodes$accessors$ReflectNode","~$shadow.js","~$module$node_modules$three_stdlib$nodes$inputs$FloatNode","~$module$node_modules$three_stdlib$nodes$core$TempNode","~$module$node_modules$three_stdlib$nodes$misc$TextureCubeUVNode"]],"~:properties",["^5",["copy","radianceNode","prototype","__esModule","generate","nodeType","irradianceNode","value","TextureCubeNode","constructor","toJSON"]],"~:compiled-at",1630917515215,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$misc$TextureCubeNode.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/misc/TextureCubeNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$misc$TextureCubeNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.TextureCubeNode = TextureCubeNode;\\n\\nvar _TempNode = require(\\\"../core/TempNode.js\\\");\\n\\nvar _FloatNode = require(\\\"../inputs/FloatNode.js\\\");\\n\\nvar _TextureCubeUVNode = require(\\\"./TextureCubeUVNode.js\\\");\\n\\nvar _ReflectNode = require(\\\"../accessors/ReflectNode.js\\\");\\n\\nvar _NormalNode = require(\\\"../accessors/NormalNode.js\\\");\\n\\nfunction TextureCubeNode(value, uv, bias) {\\n  _TempNode.TempNode.call(this, 'v4');\\n\\n  this.value = value;\\n  this.radianceNode = new _TextureCubeUVNode.TextureCubeUVNode(this.value, uv || new _ReflectNode.ReflectNode(_ReflectNode.ReflectNode.VECTOR), // bias should be replaced in builder.context in build process\\n  bias);\\n  this.irradianceNode = new _TextureCubeUVNode.TextureCubeUVNode(this.value, new _NormalNode.NormalNode(_NormalNode.NormalNode.WORLD), new _FloatNode.FloatNode(1).setReadonly(true));\\n}\\n\\nTextureCubeNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nTextureCubeNode.prototype.constructor = TextureCubeNode;\\nTextureCubeNode.prototype.nodeType = 'TextureCube';\\n\\nTextureCubeNode.prototype.generate = function (builder, output) {\\n  if (builder.isShader('fragment')) {\\n    builder.require('irradiance');\\n\\n    if (builder.context.bias) {\\n      builder.context.bias.setTexture(this.value);\\n    }\\n\\n    var scopeNode = builder.slot === 'irradiance' ? this.irradianceNode : this.radianceNode;\\n    return scopeNode.build(builder, output);\\n  } else {\\n    console.warn('THREE.TextureCubeNode is not compatible with ' + builder.shader + ' shader.');\\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\\n  }\\n};\\n\\nTextureCubeNode.prototype.copy = function (source) {\\n  _TempNode.TempNode.prototype.copy.call(this, source);\\n\\n  this.value = source.value;\\n  return this;\\n};\\n\\nTextureCubeNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.value = this.value.toJSON(meta).uuid;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"TextureCubeNode\",\"value\",\"uv\",\"bias\",\"_TempNode\",\"TempNode\",\"call\",\"radianceNode\",\"_TextureCubeUVNode\",\"TextureCubeUVNode\",\"_ReflectNode\",\"ReflectNode\",\"VECTOR\",\"irradianceNode\",\"_NormalNode\",\"NormalNode\",\"WORLD\",\"setReadonly\",\"_FloatNode\",\"FloatNode\",\"Object\",\"defineProperty\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"generate\",\"TextureCubeNode.prototype.generate\",\"builder\",\"output\",\"isShader\",\"context\",\"setTexture\",\"build\",\"scopeNode\",\"slot\",\"console\",\"warn\",\"shader\",\"format\",\"getType\",\"copy\",\"TextureCubeNode.prototype.copy\",\"source\",\"toJSON\",\"TextureCubeNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\",\"uuid\"]\n}\n"]