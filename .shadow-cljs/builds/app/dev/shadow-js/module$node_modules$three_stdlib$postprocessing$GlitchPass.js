["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/postprocessing/GlitchPass.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$postprocessing$GlitchPass=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.GlitchPass=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_Pass=require(\"module$node_modules$three_stdlib$postprocessing$Pass\"),_DigitalGlitch=require(\"module$node_modules$three_stdlib$shaders$DigitalGlitch\");global=function(dt_size){void 0===_DigitalGlitch.DigitalGlitch&&console.error(\"THREE.GlitchPass relies on DigitalGlitch\");\nvar shader=_DigitalGlitch.DigitalGlitch;this.uniforms=_three.UniformsUtils.clone(shader.uniforms);void 0==dt_size&&(dt_size=64);this.uniforms.tDisp.value=this.generateHeightmap(dt_size);this.material=new _three.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader});this.fsQuad=new _Pass.FullScreenQuad(this.material);this.goWild=!1;this.curF=0;this.generateTrigger()};exports.GlitchPass=global;global.prototype=Object.assign(Object.create(_Pass.Pass.prototype),\n{constructor:global,render:function(renderer,writeBuffer,readBuffer){this.uniforms.tDiffuse.value=readBuffer.texture;this.uniforms.seed.value=Math.random();this.uniforms.byp.value=0;0==this.curF%this.randX||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=_three.MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=_three.MathUtils.randFloat(-1,1),this.uniforms.seed_y.value=_three.MathUtils.randFloat(-1,1),this.uniforms.distortion_x.value=_three.MathUtils.randFloat(0,\n1),this.uniforms.distortion_y.value=_three.MathUtils.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=_three.MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=_three.MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=_three.MathUtils.randFloat(0,1),this.uniforms.seed_x.value=_three.MathUtils.randFloat(-.3,.3),this.uniforms.seed_y.value=_three.MathUtils.randFloat(-.3,\n.3)):0==this.goWild&&(this.uniforms.byp.value=1);this.curF++;this.renderToScreen?renderer.setRenderTarget(null):(renderer.setRenderTarget(writeBuffer),this.clear&&renderer.clear());this.fsQuad.render(renderer)},generateTrigger:function(){this.randX=_three.MathUtils.randInt(120,240)},generateHeightmap:function(dt_size){for(var data_arr=new Float32Array(dt_size*dt_size*3),length=dt_size*dt_size,i=0;i<length;i++){var val=_three.MathUtils.randFloat(0,1);data_arr[3*i]=val;data_arr[3*i+1]=val;data_arr[3*\ni+2]=val}return new _three.DataTexture(data_arr,dt_size,dt_size,_three.RGBFormat,_three.FloatType)}})}","~:source","shadow$provide[\"module$node_modules$three_stdlib$postprocessing$GlitchPass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GlitchPass = void 0;\n\nvar _three = require(\"three\");\n\nvar _Pass = require(\"./Pass.js\");\n\nvar _DigitalGlitch = require(\"../shaders/DigitalGlitch.js\");\n\nvar GlitchPass = function GlitchPass(dt_size) {\n  if (_DigitalGlitch.DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n  var shader = _DigitalGlitch.DigitalGlitch;\n  this.uniforms = _three.UniformsUtils.clone(shader.uniforms);\n  if (dt_size == undefined) dt_size = 64;\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n  this.material = new _three.ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n  this.fsQuad = new _Pass.FullScreenQuad(this.material);\n  this.goWild = false;\n  this.curF = 0;\n  this.generateTrigger();\n};\n\nexports.GlitchPass = GlitchPass;\nGlitchPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\n  constructor: GlitchPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n\n    this.uniforms['byp'].value = 0;\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = _three.MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = _three.MathUtils.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = _three.MathUtils.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = _three.MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = _three.MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = _three.MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = _three.MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = _three.MathUtils.randFloat(0, 1);\n      this.uniforms['seed_x'].value = _three.MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = _three.MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n\n    this.curF++;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  generateTrigger: function generateTrigger() {\n    this.randX = _three.MathUtils.randInt(120, 240);\n  },\n  generateHeightmap: function generateHeightmap(dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n\n    for (var i = 0; i < length; i++) {\n      var val = _three.MathUtils.randFloat(0, 1);\n\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n\n    return new _three.DataTexture(data_arr, dt_size, dt_size, _three.RGBFormat, _three.FloatType);\n  }\n});\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$shaders$DigitalGlitch","~$shadow.js","~$module$node_modules$three_stdlib$postprocessing$Pass"]],"~:properties",["^5",["fragmentShader","generateHeightmap","prototype","__esModule","GlitchPass","vertexShader","value","fsQuad","generateTrigger","randX","curF","goWild","render","uniforms","constructor","material"]],"~:compiled-at",1630917515480,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$postprocessing$GlitchPass.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/postprocessing/GlitchPass.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$postprocessing$GlitchPass\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.GlitchPass = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _Pass = require(\\\"./Pass.js\\\");\\n\\nvar _DigitalGlitch = require(\\\"../shaders/DigitalGlitch.js\\\");\\n\\nvar GlitchPass = function GlitchPass(dt_size) {\\n  if (_DigitalGlitch.DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\\n  var shader = _DigitalGlitch.DigitalGlitch;\\n  this.uniforms = _three.UniformsUtils.clone(shader.uniforms);\\n  if (dt_size == undefined) dt_size = 64;\\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\\n  this.material = new _three.ShaderMaterial({\\n    uniforms: this.uniforms,\\n    vertexShader: shader.vertexShader,\\n    fragmentShader: shader.fragmentShader\\n  });\\n  this.fsQuad = new _Pass.FullScreenQuad(this.material);\\n  this.goWild = false;\\n  this.curF = 0;\\n  this.generateTrigger();\\n};\\n\\nexports.GlitchPass = GlitchPass;\\nGlitchPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\\n  constructor: GlitchPass,\\n  render: function render(renderer, writeBuffer, readBuffer\\n  /*, deltaTime, maskActive */\\n  ) {\\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\\n    this.uniforms['seed'].value = Math.random(); //default seeding\\n\\n    this.uniforms['byp'].value = 0;\\n\\n    if (this.curF % this.randX == 0 || this.goWild == true) {\\n      this.uniforms['amount'].value = Math.random() / 30;\\n      this.uniforms['angle'].value = _three.MathUtils.randFloat(-Math.PI, Math.PI);\\n      this.uniforms['seed_x'].value = _three.MathUtils.randFloat(-1, 1);\\n      this.uniforms['seed_y'].value = _three.MathUtils.randFloat(-1, 1);\\n      this.uniforms['distortion_x'].value = _three.MathUtils.randFloat(0, 1);\\n      this.uniforms['distortion_y'].value = _three.MathUtils.randFloat(0, 1);\\n      this.curF = 0;\\n      this.generateTrigger();\\n    } else if (this.curF % this.randX < this.randX / 5) {\\n      this.uniforms['amount'].value = Math.random() / 90;\\n      this.uniforms['angle'].value = _three.MathUtils.randFloat(-Math.PI, Math.PI);\\n      this.uniforms['distortion_x'].value = _three.MathUtils.randFloat(0, 1);\\n      this.uniforms['distortion_y'].value = _three.MathUtils.randFloat(0, 1);\\n      this.uniforms['seed_x'].value = _three.MathUtils.randFloat(-0.3, 0.3);\\n      this.uniforms['seed_y'].value = _three.MathUtils.randFloat(-0.3, 0.3);\\n    } else if (this.goWild == false) {\\n      this.uniforms['byp'].value = 1;\\n    }\\n\\n    this.curF++;\\n\\n    if (this.renderToScreen) {\\n      renderer.setRenderTarget(null);\\n      this.fsQuad.render(renderer);\\n    } else {\\n      renderer.setRenderTarget(writeBuffer);\\n      if (this.clear) renderer.clear();\\n      this.fsQuad.render(renderer);\\n    }\\n  },\\n  generateTrigger: function generateTrigger() {\\n    this.randX = _three.MathUtils.randInt(120, 240);\\n  },\\n  generateHeightmap: function generateHeightmap(dt_size) {\\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\\n    var length = dt_size * dt_size;\\n\\n    for (var i = 0; i < length; i++) {\\n      var val = _three.MathUtils.randFloat(0, 1);\\n\\n      data_arr[i * 3 + 0] = val;\\n      data_arr[i * 3 + 1] = val;\\n      data_arr[i * 3 + 2] = val;\\n    }\\n\\n    return new _three.DataTexture(data_arr, dt_size, dt_size, _three.RGBFormat, _three.FloatType);\\n  }\\n});\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"GlitchPass\",\"_three\",\"_Pass\",\"_DigitalGlitch\",\"dt_size\",\"undefined\",\"DigitalGlitch\",\"console\",\"error\",\"shader\",\"uniforms\",\"UniformsUtils\",\"clone\",\"generateHeightmap\",\"material\",\"ShaderMaterial\",\"vertexShader\",\"fragmentShader\",\"fsQuad\",\"FullScreenQuad\",\"goWild\",\"curF\",\"generateTrigger\",\"prototype\",\"assign\",\"create\",\"Pass\",\"constructor\",\"render\",\"renderer\",\"writeBuffer\",\"readBuffer\",\"texture\",\"Math\",\"random\",\"randX\",\"MathUtils\",\"randFloat\",\"PI\",\"renderToScreen\",\"setRenderTarget\",\"clear\",\"randInt\",\"data_arr\",\"Float32Array\",\"length\",\"i\",\"val\",\"DataTexture\",\"RGBFormat\",\"FloatType\"]\n}\n"]