["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/math/Lut.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$math$Lut=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.Lut=exports.ColorMapKeywords=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),Lut=function(colormap,numberofcolors){this.lut=[];this.setColorMap(colormap,numberofcolors);return this};exports.Lut=Lut;Lut.prototype={constructor:Lut,lut:[],map:[],n:256,minV:0,maxV:1,set:function(value){value instanceof Lut&&this.copy(value);\nreturn this},setMin:function(min){this.minV=min;return this},setMax:function(max){this.maxV=max;return this},setColorMap:function(colormap,numberofcolors){this.map=ColorMapKeywords[colormap]||ColorMapKeywords.rainbow;this.n=numberofcolors||32;colormap=1/this.n;for(numberofcolors=this.lut.length=0;1>=numberofcolors;numberofcolors+=colormap)for(var j=0;j<this.map.length-1;j++)if(numberofcolors>=this.map[j][0]&&numberofcolors<this.map[j+1][0]){var min=this.map[j][0],max=this.map[j+1][0],minColor=new _three.Color(this.map[j][1]),\nmaxColor=new _three.Color(this.map[j+1][1]);min=minColor.lerp(maxColor,(numberofcolors-min)/(max-min));this.lut.push(min)}return this},copy:function(lut){this.lut=lut.lut;this.map=lut.map;this.n=lut.n;this.minV=lut.minV;this.maxV=lut.maxV;return this},getColor:function(alpha){alpha<=this.minV?alpha=this.minV:alpha>=this.maxV&&(alpha=this.maxV);alpha=(alpha-this.minV)/(this.maxV-this.minV);alpha=Math.round(alpha*this.n);alpha==this.n?--alpha:alpha;return this.lut[alpha]},addColorMap:function(colormapName,\narrayOfColors){ColorMapKeywords[colormapName]=arrayOfColors},createCanvas:function(){var canvas=document.createElement(\"canvas\");canvas.width=1;canvas.height=this.n;this.updateCanvas(canvas);return canvas},updateCanvas:function(canvas){for(var ctx=canvas.getContext(\"2d\",{alpha:!1}),imageData=ctx.getImageData(0,0,1,this.n),data=imageData.data,k=0,step=1/this.n,i=1;0<=i;i-=step)for(var j=this.map.length-1;0<=j;j--)if(i<this.map[j][0]&&i>=this.map[j-1][0]){var min=this.map[j-1][0],max=this.map[j][0],\nminColor=new _three.Color(this.map[j-1][1]),maxColor=new _three.Color(this.map[j][1]);min=minColor.lerp(maxColor,(i-min)/(max-min));data[4*k]=Math.round(255*min.r);data[4*k+1]=Math.round(255*min.g);data[4*k+2]=Math.round(255*min.b);data[4*k+3]=255;k+=1}ctx.putImageData(imageData,0,0);return canvas}};var ColorMapKeywords={rainbow:[[0,255],[.2,65535],[.5,65280],[.8,16776960],[1,16711680]],cooltowarm:[[0,3952322],[.2,10206463],[.5,14474460],[.8,16163717],[1,11797542]],blackbody:[[0,0],[.2,7864320],[.5,\n15086080],[.8,16776960],[1,16777215]],grayscale:[[0,0],[.2,4210752],[.5,8355712],[.8,12566463],[1,16777215]]};exports.ColorMapKeywords=ColorMapKeywords}","~:source","shadow$provide[\"module$node_modules$three_stdlib$math$Lut\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lut = exports.ColorMapKeywords = void 0;\n\nvar _three = require(\"three\");\n\nvar Lut = function Lut(colormap, numberofcolors) {\n  this.lut = [];\n  this.setColorMap(colormap, numberofcolors);\n  return this;\n};\n\nexports.Lut = Lut;\nLut.prototype = {\n  constructor: Lut,\n  lut: [],\n  map: [],\n  n: 256,\n  minV: 0,\n  maxV: 1,\n  set: function set(value) {\n    if (value instanceof Lut) {\n      this.copy(value);\n    }\n\n    return this;\n  },\n  setMin: function setMin(min) {\n    this.minV = min;\n    return this;\n  },\n  setMax: function setMax(max) {\n    this.maxV = max;\n    return this;\n  },\n  setColorMap: function setColorMap(colormap, numberofcolors) {\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\n    this.n = numberofcolors || 32;\n    var step = 1.0 / this.n;\n    this.lut.length = 0;\n\n    for (var i = 0; i <= 1; i += step) {\n      for (var j = 0; j < this.map.length - 1; j++) {\n        if (i >= this.map[j][0] && i < this.map[j + 1][0]) {\n          var min = this.map[j][0];\n          var max = this.map[j + 1][0];\n          var minColor = new _three.Color(this.map[j][1]);\n          var maxColor = new _three.Color(this.map[j + 1][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          this.lut.push(color);\n        }\n      }\n    }\n\n    return this;\n  },\n  copy: function copy(lut) {\n    this.lut = lut.lut;\n    this.map = lut.map;\n    this.n = lut.n;\n    this.minV = lut.minV;\n    this.maxV = lut.maxV;\n    return this;\n  },\n  getColor: function getColor(alpha) {\n    if (alpha <= this.minV) {\n      alpha = this.minV;\n    } else if (alpha >= this.maxV) {\n      alpha = this.maxV;\n    }\n\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\n    var colorPosition = Math.round(alpha * this.n);\n    colorPosition == this.n ? colorPosition -= 1 : colorPosition;\n    return this.lut[colorPosition];\n  },\n  addColorMap: function addColorMap(colormapName, arrayOfColors) {\n    ColorMapKeywords[colormapName] = arrayOfColors;\n  },\n  createCanvas: function createCanvas() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = this.n;\n    this.updateCanvas(canvas);\n    return canvas;\n  },\n  updateCanvas: function updateCanvas(canvas) {\n    var ctx = canvas.getContext('2d', {\n      alpha: false\n    });\n    var imageData = ctx.getImageData(0, 0, 1, this.n);\n    var data = imageData.data;\n    var k = 0;\n    var step = 1.0 / this.n;\n\n    for (var i = 1; i >= 0; i -= step) {\n      for (var j = this.map.length - 1; j >= 0; j--) {\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\n          var min = this.map[j - 1][0];\n          var max = this.map[j][0];\n          var minColor = new _three.Color(this.map[j - 1][1]);\n          var maxColor = new _three.Color(this.map[j][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          data[k * 4] = Math.round(color.r * 255);\n          data[k * 4 + 1] = Math.round(color.g * 255);\n          data[k * 4 + 2] = Math.round(color.b * 255);\n          data[k * 4 + 3] = 255;\n          k += 1;\n        }\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n};\nvar ColorMapKeywords = {\n  rainbow: [[0.0, 0x0000ff], [0.2, 0x00ffff], [0.5, 0x00ff00], [0.8, 0xffff00], [1.0, 0xff0000]],\n  cooltowarm: [[0.0, 0x3c4ec2], [0.2, 0x9bbcff], [0.5, 0xdcdcdc], [0.8, 0xf6a385], [1.0, 0xb40426]],\n  blackbody: [[0.0, 0x000000], [0.2, 0x780000], [0.5, 0xe63200], [0.8, 0xffff00], [1.0, 0xffffff]],\n  grayscale: [[0.0, 0x000000], [0.2, 0x404040], [0.5, 0x7f7f80], [0.8, 0xbfbfbf], [1.0, 0xffffff]]\n};\nexports.ColorMapKeywords = ColorMapKeywords;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["rainbow","grayscale","n","map","Lut","setColorMap","width","copy","prototype","height","setMax","blackbody","__esModule","cooltowarm","ColorMapKeywords","value","addColorMap","updateCanvas","maxV","length","createCanvas","alpha","lut","set","setMin","minV","getColor","constructor"]],"~:compiled-at",1630917515425,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$math$Lut.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/math/Lut.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$math$Lut\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Lut = exports.ColorMapKeywords = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar Lut = function Lut(colormap, numberofcolors) {\\n  this.lut = [];\\n  this.setColorMap(colormap, numberofcolors);\\n  return this;\\n};\\n\\nexports.Lut = Lut;\\nLut.prototype = {\\n  constructor: Lut,\\n  lut: [],\\n  map: [],\\n  n: 256,\\n  minV: 0,\\n  maxV: 1,\\n  set: function set(value) {\\n    if (value instanceof Lut) {\\n      this.copy(value);\\n    }\\n\\n    return this;\\n  },\\n  setMin: function setMin(min) {\\n    this.minV = min;\\n    return this;\\n  },\\n  setMax: function setMax(max) {\\n    this.maxV = max;\\n    return this;\\n  },\\n  setColorMap: function setColorMap(colormap, numberofcolors) {\\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\\n    this.n = numberofcolors || 32;\\n    var step = 1.0 / this.n;\\n    this.lut.length = 0;\\n\\n    for (var i = 0; i <= 1; i += step) {\\n      for (var j = 0; j < this.map.length - 1; j++) {\\n        if (i >= this.map[j][0] && i < this.map[j + 1][0]) {\\n          var min = this.map[j][0];\\n          var max = this.map[j + 1][0];\\n          var minColor = new _three.Color(this.map[j][1]);\\n          var maxColor = new _three.Color(this.map[j + 1][1]);\\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\\n          this.lut.push(color);\\n        }\\n      }\\n    }\\n\\n    return this;\\n  },\\n  copy: function copy(lut) {\\n    this.lut = lut.lut;\\n    this.map = lut.map;\\n    this.n = lut.n;\\n    this.minV = lut.minV;\\n    this.maxV = lut.maxV;\\n    return this;\\n  },\\n  getColor: function getColor(alpha) {\\n    if (alpha <= this.minV) {\\n      alpha = this.minV;\\n    } else if (alpha >= this.maxV) {\\n      alpha = this.maxV;\\n    }\\n\\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\\n    var colorPosition = Math.round(alpha * this.n);\\n    colorPosition == this.n ? colorPosition -= 1 : colorPosition;\\n    return this.lut[colorPosition];\\n  },\\n  addColorMap: function addColorMap(colormapName, arrayOfColors) {\\n    ColorMapKeywords[colormapName] = arrayOfColors;\\n  },\\n  createCanvas: function createCanvas() {\\n    var canvas = document.createElement('canvas');\\n    canvas.width = 1;\\n    canvas.height = this.n;\\n    this.updateCanvas(canvas);\\n    return canvas;\\n  },\\n  updateCanvas: function updateCanvas(canvas) {\\n    var ctx = canvas.getContext('2d', {\\n      alpha: false\\n    });\\n    var imageData = ctx.getImageData(0, 0, 1, this.n);\\n    var data = imageData.data;\\n    var k = 0;\\n    var step = 1.0 / this.n;\\n\\n    for (var i = 1; i >= 0; i -= step) {\\n      for (var j = this.map.length - 1; j >= 0; j--) {\\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\\n          var min = this.map[j - 1][0];\\n          var max = this.map[j][0];\\n          var minColor = new _three.Color(this.map[j - 1][1]);\\n          var maxColor = new _three.Color(this.map[j][1]);\\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\\n          data[k * 4] = Math.round(color.r * 255);\\n          data[k * 4 + 1] = Math.round(color.g * 255);\\n          data[k * 4 + 2] = Math.round(color.b * 255);\\n          data[k * 4 + 3] = 255;\\n          k += 1;\\n        }\\n      }\\n    }\\n\\n    ctx.putImageData(imageData, 0, 0);\\n    return canvas;\\n  }\\n};\\nvar ColorMapKeywords = {\\n  rainbow: [[0.0, 0x0000ff], [0.2, 0x00ffff], [0.5, 0x00ff00], [0.8, 0xffff00], [1.0, 0xff0000]],\\n  cooltowarm: [[0.0, 0x3c4ec2], [0.2, 0x9bbcff], [0.5, 0xdcdcdc], [0.8, 0xf6a385], [1.0, 0xb40426]],\\n  blackbody: [[0.0, 0x000000], [0.2, 0x780000], [0.5, 0xe63200], [0.8, 0xffff00], [1.0, 0xffffff]],\\n  grayscale: [[0.0, 0x000000], [0.2, 0x404040], [0.5, 0x7f7f80], [0.8, 0xbfbfbf], [1.0, 0xffffff]]\\n};\\nexports.ColorMapKeywords = ColorMapKeywords;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Lut\",\"ColorMapKeywords\",\"_three\",\"colormap\",\"numberofcolors\",\"lut\",\"setColorMap\",\"prototype\",\"constructor\",\"map\",\"n\",\"minV\",\"maxV\",\"set\",\"copy\",\"setMin\",\"min\",\"setMax\",\"max\",\"rainbow\",\"step\",\"i\",\"length\",\"j\",\"minColor\",\"Color\",\"maxColor\",\"color\",\"lerp\",\"push\",\"getColor\",\"alpha\",\"colorPosition\",\"Math\",\"round\",\"addColorMap\",\"colormapName\",\"arrayOfColors\",\"createCanvas\",\"canvas\",\"document\",\"createElement\",\"width\",\"height\",\"updateCanvas\",\"ctx\",\"getContext\",\"imageData\",\"getImageData\",\"data\",\"k\",\"r\",\"g\",\"b\",\"putImageData\",\"cooltowarm\",\"blackbody\",\"grayscale\"]\n}\n"]