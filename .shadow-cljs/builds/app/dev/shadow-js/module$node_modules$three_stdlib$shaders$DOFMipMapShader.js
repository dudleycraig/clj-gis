["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/shaders/DOFMipMapShader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$shaders$DOFMipMapShader=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.DOFMipMapShader=void 0;exports.DOFMipMapShader={uniforms:{tColor:{value:null},tDepth:{value:null},focus:{value:1},maxblur:{value:1}},vertexShader:\"varying vec2 vUv;\\nvoid main() {\\n\\tvUv \\x3d uv;\\n\\tgl_Position \\x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform float focus;\\nuniform float maxblur;\\nuniform sampler2D tColor;\\nuniform sampler2D tDepth;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 depth \\x3d texture2D( tDepth, vUv );\\n\\tfloat factor \\x3d depth.x - focus;\\n\\tvec4 col \\x3d texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\\n\\tgl_FragColor \\x3d col;\\n\\tgl_FragColor.a \\x3d 1.0;\\n}\"}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$shaders$DOFMipMapShader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DOFMipMapShader = void 0;\n\n/**\n * Depth-of-field shader using mipmaps\n * - from Matt Handley @applmak\n * - requires power-of-2 sized render target with enabled mipmaps\n */\nvar DOFMipMapShader = {\n  uniforms: {\n    tColor: {\n      value: null\n    },\n    tDepth: {\n      value: null\n    },\n    focus: {\n      value: 1.0\n    },\n    maxblur: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float focus;', 'uniform float maxblur;', 'uniform sampler2D tColor;', 'uniform sampler2D tDepth;', 'varying vec2 vUv;', 'void main() {', '\tvec4 depth = texture2D( tDepth, vUv );', '\tfloat factor = depth.x - focus;', '\tvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );', '\tgl_FragColor = col;', '\tgl_FragColor.a = 1.0;', '}'].join('\\n')\n};\nexports.DOFMipMapShader = DOFMipMapShader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["fragmentShader","focus","__esModule","tColor","vertexShader","value","DOFMipMapShader","tDepth","maxblur","uniforms"]],"~:compiled-at",1630917515593,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$shaders$DOFMipMapShader.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,eAAR,CAA0B,IAAK,EAyB/BJ,QAAQI,CAAAA,eAAR,CAlBsBA,CACpBC,SAAU,CACRC,OAAQ,CACNH,MAAO,IADD,CADA,CAIRI,OAAQ,CACNJ,MAAO,IADD,CAJA,CAORK,MAAO,CACLL,MAAO,CADF,CAPC,CAURM,QAAS,CACPN,MAAO,CADA,CAVD,CADUC,CAepBM,aAAiJ,qIAf7HN,CAgBpBO,eAAqX,qWAhBjWP,CAb+F;\",\n\"sources\":[\"node_modules/three-stdlib/shaders/DOFMipMapShader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$shaders$DOFMipMapShader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DOFMipMapShader = void 0;\\n\\n/**\\n * Depth-of-field shader using mipmaps\\n * - from Matt Handley @applmak\\n * - requires power-of-2 sized render target with enabled mipmaps\\n */\\nvar DOFMipMapShader = {\\n  uniforms: {\\n    tColor: {\\n      value: null\\n    },\\n    tDepth: {\\n      value: null\\n    },\\n    focus: {\\n      value: 1.0\\n    },\\n    maxblur: {\\n      value: 1.0\\n    }\\n  },\\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\\tvUv = uv;', '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\\\n'),\\n  fragmentShader: ['uniform float focus;', 'uniform float maxblur;', 'uniform sampler2D tColor;', 'uniform sampler2D tDepth;', 'varying vec2 vUv;', 'void main() {', '\\tvec4 depth = texture2D( tDepth, vUv );', '\\tfloat factor = depth.x - focus;', '\\tvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );', '\\tgl_FragColor = col;', '\\tgl_FragColor.a = 1.0;', '}'].join('\\\\n')\\n};\\nexports.DOFMipMapShader = DOFMipMapShader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"DOFMipMapShader\",\"uniforms\",\"tColor\",\"tDepth\",\"focus\",\"maxblur\",\"vertexShader\",\"fragmentShader\"]\n}\n"]