["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/misc/NormalMapNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$misc$NormalMapNode=function(global,require,module,exports){function NormalMapNode(value,scale){_TempNode.TempNode.call(this,\"v3\");this.value=value;this.scale=scale||new _Vector2Node.Vector2Node(1,1)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.NormalMapNode=NormalMapNode;var _three=require(\"module$node_modules$three$build$three_module\"),_TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\"),_Vector2Node=require(\"module$node_modules$three_stdlib$nodes$inputs$Vector2Node\");\nglobal=require(\"module$node_modules$three_stdlib$nodes$core$FunctionNode\");var _UVNode=require(\"module$node_modules$three_stdlib$nodes$accessors$UVNode\"),_NormalNode=require(\"module$node_modules$three_stdlib$nodes$accessors$NormalNode\"),_PositionNode=require(\"module$node_modules$three_stdlib$nodes$accessors$PositionNode\");NormalMapNode.Nodes={perturbNormal2Arb:new global.FunctionNode(\"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 map, vec2 vUv, vec2 normalScale ) {\\n\\n\\t\\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\\n\\n\\t\\tvec3 q0 \\x3d vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 \\x3d vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 \\x3d dFdx( vUv.st );\\n\\t\\tvec2 st1 \\x3d dFdy( vUv.st );\\n\\n\\t\\tfloat scale \\x3d sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\\n\\n\\t\\tvec3 S \\x3d normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T \\x3d normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N \\x3d normalize( surf_norm );\\n\\n\\t\\tvec3 mapN \\x3d map * 2.0 - 1.0;\\n\\n\\t\\tmapN.xy *\\x3d normalScale;\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\\n\\n\\t\\t\\tif ( dot( cross( S, T ), N ) \\x3c 0.0 ) mapN.xy *\\x3d - 1.0;\\n\\n\\t\\t#else\\n\\n\\t\\t\\tmapN.xy *\\x3d ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\tmat3 tsn \\x3d mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\n\\t}\",\nnull,{derivatives:!0})};NormalMapNode.prototype=Object.create(_TempNode.TempNode.prototype);NormalMapNode.prototype.constructor=NormalMapNode;NormalMapNode.prototype.nodeType=\"NormalMap\";NormalMapNode.prototype.generate=function(builder,output){if(builder.isShader(\"fragment\")){var perturbNormal2Arb=builder.include(NormalMapNode.Nodes.perturbNormal2Arb);this.normal=this.normal||new _NormalNode.NormalNode;this.position=this.position||new _PositionNode.PositionNode(_PositionNode.PositionNode.VIEW);this.uv=\nthis.uv||new _UVNode.UVNode;var scale=this.scale.build(builder,\"v2\");builder.material.side===_three.BackSide&&(scale=\"-\"+scale);return builder.format(perturbNormal2Arb+\"( -\"+this.position.build(builder,\"v3\")+\", \"+this.normal.build(builder,\"v3\")+\", \"+this.value.build(builder,\"v3\")+\", \"+this.uv.build(builder,\"v2\")+\", \"+scale+\" )\",this.getType(builder),output)}console.warn(\"THREE.NormalMapNode is not compatible with \"+builder.shader+\" shader.\");return builder.format(\"vec3( 0.0 )\",this.getType(builder),\noutput)};NormalMapNode.prototype.copy=function(source){_TempNode.TempNode.prototype.copy.call(this,source);this.value=source.value;this.scale=source.scale;return this};NormalMapNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.value=this.value.toJSON(meta).uuid,data.scale=this.scale.toJSON(meta).uuid);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$misc$NormalMapNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NormalMapNode = NormalMapNode;\n\nvar _three = require(\"three\");\n\nvar _TempNode = require(\"../core/TempNode.js\");\n\nvar _Vector2Node = require(\"../inputs/Vector2Node.js\");\n\nvar _FunctionNode = require(\"../core/FunctionNode.js\");\n\nvar _UVNode = require(\"../accessors/UVNode.js\");\n\nvar _NormalNode = require(\"../accessors/NormalNode.js\");\n\nvar _PositionNode = require(\"../accessors/PositionNode.js\");\n\nfunction NormalMapNode(value, scale) {\n  _TempNode.TempNode.call(this, 'v3');\n\n  this.value = value;\n  this.scale = scale || new _Vector2Node.Vector2Node(1, 1);\n}\n\nNormalMapNode.Nodes = function () {\n  var perturbNormal2Arb = new _FunctionNode.FunctionNode( // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n  \"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 map, vec2 vUv, vec2 normalScale ) {\\n\\n\\t\\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\\n\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\\n\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\n\\t\\tvec3 mapN = map * 2.0 - 1.0;\\n\\n\\t\\tmapN.xy *= normalScale;\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\\n\\n\\t\\t\\tif ( dot( cross( S, T ), N ) < 0.0 ) mapN.xy *= - 1.0;\\n\\n\\t\\t#else\\n\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\n\\t\\t#endif\\n\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\n\\t}\", null, {\n    derivatives: true\n  });\n  return {\n    perturbNormal2Arb: perturbNormal2Arb\n  };\n}();\n\nNormalMapNode.prototype = Object.create(_TempNode.TempNode.prototype);\nNormalMapNode.prototype.constructor = NormalMapNode;\nNormalMapNode.prototype.nodeType = 'NormalMap';\n\nNormalMapNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var perturbNormal2Arb = builder.include(NormalMapNode.Nodes.perturbNormal2Arb);\n    this.normal = this.normal || new _NormalNode.NormalNode();\n    this.position = this.position || new _PositionNode.PositionNode(_PositionNode.PositionNode.VIEW);\n    this.uv = this.uv || new _UVNode.UVNode();\n    var scale = this.scale.build(builder, 'v2');\n\n    if (builder.material.side === _three.BackSide) {\n      scale = '-' + scale;\n    }\n\n    return builder.format(perturbNormal2Arb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + this.value.build(builder, 'v3') + ', ' + this.uv.build(builder, 'v2') + ', ' + scale + ' )', this.getType(builder), output);\n  } else {\n    console.warn('THREE.NormalMapNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec3( 0.0 )', this.getType(builder), output);\n  }\n};\n\nNormalMapNode.prototype.copy = function (source) {\n  _TempNode.TempNode.prototype.copy.call(this, source);\n\n  this.value = source.value;\n  this.scale = source.scale;\n  return this;\n};\n\nNormalMapNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.scale = this.scale.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$nodes$core$FunctionNode","~$module$node_modules$three_stdlib$nodes$accessors$NormalNode","~$module$node_modules$three_stdlib$nodes$inputs$Vector2Node","~$shadow.js","~$module$node_modules$three_stdlib$nodes$accessors$PositionNode","~$module$node_modules$three_stdlib$nodes$accessors$UVNode","~$module$node_modules$three_stdlib$nodes$core$TempNode"]],"~:properties",["^5",["Nodes","copy","prototype","scale","__esModule","generate","derivatives","normal","NormalMapNode","position","nodeType","value","uv","perturbNormal2Arb","constructor","toJSON"]],"~:compiled-at",1630917515218,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$misc$NormalMapNode.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/misc/NormalMapNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$misc$NormalMapNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.NormalMapNode = NormalMapNode;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _TempNode = require(\\\"../core/TempNode.js\\\");\\n\\nvar _Vector2Node = require(\\\"../inputs/Vector2Node.js\\\");\\n\\nvar _FunctionNode = require(\\\"../core/FunctionNode.js\\\");\\n\\nvar _UVNode = require(\\\"../accessors/UVNode.js\\\");\\n\\nvar _NormalNode = require(\\\"../accessors/NormalNode.js\\\");\\n\\nvar _PositionNode = require(\\\"../accessors/PositionNode.js\\\");\\n\\nfunction NormalMapNode(value, scale) {\\n  _TempNode.TempNode.call(this, 'v3');\\n\\n  this.value = value;\\n  this.scale = scale || new _Vector2Node.Vector2Node(1, 1);\\n}\\n\\nNormalMapNode.Nodes = function () {\\n  var perturbNormal2Arb = new _FunctionNode.FunctionNode( // Per-Pixel Tangent Space Normal Mapping\\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n  \\\"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 map, vec2 vUv, vec2 normalScale ) {\\\\n\\\\n\\\\t\\\\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\\\\n\\\\n\\\\t\\\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\\\n\\\\t\\\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\\\n\\\\t\\\\tvec2 st0 = dFdx( vUv.st );\\\\n\\\\t\\\\tvec2 st1 = dFdy( vUv.st );\\\\n\\\\n\\\\t\\\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\\\\n\\\\n\\\\t\\\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\\\n\\\\t\\\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\\\n\\\\t\\\\tvec3 N = normalize( surf_norm );\\\\n\\\\n\\\\t\\\\tvec3 mapN = map * 2.0 - 1.0;\\\\n\\\\n\\\\t\\\\tmapN.xy *= normalScale;\\\\n\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\n\\\\t\\\\t\\\\t// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\\\\n\\\\n\\\\t\\\\t\\\\tif ( dot( cross( S, T ), N ) < 0.0 ) mapN.xy *= - 1.0;\\\\n\\\\n\\\\t\\\\t#else\\\\n\\\\n\\\\t\\\\t\\\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n\\\\n\\\\t\\\\t#endif\\\\n\\\\n\\\\t\\\\tmat3 tsn = mat3( S, T, N );\\\\n\\\\t\\\\treturn normalize( tsn * mapN );\\\\n\\\\n\\\\t}\\\", null, {\\n    derivatives: true\\n  });\\n  return {\\n    perturbNormal2Arb: perturbNormal2Arb\\n  };\\n}();\\n\\nNormalMapNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nNormalMapNode.prototype.constructor = NormalMapNode;\\nNormalMapNode.prototype.nodeType = 'NormalMap';\\n\\nNormalMapNode.prototype.generate = function (builder, output) {\\n  if (builder.isShader('fragment')) {\\n    var perturbNormal2Arb = builder.include(NormalMapNode.Nodes.perturbNormal2Arb);\\n    this.normal = this.normal || new _NormalNode.NormalNode();\\n    this.position = this.position || new _PositionNode.PositionNode(_PositionNode.PositionNode.VIEW);\\n    this.uv = this.uv || new _UVNode.UVNode();\\n    var scale = this.scale.build(builder, 'v2');\\n\\n    if (builder.material.side === _three.BackSide) {\\n      scale = '-' + scale;\\n    }\\n\\n    return builder.format(perturbNormal2Arb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + this.value.build(builder, 'v3') + ', ' + this.uv.build(builder, 'v2') + ', ' + scale + ' )', this.getType(builder), output);\\n  } else {\\n    console.warn('THREE.NormalMapNode is not compatible with ' + builder.shader + ' shader.');\\n    return builder.format('vec3( 0.0 )', this.getType(builder), output);\\n  }\\n};\\n\\nNormalMapNode.prototype.copy = function (source) {\\n  _TempNode.TempNode.prototype.copy.call(this, source);\\n\\n  this.value = source.value;\\n  this.scale = source.scale;\\n  return this;\\n};\\n\\nNormalMapNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.value = this.value.toJSON(meta).uuid;\\n    data.scale = this.scale.toJSON(meta).uuid;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"NormalMapNode\",\"value\",\"scale\",\"_TempNode\",\"TempNode\",\"call\",\"_Vector2Node\",\"Vector2Node\",\"Object\",\"defineProperty\",\"_three\",\"_FunctionNode\",\"_UVNode\",\"_NormalNode\",\"_PositionNode\",\"Nodes\",\"perturbNormal2Arb\",\"FunctionNode\",\"derivatives\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"generate\",\"NormalMapNode.prototype.generate\",\"builder\",\"output\",\"isShader\",\"include\",\"normal\",\"NormalNode\",\"position\",\"PositionNode\",\"VIEW\",\"uv\",\"UVNode\",\"build\",\"material\",\"side\",\"BackSide\",\"format\",\"getType\",\"console\",\"warn\",\"shader\",\"copy\",\"NormalMapNode.prototype.copy\",\"source\",\"toJSON\",\"NormalMapNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\",\"uuid\"]\n}\n"]