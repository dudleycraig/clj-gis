["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three/examples/jsm/controls/OrbitControls.js"],"~:js","shadow$provide.module$node_modules$three$examples$jsm$controls$OrbitControls=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\");\n}function _possibleConstructorReturn(self,call){return!call||\"object\"!==_typeof(call)&&\"function\"!==typeof call?_assertThisInitialized(self):call}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,\nsuperClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.MapControls=exports.OrbitControls=void 0;var _three=require(\"module$node_modules$three$build$three\"),_changeEvent={type:\"change\"},_startEvent={type:\"start\"},_endEvent={type:\"end\"};global=function(_EventDispatcher){function OrbitControls(object,domElement$jscomp$0){function getZoomScale(){return Math.pow(.95,scope.zoomSpeed)}function dollyOut(dollyScale){scope.object.isPerspectiveCamera?scale/=dollyScale:scope.object.isOrthographicCamera?(scope.object.zoom=Math.max(scope.minZoom,\nMath.min(scope.maxZoom,scope.object.zoom*dollyScale)),scope.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),scope.enableZoom=!1)}function dollyIn(dollyScale){scope.object.isPerspectiveCamera?scale*=dollyScale:scope.object.isOrthographicCamera?(scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/dollyScale)),scope.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),\nscope.enableZoom=!1)}function handleTouchStartRotate(){1===pointers.length?rotateStart.set(pointers[0].pageX,pointers[0].pageY):rotateStart.set(.5*(pointers[0].pageX+pointers[1].pageX),.5*(pointers[0].pageY+pointers[1].pageY))}function handleTouchStartPan(){1===pointers.length?panStart.set(pointers[0].pageX,pointers[0].pageY):panStart.set(.5*(pointers[0].pageX+pointers[1].pageX),.5*(pointers[0].pageY+pointers[1].pageY))}function handleTouchStartDolly(){var dx=pointers[0].pageX-pointers[1].pageX,dy=\npointers[0].pageY-pointers[1].pageY;dollyStart.set(0,Math.sqrt(dx*dx+dy*dy))}function handleTouchMoveRotate(event){if(1==pointers.length)rotateEnd.set(event.pageX,event.pageY);else{var position=getSecondPointerPosition(event);rotateEnd.set(.5*(event.pageX+position.x),.5*(event.pageY+position.y))}rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);event=scope.domElement;sphericalDelta.theta-=2*Math.PI*rotateDelta.x/event.clientHeight;sphericalDelta.phi-=2*Math.PI*rotateDelta.y/\nevent.clientHeight;rotateStart.copy(rotateEnd)}function handleTouchMovePan(event){if(1===pointers.length)panEnd.set(event.pageX,event.pageY);else{var position=getSecondPointerPosition(event);panEnd.set(.5*(event.pageX+position.x),.5*(event.pageY+position.y))}panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed);pan(panDelta.x,panDelta.y);panStart.copy(panEnd)}function handleTouchMoveDolly(event){var position=getSecondPointerPosition(event),dx=event.pageX-position.x;event=event.pageY-\nposition.y;dollyEnd.set(0,Math.sqrt(dx*dx+event*event));dollyDelta.set(0,Math.pow(dollyEnd.y/dollyStart.y,scope.zoomSpeed));dollyOut(dollyDelta.y);dollyStart.copy(dollyEnd)}function onPointerDown(event){!1!==scope.enabled&&(0===pointers.length&&(scope.domElement.setPointerCapture(event.pointerId),scope.domElement.addEventListener(\"pointermove\",onPointerMove),scope.domElement.addEventListener(\"pointerup\",onPointerUp)),pointers.push(event),\"touch\"===event.pointerType?onTouchStart(event):onMouseDown(event))}\nfunction onPointerMove(event){if(!1!==scope.enabled)if(\"touch\"===event.pointerType)switch(trackPointer(event),state){case STATE.TOUCH_ROTATE:if(!1===scope.enableRotate)break;handleTouchMoveRotate(event);scope.update();break;case STATE.TOUCH_PAN:if(!1===scope.enablePan)break;handleTouchMovePan(event);scope.update();break;case STATE.TOUCH_DOLLY_PAN:if(!1===scope.enableZoom&&!1===scope.enablePan)break;scope.enableZoom&&handleTouchMoveDolly(event);scope.enablePan&&handleTouchMovePan(event);scope.update();\nbreak;case STATE.TOUCH_DOLLY_ROTATE:if(!1===scope.enableZoom&&!1===scope.enableRotate)break;scope.enableZoom&&handleTouchMoveDolly(event);scope.enableRotate&&handleTouchMoveRotate(event);scope.update();break;default:state=STATE.NONE}else if(!1!==scope.enabled)switch(state){case STATE.ROTATE:if(!1===scope.enableRotate)break;rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);event=scope.domElement;sphericalDelta.theta-=2*Math.PI*\nrotateDelta.x/event.clientHeight;sphericalDelta.phi-=2*Math.PI*rotateDelta.y/event.clientHeight;rotateStart.copy(rotateEnd);scope.update();break;case STATE.DOLLY:if(!1===scope.enableZoom)break;dollyEnd.set(event.clientX,event.clientY);dollyDelta.subVectors(dollyEnd,dollyStart);0<dollyDelta.y?dollyOut(getZoomScale()):0>dollyDelta.y&&dollyIn(getZoomScale());dollyStart.copy(dollyEnd);scope.update();break;case STATE.PAN:!1!==scope.enablePan&&(panEnd.set(event.clientX,event.clientY),panDelta.subVectors(panEnd,\npanStart).multiplyScalar(scope.panSpeed),pan(panDelta.x,panDelta.y),panStart.copy(panEnd),scope.update())}}function onPointerUp(event){!1!==scope.enabled&&(scope.dispatchEvent(_endEvent),state=STATE.NONE,removePointer(event),0===pointers.length&&(scope.domElement.releasePointerCapture(event.pointerId),scope.domElement.removeEventListener(\"pointermove\",onPointerMove),scope.domElement.removeEventListener(\"pointerup\",onPointerUp)))}function onPointerCancel(event){removePointer(event)}function onMouseDown(event){switch(event.button){case 0:var mouseAction=\nscope.mouseButtons.LEFT;break;case 1:mouseAction=scope.mouseButtons.MIDDLE;break;case 2:mouseAction=scope.mouseButtons.RIGHT;break;default:mouseAction=-1}switch(mouseAction){case _three.MOUSE.DOLLY:if(!1===scope.enableZoom)return;dollyStart.set(event.clientX,event.clientY);state=STATE.DOLLY;break;case _three.MOUSE.ROTATE:if(event.ctrlKey||event.metaKey||event.shiftKey){if(!1===scope.enablePan)return;panStart.set(event.clientX,event.clientY);state=STATE.PAN}else{if(!1===scope.enableRotate)return;rotateStart.set(event.clientX,\nevent.clientY);state=STATE.ROTATE}break;case _three.MOUSE.PAN:if(event.ctrlKey||event.metaKey||event.shiftKey){if(!1===scope.enableRotate)return;rotateStart.set(event.clientX,event.clientY);state=STATE.ROTATE}else{if(!1===scope.enablePan)return;panStart.set(event.clientX,event.clientY);state=STATE.PAN}break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(_startEvent)}function onMouseWheel(event){!1===scope.enabled||!1===scope.enableZoom||state!==STATE.NONE&&state!==STATE.ROTATE||\n(event.preventDefault(),scope.dispatchEvent(_startEvent),0>event.deltaY?dollyIn(getZoomScale()):0<event.deltaY&&dollyOut(getZoomScale()),scope.update(),scope.dispatchEvent(_endEvent))}function onKeyDown(event){if(!1!==scope.enabled&&!1!==scope.enablePan){var needsUpdate=!1;switch(event.code){case scope.keys.UP:pan(0,scope.keyPanSpeed);needsUpdate=!0;break;case scope.keys.BOTTOM:pan(0,-scope.keyPanSpeed);needsUpdate=!0;break;case scope.keys.LEFT:pan(scope.keyPanSpeed,0);needsUpdate=!0;break;case scope.keys.RIGHT:pan(-scope.keyPanSpeed,\n0),needsUpdate=!0}needsUpdate&&(event.preventDefault(),scope.update())}}function onTouchStart(event){trackPointer(event);switch(pointers.length){case 1:switch(scope.touches.ONE){case _three.TOUCH.ROTATE:if(!1===scope.enableRotate)return;handleTouchStartRotate();state=STATE.TOUCH_ROTATE;break;case _three.TOUCH.PAN:if(!1===scope.enablePan)return;handleTouchStartPan();state=STATE.TOUCH_PAN;break;default:state=STATE.NONE}break;case 2:switch(scope.touches.TWO){case _three.TOUCH.DOLLY_PAN:if(!1===scope.enableZoom&&\n!1===scope.enablePan)return;scope.enableZoom&&handleTouchStartDolly();scope.enablePan&&handleTouchStartPan();state=STATE.TOUCH_DOLLY_PAN;break;case _three.TOUCH.DOLLY_ROTATE:if(!1===scope.enableZoom&&!1===scope.enableRotate)return;scope.enableZoom&&handleTouchStartDolly();scope.enableRotate&&handleTouchStartRotate();state=STATE.TOUCH_DOLLY_ROTATE;break;default:state=STATE.NONE}break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(_startEvent)}function onContextMenu(event){!1!==scope.enabled&&\nevent.preventDefault()}function removePointer(event){delete pointerPositions[event.pointerId];for(var i=0;i<pointers.length;i++)if(pointers[i].pointerId==event.pointerId){pointers.splice(i,1);break}}function trackPointer(event){var position=pointerPositions[event.pointerId];void 0===position&&(position=new _three.Vector2,pointerPositions[event.pointerId]=position);position.set(event.pageX,event.pageY)}function getSecondPointerPosition(event){return pointerPositions[(event.pointerId===pointers[0].pointerId?\npointers[1]:pointers[0]).pointerId]}_classCallCheck(this,OrbitControls);var _this=_possibleConstructorReturn(this,_getPrototypeOf(OrbitControls).call(this));void 0===domElement$jscomp$0&&console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');domElement$jscomp$0===document&&console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');_this.object=object;_this.domElement=domElement$jscomp$0;\n_this.domElement.style.touchAction=\"none\";_this.enabled=!0;_this.target=new _three.Vector3;_this.minDistance=0;_this.maxDistance=Infinity;_this.minZoom=0;_this.maxZoom=Infinity;_this.minPolarAngle=0;_this.maxPolarAngle=Math.PI;_this.minAzimuthAngle=-Infinity;_this.maxAzimuthAngle=Infinity;_this.enableDamping=!1;_this.dampingFactor=.05;_this.enableZoom=!0;_this.zoomSpeed=1;_this.enableRotate=!0;_this.rotateSpeed=1;_this.enablePan=!0;_this.panSpeed=1;_this.screenSpacePanning=!0;_this.keyPanSpeed=7;\n_this.autoRotate=!1;_this.autoRotateSpeed=2;_this.keys={LEFT:\"ArrowLeft\",UP:\"ArrowUp\",RIGHT:\"ArrowRight\",BOTTOM:\"ArrowDown\"};_this.mouseButtons={LEFT:_three.MOUSE.ROTATE,MIDDLE:_three.MOUSE.DOLLY,RIGHT:_three.MOUSE.PAN};_this.touches={ONE:_three.TOUCH.ROTATE,TWO:_three.TOUCH.DOLLY_PAN};_this.target0=_this.target.clone();_this.position0=_this.object.position.clone();_this.zoom0=_this.object.zoom;_this._domElementKeyEvents=null;_this.getPolarAngle=function(){return spherical.phi};_this.getAzimuthalAngle=\nfunction(){return spherical.theta};_this.getDistance=function(){return this.object.position.distanceTo(this.target)};_this.listenToKeyEvents=function(domElement){domElement.addEventListener(\"keydown\",onKeyDown);this._domElementKeyEvents=domElement};_this.saveState=function(){scope.target0.copy(scope.target);scope.position0.copy(scope.object.position);scope.zoom0=scope.object.zoom};_this.reset=function(){scope.target.copy(scope.target0);scope.object.position.copy(scope.position0);scope.object.zoom=\nscope.zoom0;scope.object.updateProjectionMatrix();scope.dispatchEvent(_changeEvent);scope.update();state=STATE.NONE};_this.update=function(){var offset=new _three.Vector3,quat=(new _three.Quaternion).setFromUnitVectors(object.up,new _three.Vector3(0,1,0)),quatInverse=quat.clone().invert(),lastPosition=new _three.Vector3,lastQuaternion=new _three.Quaternion,twoPI=2*Math.PI;return function(){var position=scope.object.position;offset.copy(position).sub(scope.target);offset.applyQuaternion(quat);spherical.setFromVector3(offset);\nscope.autoRotate&&state===STATE.NONE&&(sphericalDelta.theta-=2*Math.PI/60/60*scope.autoRotateSpeed);scope.enableDamping?(spherical.theta+=sphericalDelta.theta*scope.dampingFactor,spherical.phi+=sphericalDelta.phi*scope.dampingFactor):(spherical.theta+=sphericalDelta.theta,spherical.phi+=sphericalDelta.phi);var min=scope.minAzimuthAngle,max=scope.maxAzimuthAngle;isFinite(min)&&isFinite(max)&&(min<-Math.PI?min+=twoPI:min>Math.PI&&(min-=twoPI),max<-Math.PI?max+=twoPI:max>Math.PI&&(max-=twoPI),spherical.theta=\nmin<=max?Math.max(min,Math.min(max,spherical.theta)):spherical.theta>(min+max)/2?Math.max(min,spherical.theta):Math.min(max,spherical.theta));spherical.phi=Math.max(scope.minPolarAngle,Math.min(scope.maxPolarAngle,spherical.phi));spherical.makeSafe();spherical.radius*=scale;spherical.radius=Math.max(scope.minDistance,Math.min(scope.maxDistance,spherical.radius));!0===scope.enableDamping?scope.target.addScaledVector(panOffset,scope.dampingFactor):scope.target.add(panOffset);offset.setFromSpherical(spherical);\noffset.applyQuaternion(quatInverse);position.copy(scope.target).add(offset);scope.object.lookAt(scope.target);!0===scope.enableDamping?(sphericalDelta.theta*=1-scope.dampingFactor,sphericalDelta.phi*=1-scope.dampingFactor,panOffset.multiplyScalar(1-scope.dampingFactor)):(sphericalDelta.set(0,0,0),panOffset.set(0,0,0));scale=1;return zoomChanged||lastPosition.distanceToSquared(scope.object.position)>EPS||8*(1-lastQuaternion.dot(scope.object.quaternion))>EPS?(scope.dispatchEvent(_changeEvent),lastPosition.copy(scope.object.position),\nlastQuaternion.copy(scope.object.quaternion),zoomChanged=!1,!0):!1}}();_this.dispose=function(){scope.domElement.removeEventListener(\"contextmenu\",onContextMenu);scope.domElement.removeEventListener(\"pointerdown\",onPointerDown);scope.domElement.removeEventListener(\"pointercancel\",onPointerCancel);scope.domElement.removeEventListener(\"wheel\",onMouseWheel);scope.domElement.removeEventListener(\"pointermove\",onPointerMove);scope.domElement.removeEventListener(\"pointerup\",onPointerUp);null!==scope._domElementKeyEvents&&\nscope._domElementKeyEvents.removeEventListener(\"keydown\",onKeyDown)};var scope=_assertThisInitialized(_this),STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},state=STATE.NONE,EPS=1E-6,spherical=new _three.Spherical,sphericalDelta=new _three.Spherical,scale=1,panOffset=new _three.Vector3,zoomChanged=!1,rotateStart=new _three.Vector2,rotateEnd=new _three.Vector2,rotateDelta=new _three.Vector2,panStart=new _three.Vector2,panEnd=new _three.Vector2,\npanDelta=new _three.Vector2,dollyStart=new _three.Vector2,dollyEnd=new _three.Vector2,dollyDelta=new _three.Vector2,pointers=[],pointerPositions={},panLeft=function(){var v=new _three.Vector3;return function(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,0);v.multiplyScalar(-distance);panOffset.add(v)}}(),panUp=function(){var v=new _three.Vector3;return function(distance,objectMatrix){!0===scope.screenSpacePanning?v.setFromMatrixColumn(objectMatrix,1):(v.setFromMatrixColumn(objectMatrix,\n0),v.crossVectors(scope.object.up,v));v.multiplyScalar(distance);panOffset.add(v)}}(),pan=function(){var offset=new _three.Vector3;return function(deltaX,deltaY){var element=scope.domElement;if(scope.object.isPerspectiveCamera){offset.copy(scope.object.position).sub(scope.target);var targetDistance=offset.length();targetDistance*=Math.tan(scope.object.fov/2*Math.PI/180);panLeft(2*deltaX*targetDistance/element.clientHeight,scope.object.matrix);panUp(2*deltaY*targetDistance/element.clientHeight,scope.object.matrix)}else scope.object.isOrthographicCamera?\n(panLeft(deltaX*(scope.object.right-scope.object.left)/scope.object.zoom/element.clientWidth,scope.object.matrix),panUp(deltaY*(scope.object.top-scope.object.bottom)/scope.object.zoom/element.clientHeight,scope.object.matrix)):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"),scope.enablePan=!1)}}();scope.domElement.addEventListener(\"contextmenu\",onContextMenu);scope.domElement.addEventListener(\"pointerdown\",onPointerDown);scope.domElement.addEventListener(\"pointercancel\",\nonPointerCancel);scope.domElement.addEventListener(\"wheel\",onMouseWheel,{passive:!1});_this.update();return _this}_inherits(OrbitControls,_EventDispatcher);return OrbitControls}(_three.EventDispatcher);exports.OrbitControls=global;global=function(_OrbitControls){function MapControls(object,domElement){_classCallCheck(this,MapControls);object=_possibleConstructorReturn(this,_getPrototypeOf(MapControls).call(this,object,domElement));object.screenSpacePanning=!1;object.mouseButtons.LEFT=_three.MOUSE.PAN;\nobject.mouseButtons.RIGHT=_three.MOUSE.ROTATE;object.touches.ONE=_three.TOUCH.PAN;object.touches.TWO=_three.TOUCH.DOLLY_ROTATE;return object}_inherits(MapControls,_OrbitControls);return MapControls}(global);exports.MapControls=global}","~:source","shadow$provide[\"module$node_modules$three$examples$jsm$controls$OrbitControls\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MapControls = exports.OrbitControls = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls =\n/*#__PURE__*/\nfunction (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrbitControls).call(this));\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n    // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new _three.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: _three.MOUSE.ROTATE,\n      MIDDLE: _three.MOUSE.DOLLY,\n      RIGHT: _three.MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: _three.TOUCH.ROTATE,\n      TWO: _three.TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new _three.Vector3(); // so camera.up is the orbit axis\n\n      var quat = new _three.Quaternion().setFromUnitVectors(object.up, new _three.Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new _three.Vector3();\n      var lastQuaternion = new _three.Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new _three.Spherical();\n    var sphericalDelta = new _three.Spherical();\n    var scale = 1;\n    var panOffset = new _three.Vector3();\n    var zoomChanged = false;\n    var rotateStart = new _three.Vector2();\n    var rotateEnd = new _three.Vector2();\n    var rotateDelta = new _three.Vector2();\n    var panStart = new _three.Vector2();\n    var panEnd = new _three.Vector2();\n    var panDelta = new _three.Vector2();\n    var dollyStart = new _three.Vector2();\n    var dollyEnd = new _three.Vector2();\n    var dollyDelta = new _three.Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new _three.Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new _three.Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new _three.Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseUp()\n    /*event*/\n    {// no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd()\n    /*event*/\n    {} // no-op\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      } //\n\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchEnd();\n      } else {\n        onMouseUp(event);\n      }\n\n      removePointer(event); //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case _three.MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case _three.MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case _three.MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case _three.TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case _three.TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case _three.TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case _three.TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new _three.Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return OrbitControls;\n}(_three.EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nexports.OrbitControls = OrbitControls;\n\nvar MapControls =\n/*#__PURE__*/\nfunction (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MapControls).call(this, object, domElement));\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = _three.MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = _three.MOUSE.ROTATE;\n    _this2.touches.ONE = _three.TOUCH.PAN;\n    _this2.touches.TWO = _three.TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return MapControls;\n}(OrbitControls);\n\nexports.MapControls = MapControls;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$three$build$three"]],"~:properties",["^5",["autoRotateSpeed","object","maxZoom","keyPanSpeed","TOUCH_PAN","zoom0","passive","TOUCH_DOLLY_PAN","keys","touchAction","BOTTOM","MIDDLE","prototype","getDistance","position0","zoom","LEFT","touches","target0","enablePan","autoRotate","__esModule","radius","dispose","enabled","DOLLY","reset","mouseButtons","UP","TOUCH_ROTATE","maxDistance","update","saveState","configurable","minDistance","value","dampingFactor","minZoom","NONE","writable","enableRotate","RIGHT","zoomSpeed","rotateSpeed","TOUCH_DOLLY_ROTATE","panSpeed","screenSpacePanning","type","maxPolarAngle","OrbitControls","__proto__","target","theta","getAzimuthalAngle","_domElementKeyEvents","PAN","MapControls","TWO","minAzimuthAngle","listenToKeyEvents","getPolarAngle","maxAzimuthAngle","minPolarAngle","enableZoom","phi","ONE","domElement","constructor","enableDamping","ROTATE"]],"~:compiled-at",1630672499162,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three$examples$jsm$controls$OrbitControls.js\",\n\"lineCount\":34,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three/examples/jsm/controls/OrbitControls.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three$examples$jsm$controls$OrbitControls\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MapControls = exports.OrbitControls = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n// This set of controls performs orbiting, dollying (zooming), and panning.\\n// Unlike TrackballControls, it maintains the \\\"up\\\" direction object.up (+Y by default).\\n//\\n//    Orbit - left mouse / touch: one-finger move\\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\\nvar _changeEvent = {\\n  type: 'change'\\n};\\nvar _startEvent = {\\n  type: 'start'\\n};\\nvar _endEvent = {\\n  type: 'end'\\n};\\n\\nvar OrbitControls =\\n/*#__PURE__*/\\nfunction (_EventDispatcher) {\\n  _inherits(OrbitControls, _EventDispatcher);\\n\\n  function OrbitControls(object, domElement) {\\n    var _this;\\n\\n    _classCallCheck(this, OrbitControls);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrbitControls).call(this));\\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \\\"domElement\\\" is now mandatory.');\\n    if (domElement === document) console.error('THREE.OrbitControls: \\\"document\\\" should not be used as the target \\\"domElement\\\". Please use \\\"renderer.domElement\\\" instead.');\\n    _this.object = object;\\n    _this.domElement = domElement;\\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\\n    // Set to false to disable this control\\n\\n    _this.enabled = true; // \\\"target\\\" sets the location of focus, where the object orbits around\\n\\n    _this.target = new _three.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\\n\\n    _this.minDistance = 0;\\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\\n\\n    _this.minZoom = 0;\\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\\n    // Range is 0 to Math.PI radians.\\n\\n    _this.minPolarAngle = 0; // radians\\n\\n    _this.maxPolarAngle = Math.PI; // radians\\n    // How far you can orbit horizontally, upper and lower limits.\\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\\n\\n    _this.minAzimuthAngle = -Infinity; // radians\\n\\n    _this.maxAzimuthAngle = Infinity; // radians\\n    // Set to true to enable damping (inertia)\\n    // If damping is enabled, you must call controls.update() in your animation loop\\n\\n    _this.enableDamping = false;\\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \\\"zoom\\\" for backwards compatibility.\\n    // Set to false to disable zooming\\n\\n    _this.enableZoom = true;\\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\\n\\n    _this.enableRotate = true;\\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\\n\\n    _this.enablePan = true;\\n    _this.panSpeed = 1.0;\\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\\n\\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\\n    // Set to true to automatically rotate around the target\\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\\n\\n    _this.autoRotate = false;\\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\\n    // The four arrow keys\\n\\n    _this.keys = {\\n      LEFT: 'ArrowLeft',\\n      UP: 'ArrowUp',\\n      RIGHT: 'ArrowRight',\\n      BOTTOM: 'ArrowDown'\\n    }; // Mouse buttons\\n\\n    _this.mouseButtons = {\\n      LEFT: _three.MOUSE.ROTATE,\\n      MIDDLE: _three.MOUSE.DOLLY,\\n      RIGHT: _three.MOUSE.PAN\\n    }; // Touch fingers\\n\\n    _this.touches = {\\n      ONE: _three.TOUCH.ROTATE,\\n      TWO: _three.TOUCH.DOLLY_PAN\\n    }; // for reset\\n\\n    _this.target0 = _this.target.clone();\\n    _this.position0 = _this.object.position.clone();\\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\\n\\n    _this._domElementKeyEvents = null; //\\n    // public methods\\n    //\\n\\n    _this.getPolarAngle = function () {\\n      return spherical.phi;\\n    };\\n\\n    _this.getAzimuthalAngle = function () {\\n      return spherical.theta;\\n    };\\n\\n    _this.getDistance = function () {\\n      return this.object.position.distanceTo(this.target);\\n    };\\n\\n    _this.listenToKeyEvents = function (domElement) {\\n      domElement.addEventListener('keydown', onKeyDown);\\n      this._domElementKeyEvents = domElement;\\n    };\\n\\n    _this.saveState = function () {\\n      scope.target0.copy(scope.target);\\n      scope.position0.copy(scope.object.position);\\n      scope.zoom0 = scope.object.zoom;\\n    };\\n\\n    _this.reset = function () {\\n      scope.target.copy(scope.target0);\\n      scope.object.position.copy(scope.position0);\\n      scope.object.zoom = scope.zoom0;\\n      scope.object.updateProjectionMatrix();\\n      scope.dispatchEvent(_changeEvent);\\n      scope.update();\\n      state = STATE.NONE;\\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\\n\\n\\n    _this.update = function () {\\n      var offset = new _three.Vector3(); // so camera.up is the orbit axis\\n\\n      var quat = new _three.Quaternion().setFromUnitVectors(object.up, new _three.Vector3(0, 1, 0));\\n      var quatInverse = quat.clone().invert();\\n      var lastPosition = new _three.Vector3();\\n      var lastQuaternion = new _three.Quaternion();\\n      var twoPI = 2 * Math.PI;\\n      return function update() {\\n        var position = scope.object.position;\\n        offset.copy(position).sub(scope.target); // rotate offset to \\\"y-axis-is-up\\\" space\\n\\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\\n\\n        spherical.setFromVector3(offset);\\n\\n        if (scope.autoRotate && state === STATE.NONE) {\\n          rotateLeft(getAutoRotationAngle());\\n        }\\n\\n        if (scope.enableDamping) {\\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\\n        } else {\\n          spherical.theta += sphericalDelta.theta;\\n          spherical.phi += sphericalDelta.phi;\\n        } // restrict theta to be between desired limits\\n\\n\\n        var min = scope.minAzimuthAngle;\\n        var max = scope.maxAzimuthAngle;\\n\\n        if (isFinite(min) && isFinite(max)) {\\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\\n\\n          if (min <= max) {\\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\\n          } else {\\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\\n          }\\n        } // restrict phi to be between desired limits\\n\\n\\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\\n        spherical.makeSafe();\\n        spherical.radius *= scale; // restrict radius to be between desired limits\\n\\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\\n\\n        if (scope.enableDamping === true) {\\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\\n        } else {\\n          scope.target.add(panOffset);\\n        }\\n\\n        offset.setFromSpherical(spherical); // rotate offset back to \\\"camera-up-vector-is-up\\\" space\\n\\n        offset.applyQuaternion(quatInverse);\\n        position.copy(scope.target).add(offset);\\n        scope.object.lookAt(scope.target);\\n\\n        if (scope.enableDamping === true) {\\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\\n        } else {\\n          sphericalDelta.set(0, 0, 0);\\n          panOffset.set(0, 0, 0);\\n        }\\n\\n        scale = 1; // update condition is:\\n        // min(camera displacement, camera rotation in radians)^2 > EPS\\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\\n\\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\\n          scope.dispatchEvent(_changeEvent);\\n          lastPosition.copy(scope.object.position);\\n          lastQuaternion.copy(scope.object.quaternion);\\n          zoomChanged = false;\\n          return true;\\n        }\\n\\n        return false;\\n      };\\n    }();\\n\\n    _this.dispose = function () {\\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\\n\\n      if (scope._domElementKeyEvents !== null) {\\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\\n\\n    }; //\\n    // internals\\n    //\\n\\n\\n    var scope = _assertThisInitialized(_this);\\n\\n    var STATE = {\\n      NONE: -1,\\n      ROTATE: 0,\\n      DOLLY: 1,\\n      PAN: 2,\\n      TOUCH_ROTATE: 3,\\n      TOUCH_PAN: 4,\\n      TOUCH_DOLLY_PAN: 5,\\n      TOUCH_DOLLY_ROTATE: 6\\n    };\\n    var state = STATE.NONE;\\n    var EPS = 0.000001; // current position in spherical coordinates\\n\\n    var spherical = new _three.Spherical();\\n    var sphericalDelta = new _three.Spherical();\\n    var scale = 1;\\n    var panOffset = new _three.Vector3();\\n    var zoomChanged = false;\\n    var rotateStart = new _three.Vector2();\\n    var rotateEnd = new _three.Vector2();\\n    var rotateDelta = new _three.Vector2();\\n    var panStart = new _three.Vector2();\\n    var panEnd = new _three.Vector2();\\n    var panDelta = new _three.Vector2();\\n    var dollyStart = new _three.Vector2();\\n    var dollyEnd = new _three.Vector2();\\n    var dollyDelta = new _three.Vector2();\\n    var pointers = [];\\n    var pointerPositions = {};\\n\\n    function getAutoRotationAngle() {\\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\\n    }\\n\\n    function getZoomScale() {\\n      return Math.pow(0.95, scope.zoomSpeed);\\n    }\\n\\n    function rotateLeft(angle) {\\n      sphericalDelta.theta -= angle;\\n    }\\n\\n    function rotateUp(angle) {\\n      sphericalDelta.phi -= angle;\\n    }\\n\\n    var panLeft = function () {\\n      var v = new _three.Vector3();\\n      return function panLeft(distance, objectMatrix) {\\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\\n\\n        v.multiplyScalar(-distance);\\n        panOffset.add(v);\\n      };\\n    }();\\n\\n    var panUp = function () {\\n      var v = new _three.Vector3();\\n      return function panUp(distance, objectMatrix) {\\n        if (scope.screenSpacePanning === true) {\\n          v.setFromMatrixColumn(objectMatrix, 1);\\n        } else {\\n          v.setFromMatrixColumn(objectMatrix, 0);\\n          v.crossVectors(scope.object.up, v);\\n        }\\n\\n        v.multiplyScalar(distance);\\n        panOffset.add(v);\\n      };\\n    }(); // deltaX and deltaY are in pixels; right and down are positive\\n\\n\\n    var pan = function () {\\n      var offset = new _three.Vector3();\\n      return function pan(deltaX, deltaY) {\\n        var element = scope.domElement;\\n\\n        if (scope.object.isPerspectiveCamera) {\\n          // perspective\\n          var position = scope.object.position;\\n          offset.copy(position).sub(scope.target);\\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\\n\\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\\n\\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\\n        } else if (scope.object.isOrthographicCamera) {\\n          // orthographic\\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\\n        } else {\\n          // camera neither orthographic nor perspective\\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\\n          scope.enablePan = false;\\n        }\\n      };\\n    }();\\n\\n    function dollyOut(dollyScale) {\\n      if (scope.object.isPerspectiveCamera) {\\n        scale /= dollyScale;\\n      } else if (scope.object.isOrthographicCamera) {\\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\\n        scope.object.updateProjectionMatrix();\\n        zoomChanged = true;\\n      } else {\\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\\n        scope.enableZoom = false;\\n      }\\n    }\\n\\n    function dollyIn(dollyScale) {\\n      if (scope.object.isPerspectiveCamera) {\\n        scale *= dollyScale;\\n      } else if (scope.object.isOrthographicCamera) {\\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\\n        scope.object.updateProjectionMatrix();\\n        zoomChanged = true;\\n      } else {\\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\\n        scope.enableZoom = false;\\n      }\\n    } //\\n    // event callbacks - update the object state\\n    //\\n\\n\\n    function handleMouseDownRotate(event) {\\n      rotateStart.set(event.clientX, event.clientY);\\n    }\\n\\n    function handleMouseDownDolly(event) {\\n      dollyStart.set(event.clientX, event.clientY);\\n    }\\n\\n    function handleMouseDownPan(event) {\\n      panStart.set(event.clientX, event.clientY);\\n    }\\n\\n    function handleMouseMoveRotate(event) {\\n      rotateEnd.set(event.clientX, event.clientY);\\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\\n      var element = scope.domElement;\\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\\n\\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\\n      rotateStart.copy(rotateEnd);\\n      scope.update();\\n    }\\n\\n    function handleMouseMoveDolly(event) {\\n      dollyEnd.set(event.clientX, event.clientY);\\n      dollyDelta.subVectors(dollyEnd, dollyStart);\\n\\n      if (dollyDelta.y > 0) {\\n        dollyOut(getZoomScale());\\n      } else if (dollyDelta.y < 0) {\\n        dollyIn(getZoomScale());\\n      }\\n\\n      dollyStart.copy(dollyEnd);\\n      scope.update();\\n    }\\n\\n    function handleMouseMovePan(event) {\\n      panEnd.set(event.clientX, event.clientY);\\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\\n      pan(panDelta.x, panDelta.y);\\n      panStart.copy(panEnd);\\n      scope.update();\\n    }\\n\\n    function handleMouseUp()\\n    /*event*/\\n    {// no-op\\n    }\\n\\n    function handleMouseWheel(event) {\\n      if (event.deltaY < 0) {\\n        dollyIn(getZoomScale());\\n      } else if (event.deltaY > 0) {\\n        dollyOut(getZoomScale());\\n      }\\n\\n      scope.update();\\n    }\\n\\n    function handleKeyDown(event) {\\n      var needsUpdate = false;\\n\\n      switch (event.code) {\\n        case scope.keys.UP:\\n          pan(0, scope.keyPanSpeed);\\n          needsUpdate = true;\\n          break;\\n\\n        case scope.keys.BOTTOM:\\n          pan(0, -scope.keyPanSpeed);\\n          needsUpdate = true;\\n          break;\\n\\n        case scope.keys.LEFT:\\n          pan(scope.keyPanSpeed, 0);\\n          needsUpdate = true;\\n          break;\\n\\n        case scope.keys.RIGHT:\\n          pan(-scope.keyPanSpeed, 0);\\n          needsUpdate = true;\\n          break;\\n      }\\n\\n      if (needsUpdate) {\\n        // prevent the browser from scrolling on cursor keys\\n        event.preventDefault();\\n        scope.update();\\n      }\\n    }\\n\\n    function handleTouchStartRotate() {\\n      if (pointers.length === 1) {\\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\\n      } else {\\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\\n        rotateStart.set(x, y);\\n      }\\n    }\\n\\n    function handleTouchStartPan() {\\n      if (pointers.length === 1) {\\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\\n      } else {\\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\\n        panStart.set(x, y);\\n      }\\n    }\\n\\n    function handleTouchStartDolly() {\\n      var dx = pointers[0].pageX - pointers[1].pageX;\\n      var dy = pointers[0].pageY - pointers[1].pageY;\\n      var distance = Math.sqrt(dx * dx + dy * dy);\\n      dollyStart.set(0, distance);\\n    }\\n\\n    function handleTouchStartDollyPan() {\\n      if (scope.enableZoom) handleTouchStartDolly();\\n      if (scope.enablePan) handleTouchStartPan();\\n    }\\n\\n    function handleTouchStartDollyRotate() {\\n      if (scope.enableZoom) handleTouchStartDolly();\\n      if (scope.enableRotate) handleTouchStartRotate();\\n    }\\n\\n    function handleTouchMoveRotate(event) {\\n      if (pointers.length == 1) {\\n        rotateEnd.set(event.pageX, event.pageY);\\n      } else {\\n        var position = getSecondPointerPosition(event);\\n        var x = 0.5 * (event.pageX + position.x);\\n        var y = 0.5 * (event.pageY + position.y);\\n        rotateEnd.set(x, y);\\n      }\\n\\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\\n      var element = scope.domElement;\\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\\n\\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\\n      rotateStart.copy(rotateEnd);\\n    }\\n\\n    function handleTouchMovePan(event) {\\n      if (pointers.length === 1) {\\n        panEnd.set(event.pageX, event.pageY);\\n      } else {\\n        var position = getSecondPointerPosition(event);\\n        var x = 0.5 * (event.pageX + position.x);\\n        var y = 0.5 * (event.pageY + position.y);\\n        panEnd.set(x, y);\\n      }\\n\\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\\n      pan(panDelta.x, panDelta.y);\\n      panStart.copy(panEnd);\\n    }\\n\\n    function handleTouchMoveDolly(event) {\\n      var position = getSecondPointerPosition(event);\\n      var dx = event.pageX - position.x;\\n      var dy = event.pageY - position.y;\\n      var distance = Math.sqrt(dx * dx + dy * dy);\\n      dollyEnd.set(0, distance);\\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\\n      dollyOut(dollyDelta.y);\\n      dollyStart.copy(dollyEnd);\\n    }\\n\\n    function handleTouchMoveDollyPan(event) {\\n      if (scope.enableZoom) handleTouchMoveDolly(event);\\n      if (scope.enablePan) handleTouchMovePan(event);\\n    }\\n\\n    function handleTouchMoveDollyRotate(event) {\\n      if (scope.enableZoom) handleTouchMoveDolly(event);\\n      if (scope.enableRotate) handleTouchMoveRotate(event);\\n    }\\n\\n    function handleTouchEnd()\\n    /*event*/\\n    {} // no-op\\n    //\\n    // event handlers - FSM: listen for events and reset state\\n    //\\n\\n\\n    function onPointerDown(event) {\\n      if (scope.enabled === false) return;\\n\\n      if (pointers.length === 0) {\\n        scope.domElement.setPointerCapture(event.pointerId);\\n        scope.domElement.addEventListener('pointermove', onPointerMove);\\n        scope.domElement.addEventListener('pointerup', onPointerUp);\\n      } //\\n\\n\\n      addPointer(event);\\n\\n      if (event.pointerType === 'touch') {\\n        onTouchStart(event);\\n      } else {\\n        onMouseDown(event);\\n      }\\n    }\\n\\n    function onPointerMove(event) {\\n      if (scope.enabled === false) return;\\n\\n      if (event.pointerType === 'touch') {\\n        onTouchMove(event);\\n      } else {\\n        onMouseMove(event);\\n      }\\n    }\\n\\n    function onPointerUp(event) {\\n      if (scope.enabled === false) return;\\n\\n      if (event.pointerType === 'touch') {\\n        onTouchEnd();\\n      } else {\\n        onMouseUp(event);\\n      }\\n\\n      removePointer(event); //\\n\\n      if (pointers.length === 0) {\\n        scope.domElement.releasePointerCapture(event.pointerId);\\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\\n      }\\n    }\\n\\n    function onPointerCancel(event) {\\n      removePointer(event);\\n    }\\n\\n    function onMouseDown(event) {\\n      var mouseAction;\\n\\n      switch (event.button) {\\n        case 0:\\n          mouseAction = scope.mouseButtons.LEFT;\\n          break;\\n\\n        case 1:\\n          mouseAction = scope.mouseButtons.MIDDLE;\\n          break;\\n\\n        case 2:\\n          mouseAction = scope.mouseButtons.RIGHT;\\n          break;\\n\\n        default:\\n          mouseAction = -1;\\n      }\\n\\n      switch (mouseAction) {\\n        case _three.MOUSE.DOLLY:\\n          if (scope.enableZoom === false) return;\\n          handleMouseDownDolly(event);\\n          state = STATE.DOLLY;\\n          break;\\n\\n        case _three.MOUSE.ROTATE:\\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\\n            if (scope.enablePan === false) return;\\n            handleMouseDownPan(event);\\n            state = STATE.PAN;\\n          } else {\\n            if (scope.enableRotate === false) return;\\n            handleMouseDownRotate(event);\\n            state = STATE.ROTATE;\\n          }\\n\\n          break;\\n\\n        case _three.MOUSE.PAN:\\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\\n            if (scope.enableRotate === false) return;\\n            handleMouseDownRotate(event);\\n            state = STATE.ROTATE;\\n          } else {\\n            if (scope.enablePan === false) return;\\n            handleMouseDownPan(event);\\n            state = STATE.PAN;\\n          }\\n\\n          break;\\n\\n        default:\\n          state = STATE.NONE;\\n      }\\n\\n      if (state !== STATE.NONE) {\\n        scope.dispatchEvent(_startEvent);\\n      }\\n    }\\n\\n    function onMouseMove(event) {\\n      if (scope.enabled === false) return;\\n\\n      switch (state) {\\n        case STATE.ROTATE:\\n          if (scope.enableRotate === false) return;\\n          handleMouseMoveRotate(event);\\n          break;\\n\\n        case STATE.DOLLY:\\n          if (scope.enableZoom === false) return;\\n          handleMouseMoveDolly(event);\\n          break;\\n\\n        case STATE.PAN:\\n          if (scope.enablePan === false) return;\\n          handleMouseMovePan(event);\\n          break;\\n      }\\n    }\\n\\n    function onMouseUp(event) {\\n      handleMouseUp(event);\\n      scope.dispatchEvent(_endEvent);\\n      state = STATE.NONE;\\n    }\\n\\n    function onMouseWheel(event) {\\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\\n      event.preventDefault();\\n      scope.dispatchEvent(_startEvent);\\n      handleMouseWheel(event);\\n      scope.dispatchEvent(_endEvent);\\n    }\\n\\n    function onKeyDown(event) {\\n      if (scope.enabled === false || scope.enablePan === false) return;\\n      handleKeyDown(event);\\n    }\\n\\n    function onTouchStart(event) {\\n      trackPointer(event);\\n\\n      switch (pointers.length) {\\n        case 1:\\n          switch (scope.touches.ONE) {\\n            case _three.TOUCH.ROTATE:\\n              if (scope.enableRotate === false) return;\\n              handleTouchStartRotate();\\n              state = STATE.TOUCH_ROTATE;\\n              break;\\n\\n            case _three.TOUCH.PAN:\\n              if (scope.enablePan === false) return;\\n              handleTouchStartPan();\\n              state = STATE.TOUCH_PAN;\\n              break;\\n\\n            default:\\n              state = STATE.NONE;\\n          }\\n\\n          break;\\n\\n        case 2:\\n          switch (scope.touches.TWO) {\\n            case _three.TOUCH.DOLLY_PAN:\\n              if (scope.enableZoom === false && scope.enablePan === false) return;\\n              handleTouchStartDollyPan();\\n              state = STATE.TOUCH_DOLLY_PAN;\\n              break;\\n\\n            case _three.TOUCH.DOLLY_ROTATE:\\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\\n              handleTouchStartDollyRotate();\\n              state = STATE.TOUCH_DOLLY_ROTATE;\\n              break;\\n\\n            default:\\n              state = STATE.NONE;\\n          }\\n\\n          break;\\n\\n        default:\\n          state = STATE.NONE;\\n      }\\n\\n      if (state !== STATE.NONE) {\\n        scope.dispatchEvent(_startEvent);\\n      }\\n    }\\n\\n    function onTouchMove(event) {\\n      trackPointer(event);\\n\\n      switch (state) {\\n        case STATE.TOUCH_ROTATE:\\n          if (scope.enableRotate === false) return;\\n          handleTouchMoveRotate(event);\\n          scope.update();\\n          break;\\n\\n        case STATE.TOUCH_PAN:\\n          if (scope.enablePan === false) return;\\n          handleTouchMovePan(event);\\n          scope.update();\\n          break;\\n\\n        case STATE.TOUCH_DOLLY_PAN:\\n          if (scope.enableZoom === false && scope.enablePan === false) return;\\n          handleTouchMoveDollyPan(event);\\n          scope.update();\\n          break;\\n\\n        case STATE.TOUCH_DOLLY_ROTATE:\\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\\n          handleTouchMoveDollyRotate(event);\\n          scope.update();\\n          break;\\n\\n        default:\\n          state = STATE.NONE;\\n      }\\n    }\\n\\n    function onTouchEnd(event) {\\n      handleTouchEnd(event);\\n      scope.dispatchEvent(_endEvent);\\n      state = STATE.NONE;\\n    }\\n\\n    function onContextMenu(event) {\\n      if (scope.enabled === false) return;\\n      event.preventDefault();\\n    }\\n\\n    function addPointer(event) {\\n      pointers.push(event);\\n    }\\n\\n    function removePointer(event) {\\n      delete pointerPositions[event.pointerId];\\n\\n      for (var i = 0; i < pointers.length; i++) {\\n        if (pointers[i].pointerId == event.pointerId) {\\n          pointers.splice(i, 1);\\n          return;\\n        }\\n      }\\n    }\\n\\n    function trackPointer(event) {\\n      var position = pointerPositions[event.pointerId];\\n\\n      if (position === undefined) {\\n        position = new _three.Vector2();\\n        pointerPositions[event.pointerId] = position;\\n      }\\n\\n      position.set(event.pageX, event.pageY);\\n    }\\n\\n    function getSecondPointerPosition(event) {\\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\\n      return pointerPositions[pointer.pointerId];\\n    } //\\n\\n\\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\\n      passive: false\\n    }); // force an update at start\\n\\n    _this.update();\\n\\n    return _this;\\n  }\\n\\n  return OrbitControls;\\n}(_three.EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\\n// Unlike TrackballControls, it maintains the \\\"up\\\" direction object.up (+Y by default).\\n// This is very similar to OrbitControls, another set of touch behavior\\n//\\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\\n//    Pan - left mouse, or arrow keys / touch: one-finger move\\n\\n\\nexports.OrbitControls = OrbitControls;\\n\\nvar MapControls =\\n/*#__PURE__*/\\nfunction (_OrbitControls) {\\n  _inherits(MapControls, _OrbitControls);\\n\\n  function MapControls(object, domElement) {\\n    var _this2;\\n\\n    _classCallCheck(this, MapControls);\\n\\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MapControls).call(this, object, domElement));\\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\\n\\n    _this2.mouseButtons.LEFT = _three.MOUSE.PAN;\\n    _this2.mouseButtons.RIGHT = _three.MOUSE.ROTATE;\\n    _this2.touches.ONE = _three.TOUCH.PAN;\\n    _this2.touches.TWO = _three.TOUCH.DOLLY_ROTATE;\\n    return _this2;\\n  }\\n\\n  return MapControls;\\n}(OrbitControls);\\n\\nexports.MapControls = MapControls;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"_possibleConstructorReturn\",\"self\",\"call\",\"_assertThisInitialized\",\"_getPrototypeOf\",\"o\",\"Object\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"create\",\"value\",\"writable\",\"configurable\",\"_setPrototypeOf\",\"p\",\"defineProperty\",\"MapControls\",\"OrbitControls\",\"_three\",\"_changeEvent\",\"type\",\"_startEvent\",\"_endEvent\",\"_EventDispatcher\",\"object\",\"domElement\",\"getZoomScale\",\"Math\",\"pow\",\"scope\",\"zoomSpeed\",\"dollyOut\",\"dollyScale\",\"isPerspectiveCamera\",\"scale\",\"isOrthographicCamera\",\"zoom\",\"max\",\"minZoom\",\"min\",\"maxZoom\",\"updateProjectionMatrix\",\"zoomChanged\",\"console\",\"warn\",\"enableZoom\",\"dollyIn\",\"handleTouchStartRotate\",\"pointers\",\"length\",\"rotateStart\",\"set\",\"pageX\",\"pageY\",\"handleTouchStartPan\",\"panStart\",\"handleTouchStartDolly\",\"dx\",\"dy\",\"dollyStart\",\"sqrt\",\"distance\",\"handleTouchMoveRotate\",\"event\",\"rotateEnd\",\"position\",\"getSecondPointerPosition\",\"x\",\"y\",\"rotateDelta\",\"subVectors\",\"multiplyScalar\",\"rotateSpeed\",\"element\",\"sphericalDelta\",\"theta\",\"PI\",\"clientHeight\",\"phi\",\"copy\",\"handleTouchMovePan\",\"panEnd\",\"panDelta\",\"panSpeed\",\"pan\",\"handleTouchMoveDolly\",\"dollyEnd\",\"dollyDelta\",\"onPointerDown\",\"enabled\",\"setPointerCapture\",\"pointerId\",\"addEventListener\",\"onPointerMove\",\"onPointerUp\",\"push\",\"pointerType\",\"onTouchStart\",\"onMouseDown\",\"trackPointer\",\"state\",\"STATE\",\"TOUCH_ROTATE\",\"enableRotate\",\"update\",\"TOUCH_PAN\",\"enablePan\",\"TOUCH_DOLLY_PAN\",\"TOUCH_DOLLY_ROTATE\",\"NONE\",\"ROTATE\",\"clientX\",\"clientY\",\"DOLLY\",\"PAN\",\"dispatchEvent\",\"removePointer\",\"releasePointerCapture\",\"removeEventListener\",\"onPointerCancel\",\"button\",\"mouseAction\",\"mouseButtons\",\"LEFT\",\"MIDDLE\",\"RIGHT\",\"MOUSE\",\"ctrlKey\",\"metaKey\",\"shiftKey\",\"onMouseWheel\",\"preventDefault\",\"deltaY\",\"onKeyDown\",\"needsUpdate\",\"code\",\"keys\",\"UP\",\"keyPanSpeed\",\"BOTTOM\",\"touches\",\"ONE\",\"TOUCH\",\"TWO\",\"DOLLY_PAN\",\"DOLLY_ROTATE\",\"onContextMenu\",\"pointerPositions\",\"i\",\"splice\",\"undefined\",\"Vector2\",\"pointer\",\"_this\",\"document\",\"error\",\"style\",\"touchAction\",\"target\",\"Vector3\",\"minDistance\",\"maxDistance\",\"Infinity\",\"minPolarAngle\",\"maxPolarAngle\",\"minAzimuthAngle\",\"maxAzimuthAngle\",\"enableDamping\",\"dampingFactor\",\"screenSpacePanning\",\"autoRotate\",\"autoRotateSpeed\",\"target0\",\"clone\",\"position0\",\"zoom0\",\"_domElementKeyEvents\",\"getPolarAngle\",\"_this.getPolarAngle\",\"spherical\",\"getAzimuthalAngle\",\"_this.getAzimuthalAngle\",\"getDistance\",\"_this.getDistance\",\"distanceTo\",\"listenToKeyEvents\",\"_this.listenToKeyEvents\",\"saveState\",\"_this.saveState\",\"reset\",\"_this.reset\",\"offset\",\"quat\",\"setFromUnitVectors\",\"Quaternion\",\"up\",\"quatInverse\",\"invert\",\"lastPosition\",\"lastQuaternion\",\"twoPI\",\"sub\",\"applyQuaternion\",\"setFromVector3\",\"isFinite\",\"makeSafe\",\"radius\",\"addScaledVector\",\"panOffset\",\"add\",\"setFromSpherical\",\"lookAt\",\"distanceToSquared\",\"EPS\",\"dot\",\"quaternion\",\"dispose\",\"_this.dispose\",\"Spherical\",\"panLeft\",\"v\",\"objectMatrix\",\"setFromMatrixColumn\",\"panUp\",\"crossVectors\",\"deltaX\",\"targetDistance\",\"tan\",\"fov\",\"matrix\",\"right\",\"left\",\"clientWidth\",\"top\",\"bottom\",\"passive\",\"EventDispatcher\",\"_OrbitControls\",\"_this2\"]\n}\n"]