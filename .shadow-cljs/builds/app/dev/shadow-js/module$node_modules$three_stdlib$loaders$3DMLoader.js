["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/loaders/3DMLoader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$loaders$3DMLoader=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=\ndescriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};\nreturn _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};\nreturn _setPrototypeOf(o$jscomp$0,p$jscomp$0)}function Rhino3dmWorker(){function extractProperties(object){var result={},property;for(property in object){var value=object[property];\"function\"!==typeof value&&(\"object\"===_typeof(value)&&null!==value&&value.hasOwnProperty(\"constructor\")?result[property]={name:value.constructor.name,value:value.value}:result[property]=value)}return result}function curveToPoints(curve,pointLimit){var rc=[],ts=[];if(curve instanceof rhino.LineCurve)return[curve.pointAtStart,\ncurve.pointAtEnd];if(curve instanceof rhino.PolylineCurve){pointLimit=curve.pointCount;for(ts=0;ts<pointLimit;ts++)rc.push(curve.point(ts));return rc}if(curve instanceof rhino.PolyCurve){ts=curve.segmentCount;for(var _i8=0;_i8<ts;_i8++){var segment=curve.segmentCurve(_i8),segmentArray=curveToPoints(segment,pointLimit);rc=rc.concat(segmentArray);segment[\"delete\"]()}return rc}curve instanceof rhino.ArcCurve&&(pointLimit=Math.floor(curve.angleDegrees/5),pointLimit=2>pointLimit?2:pointLimit);if(curve instanceof\nrhino.NurbsCurve&&1===curve.degree){pointLimit=curve.tryGetPolyline();for(ts=0;ts<pointLimit.count;ts++)rc.push(pointLimit.get(ts));pointLimit[\"delete\"]();return rc}rc=curve.domain;_i8=pointLimit-1;for(segment=0;segment<pointLimit;segment++)if(segmentArray=rc[0]+segment/_i8*(rc[1]-rc[0]),segmentArray===rc[0]||segmentArray===rc[1])ts.push(segmentArray);else{var tan=curve.tangentAt(segmentArray),prevTan=curve.tangentAt(ts.slice(-1)[0]),denominator=Math.sqrt((tan[0]*tan[0]+tan[1]*tan[1]+tan[2]*tan[2])*\n(prevTan[0]*prevTan[0]+prevTan[1]*prevTan[1]+prevTan[2]*prevTan[2])),angle=void 0;angle=0===denominator?Math.PI/2:Math.acos(Math.max(-1,Math.min(1,(tan.x*prevTan.x+tan.y*prevTan.y+tan.z*prevTan.z)/denominator)));.1>angle||ts.push(segmentArray)}return rc=ts.map(function(t){return curve.pointAt(t)})}var libraryPending,libraryConfig,rhino;onmessage=function(e){var message=e.data;switch(message.type){case \"init\":libraryConfig=message.libraryConfig;var wasmBinary=libraryConfig.wasmBinary,RhinoModule;libraryPending=\n(new Promise(function(resolve){RhinoModule={wasmBinary,onRuntimeInitialized:resolve};rhino3dm(RhinoModule)})).then(function(){rhino=RhinoModule});break;case \"decode\":var buffer=message.buffer;libraryPending.then(function(){var rhino$jscomp$0=rhino,arr=new Uint8Array(buffer);arr=rhino$jscomp$0.File3dm.fromByteArray(arr);for(var objects=[],materials=[],layers=[],views=[],namedViews=[],groups=[],objs=arr.objects(),cnt=objs.count,i=0;i<cnt;i++){var _object=objs.get(i);var data=void 0;var object=_object;\nvar object$jscomp$0=arr;var _geometry=object.geometry();object=object.attributes();var objectType=_geometry.objectType;switch(objectType){case rhino.ObjectType.Curve:var pts=curveToPoints(_geometry,100);var position={};var mesh={};data={};position.itemSize=3;position.type=\"Float32Array\";position.array=[];for(var j=0;j<pts.length;j++)position.array.push(pts[j][0]),position.array.push(pts[j][1]),position.array.push(pts[j][2]);mesh.position=position;data.attributes=mesh;data={data};break;case rhino.ObjectType.Point:j=\n_geometry.location;position={};pts={};mesh={};data={};position.itemSize=3;position.type=\"Float32Array\";position.array=[j[0],j[1],j[2]];j=object.drawColor(object$jscomp$0);pts.itemSize=3;pts.type=\"Float32Array\";pts.array=[j.r/255,j.g/255,j.b/255];mesh.position=position;mesh.color=pts;data.attributes=mesh;data={data};break;case rhino.ObjectType.PointSet:case rhino.ObjectType.Mesh:data=_geometry.toThreejsJSON();break;case rhino.ObjectType.Brep:position=_geometry.faces();mesh=new rhino.Mesh;for(pts=0;pts<\nposition.count;pts++){j=position.get(pts);var _mesh=j.getMesh(rhino.MeshType.Any);_mesh&&(mesh.append(_mesh),_mesh[\"delete\"]());j[\"delete\"]()}0<mesh.faces().count&&(mesh.compact(),data=mesh.toThreejsJSON(),position[\"delete\"]());mesh[\"delete\"]();break;case rhino.ObjectType.Extrusion:if(mesh=_geometry.getMesh(rhino.MeshType.Any))data=mesh.toThreejsJSON(),mesh[\"delete\"]();break;case rhino.ObjectType.TextDot:data=extractProperties(_geometry);break;case rhino.ObjectType.Light:data=extractProperties(_geometry);\nbreak;case rhino.ObjectType.InstanceReference:data=extractProperties(_geometry);data.xform=extractProperties(_geometry.xform);data.xform.array=_geometry.xform.toFloatArray(!0);break;case rhino.ObjectType.SubD:_geometry.subdivide(3);if(mesh=rhino.Mesh.createFromSubDControlNet(_geometry))data=mesh.toThreejsJSON(),mesh[\"delete\"]();break;default:console.warn(\"THREE.3DMLoader: TODO: Implement \".concat(objectType.constructor.name))}data?(mesh=extractProperties(object),mesh.geometry=extractProperties(_geometry),\n0<object.groupCount&&(mesh.groupIds=object.getGroupList()),0<object.userStringCount&&(mesh.userStrings=object.getUserStrings()),0<_geometry.userStringCount&&(mesh.geometry.userStrings=_geometry.getUserStrings()),mesh.drawColor=object.drawColor(object$jscomp$0),objectType=objectType.constructor.name,objectType=objectType.substring(11,objectType.length),object$jscomp$0={geometry:data,attributes:mesh,objectType}):(console.warn(\"THREE.3DMLoader: \".concat(objectType.constructor.name,\" has no associated mesh geometry.\")),\nobject$jscomp$0=void 0);_object[\"delete\"]();object$jscomp$0&&objects.push(object$jscomp$0)}for(objs=0;objs<arr.instanceDefinitions().count();objs++)cnt=arr.instanceDefinitions().get(objs),i=extractProperties(cnt),i.objectIds=cnt.getObjectIds(),objects.push({geometry:null,attributes:i,objectType:\"InstanceDefinition\"});objs=[rhino$jscomp$0.TextureType.Diffuse,rhino$jscomp$0.TextureType.Bump,rhino$jscomp$0.TextureType.Transparency,rhino$jscomp$0.TextureType.Opacity,rhino$jscomp$0.TextureType.Emap];rhino$jscomp$0=\n[rhino$jscomp$0.TextureType.PBR_BaseColor,rhino$jscomp$0.TextureType.PBR_Subsurface,rhino$jscomp$0.TextureType.PBR_SubsurfaceScattering,rhino$jscomp$0.TextureType.PBR_SubsurfaceScatteringRadius,rhino$jscomp$0.TextureType.PBR_Metallic,rhino$jscomp$0.TextureType.PBR_Specular,rhino$jscomp$0.TextureType.PBR_SpecularTint,rhino$jscomp$0.TextureType.PBR_Roughness,rhino$jscomp$0.TextureType.PBR_Anisotropic,rhino$jscomp$0.TextureType.PBR_Anisotropic_Rotation,rhino$jscomp$0.TextureType.PBR_Sheen,rhino$jscomp$0.TextureType.PBR_SheenTint,\nrhino$jscomp$0.TextureType.PBR_Clearcoat,rhino$jscomp$0.TextureType.PBR_ClearcoatBump,rhino$jscomp$0.TextureType.PBR_ClearcoatRoughness,rhino$jscomp$0.TextureType.PBR_OpacityIor,rhino$jscomp$0.TextureType.PBR_OpacityRoughness,rhino$jscomp$0.TextureType.PBR_Emission,rhino$jscomp$0.TextureType.PBR_AmbientOcclusion,rhino$jscomp$0.TextureType.PBR_Displacement];for(cnt=0;cnt<arr.materials().count();cnt++){i=arr.materials().get(cnt);_object=i.physicallyBased();object$jscomp$0=extractProperties(i);_geometry=\n[];for(object=0;object<objs.length;object++)if(objectType=i.getTexture(objs[object]))mesh=objs[object].constructor.name,mesh=mesh.substring(12,mesh.length),data={type:mesh},(position=arr.getEmbeddedFileAsBase64(objectType.fileName))?data.image=\"data:image/png;base64,\"+position:(console.warn(\"THREE.3DMLoader: Image for \".concat(mesh,\" texture not embedded in file.\")),data.image=null),_geometry.push(data),objectType[\"delete\"]();object$jscomp$0.textures=_geometry;if(_object.supported){console.log(\"pbr true\");\nfor(object=0;object<rhino$jscomp$0.length;object++)if(objectType=i.getTexture(objs[object]))mesh=arr.getEmbeddedFileAsBase64(objectType.fileName),data=objs[object].constructor.name,data=data.substring(12,data.length),_geometry.push({type:data,image:\"data:image/png;base64,\"+mesh}),objectType[\"delete\"]();_geometry=extractProperties(i.physicallyBased());object$jscomp$0=Object.assign(_geometry,object$jscomp$0)}materials.push(object$jscomp$0);i[\"delete\"]();_object[\"delete\"]()}for(rhino$jscomp$0=0;rhino$jscomp$0<\narr.layers().count();rhino$jscomp$0++)objs=arr.layers().get(rhino$jscomp$0),cnt=extractProperties(objs),layers.push(cnt),objs[\"delete\"]();for(rhino$jscomp$0=0;rhino$jscomp$0<arr.views().count();rhino$jscomp$0++)objs=arr.views().get(rhino$jscomp$0),cnt=extractProperties(objs),views.push(cnt),objs[\"delete\"]();for(rhino$jscomp$0=0;rhino$jscomp$0<arr.namedViews().count();rhino$jscomp$0++)objs=arr.namedViews().get(rhino$jscomp$0),cnt=extractProperties(objs),namedViews.push(cnt),objs[\"delete\"]();for(rhino$jscomp$0=\n0;rhino$jscomp$0<arr.groups().count();rhino$jscomp$0++)objs=arr.groups().get(rhino$jscomp$0),cnt=extractProperties(objs),groups.push(cnt),objs[\"delete\"]();rhino$jscomp$0=extractProperties(arr.settings());arr[\"delete\"]();self.postMessage({type:\"decode\",id:message.id,data:{objects,materials,layers,views,namedViews,groups,settings:rhino$jscomp$0}})})}}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.Rhino3dmLoader=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),\n_taskCache=new WeakMap;global=function(_Loader){function Rhino3dmLoader(manager){if(!(this instanceof Rhino3dmLoader))throw new TypeError(\"Cannot call a class as a function\");manager=_getPrototypeOf(Rhino3dmLoader).call(this,manager);if(!manager||\"object\"!==_typeof(manager)&&\"function\"!==typeof manager){if(void 0===this)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");manager=this}manager.libraryPath=\"\";manager.libraryPending=null;manager.libraryBinary=null;manager.libraryConfig=\n{};manager.url=\"\";manager.workerLimit=4;manager.workerPool=[];manager.workerNextTaskID=1;manager.workerSourceURL=\"\";manager.workerConfig={};manager.materials=[];return manager}_inherits(Rhino3dmLoader,_Loader);_createClass(Rhino3dmLoader,[{key:\"setLibraryPath\",value:function(path){this.libraryPath=path;return this}},{key:\"setWorkerLimit\",value:function(workerLimit){this.workerLimit=workerLimit;return this}},{key:\"load\",value:function(url,onLoad,onProgress,onError){var _this2=this,loader=new _three.FileLoader(this.manager);\nloader.setPath(this.path);loader.setResponseType(\"arraybuffer\");loader.setRequestHeader(this.requestHeader);this.url=url;loader.load(url,function(buffer){if(_taskCache.has(buffer))return _taskCache.get(buffer).promise.then(onLoad)[\"catch\"](onError);_this2.decodeObjects(buffer,url).then(onLoad)[\"catch\"](onError)},onProgress,onError)}},{key:\"debug\",value:function(){console.log(\"Task load: \",this.workerPool.map(function(worker){return worker._taskLoad}))}},{key:\"decodeObjects\",value:function(buffer,\nurl){var _this3=this,worker,taskID,objectPending=this._getWorker(buffer.byteLength).then(function(_worker){worker=_worker;taskID=_this3.workerNextTaskID++;return new Promise(function(resolve,reject){worker._callbacks[taskID]={resolve,reject};worker.postMessage({type:\"decode\",id:taskID,buffer},[buffer])})}).then(function(message){return _this3._createGeometry(message.data)});objectPending[\"catch\"](function(){return!0}).then(function(){worker&&taskID&&_this3._releaseTask(worker,taskID)});_taskCache.set(buffer,\n{url,promise:objectPending});return objectPending}},{key:\"parse\",value:function(data,onLoad,onError){this.decodeObjects(data,\"\").then(onLoad)[\"catch\"](onError)}},{key:\"_compareMaterials\",value:function(material){var mat={};mat.name=material.name;mat.color={};mat.color.r=material.color.r;mat.color.g=material.color.g;mat.color.b=material.color.b;mat.type=material.type;for(var i=0;i<this.materials.length;i++){var m=this.materials[i],_mat={};_mat.name=m.name;_mat.color={};_mat.color.r=m.color.r;_mat.color.g=\nm.color.g;_mat.color.b=m.color.b;_mat.type=m.type;if(JSON.stringify(mat)===JSON.stringify(_mat))return m}this.materials.push(material);return material}},{key:\"_createMaterial\",value:function(material){if(void 0===material)return new _three.MeshStandardMaterial({color:new _three.Color(1,1,1),metalness:.8,name:\"default\",side:2});var _diffuseColor=material.diffuseColor,diffusecolor=new _three.Color(_diffuseColor.r/255,_diffuseColor.g/255,_diffuseColor.b/255);0===_diffuseColor.r&&0===_diffuseColor.g&&\n0===_diffuseColor.b&&(diffusecolor.r=1,diffusecolor.g=1,diffusecolor.b=1);_diffuseColor=new _three.MeshStandardMaterial({color:diffusecolor,name:material.name,side:2,transparent:0<material.transparency?!0:!1,opacity:1-material.transparency});diffusecolor=new _three.TextureLoader;for(var i=0;i<material.textures.length;i++){var texture=material.textures[i];if(null!==texture.image){var map=diffusecolor.load(texture.image);switch(texture.type){case \"Diffuse\":_diffuseColor.map=map;break;case \"Bump\":_diffuseColor.bumpMap=\nmap;break;case \"Transparency\":_diffuseColor.alphaMap=map;_diffuseColor.transparent=!0;break;case \"Emap\":_diffuseColor.envMap=map}}}return _diffuseColor}},{key:\"_createGeometry\",value:function(data){var object=new _three.Object3D,instanceDefinitionObjects=[],instanceDefinitions=[],instanceReferences=[];object.userData.layers=data.layers;object.userData.groups=data.groups;object.userData.settings=data.settings;object.userData.objectType=\"File3dm\";object.userData.materials=null;object.name=this.url;\nfor(var objects=data.objects,materials=data.materials,i=0;i<objects.length;i++){var obj=objects[i],attributes=obj.attributes;switch(obj.objectType){case \"InstanceDefinition\":instanceDefinitions.push(obj);break;case \"InstanceReference\":instanceReferences.push(obj);break;default:if(0<=attributes.materialIndex){var material=this._createMaterial(materials[attributes.materialIndex]);material=this._compareMaterials(material);obj=this._createObject(obj,material)}else material=this._createMaterial(),obj=\nthis._createObject(obj,material);void 0!==obj&&(obj.visible=data.layers[attributes.layerIndex]?data.layers[attributes.layerIndex].visible:!0,attributes.isInstanceDefinitionObject?instanceDefinitionObjects.push(obj):object.add(obj))}}for(data=0;data<instanceDefinitions.length;data++){materials=instanceDefinitions[data];objects=[];for(i=0;i<materials.attributes.objectIds.length;i++)for(attributes=materials.attributes.objectIds[i],obj=0;obj<instanceDefinitionObjects.length;obj++)attributes===instanceDefinitionObjects[obj].userData.attributes.id&&\nobjects.push(instanceDefinitionObjects[obj]);for(i=0;i<instanceReferences.length;i++)if(obj=instanceReferences[i],obj.geometry.parentIdefId===materials.attributes.id){attributes=new _three.Object3D;obj=obj.geometry.xform.array;material=new _three.Matrix4;material.set(obj[0],obj[1],obj[2],obj[3],obj[4],obj[5],obj[6],obj[7],obj[8],obj[9],obj[10],obj[11],obj[12],obj[13],obj[14],obj[15]);attributes.applyMatrix4(material);for(obj=0;obj<objects.length;obj++)attributes.add(objects[obj].clone(!0));object.add(attributes)}}object.userData.materials=\nthis.materials;return object}},{key:\"_createObject\",value:function(obj,mat){var loader=new _three.BufferGeometryLoader,attributes=obj.attributes;switch(obj.objectType){case \"Point\":case \"PointSet\":loader=loader.parse(obj.geometry);if(loader.attributes.hasOwnProperty(\"color\"))var material=new _three.PointsMaterial({vertexColors:!0,sizeAttenuation:!1,size:2});else{mat=attributes.drawColor;var color=new _three.Color(mat.r/255,mat.g/255,mat.b/255);material=new _three.PointsMaterial({color,sizeAttenuation:!1,\nsize:2})}material=this._compareMaterials(material);loader=new _three.Points(loader,material);loader.userData.attributes=attributes;loader.userData.objectType=obj.objectType;attributes.name&&(loader.name=attributes.name);return loader;case \"Mesh\":case \"Extrusion\":case \"SubD\":case \"Brep\":if(null===obj.geometry)break;loader=loader.parse(obj.geometry);loader.attributes.hasOwnProperty(\"color\")&&(mat.vertexColors=!0);null===mat&&(mat=this._createMaterial(),mat=this._compareMaterials(mat));loader=new _three.Mesh(loader,\nmat);loader.castShadow=attributes.castsShadows;loader.receiveShadow=attributes.receivesShadows;loader.userData.attributes=attributes;loader.userData.objectType=obj.objectType;attributes.name&&(loader.name=attributes.name);return loader;case \"Curve\":return loader=loader.parse(obj.geometry),mat=attributes.drawColor,color=new _three.Color(mat.r/255,mat.g/255,mat.b/255),material=new _three.LineBasicMaterial({color}),material=this._compareMaterials(material),loader=new _three.Line(loader,material),loader.userData.attributes=\nattributes,loader.userData.objectType=obj.objectType,attributes.name&&(loader.name=attributes.name),loader;case \"TextDot\":loader=obj.geometry;material=document.createElement(\"canvas\").getContext(\"2d\");color=\"\".concat(loader.fontHeight,\"px \").concat(loader.fontFace);material.font=color;var width=material.measureText(loader.text).width+10;mat=loader.fontHeight+10;var r=window.devicePixelRatio;material.canvas.width=width*r;material.canvas.height=mat*r;material.canvas.style.width=width+\"px\";material.canvas.style.height=\nmat+\"px\";material.setTransform(r,0,0,r,0,0);material.font=color;material.textBaseline=\"middle\";material.textAlign=\"center\";color=attributes.drawColor;material.fillStyle=\"rgba(\".concat(color.r,\",\").concat(color.g,\",\").concat(color.b,\",\").concat(color.a,\")\");material.fillRect(0,0,width,mat);material.fillStyle=\"white\";material.fillText(loader.text,width/2,mat/2);material=new _three.CanvasTexture(material.canvas);material.minFilter=_three.LinearFilter;material.wrapS=_three.ClampToEdgeWrapping;material.wrapT=\n_three.ClampToEdgeWrapping;material=new _three.SpriteMaterial({map:material,depthTest:!1});material=new _three.Sprite(material);material.position.set(loader.point[0],loader.point[1],loader.point[2]);material.scale.set(width/10,mat/10,1);material.userData.attributes=attributes;material.userData.objectType=obj.objectType;attributes.name&&(material.name=attributes.name);return material;case \"Light\":loader=obj.geometry;if(loader.isDirectionalLight)width=new _three.DirectionalLight,width.castShadow=attributes.castsShadows,\nwidth.position.set(loader.location[0],loader.location[1],loader.location[2]),width.target.position.set(loader.direction[0],loader.direction[1],loader.direction[2]),width.shadow.normalBias=.1;else if(loader.isPointLight)width=new _three.PointLight,width.castShadow=attributes.castsShadows,width.position.set(loader.location[0],loader.location[1],loader.location[2]),width.shadow.normalBias=.1;else if(loader.isRectangularLight)width=new _three.RectAreaLight,mat=Math.abs(loader.width[2]),material=Math.abs(loader.length[0]),\nwidth.position.set(loader.location[0]-material/2,loader.location[1],loader.location[2]-mat/2),width.height=material,width.width=mat,width.lookAt(new _three.Vector3(loader.direction[0],loader.direction[1],loader.direction[2]));else if(loader.isSpotLight)width=new _three.SpotLight,width.castShadow=attributes.castsShadows,width.position.set(loader.location[0],loader.location[1],loader.location[2]),width.target.position.set(loader.direction[0],loader.direction[1],loader.direction[2]),width.angle=loader.spotAngleRadians,\nwidth.shadow.normalBias=.1;else if(loader.isLinearLight){console.warn(\"THREE.3DMLoader:  No conversion exists for linear lights.\");break}width&&(width.intensity=loader.intensity,mat=loader.diffuse,color=new _three.Color(mat.r/255,mat.g/255,mat.b/255),width.color=color,width.userData.attributes=attributes,width.userData.objectType=obj.objectType);return width}}},{key:\"_initLibrary\",value:function(){var _this4=this;if(!this.libraryPending){var jsLoader=new _three.FileLoader(this.manager);jsLoader.setPath(this.libraryPath);\nvar jsContent=new Promise(function(resolve,reject){jsLoader.load(\"rhino3dm.js\",resolve,void 0,reject)}),binaryLoader=new _three.FileLoader(this.manager);binaryLoader.setPath(this.libraryPath);binaryLoader.setResponseType(\"arraybuffer\");var binaryContent=new Promise(function(resolve,reject){binaryLoader.load(\"rhino3dm.wasm\",resolve,void 0,reject)});this.libraryPending=Promise.all([jsContent,binaryContent]).then(function(_ref){var JSCompiler_temp=Array.isArray(_ref)?_ref:void 0;if(!JSCompiler_temp)if(Symbol.iterator in\nObject(_ref)||\"[object Arguments]\"===Object.prototype.toString.call(_ref)){JSCompiler_temp=[];var _n=!0,_d=!1,_e=void 0;try{var JSCompiler_temp$jscomp$0=_ref[Symbol.iterator]();for(var _s;!(_n=(_s=JSCompiler_temp$jscomp$0.next()).done)&&(JSCompiler_temp.push(_s.value),2!==JSCompiler_temp.length);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=JSCompiler_temp$jscomp$0[\"return\"])JSCompiler_temp$jscomp$0[\"return\"]()}finally{if(_d)throw _e;}}}else JSCompiler_temp=void 0;if(!(JSCompiler_temp$jscomp$0=\nJSCompiler_temp))throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");_ref=JSCompiler_temp$jscomp$0[0];_this4.libraryConfig.wasmBinary=JSCompiler_temp$jscomp$0[1];JSCompiler_temp$jscomp$0=Rhino3dmWorker.toString();_ref=[\"/* rhino3dm.js */\",_ref,\"/* worker */\",JSCompiler_temp$jscomp$0.substring(JSCompiler_temp$jscomp$0.indexOf(\"{\")+1,JSCompiler_temp$jscomp$0.lastIndexOf(\"}\"))].join(\"\\n\");_this4.workerSourceURL=URL.createObjectURL(new Blob([_ref]))})}return this.libraryPending}},\n{key:\"_getWorker\",value:function(taskCost){var _this5=this;return this._initLibrary().then(function(){if(_this5.workerPool.length<_this5.workerLimit){var _worker2=new Worker(_this5.workerSourceURL);_worker2._callbacks={};_worker2._taskCosts={};_worker2._taskLoad=0;_worker2.postMessage({type:\"init\",libraryConfig:_this5.libraryConfig});_worker2.onmessage=function(e){e=e.data;switch(e.type){case \"decode\":_worker2._callbacks[e.id].resolve(e);break;case \"error\":_worker2._callbacks[e.id].reject(e);break;\ndefault:console.error('THREE.Rhino3dmLoader: Unexpected message, \"'+e.type+'\"')}};_this5.workerPool.push(_worker2)}else _this5.workerPool.sort(function(a,b){return a._taskLoad>b._taskLoad?-1:1});var worker=_this5.workerPool[_this5.workerPool.length-1];worker._taskLoad+=taskCost;return worker})}},{key:\"_releaseTask\",value:function(worker,taskID){worker._taskLoad-=worker._taskCosts[taskID];delete worker._callbacks[taskID];delete worker._taskCosts[taskID]}},{key:\"dispose\",value:function(){for(var i=\n0;i<this.workerPool.length;++i)this.workerPool[i].terminate();this.workerPool.length=0;return this}}]);return Rhino3dmLoader}(_three.Loader);exports.Rhino3dmLoader=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$loaders$3DMLoader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rhino3dmLoader = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _taskCache = new WeakMap();\n\nvar Rhino3dmLoader =\n/*#__PURE__*/\nfunction (_Loader) {\n  _inherits(Rhino3dmLoader, _Loader);\n\n  function Rhino3dmLoader(manager) {\n    var _this;\n\n    _classCallCheck(this, Rhino3dmLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rhino3dmLoader).call(this, manager));\n    _this.libraryPath = '';\n    _this.libraryPending = null;\n    _this.libraryBinary = null;\n    _this.libraryConfig = {};\n    _this.url = '';\n    _this.workerLimit = 4;\n    _this.workerPool = [];\n    _this.workerNextTaskID = 1;\n    _this.workerSourceURL = '';\n    _this.workerConfig = {};\n    _this.materials = [];\n    return _this;\n  }\n\n  _createClass(Rhino3dmLoader, [{\n    key: \"setLibraryPath\",\n    value: function setLibraryPath(path) {\n      this.libraryPath = path;\n      return this;\n    }\n  }, {\n    key: \"setWorkerLimit\",\n    value: function setWorkerLimit(workerLimit) {\n      this.workerLimit = workerLimit;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this2 = this;\n\n      var loader = new _three.FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n      this.url = url;\n      loader.load(url, function (buffer) {\n        // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n        // again from this thread.\n        if (_taskCache.has(buffer)) {\n          var cachedTask = _taskCache.get(buffer);\n\n          return cachedTask.promise.then(onLoad)[\"catch\"](onError);\n        }\n\n        _this2.decodeObjects(buffer, url).then(onLoad)[\"catch\"](onError);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      console.log('Task load: ', this.workerPool.map(function (worker) {\n        return worker._taskLoad;\n      }));\n    }\n  }, {\n    key: \"decodeObjects\",\n    value: function decodeObjects(buffer, url) {\n      var _this3 = this;\n\n      var worker;\n      var taskID;\n      var taskCost = buffer.byteLength;\n\n      var objectPending = this._getWorker(taskCost).then(function (_worker) {\n        worker = _worker;\n        taskID = _this3.workerNextTaskID++; //hmmm\n\n        return new Promise(function (resolve, reject) {\n          worker._callbacks[taskID] = {\n            resolve: resolve,\n            reject: reject\n          };\n          worker.postMessage({\n            type: 'decode',\n            id: taskID,\n            buffer: buffer\n          }, [buffer]); //this.debug();\n        });\n      }).then(function (message) {\n        return _this3._createGeometry(message.data);\n      }); // Remove task from the task list.\n      // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n      objectPending[\"catch\"](function () {\n        return true;\n      }).then(function () {\n        if (worker && taskID) {\n          _this3._releaseTask(worker, taskID); //this.debug();\n\n        }\n      }); // Cache the task result.\n\n      _taskCache.set(buffer, {\n        url: url,\n        promise: objectPending\n      });\n\n      return objectPending;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data, onLoad, onError) {\n      this.decodeObjects(data, '').then(onLoad)[\"catch\"](onError);\n    }\n  }, {\n    key: \"_compareMaterials\",\n    value: function _compareMaterials(material) {\n      var mat = {};\n      mat.name = material.name;\n      mat.color = {};\n      mat.color.r = material.color.r;\n      mat.color.g = material.color.g;\n      mat.color.b = material.color.b;\n      mat.type = material.type;\n\n      for (var i = 0; i < this.materials.length; i++) {\n        var m = this.materials[i];\n        var _mat = {};\n        _mat.name = m.name;\n        _mat.color = {};\n        _mat.color.r = m.color.r;\n        _mat.color.g = m.color.g;\n        _mat.color.b = m.color.b;\n        _mat.type = m.type;\n\n        if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n          return m;\n        }\n      }\n\n      this.materials.push(material);\n      return material;\n    }\n  }, {\n    key: \"_createMaterial\",\n    value: function _createMaterial(material) {\n      if (material === undefined) {\n        return new _three.MeshStandardMaterial({\n          color: new _three.Color(1, 1, 1),\n          metalness: 0.8,\n          name: 'default',\n          side: 2\n        });\n      }\n\n      var _diffuseColor = material.diffuseColor;\n      var diffusecolor = new _three.Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n\n      if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n        diffusecolor.r = 1;\n        diffusecolor.g = 1;\n        diffusecolor.b = 1;\n      } // console.log( material );\n\n\n      var mat = new _three.MeshStandardMaterial({\n        color: diffusecolor,\n        name: material.name,\n        side: 2,\n        transparent: material.transparency > 0 ? true : false,\n        opacity: 1.0 - material.transparency\n      });\n      var textureLoader = new _three.TextureLoader();\n\n      for (var i = 0; i < material.textures.length; i++) {\n        var texture = material.textures[i];\n\n        if (texture.image !== null) {\n          var map = textureLoader.load(texture.image);\n\n          switch (texture.type) {\n            case 'Diffuse':\n              mat.map = map;\n              break;\n\n            case 'Bump':\n              mat.bumpMap = map;\n              break;\n\n            case 'Transparency':\n              mat.alphaMap = map;\n              mat.transparent = true;\n              break;\n\n            case 'Emap':\n              mat.envMap = map;\n              break;\n          }\n        }\n      }\n\n      return mat;\n    }\n  }, {\n    key: \"_createGeometry\",\n    value: function _createGeometry(data) {\n      // console.log(data);\n      var object = new _three.Object3D();\n      var instanceDefinitionObjects = [];\n      var instanceDefinitions = [];\n      var instanceReferences = [];\n      object.userData['layers'] = data.layers;\n      object.userData['groups'] = data.groups;\n      object.userData['settings'] = data.settings;\n      object.userData['objectType'] = 'File3dm';\n      object.userData['materials'] = null;\n      object.name = this.url;\n      var objects = data.objects;\n      var materials = data.materials;\n\n      for (var i = 0; i < objects.length; i++) {\n        var obj = objects[i];\n        var attributes = obj.attributes;\n\n        switch (obj.objectType) {\n          case 'InstanceDefinition':\n            instanceDefinitions.push(obj);\n            break;\n\n          case 'InstanceReference':\n            instanceReferences.push(obj);\n            break;\n\n          default:\n            var _object = void 0;\n\n            if (attributes.materialIndex >= 0) {\n              var rMaterial = materials[attributes.materialIndex];\n\n              var material = this._createMaterial(rMaterial);\n\n              material = this._compareMaterials(material);\n              _object = this._createObject(obj, material);\n            } else {\n              var _material2 = this._createMaterial();\n\n              _object = this._createObject(obj, _material2);\n            }\n\n            if (_object === undefined) {\n              continue;\n            }\n\n            var layer = data.layers[attributes.layerIndex];\n            _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n\n            if (attributes.isInstanceDefinitionObject) {\n              instanceDefinitionObjects.push(_object);\n            } else {\n              object.add(_object);\n            }\n\n            break;\n        }\n      }\n\n      for (var _i = 0; _i < instanceDefinitions.length; _i++) {\n        var iDef = instanceDefinitions[_i];\n        objects = [];\n\n        for (var j = 0; j < iDef.attributes.objectIds.length; j++) {\n          var objId = iDef.attributes.objectIds[j];\n\n          for (var p = 0; p < instanceDefinitionObjects.length; p++) {\n            var idoId = instanceDefinitionObjects[p].userData.attributes.id;\n\n            if (objId === idoId) {\n              objects.push(instanceDefinitionObjects[p]);\n            }\n          }\n        } // Currently clones geometry and does not take advantage of instancing\n\n\n        for (var _j = 0; _j < instanceReferences.length; _j++) {\n          var iRef = instanceReferences[_j];\n\n          if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n            var iRefObject = new _three.Object3D();\n            var xf = iRef.geometry.xform.array;\n            var matrix = new _three.Matrix4();\n            matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n            iRefObject.applyMatrix4(matrix);\n\n            for (var _p = 0; _p < objects.length; _p++) {\n              iRefObject.add(objects[_p].clone(true));\n            }\n\n            object.add(iRefObject);\n          }\n        }\n      }\n\n      object.userData['materials'] = this.materials;\n      return object;\n    }\n  }, {\n    key: \"_createObject\",\n    value: function _createObject(obj, mat) {\n      var loader = new _three.BufferGeometryLoader();\n      var attributes = obj.attributes;\n\n      var geometry, material, _color, color;\n\n      switch (obj.objectType) {\n        case 'Point':\n        case 'PointSet':\n          geometry = loader.parse(obj.geometry);\n\n          if (geometry.attributes.hasOwnProperty('color')) {\n            material = new _three.PointsMaterial({\n              vertexColors: true,\n              sizeAttenuation: false,\n              size: 2\n            });\n          } else {\n            _color = attributes.drawColor;\n            color = new _three.Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n            material = new _three.PointsMaterial({\n              color: color,\n              sizeAttenuation: false,\n              size: 2\n            });\n          }\n\n          material = this._compareMaterials(material);\n          var points = new _three.Points(geometry, material);\n          points.userData['attributes'] = attributes;\n          points.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            points.name = attributes.name;\n          }\n\n          return points;\n\n        case 'Mesh':\n        case 'Extrusion':\n        case 'SubD':\n        case 'Brep':\n          if (obj.geometry === null) return;\n          geometry = loader.parse(obj.geometry);\n\n          if (geometry.attributes.hasOwnProperty('color')) {\n            mat.vertexColors = true;\n          }\n\n          if (mat === null) {\n            mat = this._createMaterial();\n            mat = this._compareMaterials(mat);\n          }\n\n          var mesh = new _three.Mesh(geometry, mat);\n          mesh.castShadow = attributes.castsShadows;\n          mesh.receiveShadow = attributes.receivesShadows;\n          mesh.userData['attributes'] = attributes;\n          mesh.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            mesh.name = attributes.name;\n          }\n\n          return mesh;\n\n        case 'Curve':\n          geometry = loader.parse(obj.geometry);\n          _color = attributes.drawColor;\n          color = new _three.Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new _three.LineBasicMaterial({\n            color: color\n          });\n          material = this._compareMaterials(material);\n          var lines = new _three.Line(geometry, material);\n          lines.userData['attributes'] = attributes;\n          lines.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            lines.name = attributes.name;\n          }\n\n          return lines;\n\n        case 'TextDot':\n          geometry = obj.geometry;\n          var ctx = document.createElement('canvas').getContext('2d');\n          var font = \"\".concat(geometry.fontHeight, \"px \").concat(geometry.fontFace);\n          ctx.font = font;\n          var width = ctx.measureText(geometry.text).width + 10;\n          var height = geometry.fontHeight + 10;\n          var r = window.devicePixelRatio;\n          ctx.canvas.width = width * r;\n          ctx.canvas.height = height * r;\n          ctx.canvas.style.width = width + 'px';\n          ctx.canvas.style.height = height + 'px';\n          ctx.setTransform(r, 0, 0, r, 0, 0);\n          ctx.font = font;\n          ctx.textBaseline = 'middle';\n          ctx.textAlign = 'center';\n          color = attributes.drawColor;\n          ctx.fillStyle = \"rgba(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b, \",\").concat(color.a, \")\");\n          ctx.fillRect(0, 0, width, height);\n          ctx.fillStyle = 'white';\n          ctx.fillText(geometry.text, width / 2, height / 2);\n          var texture = new _three.CanvasTexture(ctx.canvas);\n          texture.minFilter = _three.LinearFilter;\n          texture.wrapS = _three.ClampToEdgeWrapping;\n          texture.wrapT = _three.ClampToEdgeWrapping;\n          material = new _three.SpriteMaterial({\n            map: texture,\n            depthTest: false\n          });\n          var sprite = new _three.Sprite(material);\n          sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n          sprite.scale.set(width / 10, height / 10, 1.0);\n          sprite.userData['attributes'] = attributes;\n          sprite.userData['objectType'] = obj.objectType;\n\n          if (attributes.name) {\n            sprite.name = attributes.name;\n          }\n\n          return sprite;\n\n        case 'Light':\n          geometry = obj.geometry;\n          var light;\n\n          if (geometry.isDirectionalLight) {\n            light = new _three.DirectionalLight();\n            light.castShadow = attributes.castsShadows;\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n            light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n            light.shadow.normalBias = 0.1;\n          } else if (geometry.isPointLight) {\n            light = new _three.PointLight();\n            light.castShadow = attributes.castsShadows;\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n            light.shadow.normalBias = 0.1;\n          } else if (geometry.isRectangularLight) {\n            light = new _three.RectAreaLight();\n\n            var _width = Math.abs(geometry.width[2]);\n\n            var _height = Math.abs(geometry.length[0]);\n\n            light.position.set(geometry.location[0] - _height / 2, geometry.location[1], geometry.location[2] - _width / 2);\n            light.height = _height;\n            light.width = _width;\n            light.lookAt(new _three.Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n          } else if (geometry.isSpotLight) {\n            light = new _three.SpotLight();\n            light.castShadow = attributes.castsShadows;\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n            light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n            light.angle = geometry.spotAngleRadians;\n            light.shadow.normalBias = 0.1;\n          } else if (geometry.isLinearLight) {\n            console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n            return;\n          }\n\n          if (light) {\n            light.intensity = geometry.intensity;\n            _color = geometry.diffuse;\n            color = new _three.Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n            light.color = color;\n            light.userData['attributes'] = attributes;\n            light.userData['objectType'] = obj.objectType;\n          }\n\n          return light;\n      }\n    }\n  }, {\n    key: \"_initLibrary\",\n    value: function _initLibrary() {\n      var _this4 = this;\n\n      if (!this.libraryPending) {\n        // Load rhino3dm wrapper.\n        var jsLoader = new _three.FileLoader(this.manager);\n        jsLoader.setPath(this.libraryPath);\n        var jsContent = new Promise(function (resolve, reject) {\n          jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n        }); // Load rhino3dm WASM binary.\n\n        var binaryLoader = new _three.FileLoader(this.manager);\n        binaryLoader.setPath(this.libraryPath);\n        binaryLoader.setResponseType('arraybuffer');\n        var binaryContent = new Promise(function (resolve, reject) {\n          binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n        });\n        this.libraryPending = Promise.all([jsContent, binaryContent]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              jsContent = _ref2[0],\n              binaryContent = _ref2[1];\n\n          //this.libraryBinary = binaryContent;\n          _this4.libraryConfig.wasmBinary = binaryContent;\n          var fn = Rhino3dmWorker.toString();\n          var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n          _this4.workerSourceURL = URL.createObjectURL(new Blob([body]));\n        });\n      }\n\n      return this.libraryPending;\n    }\n  }, {\n    key: \"_getWorker\",\n    value: function _getWorker(taskCost) {\n      var _this5 = this;\n\n      return this._initLibrary().then(function () {\n        if (_this5.workerPool.length < _this5.workerLimit) {\n          var _worker2 = new Worker(_this5.workerSourceURL);\n\n          _worker2._callbacks = {};\n          _worker2._taskCosts = {};\n          _worker2._taskLoad = 0;\n\n          _worker2.postMessage({\n            type: 'init',\n            libraryConfig: _this5.libraryConfig\n          });\n\n          _worker2.onmessage = function (e) {\n            var message = e.data;\n\n            switch (message.type) {\n              case 'decode':\n                _worker2._callbacks[message.id].resolve(message);\n\n                break;\n\n              case 'error':\n                _worker2._callbacks[message.id].reject(message);\n\n                break;\n\n              default:\n                console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n            }\n          };\n\n          _this5.workerPool.push(_worker2);\n        } else {\n          _this5.workerPool.sort(function (a, b) {\n            return a._taskLoad > b._taskLoad ? -1 : 1;\n          });\n        }\n\n        var worker = _this5.workerPool[_this5.workerPool.length - 1];\n        worker._taskLoad += taskCost;\n        return worker;\n      });\n    }\n  }, {\n    key: \"_releaseTask\",\n    value: function _releaseTask(worker, taskID) {\n      worker._taskLoad -= worker._taskCosts[taskID];\n      delete worker._callbacks[taskID];\n      delete worker._taskCosts[taskID];\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      for (var i = 0; i < this.workerPool.length; ++i) {\n        this.workerPool[i].terminate();\n      }\n\n      this.workerPool.length = 0;\n      return this;\n    }\n  }]);\n\n  return Rhino3dmLoader;\n}(_three.Loader);\n/* WEB WORKER */\n\n\nexports.Rhino3dmLoader = Rhino3dmLoader;\n\nfunction Rhino3dmWorker() {\n  var libraryPending;\n  var libraryConfig;\n  var rhino;\n\n  onmessage = function onmessage(e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        var wasmBinary = libraryConfig.wasmBinary;\n        var RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary: wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(function () {\n          rhino = RhinoModule;\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        libraryPending.then(function () {\n          var data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data: data\n          });\n        });\n        break;\n    }\n  };\n\n  function decodeObjects(rhino, buffer) {\n    var arr = new Uint8Array(buffer);\n    var doc = rhino.File3dm.fromByteArray(arr);\n    var objects = [];\n    var materials = [];\n    var layers = [];\n    var views = [];\n    var namedViews = [];\n    var groups = []; //Handle objects\n\n    var objs = doc.objects();\n    var cnt = objs.count;\n\n    for (var i = 0; i < cnt; i++) {\n      var _object = objs.get(i);\n\n      var object = extractObjectData(_object, doc);\n\n      _object[\"delete\"]();\n\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\n    for (var _i2 = 0; _i2 < doc.instanceDefinitions().count(); _i2++) {\n      var idef = doc.instanceDefinitions().get(_i2);\n      var idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n\n    var textureTypes = [// rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n\n    for (var _i3 = 0; _i3 < doc.materials().count(); _i3++) {\n      var _material = doc.materials().get(_i3);\n\n      var _pbrMaterial = _material.physicallyBased();\n\n      var material = extractProperties(_material);\n      var textures = [];\n\n      for (var j = 0; j < textureTypes.length; j++) {\n        var _texture = _material.getTexture(textureTypes[j]);\n\n        if (_texture) {\n          var textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          var texture = {\n            type: textureType\n          };\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(\"THREE.3DMLoader: Image for \".concat(textureType, \" texture not embedded in file.\"));\n            texture.image = null;\n          }\n\n          textures.push(texture);\n\n          _texture[\"delete\"]();\n        }\n      }\n\n      material.textures = textures;\n\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n\n        for (var _j2 = 0; _j2 < pbrTextureTypes.length; _j2++) {\n          var _texture2 = _material.getTexture(textureTypes[_j2]);\n\n          if (_texture2) {\n            var _image = doc.getEmbeddedFileAsBase64(_texture2.fileName);\n\n            var _textureType = textureTypes[_j2].constructor.name;\n            _textureType = _textureType.substring(12, _textureType.length);\n            var _texture3 = {\n              type: _textureType,\n              image: 'data:image/png;base64,' + _image\n            };\n            textures.push(_texture3);\n\n            _texture2[\"delete\"]();\n          }\n        }\n\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n\n      materials.push(material);\n\n      _material[\"delete\"]();\n\n      _pbrMaterial[\"delete\"]();\n    } // Handle layers\n\n\n    for (var _i4 = 0; _i4 < doc.layers().count(); _i4++) {\n      var _layer = doc.layers().get(_i4);\n\n      var layer = extractProperties(_layer);\n      layers.push(layer);\n\n      _layer[\"delete\"]();\n    } // Handle views\n\n\n    for (var _i5 = 0; _i5 < doc.views().count(); _i5++) {\n      var _view = doc.views().get(_i5);\n\n      var view = extractProperties(_view);\n      views.push(view);\n\n      _view[\"delete\"]();\n    } // Handle named views\n\n\n    for (var _i6 = 0; _i6 < doc.namedViews().count(); _i6++) {\n      var _namedView = doc.namedViews().get(_i6);\n\n      var namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n\n      _namedView[\"delete\"]();\n    } // Handle groups\n\n\n    for (var _i7 = 0; _i7 < doc.groups().count(); _i7++) {\n      var _group = doc.groups().get(_i7);\n\n      var group = extractProperties(_group);\n      groups.push(group);\n\n      _group[\"delete\"]();\n    } // Handle settings\n\n\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc[\"delete\"]();\n    return {\n      objects: objects,\n      materials: materials,\n      layers: layers,\n      views: views,\n      namedViews: namedViews,\n      groups: groups,\n      settings: settings\n    };\n  }\n\n  function extractObjectData(object, doc) {\n    var _geometry = object.geometry();\n\n    var _attributes = object.attributes();\n\n    var objectType = _geometry.objectType;\n    var geometry, attributes, position, data, mesh; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        var pts = curveToPoints(_geometry, 100);\n        position = {};\n        attributes = {};\n        data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n\n        for (var j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data: data\n        };\n        break;\n\n      case rhino.ObjectType.Point:\n        var pt = _geometry.location;\n        position = {};\n        var color = {};\n        attributes = {};\n        data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n\n        var _color = _attributes.drawColor(doc);\n\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data: data\n        };\n        break;\n\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n\n      case rhino.ObjectType.Brep:\n        var faces = _geometry.faces();\n\n        mesh = new rhino.Mesh();\n\n        for (var faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          var face = faces.get(faceIndex);\n\n          var _mesh = face.getMesh(rhino.MeshType.Any);\n\n          if (_mesh) {\n            mesh.append(_mesh);\n\n            _mesh[\"delete\"]();\n          }\n\n          face[\"delete\"]();\n        }\n\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces[\"delete\"]();\n        }\n\n        mesh[\"delete\"]();\n        break;\n\n      case rhino.ObjectType.Extrusion:\n        mesh = _geometry.getMesh(rhino.MeshType.Any);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh[\"delete\"]();\n        }\n\n        break;\n\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n\n        mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh[\"delete\"]();\n        }\n\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(\"THREE.3DMLoader: TODO: Implement \".concat(objectType.constructor.name));\n        break;\n    }\n\n    if (geometry) {\n      attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry: geometry,\n        attributes: attributes,\n        objectType: objectType\n      };\n    } else {\n      console.warn(\"THREE.3DMLoader: \".concat(objectType.constructor.name, \" has no associated mesh geometry.\"));\n    }\n  }\n\n  function extractProperties(object) {\n    var result = {};\n\n    for (var property in object) {\n      var value = object[property];\n\n      if (typeof value !== 'function') {\n        if (_typeof(value) === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function curveToPoints(curve, pointLimit) {\n    var pointCount = pointLimit;\n    var rc = [];\n    var ts = [];\n\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n\n      for (var i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.PolyCurve) {\n      var segmentCount = curve.segmentCount;\n\n      for (var _i8 = 0; _i8 < segmentCount; _i8++) {\n        var segment = curve.segmentCurve(_i8);\n        var segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment[\"delete\"]();\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      var pLine = curve.tryGetPolyline();\n\n      for (var _i9 = 0; _i9 < pLine.count; _i9++) {\n        rc.push(pLine.get(_i9));\n      }\n\n      pLine[\"delete\"]();\n      return rc;\n    }\n\n    var domain = curve.domain;\n    var divisions = pointCount - 1.0;\n\n    for (var j = 0; j < pointCount; j++) {\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\n\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n\n      var tan = curve.tangentAt(t);\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      var denominator = Math.sqrt(tS * ptS);\n      var angle = void 0;\n\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n\n    rc = ts.map(function (t) {\n      return curve.pointAt(t);\n    });\n    return rc;\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["map","intensity","libraryPending","wrapS","libraryBinary","promise","namedViews","userStrings","onRuntimeInitialized","width","depthTest","url","receiveShadow","resolve","itemSize","prototype","height","wasmBinary","transparent","side","settings","image","castShadow","libraryPath","normalBias","_taskCosts","key","workerPool","__esModule","workerSourceURL","alphaMap","id","xform","bumpMap","objects","materials","buffer","angle","objectIds","position","name","configurable","value","visible","geometry","enumerable","vertexColors","workerNextTaskID","views","_taskLoad","writable","_callbacks","groupIds","font","length","textBaseline","workerConfig","attributes","libraryConfig","type","b","textures","r","wrapT","sizeAttenuation","layers","__proto__","g","Rhino3dmLoader","envMap","size","drawColor","metalness","reject","minFilter","workerLimit","data","color","array","opacity","groups","objectType","onmessage","textAlign","constructor","fillStyle"]],"~:compiled-at",1630917515914,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$loaders$3DMLoader.js\",\n\"lineCount\":46,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/loaders/3DMLoader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$loaders$3DMLoader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Rhino3dmLoader = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); }\\n\\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \\\"[object Arguments]\\\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\nvar _taskCache = new WeakMap();\\n\\nvar Rhino3dmLoader =\\n/*#__PURE__*/\\nfunction (_Loader) {\\n  _inherits(Rhino3dmLoader, _Loader);\\n\\n  function Rhino3dmLoader(manager) {\\n    var _this;\\n\\n    _classCallCheck(this, Rhino3dmLoader);\\n\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rhino3dmLoader).call(this, manager));\\n    _this.libraryPath = '';\\n    _this.libraryPending = null;\\n    _this.libraryBinary = null;\\n    _this.libraryConfig = {};\\n    _this.url = '';\\n    _this.workerLimit = 4;\\n    _this.workerPool = [];\\n    _this.workerNextTaskID = 1;\\n    _this.workerSourceURL = '';\\n    _this.workerConfig = {};\\n    _this.materials = [];\\n    return _this;\\n  }\\n\\n  _createClass(Rhino3dmLoader, [{\\n    key: \\\"setLibraryPath\\\",\\n    value: function setLibraryPath(path) {\\n      this.libraryPath = path;\\n      return this;\\n    }\\n  }, {\\n    key: \\\"setWorkerLimit\\\",\\n    value: function setWorkerLimit(workerLimit) {\\n      this.workerLimit = workerLimit;\\n      return this;\\n    }\\n  }, {\\n    key: \\\"load\\\",\\n    value: function load(url, onLoad, onProgress, onError) {\\n      var _this2 = this;\\n\\n      var loader = new _three.FileLoader(this.manager);\\n      loader.setPath(this.path);\\n      loader.setResponseType('arraybuffer');\\n      loader.setRequestHeader(this.requestHeader);\\n      this.url = url;\\n      loader.load(url, function (buffer) {\\n        // Check for an existing task using this buffer. A transferred buffer cannot be transferred\\n        // again from this thread.\\n        if (_taskCache.has(buffer)) {\\n          var cachedTask = _taskCache.get(buffer);\\n\\n          return cachedTask.promise.then(onLoad)[\\\"catch\\\"](onError);\\n        }\\n\\n        _this2.decodeObjects(buffer, url).then(onLoad)[\\\"catch\\\"](onError);\\n      }, onProgress, onError);\\n    }\\n  }, {\\n    key: \\\"debug\\\",\\n    value: function debug() {\\n      console.log('Task load: ', this.workerPool.map(function (worker) {\\n        return worker._taskLoad;\\n      }));\\n    }\\n  }, {\\n    key: \\\"decodeObjects\\\",\\n    value: function decodeObjects(buffer, url) {\\n      var _this3 = this;\\n\\n      var worker;\\n      var taskID;\\n      var taskCost = buffer.byteLength;\\n\\n      var objectPending = this._getWorker(taskCost).then(function (_worker) {\\n        worker = _worker;\\n        taskID = _this3.workerNextTaskID++; //hmmm\\n\\n        return new Promise(function (resolve, reject) {\\n          worker._callbacks[taskID] = {\\n            resolve: resolve,\\n            reject: reject\\n          };\\n          worker.postMessage({\\n            type: 'decode',\\n            id: taskID,\\n            buffer: buffer\\n          }, [buffer]); //this.debug();\\n        });\\n      }).then(function (message) {\\n        return _this3._createGeometry(message.data);\\n      }); // Remove task from the task list.\\n      // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\\n\\n\\n      objectPending[\\\"catch\\\"](function () {\\n        return true;\\n      }).then(function () {\\n        if (worker && taskID) {\\n          _this3._releaseTask(worker, taskID); //this.debug();\\n\\n        }\\n      }); // Cache the task result.\\n\\n      _taskCache.set(buffer, {\\n        url: url,\\n        promise: objectPending\\n      });\\n\\n      return objectPending;\\n    }\\n  }, {\\n    key: \\\"parse\\\",\\n    value: function parse(data, onLoad, onError) {\\n      this.decodeObjects(data, '').then(onLoad)[\\\"catch\\\"](onError);\\n    }\\n  }, {\\n    key: \\\"_compareMaterials\\\",\\n    value: function _compareMaterials(material) {\\n      var mat = {};\\n      mat.name = material.name;\\n      mat.color = {};\\n      mat.color.r = material.color.r;\\n      mat.color.g = material.color.g;\\n      mat.color.b = material.color.b;\\n      mat.type = material.type;\\n\\n      for (var i = 0; i < this.materials.length; i++) {\\n        var m = this.materials[i];\\n        var _mat = {};\\n        _mat.name = m.name;\\n        _mat.color = {};\\n        _mat.color.r = m.color.r;\\n        _mat.color.g = m.color.g;\\n        _mat.color.b = m.color.b;\\n        _mat.type = m.type;\\n\\n        if (JSON.stringify(mat) === JSON.stringify(_mat)) {\\n          return m;\\n        }\\n      }\\n\\n      this.materials.push(material);\\n      return material;\\n    }\\n  }, {\\n    key: \\\"_createMaterial\\\",\\n    value: function _createMaterial(material) {\\n      if (material === undefined) {\\n        return new _three.MeshStandardMaterial({\\n          color: new _three.Color(1, 1, 1),\\n          metalness: 0.8,\\n          name: 'default',\\n          side: 2\\n        });\\n      }\\n\\n      var _diffuseColor = material.diffuseColor;\\n      var diffusecolor = new _three.Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\\n\\n      if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\\n        diffusecolor.r = 1;\\n        diffusecolor.g = 1;\\n        diffusecolor.b = 1;\\n      } // console.log( material );\\n\\n\\n      var mat = new _three.MeshStandardMaterial({\\n        color: diffusecolor,\\n        name: material.name,\\n        side: 2,\\n        transparent: material.transparency > 0 ? true : false,\\n        opacity: 1.0 - material.transparency\\n      });\\n      var textureLoader = new _three.TextureLoader();\\n\\n      for (var i = 0; i < material.textures.length; i++) {\\n        var texture = material.textures[i];\\n\\n        if (texture.image !== null) {\\n          var map = textureLoader.load(texture.image);\\n\\n          switch (texture.type) {\\n            case 'Diffuse':\\n              mat.map = map;\\n              break;\\n\\n            case 'Bump':\\n              mat.bumpMap = map;\\n              break;\\n\\n            case 'Transparency':\\n              mat.alphaMap = map;\\n              mat.transparent = true;\\n              break;\\n\\n            case 'Emap':\\n              mat.envMap = map;\\n              break;\\n          }\\n        }\\n      }\\n\\n      return mat;\\n    }\\n  }, {\\n    key: \\\"_createGeometry\\\",\\n    value: function _createGeometry(data) {\\n      // console.log(data);\\n      var object = new _three.Object3D();\\n      var instanceDefinitionObjects = [];\\n      var instanceDefinitions = [];\\n      var instanceReferences = [];\\n      object.userData['layers'] = data.layers;\\n      object.userData['groups'] = data.groups;\\n      object.userData['settings'] = data.settings;\\n      object.userData['objectType'] = 'File3dm';\\n      object.userData['materials'] = null;\\n      object.name = this.url;\\n      var objects = data.objects;\\n      var materials = data.materials;\\n\\n      for (var i = 0; i < objects.length; i++) {\\n        var obj = objects[i];\\n        var attributes = obj.attributes;\\n\\n        switch (obj.objectType) {\\n          case 'InstanceDefinition':\\n            instanceDefinitions.push(obj);\\n            break;\\n\\n          case 'InstanceReference':\\n            instanceReferences.push(obj);\\n            break;\\n\\n          default:\\n            var _object = void 0;\\n\\n            if (attributes.materialIndex >= 0) {\\n              var rMaterial = materials[attributes.materialIndex];\\n\\n              var material = this._createMaterial(rMaterial);\\n\\n              material = this._compareMaterials(material);\\n              _object = this._createObject(obj, material);\\n            } else {\\n              var _material2 = this._createMaterial();\\n\\n              _object = this._createObject(obj, _material2);\\n            }\\n\\n            if (_object === undefined) {\\n              continue;\\n            }\\n\\n            var layer = data.layers[attributes.layerIndex];\\n            _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\\n\\n            if (attributes.isInstanceDefinitionObject) {\\n              instanceDefinitionObjects.push(_object);\\n            } else {\\n              object.add(_object);\\n            }\\n\\n            break;\\n        }\\n      }\\n\\n      for (var _i = 0; _i < instanceDefinitions.length; _i++) {\\n        var iDef = instanceDefinitions[_i];\\n        objects = [];\\n\\n        for (var j = 0; j < iDef.attributes.objectIds.length; j++) {\\n          var objId = iDef.attributes.objectIds[j];\\n\\n          for (var p = 0; p < instanceDefinitionObjects.length; p++) {\\n            var idoId = instanceDefinitionObjects[p].userData.attributes.id;\\n\\n            if (objId === idoId) {\\n              objects.push(instanceDefinitionObjects[p]);\\n            }\\n          }\\n        } // Currently clones geometry and does not take advantage of instancing\\n\\n\\n        for (var _j = 0; _j < instanceReferences.length; _j++) {\\n          var iRef = instanceReferences[_j];\\n\\n          if (iRef.geometry.parentIdefId === iDef.attributes.id) {\\n            var iRefObject = new _three.Object3D();\\n            var xf = iRef.geometry.xform.array;\\n            var matrix = new _three.Matrix4();\\n            matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\\n            iRefObject.applyMatrix4(matrix);\\n\\n            for (var _p = 0; _p < objects.length; _p++) {\\n              iRefObject.add(objects[_p].clone(true));\\n            }\\n\\n            object.add(iRefObject);\\n          }\\n        }\\n      }\\n\\n      object.userData['materials'] = this.materials;\\n      return object;\\n    }\\n  }, {\\n    key: \\\"_createObject\\\",\\n    value: function _createObject(obj, mat) {\\n      var loader = new _three.BufferGeometryLoader();\\n      var attributes = obj.attributes;\\n\\n      var geometry, material, _color, color;\\n\\n      switch (obj.objectType) {\\n        case 'Point':\\n        case 'PointSet':\\n          geometry = loader.parse(obj.geometry);\\n\\n          if (geometry.attributes.hasOwnProperty('color')) {\\n            material = new _three.PointsMaterial({\\n              vertexColors: true,\\n              sizeAttenuation: false,\\n              size: 2\\n            });\\n          } else {\\n            _color = attributes.drawColor;\\n            color = new _three.Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\\n            material = new _three.PointsMaterial({\\n              color: color,\\n              sizeAttenuation: false,\\n              size: 2\\n            });\\n          }\\n\\n          material = this._compareMaterials(material);\\n          var points = new _three.Points(geometry, material);\\n          points.userData['attributes'] = attributes;\\n          points.userData['objectType'] = obj.objectType;\\n\\n          if (attributes.name) {\\n            points.name = attributes.name;\\n          }\\n\\n          return points;\\n\\n        case 'Mesh':\\n        case 'Extrusion':\\n        case 'SubD':\\n        case 'Brep':\\n          if (obj.geometry === null) return;\\n          geometry = loader.parse(obj.geometry);\\n\\n          if (geometry.attributes.hasOwnProperty('color')) {\\n            mat.vertexColors = true;\\n          }\\n\\n          if (mat === null) {\\n            mat = this._createMaterial();\\n            mat = this._compareMaterials(mat);\\n          }\\n\\n          var mesh = new _three.Mesh(geometry, mat);\\n          mesh.castShadow = attributes.castsShadows;\\n          mesh.receiveShadow = attributes.receivesShadows;\\n          mesh.userData['attributes'] = attributes;\\n          mesh.userData['objectType'] = obj.objectType;\\n\\n          if (attributes.name) {\\n            mesh.name = attributes.name;\\n          }\\n\\n          return mesh;\\n\\n        case 'Curve':\\n          geometry = loader.parse(obj.geometry);\\n          _color = attributes.drawColor;\\n          color = new _three.Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\\n          material = new _three.LineBasicMaterial({\\n            color: color\\n          });\\n          material = this._compareMaterials(material);\\n          var lines = new _three.Line(geometry, material);\\n          lines.userData['attributes'] = attributes;\\n          lines.userData['objectType'] = obj.objectType;\\n\\n          if (attributes.name) {\\n            lines.name = attributes.name;\\n          }\\n\\n          return lines;\\n\\n        case 'TextDot':\\n          geometry = obj.geometry;\\n          var ctx = document.createElement('canvas').getContext('2d');\\n          var font = \\\"\\\".concat(geometry.fontHeight, \\\"px \\\").concat(geometry.fontFace);\\n          ctx.font = font;\\n          var width = ctx.measureText(geometry.text).width + 10;\\n          var height = geometry.fontHeight + 10;\\n          var r = window.devicePixelRatio;\\n          ctx.canvas.width = width * r;\\n          ctx.canvas.height = height * r;\\n          ctx.canvas.style.width = width + 'px';\\n          ctx.canvas.style.height = height + 'px';\\n          ctx.setTransform(r, 0, 0, r, 0, 0);\\n          ctx.font = font;\\n          ctx.textBaseline = 'middle';\\n          ctx.textAlign = 'center';\\n          color = attributes.drawColor;\\n          ctx.fillStyle = \\\"rgba(\\\".concat(color.r, \\\",\\\").concat(color.g, \\\",\\\").concat(color.b, \\\",\\\").concat(color.a, \\\")\\\");\\n          ctx.fillRect(0, 0, width, height);\\n          ctx.fillStyle = 'white';\\n          ctx.fillText(geometry.text, width / 2, height / 2);\\n          var texture = new _three.CanvasTexture(ctx.canvas);\\n          texture.minFilter = _three.LinearFilter;\\n          texture.wrapS = _three.ClampToEdgeWrapping;\\n          texture.wrapT = _three.ClampToEdgeWrapping;\\n          material = new _three.SpriteMaterial({\\n            map: texture,\\n            depthTest: false\\n          });\\n          var sprite = new _three.Sprite(material);\\n          sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\\n          sprite.scale.set(width / 10, height / 10, 1.0);\\n          sprite.userData['attributes'] = attributes;\\n          sprite.userData['objectType'] = obj.objectType;\\n\\n          if (attributes.name) {\\n            sprite.name = attributes.name;\\n          }\\n\\n          return sprite;\\n\\n        case 'Light':\\n          geometry = obj.geometry;\\n          var light;\\n\\n          if (geometry.isDirectionalLight) {\\n            light = new _three.DirectionalLight();\\n            light.castShadow = attributes.castsShadows;\\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\\n            light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\\n            light.shadow.normalBias = 0.1;\\n          } else if (geometry.isPointLight) {\\n            light = new _three.PointLight();\\n            light.castShadow = attributes.castsShadows;\\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\\n            light.shadow.normalBias = 0.1;\\n          } else if (geometry.isRectangularLight) {\\n            light = new _three.RectAreaLight();\\n\\n            var _width = Math.abs(geometry.width[2]);\\n\\n            var _height = Math.abs(geometry.length[0]);\\n\\n            light.position.set(geometry.location[0] - _height / 2, geometry.location[1], geometry.location[2] - _width / 2);\\n            light.height = _height;\\n            light.width = _width;\\n            light.lookAt(new _three.Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\\n          } else if (geometry.isSpotLight) {\\n            light = new _three.SpotLight();\\n            light.castShadow = attributes.castsShadows;\\n            light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\\n            light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\\n            light.angle = geometry.spotAngleRadians;\\n            light.shadow.normalBias = 0.1;\\n          } else if (geometry.isLinearLight) {\\n            console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\\n            return;\\n          }\\n\\n          if (light) {\\n            light.intensity = geometry.intensity;\\n            _color = geometry.diffuse;\\n            color = new _three.Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\\n            light.color = color;\\n            light.userData['attributes'] = attributes;\\n            light.userData['objectType'] = obj.objectType;\\n          }\\n\\n          return light;\\n      }\\n    }\\n  }, {\\n    key: \\\"_initLibrary\\\",\\n    value: function _initLibrary() {\\n      var _this4 = this;\\n\\n      if (!this.libraryPending) {\\n        // Load rhino3dm wrapper.\\n        var jsLoader = new _three.FileLoader(this.manager);\\n        jsLoader.setPath(this.libraryPath);\\n        var jsContent = new Promise(function (resolve, reject) {\\n          jsLoader.load('rhino3dm.js', resolve, undefined, reject);\\n        }); // Load rhino3dm WASM binary.\\n\\n        var binaryLoader = new _three.FileLoader(this.manager);\\n        binaryLoader.setPath(this.libraryPath);\\n        binaryLoader.setResponseType('arraybuffer');\\n        var binaryContent = new Promise(function (resolve, reject) {\\n          binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\\n        });\\n        this.libraryPending = Promise.all([jsContent, binaryContent]).then(function (_ref) {\\n          var _ref2 = _slicedToArray(_ref, 2),\\n              jsContent = _ref2[0],\\n              binaryContent = _ref2[1];\\n\\n          //this.libraryBinary = binaryContent;\\n          _this4.libraryConfig.wasmBinary = binaryContent;\\n          var fn = Rhino3dmWorker.toString();\\n          var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\\\n');\\n          _this4.workerSourceURL = URL.createObjectURL(new Blob([body]));\\n        });\\n      }\\n\\n      return this.libraryPending;\\n    }\\n  }, {\\n    key: \\\"_getWorker\\\",\\n    value: function _getWorker(taskCost) {\\n      var _this5 = this;\\n\\n      return this._initLibrary().then(function () {\\n        if (_this5.workerPool.length < _this5.workerLimit) {\\n          var _worker2 = new Worker(_this5.workerSourceURL);\\n\\n          _worker2._callbacks = {};\\n          _worker2._taskCosts = {};\\n          _worker2._taskLoad = 0;\\n\\n          _worker2.postMessage({\\n            type: 'init',\\n            libraryConfig: _this5.libraryConfig\\n          });\\n\\n          _worker2.onmessage = function (e) {\\n            var message = e.data;\\n\\n            switch (message.type) {\\n              case 'decode':\\n                _worker2._callbacks[message.id].resolve(message);\\n\\n                break;\\n\\n              case 'error':\\n                _worker2._callbacks[message.id].reject(message);\\n\\n                break;\\n\\n              default:\\n                console.error('THREE.Rhino3dmLoader: Unexpected message, \\\"' + message.type + '\\\"');\\n            }\\n          };\\n\\n          _this5.workerPool.push(_worker2);\\n        } else {\\n          _this5.workerPool.sort(function (a, b) {\\n            return a._taskLoad > b._taskLoad ? -1 : 1;\\n          });\\n        }\\n\\n        var worker = _this5.workerPool[_this5.workerPool.length - 1];\\n        worker._taskLoad += taskCost;\\n        return worker;\\n      });\\n    }\\n  }, {\\n    key: \\\"_releaseTask\\\",\\n    value: function _releaseTask(worker, taskID) {\\n      worker._taskLoad -= worker._taskCosts[taskID];\\n      delete worker._callbacks[taskID];\\n      delete worker._taskCosts[taskID];\\n    }\\n  }, {\\n    key: \\\"dispose\\\",\\n    value: function dispose() {\\n      for (var i = 0; i < this.workerPool.length; ++i) {\\n        this.workerPool[i].terminate();\\n      }\\n\\n      this.workerPool.length = 0;\\n      return this;\\n    }\\n  }]);\\n\\n  return Rhino3dmLoader;\\n}(_three.Loader);\\n/* WEB WORKER */\\n\\n\\nexports.Rhino3dmLoader = Rhino3dmLoader;\\n\\nfunction Rhino3dmWorker() {\\n  var libraryPending;\\n  var libraryConfig;\\n  var rhino;\\n\\n  onmessage = function onmessage(e) {\\n    var message = e.data;\\n\\n    switch (message.type) {\\n      case 'init':\\n        libraryConfig = message.libraryConfig;\\n        var wasmBinary = libraryConfig.wasmBinary;\\n        var RhinoModule;\\n        libraryPending = new Promise(function (resolve) {\\n          /* Like Basis Loader */\\n          RhinoModule = {\\n            wasmBinary: wasmBinary,\\n            onRuntimeInitialized: resolve\\n          };\\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\\n        }).then(function () {\\n          rhino = RhinoModule;\\n        });\\n        break;\\n\\n      case 'decode':\\n        var buffer = message.buffer;\\n        libraryPending.then(function () {\\n          var data = decodeObjects(rhino, buffer);\\n          self.postMessage({\\n            type: 'decode',\\n            id: message.id,\\n            data: data\\n          });\\n        });\\n        break;\\n    }\\n  };\\n\\n  function decodeObjects(rhino, buffer) {\\n    var arr = new Uint8Array(buffer);\\n    var doc = rhino.File3dm.fromByteArray(arr);\\n    var objects = [];\\n    var materials = [];\\n    var layers = [];\\n    var views = [];\\n    var namedViews = [];\\n    var groups = []; //Handle objects\\n\\n    var objs = doc.objects();\\n    var cnt = objs.count;\\n\\n    for (var i = 0; i < cnt; i++) {\\n      var _object = objs.get(i);\\n\\n      var object = extractObjectData(_object, doc);\\n\\n      _object[\\\"delete\\\"]();\\n\\n      if (object) {\\n        objects.push(object);\\n      }\\n    } // Handle instance definitions\\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\\n\\n\\n    for (var _i2 = 0; _i2 < doc.instanceDefinitions().count(); _i2++) {\\n      var idef = doc.instanceDefinitions().get(_i2);\\n      var idefAttributes = extractProperties(idef);\\n      idefAttributes.objectIds = idef.getObjectIds();\\n      objects.push({\\n        geometry: null,\\n        attributes: idefAttributes,\\n        objectType: 'InstanceDefinition'\\n      });\\n    } // Handle materials\\n\\n\\n    var textureTypes = [// rhino.TextureType.Bitmap,\\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\\n\\n    for (var _i3 = 0; _i3 < doc.materials().count(); _i3++) {\\n      var _material = doc.materials().get(_i3);\\n\\n      var _pbrMaterial = _material.physicallyBased();\\n\\n      var material = extractProperties(_material);\\n      var textures = [];\\n\\n      for (var j = 0; j < textureTypes.length; j++) {\\n        var _texture = _material.getTexture(textureTypes[j]);\\n\\n        if (_texture) {\\n          var textureType = textureTypes[j].constructor.name;\\n          textureType = textureType.substring(12, textureType.length);\\n          var texture = {\\n            type: textureType\\n          };\\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\\n\\n          if (image) {\\n            texture.image = 'data:image/png;base64,' + image;\\n          } else {\\n            console.warn(\\\"THREE.3DMLoader: Image for \\\".concat(textureType, \\\" texture not embedded in file.\\\"));\\n            texture.image = null;\\n          }\\n\\n          textures.push(texture);\\n\\n          _texture[\\\"delete\\\"]();\\n        }\\n      }\\n\\n      material.textures = textures;\\n\\n      if (_pbrMaterial.supported) {\\n        console.log('pbr true');\\n\\n        for (var _j2 = 0; _j2 < pbrTextureTypes.length; _j2++) {\\n          var _texture2 = _material.getTexture(textureTypes[_j2]);\\n\\n          if (_texture2) {\\n            var _image = doc.getEmbeddedFileAsBase64(_texture2.fileName);\\n\\n            var _textureType = textureTypes[_j2].constructor.name;\\n            _textureType = _textureType.substring(12, _textureType.length);\\n            var _texture3 = {\\n              type: _textureType,\\n              image: 'data:image/png;base64,' + _image\\n            };\\n            textures.push(_texture3);\\n\\n            _texture2[\\\"delete\\\"]();\\n          }\\n        }\\n\\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\\n        material = Object.assign(pbMaterialProperties, material);\\n      }\\n\\n      materials.push(material);\\n\\n      _material[\\\"delete\\\"]();\\n\\n      _pbrMaterial[\\\"delete\\\"]();\\n    } // Handle layers\\n\\n\\n    for (var _i4 = 0; _i4 < doc.layers().count(); _i4++) {\\n      var _layer = doc.layers().get(_i4);\\n\\n      var layer = extractProperties(_layer);\\n      layers.push(layer);\\n\\n      _layer[\\\"delete\\\"]();\\n    } // Handle views\\n\\n\\n    for (var _i5 = 0; _i5 < doc.views().count(); _i5++) {\\n      var _view = doc.views().get(_i5);\\n\\n      var view = extractProperties(_view);\\n      views.push(view);\\n\\n      _view[\\\"delete\\\"]();\\n    } // Handle named views\\n\\n\\n    for (var _i6 = 0; _i6 < doc.namedViews().count(); _i6++) {\\n      var _namedView = doc.namedViews().get(_i6);\\n\\n      var namedView = extractProperties(_namedView);\\n      namedViews.push(namedView);\\n\\n      _namedView[\\\"delete\\\"]();\\n    } // Handle groups\\n\\n\\n    for (var _i7 = 0; _i7 < doc.groups().count(); _i7++) {\\n      var _group = doc.groups().get(_i7);\\n\\n      var group = extractProperties(_group);\\n      groups.push(group);\\n\\n      _group[\\\"delete\\\"]();\\n    } // Handle settings\\n\\n\\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\\n    // Handle dimstyles\\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\\n    // Handle bitmaps\\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\\n\\n    /*\\n    for( var i = 0; i < doc.strings().count(); i++ ){\\n    var _string= doc.strings().get( i );\\n    console.log(_string);\\n    var string = extractProperties( _group );\\n    strings.push( string );\\n    _string.delete();\\n    }\\n    */\\n\\n    doc[\\\"delete\\\"]();\\n    return {\\n      objects: objects,\\n      materials: materials,\\n      layers: layers,\\n      views: views,\\n      namedViews: namedViews,\\n      groups: groups,\\n      settings: settings\\n    };\\n  }\\n\\n  function extractObjectData(object, doc) {\\n    var _geometry = object.geometry();\\n\\n    var _attributes = object.attributes();\\n\\n    var objectType = _geometry.objectType;\\n    var geometry, attributes, position, data, mesh; // skip instance definition objects\\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\\n    // TODO: handle other geometry types\\n\\n    switch (objectType) {\\n      case rhino.ObjectType.Curve:\\n        var pts = curveToPoints(_geometry, 100);\\n        position = {};\\n        attributes = {};\\n        data = {};\\n        position.itemSize = 3;\\n        position.type = 'Float32Array';\\n        position.array = [];\\n\\n        for (var j = 0; j < pts.length; j++) {\\n          position.array.push(pts[j][0]);\\n          position.array.push(pts[j][1]);\\n          position.array.push(pts[j][2]);\\n        }\\n\\n        attributes.position = position;\\n        data.attributes = attributes;\\n        geometry = {\\n          data: data\\n        };\\n        break;\\n\\n      case rhino.ObjectType.Point:\\n        var pt = _geometry.location;\\n        position = {};\\n        var color = {};\\n        attributes = {};\\n        data = {};\\n        position.itemSize = 3;\\n        position.type = 'Float32Array';\\n        position.array = [pt[0], pt[1], pt[2]];\\n\\n        var _color = _attributes.drawColor(doc);\\n\\n        color.itemSize = 3;\\n        color.type = 'Float32Array';\\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\\n        attributes.position = position;\\n        attributes.color = color;\\n        data.attributes = attributes;\\n        geometry = {\\n          data: data\\n        };\\n        break;\\n\\n      case rhino.ObjectType.PointSet:\\n      case rhino.ObjectType.Mesh:\\n        geometry = _geometry.toThreejsJSON();\\n        break;\\n\\n      case rhino.ObjectType.Brep:\\n        var faces = _geometry.faces();\\n\\n        mesh = new rhino.Mesh();\\n\\n        for (var faceIndex = 0; faceIndex < faces.count; faceIndex++) {\\n          var face = faces.get(faceIndex);\\n\\n          var _mesh = face.getMesh(rhino.MeshType.Any);\\n\\n          if (_mesh) {\\n            mesh.append(_mesh);\\n\\n            _mesh[\\\"delete\\\"]();\\n          }\\n\\n          face[\\\"delete\\\"]();\\n        }\\n\\n        if (mesh.faces().count > 0) {\\n          mesh.compact();\\n          geometry = mesh.toThreejsJSON();\\n          faces[\\\"delete\\\"]();\\n        }\\n\\n        mesh[\\\"delete\\\"]();\\n        break;\\n\\n      case rhino.ObjectType.Extrusion:\\n        mesh = _geometry.getMesh(rhino.MeshType.Any);\\n\\n        if (mesh) {\\n          geometry = mesh.toThreejsJSON();\\n          mesh[\\\"delete\\\"]();\\n        }\\n\\n        break;\\n\\n      case rhino.ObjectType.TextDot:\\n        geometry = extractProperties(_geometry);\\n        break;\\n\\n      case rhino.ObjectType.Light:\\n        geometry = extractProperties(_geometry);\\n        break;\\n\\n      case rhino.ObjectType.InstanceReference:\\n        geometry = extractProperties(_geometry);\\n        geometry.xform = extractProperties(_geometry.xform);\\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\\n        break;\\n\\n      case rhino.ObjectType.SubD:\\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\\n        _geometry.subdivide(3);\\n\\n        mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\\n\\n        if (mesh) {\\n          geometry = mesh.toThreejsJSON();\\n          mesh[\\\"delete\\\"]();\\n        }\\n\\n        break;\\n\\n      /*\\n      case rhino.ObjectType.Annotation:\\n      case rhino.ObjectType.Hatch:\\n      case rhino.ObjectType.ClipPlane:\\n      */\\n\\n      default:\\n        console.warn(\\\"THREE.3DMLoader: TODO: Implement \\\".concat(objectType.constructor.name));\\n        break;\\n    }\\n\\n    if (geometry) {\\n      attributes = extractProperties(_attributes);\\n      attributes.geometry = extractProperties(_geometry);\\n\\n      if (_attributes.groupCount > 0) {\\n        attributes.groupIds = _attributes.getGroupList();\\n      }\\n\\n      if (_attributes.userStringCount > 0) {\\n        attributes.userStrings = _attributes.getUserStrings();\\n      }\\n\\n      if (_geometry.userStringCount > 0) {\\n        attributes.geometry.userStrings = _geometry.getUserStrings();\\n      }\\n\\n      attributes.drawColor = _attributes.drawColor(doc);\\n      objectType = objectType.constructor.name;\\n      objectType = objectType.substring(11, objectType.length);\\n      return {\\n        geometry: geometry,\\n        attributes: attributes,\\n        objectType: objectType\\n      };\\n    } else {\\n      console.warn(\\\"THREE.3DMLoader: \\\".concat(objectType.constructor.name, \\\" has no associated mesh geometry.\\\"));\\n    }\\n  }\\n\\n  function extractProperties(object) {\\n    var result = {};\\n\\n    for (var property in object) {\\n      var value = object[property];\\n\\n      if (typeof value !== 'function') {\\n        if (_typeof(value) === 'object' && value !== null && value.hasOwnProperty('constructor')) {\\n          result[property] = {\\n            name: value.constructor.name,\\n            value: value.value\\n          };\\n        } else {\\n          result[property] = value;\\n        }\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  function curveToPoints(curve, pointLimit) {\\n    var pointCount = pointLimit;\\n    var rc = [];\\n    var ts = [];\\n\\n    if (curve instanceof rhino.LineCurve) {\\n      return [curve.pointAtStart, curve.pointAtEnd];\\n    }\\n\\n    if (curve instanceof rhino.PolylineCurve) {\\n      pointCount = curve.pointCount;\\n\\n      for (var i = 0; i < pointCount; i++) {\\n        rc.push(curve.point(i));\\n      }\\n\\n      return rc;\\n    }\\n\\n    if (curve instanceof rhino.PolyCurve) {\\n      var segmentCount = curve.segmentCount;\\n\\n      for (var _i8 = 0; _i8 < segmentCount; _i8++) {\\n        var segment = curve.segmentCurve(_i8);\\n        var segmentArray = curveToPoints(segment, pointCount);\\n        rc = rc.concat(segmentArray);\\n        segment[\\\"delete\\\"]();\\n      }\\n\\n      return rc;\\n    }\\n\\n    if (curve instanceof rhino.ArcCurve) {\\n      pointCount = Math.floor(curve.angleDegrees / 5);\\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\\n    }\\n\\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\\n      var pLine = curve.tryGetPolyline();\\n\\n      for (var _i9 = 0; _i9 < pLine.count; _i9++) {\\n        rc.push(pLine.get(_i9));\\n      }\\n\\n      pLine[\\\"delete\\\"]();\\n      return rc;\\n    }\\n\\n    var domain = curve.domain;\\n    var divisions = pointCount - 1.0;\\n\\n    for (var j = 0; j < pointCount; j++) {\\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\\n\\n      if (t === domain[0] || t === domain[1]) {\\n        ts.push(t);\\n        continue;\\n      }\\n\\n      var tan = curve.tangentAt(t);\\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\\n      // How to pass imports to worker?\\n\\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\\n      var denominator = Math.sqrt(tS * ptS);\\n      var angle = void 0;\\n\\n      if (denominator === 0) {\\n        angle = Math.PI / 2;\\n      } else {\\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\\n      }\\n\\n      if (angle < 0.1) continue;\\n      ts.push(t);\\n    }\\n\\n    rc = ts.map(function (t) {\\n      return curve.pointAt(t);\\n    });\\n    return rc;\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"_getPrototypeOf\",\"o\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"_setPrototypeOf\",\"p\",\"Rhino3dmWorker\",\"extractProperties\",\"object\",\"result\",\"property\",\"hasOwnProperty\",\"name\",\"curveToPoints\",\"curve\",\"pointLimit\",\"rc\",\"ts\",\"rhino\",\"LineCurve\",\"pointAtStart\",\"pointAtEnd\",\"PolylineCurve\",\"pointCount\",\"push\",\"point\",\"PolyCurve\",\"segmentCount\",\"_i8\",\"segment\",\"segmentCurve\",\"segmentArray\",\"concat\",\"ArcCurve\",\"Math\",\"floor\",\"angleDegrees\",\"NurbsCurve\",\"degree\",\"pLine\",\"tryGetPolyline\",\"_i9\",\"count\",\"get\",\"domain\",\"divisions\",\"j\",\"t\",\"tan\",\"tangentAt\",\"prevTan\",\"slice\",\"denominator\",\"sqrt\",\"angle\",\"PI\",\"acos\",\"max\",\"min\",\"x\",\"y\",\"z\",\"map\",\"pointAt\",\"libraryPending\",\"libraryConfig\",\"onmessage\",\"e\",\"message\",\"data\",\"type\",\"wasmBinary\",\"RhinoModule\",\"then\",\"Promise\",\"resolve\",\"onRuntimeInitialized\",\"rhino3dm\",\"buffer\",\"arr\",\"Uint8Array\",\"doc\",\"File3dm\",\"fromByteArray\",\"objects\",\"materials\",\"layers\",\"views\",\"namedViews\",\"groups\",\"objs\",\"cnt\",\"_object\",\"geometry\",\"_geometry\",\"_attributes\",\"attributes\",\"objectType\",\"ObjectType\",\"Curve\",\"pts\",\"position\",\"itemSize\",\"array\",\"Point\",\"pt\",\"location\",\"color\",\"_color\",\"drawColor\",\"r\",\"g\",\"b\",\"PointSet\",\"Mesh\",\"toThreejsJSON\",\"Brep\",\"faces\",\"mesh\",\"faceIndex\",\"face\",\"_mesh\",\"getMesh\",\"MeshType\",\"Any\",\"append\",\"compact\",\"Extrusion\",\"TextDot\",\"Light\",\"InstanceReference\",\"xform\",\"toFloatArray\",\"SubD\",\"subdivide\",\"createFromSubDControlNet\",\"console\",\"warn\",\"groupCount\",\"groupIds\",\"getGroupList\",\"userStringCount\",\"userStrings\",\"getUserStrings\",\"substring\",\"_i2\",\"instanceDefinitions\",\"idef\",\"idefAttributes\",\"objectIds\",\"getObjectIds\",\"textureTypes\",\"TextureType\",\"Diffuse\",\"Bump\",\"Transparency\",\"Opacity\",\"Emap\",\"pbrTextureTypes\",\"PBR_BaseColor\",\"PBR_Subsurface\",\"PBR_SubsurfaceScattering\",\"PBR_SubsurfaceScatteringRadius\",\"PBR_Metallic\",\"PBR_Specular\",\"PBR_SpecularTint\",\"PBR_Roughness\",\"PBR_Anisotropic\",\"PBR_Anisotropic_Rotation\",\"PBR_Sheen\",\"PBR_SheenTint\",\"PBR_Clearcoat\",\"PBR_ClearcoatBump\",\"PBR_ClearcoatRoughness\",\"PBR_OpacityIor\",\"PBR_OpacityRoughness\",\"PBR_Emission\",\"PBR_AmbientOcclusion\",\"PBR_Displacement\",\"_i3\",\"_material\",\"_pbrMaterial\",\"physicallyBased\",\"material\",\"textures\",\"_texture\",\"getTexture\",\"textureType\",\"texture\",\"image\",\"getEmbeddedFileAsBase64\",\"fileName\",\"supported\",\"log\",\"_j2\",\"_texture2\",\"_image\",\"_textureType\",\"_texture3\",\"pbMaterialProperties\",\"assign\",\"_i4\",\"_layer\",\"layer\",\"_i5\",\"_view\",\"view\",\"_i6\",\"_namedView\",\"namedView\",\"_i7\",\"_group\",\"group\",\"settings\",\"self\",\"postMessage\",\"id\",\"Rhino3dmLoader\",\"_three\",\"_taskCache\",\"WeakMap\",\"_Loader\",\"manager\",\"instance\",\"call\",\"ReferenceError\",\"_this\",\"libraryPath\",\"libraryBinary\",\"url\",\"workerLimit\",\"workerPool\",\"workerNextTaskID\",\"workerSourceURL\",\"workerConfig\",\"setLibraryPath\",\"path\",\"setWorkerLimit\",\"load\",\"onLoad\",\"onProgress\",\"onError\",\"_this2\",\"loader\",\"FileLoader\",\"setPath\",\"setResponseType\",\"setRequestHeader\",\"requestHeader\",\"has\",\"cachedTask\",\"promise\",\"decodeObjects\",\"debug\",\"worker\",\"_taskLoad\",\"_this3\",\"taskID\",\"objectPending\",\"_getWorker\",\"byteLength\",\"_worker\",\"reject\",\"_callbacks\",\"_createGeometry\",\"_releaseTask\",\"set\",\"parse\",\"_compareMaterials\",\"mat\",\"m\",\"_mat\",\"JSON\",\"stringify\",\"_createMaterial\",\"undefined\",\"MeshStandardMaterial\",\"Color\",\"metalness\",\"side\",\"_diffuseColor\",\"diffuseColor\",\"diffusecolor\",\"transparent\",\"transparency\",\"opacity\",\"textureLoader\",\"TextureLoader\",\"bumpMap\",\"alphaMap\",\"envMap\",\"Object3D\",\"instanceDefinitionObjects\",\"instanceReferences\",\"userData\",\"materialIndex\",\"rMaterial\",\"_createObject\",\"_material2\",\"visible\",\"layerIndex\",\"isInstanceDefinitionObject\",\"add\",\"_i\",\"iDef\",\"objId\",\"_j\",\"iRef\",\"parentIdefId\",\"iRefObject\",\"xf\",\"matrix\",\"Matrix4\",\"applyMatrix4\",\"_p\",\"clone\",\"BufferGeometryLoader\",\"PointsMaterial\",\"vertexColors\",\"sizeAttenuation\",\"size\",\"points\",\"Points\",\"castShadow\",\"castsShadows\",\"receiveShadow\",\"receivesShadows\",\"lines\",\"LineBasicMaterial\",\"Line\",\"ctx\",\"document\",\"createElement\",\"getContext\",\"font\",\"fontHeight\",\"fontFace\",\"width\",\"measureText\",\"text\",\"height\",\"window\",\"devicePixelRatio\",\"canvas\",\"style\",\"setTransform\",\"textBaseline\",\"textAlign\",\"fillStyle\",\"a\",\"fillRect\",\"fillText\",\"CanvasTexture\",\"minFilter\",\"LinearFilter\",\"wrapS\",\"ClampToEdgeWrapping\",\"wrapT\",\"SpriteMaterial\",\"depthTest\",\"sprite\",\"Sprite\",\"scale\",\"isDirectionalLight\",\"light\",\"DirectionalLight\",\"direction\",\"shadow\",\"normalBias\",\"isPointLight\",\"PointLight\",\"isRectangularLight\",\"RectAreaLight\",\"_width\",\"abs\",\"_height\",\"lookAt\",\"Vector3\",\"isSpotLight\",\"SpotLight\",\"spotAngleRadians\",\"isLinearLight\",\"intensity\",\"diffuse\",\"_initLibrary\",\"_this4\",\"jsLoader\",\"jsContent\",\"binaryLoader\",\"binaryContent\",\"all\",\"_ref\",\"Array\",\"isArray\",\"toString\",\"_arr\",\"_n\",\"_d\",\"_e\",\"_s\",\"done\",\"next\",\"err\",\"_ref2\",\"fn\",\"body\",\"indexOf\",\"lastIndexOf\",\"join\",\"URL\",\"createObjectURL\",\"Blob\",\"taskCost\",\"_this5\",\"_worker2\",\"Worker\",\"_taskCosts\",\"_worker2.onmessage\",\"error\",\"sort\",\"dispose\",\"terminate\",\"Loader\"]\n}\n"]