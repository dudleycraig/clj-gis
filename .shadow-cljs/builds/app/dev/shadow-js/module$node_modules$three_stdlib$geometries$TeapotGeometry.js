["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/geometries/TeapotGeometry.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$geometries$TeapotGeometry=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _possibleConstructorReturn(self,call){if(call&&(\"object\"===_typeof(call)||\"function\"===typeof call))return call;\nif(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&\nsuperClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.TeapotGeometry=void 0;var _three=require(\"module$node_modules$three$build$three_module\");global=function(_BufferGeometry){function TeapotGeometry(size,\nsegments,bottom,lid,body,fitLid,blinn){if(!(this instanceof TeapotGeometry))throw new TypeError(\"Cannot call a class as a function\");var teapotPatches=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,3,16,17,18,7,19,20,21,11,22,23,24,15,25,26,27,18,28,29,30,21,31,32,33,24,34,35,36,27,37,38,39,30,40,41,0,33,42,43,4,36,44,45,8,39,46,47,12,12,13,14,15,48,49,50,51,52,53,54,55,56,57,58,59,15,25,26,27,51,60,61,62,55,63,64,65,59,66,67,68,27,37,38,39,62,69,70,71,65,72,73,74,68,75,76,77,39,46,47,12,71,78,79,48,74,80,\n81,52,77,82,83,56,56,57,58,59,84,85,86,87,88,89,90,91,92,93,94,95,59,66,67,68,87,96,97,98,91,99,100,101,95,102,103,104,68,75,76,77,98,105,106,107,101,108,109,110,104,111,112,113,77,82,83,56,107,114,115,84,110,116,117,88,113,118,119,92,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,123,136,137,120,127,138,139,124,131,140,141,128,135,142,143,132,132,133,134,135,144,145,146,147,148,149,150,151,68,152,153,154,135,142,143,132,147,155,156,144,151,157,158,148,154,159,160,68,161,162,163,\n164,165,166,167,168,169,170,171,172,173,174,175,176,164,177,178,161,168,179,180,165,172,181,182,169,176,183,184,173,173,174,175,176,185,186,187,188,189,190,191,192,193,194,195,196,176,183,184,173,188,197,198,185,192,199,200,189,196,201,202,193,203,203,203,203,204,205,206,207,208,208,208,208,209,210,211,212,203,203,203,203,207,213,214,215,208,208,208,208,212,216,217,218,203,203,203,203,215,219,220,221,208,208,208,208,218,222,223,224,203,203,203,203,221,225,226,204,208,208,208,208,224,227,228,209,209,\n210,211,212,229,230,231,232,233,234,235,236,237,238,239,240,212,216,217,218,232,241,242,243,236,244,245,246,240,247,248,249,218,222,223,224,243,250,251,252,246,253,254,255,249,256,257,258,224,227,228,209,252,259,260,229,255,261,262,233,258,263,264,237,265,265,265,265,266,267,268,269,270,271,272,273,92,119,118,113,265,265,265,265,269,274,275,276,273,277,278,279,113,112,111,104,265,265,265,265,276,280,281,282,279,283,284,285,104,103,102,95,265,265,265,265,282,286,287,266,285,288,289,270,95,94,93,92],\nteapotVertices=[1.4,0,2.4,1.4,-.784,2.4,.784,-1.4,2.4,0,-1.4,2.4,1.3375,0,2.53125,1.3375,-.749,2.53125,.749,-1.3375,2.53125,0,-1.3375,2.53125,1.4375,0,2.53125,1.4375,-.805,2.53125,.805,-1.4375,2.53125,0,-1.4375,2.53125,1.5,0,2.4,1.5,-.84,2.4,.84,-1.5,2.4,0,-1.5,2.4,-.784,-1.4,2.4,-1.4,-.784,2.4,-1.4,0,2.4,-.749,-1.3375,2.53125,-1.3375,-.749,2.53125,-1.3375,0,2.53125,-.805,-1.4375,2.53125,-1.4375,-.805,2.53125,-1.4375,0,2.53125,-.84,-1.5,2.4,-1.5,-.84,2.4,-1.5,0,2.4,-1.4,.784,2.4,-.784,1.4,2.4,0,1.4,\n2.4,-1.3375,.749,2.53125,-.749,1.3375,2.53125,0,1.3375,2.53125,-1.4375,.805,2.53125,-.805,1.4375,2.53125,0,1.4375,2.53125,-1.5,.84,2.4,-.84,1.5,2.4,0,1.5,2.4,.784,1.4,2.4,1.4,.784,2.4,.749,1.3375,2.53125,1.3375,.749,2.53125,.805,1.4375,2.53125,1.4375,.805,2.53125,.84,1.5,2.4,1.5,.84,2.4,1.75,0,1.875,1.75,-.98,1.875,.98,-1.75,1.875,0,-1.75,1.875,2,0,1.35,2,-1.12,1.35,1.12,-2,1.35,0,-2,1.35,2,0,.9,2,-1.12,.9,1.12,-2,.9,0,-2,.9,-.98,-1.75,1.875,-1.75,-.98,1.875,-1.75,0,1.875,-1.12,-2,1.35,-2,-1.12,1.35,\n-2,0,1.35,-1.12,-2,.9,-2,-1.12,.9,-2,0,.9,-1.75,.98,1.875,-.98,1.75,1.875,0,1.75,1.875,-2,1.12,1.35,-1.12,2,1.35,0,2,1.35,-2,1.12,.9,-1.12,2,.9,0,2,.9,.98,1.75,1.875,1.75,.98,1.875,1.12,2,1.35,2,1.12,1.35,1.12,2,.9,2,1.12,.9,2,0,.45,2,-1.12,.45,1.12,-2,.45,0,-2,.45,1.5,0,.225,1.5,-.84,.225,.84,-1.5,.225,0,-1.5,.225,1.5,0,.15,1.5,-.84,.15,.84,-1.5,.15,0,-1.5,.15,-1.12,-2,.45,-2,-1.12,.45,-2,0,.45,-.84,-1.5,.225,-1.5,-.84,.225,-1.5,0,.225,-.84,-1.5,.15,-1.5,-.84,.15,-1.5,0,.15,-2,1.12,.45,-1.12,2,.45,\n0,2,.45,-1.5,.84,.225,-.84,1.5,.225,0,1.5,.225,-1.5,.84,.15,-.84,1.5,.15,0,1.5,.15,1.12,2,.45,2,1.12,.45,.84,1.5,.225,1.5,.84,.225,.84,1.5,.15,1.5,.84,.15,-1.6,0,2.025,-1.6,-.3,2.025,-1.5,-.3,2.25,-1.5,0,2.25,-2.3,0,2.025,-2.3,-.3,2.025,-2.5,-.3,2.25,-2.5,0,2.25,-2.7,0,2.025,-2.7,-.3,2.025,-3,-.3,2.25,-3,0,2.25,-2.7,0,1.8,-2.7,-.3,1.8,-3,-.3,1.8,-3,0,1.8,-1.5,.3,2.25,-1.6,.3,2.025,-2.5,.3,2.25,-2.3,.3,2.025,-3,.3,2.25,-2.7,.3,2.025,-3,.3,1.8,-2.7,.3,1.8,-2.7,0,1.575,-2.7,-.3,1.575,-3,-.3,1.35,-3,\n0,1.35,-2.5,0,1.125,-2.5,-.3,1.125,-2.65,-.3,.9375,-2.65,0,.9375,-2,-.3,.9,-1.9,-.3,.6,-1.9,0,.6,-3,.3,1.35,-2.7,.3,1.575,-2.65,.3,.9375,-2.5,.3,1.125,-1.9,.3,.6,-2,.3,.9,1.7,0,1.425,1.7,-.66,1.425,1.7,-.66,.6,1.7,0,.6,2.6,0,1.425,2.6,-.66,1.425,3.1,-.66,.825,3.1,0,.825,2.3,0,2.1,2.3,-.25,2.1,2.4,-.25,2.025,2.4,0,2.025,2.7,0,2.4,2.7,-.25,2.4,3.3,-.25,2.4,3.3,0,2.4,1.7,.66,.6,1.7,.66,1.425,3.1,.66,.825,2.6,.66,1.425,2.4,.25,2.025,2.3,.25,2.1,3.3,.25,2.4,2.7,.25,2.4,2.8,0,2.475,2.8,-.25,2.475,3.525,\n-.25,2.49375,3.525,0,2.49375,2.9,0,2.475,2.9,-.15,2.475,3.45,-.15,2.5125,3.45,0,2.5125,2.8,0,2.4,2.8,-.15,2.4,3.2,-.15,2.4,3.2,0,2.4,3.525,.25,2.49375,2.8,.25,2.475,3.45,.15,2.5125,2.9,.15,2.475,3.2,.15,2.4,2.8,.15,2.4,0,0,3.15,.8,0,3.15,.8,-.45,3.15,.45,-.8,3.15,0,-.8,3.15,0,0,2.85,.2,0,2.7,.2,-.112,2.7,.112,-.2,2.7,0,-.2,2.7,-.45,-.8,3.15,-.8,-.45,3.15,-.8,0,3.15,-.112,-.2,2.7,-.2,-.112,2.7,-.2,0,2.7,-.8,.45,3.15,-.45,.8,3.15,0,.8,3.15,-.2,.112,2.7,-.112,.2,2.7,0,.2,2.7,.45,.8,3.15,.8,.45,3.15,\n.112,.2,2.7,.2,.112,2.7,.4,0,2.55,.4,-.224,2.55,.224,-.4,2.55,0,-.4,2.55,1.3,0,2.55,1.3,-.728,2.55,.728,-1.3,2.55,0,-1.3,2.55,1.3,0,2.4,1.3,-.728,2.4,.728,-1.3,2.4,0,-1.3,2.4,-.224,-.4,2.55,-.4,-.224,2.55,-.4,0,2.55,-.728,-1.3,2.55,-1.3,-.728,2.55,-1.3,0,2.55,-.728,-1.3,2.4,-1.3,-.728,2.4,-1.3,0,2.4,-.4,.224,2.55,-.224,.4,2.55,0,.4,2.55,-1.3,.728,2.55,-.728,1.3,2.55,0,1.3,2.55,-1.3,.728,2.4,-.728,1.3,2.4,0,1.3,2.4,.224,.4,2.55,.4,.224,2.55,.728,1.3,2.55,1.3,.728,2.55,.728,1.3,2.4,1.3,.728,2.4,0,0,\n0,1.425,0,0,1.425,.798,0,.798,1.425,0,0,1.425,0,1.5,0,.075,1.5,.84,.075,.84,1.5,.075,0,1.5,.075,-.798,1.425,0,-1.425,.798,0,-1.425,0,0,-.84,1.5,.075,-1.5,.84,.075,-1.5,0,.075,-1.425,-.798,0,-.798,-1.425,0,0,-1.425,0,-1.5,-.84,.075,-.84,-1.5,.075,0,-1.5,.075,.798,-1.425,0,1.425,-.798,0,.84,-1.5,.075,1.5,-.84,.075];var _this=_possibleConstructorReturn(this,_getPrototypeOf(TeapotGeometry).call(this));segments=void 0!==segments?Math.max(2,Math.floor(segments)||10):10;bottom=void 0===bottom?!0:bottom;\nlid=void 0===lid?!0:lid;body=void 0===body?!0:body;fitLid=void 0===fitLid?!0:fitLid;blinn=void 0===blinn?!0:blinn;var maxHeight2=3.15*(blinn?1:1.3)/2;size=(size||50)/maxHeight2;var numTriangles=(bottom?(8*segments-4)*segments:0)+(lid?(16*segments-4)*segments:0)+(body?40*segments*segments:0);numTriangles=new Uint32Array(3*numTriangles);var numVertices=(bottom?4:0)+(lid?8:0)+(body?20:0);numVertices*=(segments+1)*(segments+1);var vertices=new Float32Array(3*numVertices),normals=new Float32Array(3*numVertices);\nnumVertices=new Float32Array(2*numVertices);var ms=new _three.Matrix4;ms.set(-1,3,-3,1,3,-6,3,0,-3,3,0,0,1,0,0,0);var g=[],i,r,c,sp=[],tp=[],dsp=[],dtp=[],mgm=[],vert=[],sdir=[],tdir=[],norm=new _three.Vector3,tcoord,dsval=0,dtval=0,normOut=new _three.Vector3,gmx=new _three.Matrix4,tmtx=new _three.Matrix4,vsp=new _three.Vector4,vtp=new _three.Vector4,vdsp=new _three.Vector4,vdtp=new _three.Vector4,vsdir=new _three.Vector3,vtdir=new _three.Vector3,mst=ms.clone();mst.transpose();var notDegenerate=function(vtx1,\nvtx2,vtx3){return!(vertices[3*vtx1]===vertices[3*vtx2]&&vertices[3*vtx1+1]===vertices[3*vtx2+1]&&vertices[3*vtx1+2]===vertices[3*vtx2+2]||vertices[3*vtx1]===vertices[3*vtx3]&&vertices[3*vtx1+1]===vertices[3*vtx3+1]&&vertices[3*vtx1+2]===vertices[3*vtx3+2]||vertices[3*vtx2]===vertices[3*vtx3]&&vertices[3*vtx2+1]===vertices[3*vtx3+1]&&vertices[3*vtx2+2]===vertices[3*vtx3+2])};for(i=0;3>i;i++)mgm[i]=new _three.Matrix4;var maxPatches=bottom?32:28;bottom=segments+1;var surfCount=0,vertCount=0,normCount=\n0,uvCount=0,indexCount=0;for(body=body?0:20;body<maxPatches;body++)if(lid||20>body||28<=body){for(i=0;3>i;i++){for(r=0;4>r;r++)for(c=0;4>c;c++)g[4*c+r]=teapotVertices[3*teapotPatches[16*body+4*r+c]+i],fitLid&&20<=body&&28>body&&2!==i&&(g[4*c+r]*=1.077),blinn||2!==i||(g[4*c+r]*=1.3);gmx.set(g[0],g[1],g[2],g[3],g[4],g[5],g[6],g[7],g[8],g[9],g[10],g[11],g[12],g[13],g[14],g[15]);tmtx.multiplyMatrices(gmx,ms);mgm[i].multiplyMatrices(mst,tmtx)}for(r=0;r<=segments;r++){var s=r/segments;for(c=0;c<=segments;c++){var t=\nc/segments;var p=4;for(i=tcoord=1;p--;)sp[p]=i,tp[p]=tcoord,i*=s,tcoord*=t,3===p?(dsp[p]=dtp[p]=0,dsval=dtval=1):(dsp[p]=dsval*(3-p),dtp[p]=dtval*(3-p),dsval*=s,dtval*=t);vsp.fromArray(sp);vtp.fromArray(tp);vdsp.fromArray(dsp);vdtp.fromArray(dtp);for(i=0;3>i;i++)tcoord=vsp.clone(),tcoord.applyMatrix4(mgm[i]),vert[i]=tcoord.dot(vtp),tcoord=vdsp.clone(),tcoord.applyMatrix4(mgm[i]),sdir[i]=tcoord.dot(vtp),tcoord=vsp.clone(),tcoord.applyMatrix4(mgm[i]),tdir[i]=tcoord.dot(vdtp);vsdir.fromArray(sdir);vtdir.fromArray(tdir);\nnorm.crossVectors(vtdir,vsdir);norm.normalize();0===vert[0]&&0===vert[1]?normOut.set(0,vert[2]>maxHeight2?1:-1,0):normOut.set(norm.x,norm.z,-norm.y);vertices[vertCount++]=size*vert[0];vertices[vertCount++]=size*(vert[2]-maxHeight2);vertices[vertCount++]=-size*vert[1];normals[normCount++]=normOut.x;normals[normCount++]=normOut.y;normals[normCount++]=normOut.z;numVertices[uvCount++]=1-t;numVertices[uvCount++]=1-s}}for(r=0;r<segments;r++)for(c=0;c<segments;c++)i=surfCount*bottom*bottom+r*bottom+c,s=\ni+1,t=s+bottom,tcoord=i+bottom,notDegenerate(i,s,t)&&(numTriangles[indexCount++]=i,numTriangles[indexCount++]=s,numTriangles[indexCount++]=t),notDegenerate(i,t,tcoord)&&(numTriangles[indexCount++]=i,numTriangles[indexCount++]=t,numTriangles[indexCount++]=tcoord);surfCount++}_this.setIndex(new _three.BufferAttribute(numTriangles,1));_this.setAttribute(\"position\",new _three.BufferAttribute(vertices,3));_this.setAttribute(\"normal\",new _three.BufferAttribute(normals,3));_this.setAttribute(\"uv\",new _three.BufferAttribute(numVertices,\n2));_this.computeBoundingSphere();return _this}_inherits(TeapotGeometry,_BufferGeometry);return TeapotGeometry}(_three.BufferGeometry);exports.TeapotGeometry=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$geometries$TeapotGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TeapotGeometry = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Tessellates the famous Utah teapot database by Martin Newell into triangles.\n *\n * Parameters: size = 50, segments = 10, bottom = true, lid = true, body = true,\n *   fitLid = false, blinn = true\n *\n * size is a relative scale: I've scaled the teapot to fit vertically between -1 and 1.\n * Think of it as a \"radius\".\n * segments - number of line segments to subdivide each patch edge;\n *   1 is possible but gives degenerates, so two is the real minimum.\n * bottom - boolean, if true (default) then the bottom patches are added. Some consider\n *   adding the bottom heresy, so set this to \"false\" to adhere to the One True Way.\n * lid - to remove the lid and look inside, set to true.\n * body - to remove the body and leave the lid, set this and \"bottom\" to false.\n * fitLid - the lid is a tad small in the original. This stretches it a bit so you can't\n *   see the teapot's insides through the gap.\n * blinn - Jim Blinn scaled the original data vertically by dividing by about 1.3 to look\n *   nicer. If you want to see the original teapot, similar to the real-world model, set\n *   this to false. True by default.\n *   See http://en.wikipedia.org/wiki/File:Original_Utah_Teapot.jpg for the original\n *   real-world teapot (from http://en.wikipedia.org/wiki/Utah_teapot).\n *\n * Note that the bottom (the last four patches) is not flat - blame Frank Crow, not me.\n *\n * The teapot should normally be rendered as a double sided object, since for some\n * patches both sides can be seen, e.g., the gap around the lid and inside the spout.\n *\n * Segments 'n' determines the number of triangles output.\n *   Total triangles = 32*2*n*n - 8*n    [degenerates at the top and bottom cusps are deleted]\n *\n *   size_factor   # triangles\n *       1          56\n *       2         240\n *       3         552\n *       4         992\n *\n *      10        6320\n *      20       25440\n *      30       57360\n *\n * Code converted from my ancient SPD software, http://tog.acm.org/resources/SPD/\n * Created for the Udacity course \"Interactive Rendering\", http://bit.ly/ericity\n * Lesson: https://www.udacity.com/course/viewer#!/c-cs291/l-68866048/m-106482448\n * YouTube video on teapot history: https://www.youtube.com/watch?v=DxMfblPzFNc\n *\n * See https://en.wikipedia.org/wiki/Utah_teapot for the history of the teapot\n *\n */\nvar TeapotGeometry =\n/*#__PURE__*/\nfunction (_BufferGeometry) {\n  _inherits(TeapotGeometry, _BufferGeometry);\n\n  function TeapotGeometry(size, segments, bottom, lid, body, fitLid, blinn) {\n    var _this;\n\n    _classCallCheck(this, TeapotGeometry);\n\n    // 32 * 4 * 4 Bezier spline patches\n    var teapotPatches = [\n    /*rim*/\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 3, 16, 17, 18, 7, 19, 20, 21, 11, 22, 23, 24, 15, 25, 26, 27, 18, 28, 29, 30, 21, 31, 32, 33, 24, 34, 35, 36, 27, 37, 38, 39, 30, 40, 41, 0, 33, 42, 43, 4, 36, 44, 45, 8, 39, 46, 47, 12,\n    /*body*/\n    12, 13, 14, 15, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 15, 25, 26, 27, 51, 60, 61, 62, 55, 63, 64, 65, 59, 66, 67, 68, 27, 37, 38, 39, 62, 69, 70, 71, 65, 72, 73, 74, 68, 75, 76, 77, 39, 46, 47, 12, 71, 78, 79, 48, 74, 80, 81, 52, 77, 82, 83, 56, 56, 57, 58, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 59, 66, 67, 68, 87, 96, 97, 98, 91, 99, 100, 101, 95, 102, 103, 104, 68, 75, 76, 77, 98, 105, 106, 107, 101, 108, 109, 110, 104, 111, 112, 113, 77, 82, 83, 56, 107, 114, 115, 84, 110, 116, 117, 88, 113, 118, 119, 92,\n    /*handle*/\n    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 123, 136, 137, 120, 127, 138, 139, 124, 131, 140, 141, 128, 135, 142, 143, 132, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 68, 152, 153, 154, 135, 142, 143, 132, 147, 155, 156, 144, 151, 157, 158, 148, 154, 159, 160, 68,\n    /*spout*/\n    161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 164, 177, 178, 161, 168, 179, 180, 165, 172, 181, 182, 169, 176, 183, 184, 173, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 176, 183, 184, 173, 188, 197, 198, 185, 192, 199, 200, 189, 196, 201, 202, 193,\n    /*lid*/\n    203, 203, 203, 203, 204, 205, 206, 207, 208, 208, 208, 208, 209, 210, 211, 212, 203, 203, 203, 203, 207, 213, 214, 215, 208, 208, 208, 208, 212, 216, 217, 218, 203, 203, 203, 203, 215, 219, 220, 221, 208, 208, 208, 208, 218, 222, 223, 224, 203, 203, 203, 203, 221, 225, 226, 204, 208, 208, 208, 208, 224, 227, 228, 209, 209, 210, 211, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 212, 216, 217, 218, 232, 241, 242, 243, 236, 244, 245, 246, 240, 247, 248, 249, 218, 222, 223, 224, 243, 250, 251, 252, 246, 253, 254, 255, 249, 256, 257, 258, 224, 227, 228, 209, 252, 259, 260, 229, 255, 261, 262, 233, 258, 263, 264, 237,\n    /*bottom*/\n    265, 265, 265, 265, 266, 267, 268, 269, 270, 271, 272, 273, 92, 119, 118, 113, 265, 265, 265, 265, 269, 274, 275, 276, 273, 277, 278, 279, 113, 112, 111, 104, 265, 265, 265, 265, 276, 280, 281, 282, 279, 283, 284, 285, 104, 103, 102, 95, 265, 265, 265, 265, 282, 286, 287, 266, 285, 288, 289, 270, 95, 94, 93, 92];\n    var teapotVertices = [1.4, 0, 2.4, 1.4, -0.784, 2.4, 0.784, -1.4, 2.4, 0, -1.4, 2.4, 1.3375, 0, 2.53125, 1.3375, -0.749, 2.53125, 0.749, -1.3375, 2.53125, 0, -1.3375, 2.53125, 1.4375, 0, 2.53125, 1.4375, -0.805, 2.53125, 0.805, -1.4375, 2.53125, 0, -1.4375, 2.53125, 1.5, 0, 2.4, 1.5, -0.84, 2.4, 0.84, -1.5, 2.4, 0, -1.5, 2.4, -0.784, -1.4, 2.4, -1.4, -0.784, 2.4, -1.4, 0, 2.4, -0.749, -1.3375, 2.53125, -1.3375, -0.749, 2.53125, -1.3375, 0, 2.53125, -0.805, -1.4375, 2.53125, -1.4375, -0.805, 2.53125, -1.4375, 0, 2.53125, -0.84, -1.5, 2.4, -1.5, -0.84, 2.4, -1.5, 0, 2.4, -1.4, 0.784, 2.4, -0.784, 1.4, 2.4, 0, 1.4, 2.4, -1.3375, 0.749, 2.53125, -0.749, 1.3375, 2.53125, 0, 1.3375, 2.53125, -1.4375, 0.805, 2.53125, -0.805, 1.4375, 2.53125, 0, 1.4375, 2.53125, -1.5, 0.84, 2.4, -0.84, 1.5, 2.4, 0, 1.5, 2.4, 0.784, 1.4, 2.4, 1.4, 0.784, 2.4, 0.749, 1.3375, 2.53125, 1.3375, 0.749, 2.53125, 0.805, 1.4375, 2.53125, 1.4375, 0.805, 2.53125, 0.84, 1.5, 2.4, 1.5, 0.84, 2.4, 1.75, 0, 1.875, 1.75, -0.98, 1.875, 0.98, -1.75, 1.875, 0, -1.75, 1.875, 2, 0, 1.35, 2, -1.12, 1.35, 1.12, -2, 1.35, 0, -2, 1.35, 2, 0, 0.9, 2, -1.12, 0.9, 1.12, -2, 0.9, 0, -2, 0.9, -0.98, -1.75, 1.875, -1.75, -0.98, 1.875, -1.75, 0, 1.875, -1.12, -2, 1.35, -2, -1.12, 1.35, -2, 0, 1.35, -1.12, -2, 0.9, -2, -1.12, 0.9, -2, 0, 0.9, -1.75, 0.98, 1.875, -0.98, 1.75, 1.875, 0, 1.75, 1.875, -2, 1.12, 1.35, -1.12, 2, 1.35, 0, 2, 1.35, -2, 1.12, 0.9, -1.12, 2, 0.9, 0, 2, 0.9, 0.98, 1.75, 1.875, 1.75, 0.98, 1.875, 1.12, 2, 1.35, 2, 1.12, 1.35, 1.12, 2, 0.9, 2, 1.12, 0.9, 2, 0, 0.45, 2, -1.12, 0.45, 1.12, -2, 0.45, 0, -2, 0.45, 1.5, 0, 0.225, 1.5, -0.84, 0.225, 0.84, -1.5, 0.225, 0, -1.5, 0.225, 1.5, 0, 0.15, 1.5, -0.84, 0.15, 0.84, -1.5, 0.15, 0, -1.5, 0.15, -1.12, -2, 0.45, -2, -1.12, 0.45, -2, 0, 0.45, -0.84, -1.5, 0.225, -1.5, -0.84, 0.225, -1.5, 0, 0.225, -0.84, -1.5, 0.15, -1.5, -0.84, 0.15, -1.5, 0, 0.15, -2, 1.12, 0.45, -1.12, 2, 0.45, 0, 2, 0.45, -1.5, 0.84, 0.225, -0.84, 1.5, 0.225, 0, 1.5, 0.225, -1.5, 0.84, 0.15, -0.84, 1.5, 0.15, 0, 1.5, 0.15, 1.12, 2, 0.45, 2, 1.12, 0.45, 0.84, 1.5, 0.225, 1.5, 0.84, 0.225, 0.84, 1.5, 0.15, 1.5, 0.84, 0.15, -1.6, 0, 2.025, -1.6, -0.3, 2.025, -1.5, -0.3, 2.25, -1.5, 0, 2.25, -2.3, 0, 2.025, -2.3, -0.3, 2.025, -2.5, -0.3, 2.25, -2.5, 0, 2.25, -2.7, 0, 2.025, -2.7, -0.3, 2.025, -3, -0.3, 2.25, -3, 0, 2.25, -2.7, 0, 1.8, -2.7, -0.3, 1.8, -3, -0.3, 1.8, -3, 0, 1.8, -1.5, 0.3, 2.25, -1.6, 0.3, 2.025, -2.5, 0.3, 2.25, -2.3, 0.3, 2.025, -3, 0.3, 2.25, -2.7, 0.3, 2.025, -3, 0.3, 1.8, -2.7, 0.3, 1.8, -2.7, 0, 1.575, -2.7, -0.3, 1.575, -3, -0.3, 1.35, -3, 0, 1.35, -2.5, 0, 1.125, -2.5, -0.3, 1.125, -2.65, -0.3, 0.9375, -2.65, 0, 0.9375, -2, -0.3, 0.9, -1.9, -0.3, 0.6, -1.9, 0, 0.6, -3, 0.3, 1.35, -2.7, 0.3, 1.575, -2.65, 0.3, 0.9375, -2.5, 0.3, 1.125, -1.9, 0.3, 0.6, -2, 0.3, 0.9, 1.7, 0, 1.425, 1.7, -0.66, 1.425, 1.7, -0.66, 0.6, 1.7, 0, 0.6, 2.6, 0, 1.425, 2.6, -0.66, 1.425, 3.1, -0.66, 0.825, 3.1, 0, 0.825, 2.3, 0, 2.1, 2.3, -0.25, 2.1, 2.4, -0.25, 2.025, 2.4, 0, 2.025, 2.7, 0, 2.4, 2.7, -0.25, 2.4, 3.3, -0.25, 2.4, 3.3, 0, 2.4, 1.7, 0.66, 0.6, 1.7, 0.66, 1.425, 3.1, 0.66, 0.825, 2.6, 0.66, 1.425, 2.4, 0.25, 2.025, 2.3, 0.25, 2.1, 3.3, 0.25, 2.4, 2.7, 0.25, 2.4, 2.8, 0, 2.475, 2.8, -0.25, 2.475, 3.525, -0.25, 2.49375, 3.525, 0, 2.49375, 2.9, 0, 2.475, 2.9, -0.15, 2.475, 3.45, -0.15, 2.5125, 3.45, 0, 2.5125, 2.8, 0, 2.4, 2.8, -0.15, 2.4, 3.2, -0.15, 2.4, 3.2, 0, 2.4, 3.525, 0.25, 2.49375, 2.8, 0.25, 2.475, 3.45, 0.15, 2.5125, 2.9, 0.15, 2.475, 3.2, 0.15, 2.4, 2.8, 0.15, 2.4, 0, 0, 3.15, 0.8, 0, 3.15, 0.8, -0.45, 3.15, 0.45, -0.8, 3.15, 0, -0.8, 3.15, 0, 0, 2.85, 0.2, 0, 2.7, 0.2, -0.112, 2.7, 0.112, -0.2, 2.7, 0, -0.2, 2.7, -0.45, -0.8, 3.15, -0.8, -0.45, 3.15, -0.8, 0, 3.15, -0.112, -0.2, 2.7, -0.2, -0.112, 2.7, -0.2, 0, 2.7, -0.8, 0.45, 3.15, -0.45, 0.8, 3.15, 0, 0.8, 3.15, -0.2, 0.112, 2.7, -0.112, 0.2, 2.7, 0, 0.2, 2.7, 0.45, 0.8, 3.15, 0.8, 0.45, 3.15, 0.112, 0.2, 2.7, 0.2, 0.112, 2.7, 0.4, 0, 2.55, 0.4, -0.224, 2.55, 0.224, -0.4, 2.55, 0, -0.4, 2.55, 1.3, 0, 2.55, 1.3, -0.728, 2.55, 0.728, -1.3, 2.55, 0, -1.3, 2.55, 1.3, 0, 2.4, 1.3, -0.728, 2.4, 0.728, -1.3, 2.4, 0, -1.3, 2.4, -0.224, -0.4, 2.55, -0.4, -0.224, 2.55, -0.4, 0, 2.55, -0.728, -1.3, 2.55, -1.3, -0.728, 2.55, -1.3, 0, 2.55, -0.728, -1.3, 2.4, -1.3, -0.728, 2.4, -1.3, 0, 2.4, -0.4, 0.224, 2.55, -0.224, 0.4, 2.55, 0, 0.4, 2.55, -1.3, 0.728, 2.55, -0.728, 1.3, 2.55, 0, 1.3, 2.55, -1.3, 0.728, 2.4, -0.728, 1.3, 2.4, 0, 1.3, 2.4, 0.224, 0.4, 2.55, 0.4, 0.224, 2.55, 0.728, 1.3, 2.55, 1.3, 0.728, 2.55, 0.728, 1.3, 2.4, 1.3, 0.728, 2.4, 0, 0, 0, 1.425, 0, 0, 1.425, 0.798, 0, 0.798, 1.425, 0, 0, 1.425, 0, 1.5, 0, 0.075, 1.5, 0.84, 0.075, 0.84, 1.5, 0.075, 0, 1.5, 0.075, -0.798, 1.425, 0, -1.425, 0.798, 0, -1.425, 0, 0, -0.84, 1.5, 0.075, -1.5, 0.84, 0.075, -1.5, 0, 0.075, -1.425, -0.798, 0, -0.798, -1.425, 0, 0, -1.425, 0, -1.5, -0.84, 0.075, -0.84, -1.5, 0.075, 0, -1.5, 0.075, 0.798, -1.425, 0, 1.425, -0.798, 0, 0.84, -1.5, 0.075, 1.5, -0.84, 0.075];\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeapotGeometry).call(this));\n    size = size || 50; // number of segments per patch\n\n    segments = segments !== undefined ? Math.max(2, Math.floor(segments) || 10) : 10; // which parts should be visible\n\n    bottom = bottom === undefined ? true : bottom;\n    lid = lid === undefined ? true : lid;\n    body = body === undefined ? true : body; // Should the lid be snug? It's not traditional, but we make it snug by default\n\n    fitLid = fitLid === undefined ? true : fitLid; // Jim Blinn scaled the teapot down in size by about 1.3 for\n    // some rendering tests. He liked the new proportions that he kept\n    // the data in this form. The model was distributed with these new\n    // proportions and became the norm. Trivia: comparing images of the\n    // real teapot and the computer model, the ratio for the bowl of the\n    // real teapot is more like 1.25, but since 1.3 is the traditional\n    // value given, we use it here.\n\n    var blinnScale = 1.3;\n    blinn = blinn === undefined ? true : blinn; // scale the size to be the real scaling factor\n\n    var maxHeight = 3.15 * (blinn ? 1 : blinnScale);\n    var maxHeight2 = maxHeight / 2;\n    var trueSize = size / maxHeight2; // Number of elements depends on what is needed. Subtract degenerate\n    // triangles at tip of bottom and lid out in advance.\n\n    var numTriangles = bottom ? (8 * segments - 4) * segments : 0;\n    numTriangles += lid ? (16 * segments - 4) * segments : 0;\n    numTriangles += body ? 40 * segments * segments : 0;\n    var indices = new Uint32Array(numTriangles * 3);\n    var numVertices = bottom ? 4 : 0;\n    numVertices += lid ? 8 : 0;\n    numVertices += body ? 20 : 0;\n    numVertices *= (segments + 1) * (segments + 1);\n    var vertices = new Float32Array(numVertices * 3);\n    var normals = new Float32Array(numVertices * 3);\n    var uvs = new Float32Array(numVertices * 2); // Bezier form\n\n    var ms = new _three.Matrix4();\n    ms.set(-1.0, 3.0, -3.0, 1.0, 3.0, -6.0, 3.0, 0.0, -3.0, 3.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);\n    var g = [];\n    var i, r, c;\n    var sp = [];\n    var tp = [];\n    var dsp = [];\n    var dtp = []; // M * G * M matrix, sort of see\n    // http://www.cs.helsinki.fi/group/goa/mallinnus/curves/surfaces.html\n\n    var mgm = [];\n    var vert = [];\n    var sdir = [];\n    var tdir = [];\n    var norm = new _three.Vector3();\n    var tcoord;\n    var sstep, tstep;\n    var vertPerRow;\n    var s, t, sval, tval, p;\n    var dsval = 0;\n    var dtval = 0;\n    var normOut = new _three.Vector3();\n    var v1, v2, v3, v4;\n    var gmx = new _three.Matrix4();\n    var tmtx = new _three.Matrix4();\n    var vsp = new _three.Vector4();\n    var vtp = new _three.Vector4();\n    var vdsp = new _three.Vector4();\n    var vdtp = new _three.Vector4();\n    var vsdir = new _three.Vector3();\n    var vtdir = new _three.Vector3();\n    var mst = ms.clone();\n    mst.transpose(); // internal function: test if triangle has any matching vertices;\n    // if so, don't save triangle, since it won't display anything.\n\n    var notDegenerate = function notDegenerate(vtx1, vtx2, vtx3) {\n      return (// if any vertex matches, return false\n        !(vertices[vtx1 * 3] === vertices[vtx2 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx2 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx2 * 3 + 2] || vertices[vtx1 * 3] === vertices[vtx3 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx3 * 3 + 2] || vertices[vtx2 * 3] === vertices[vtx3 * 3] && vertices[vtx2 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx2 * 3 + 2] === vertices[vtx3 * 3 + 2])\n      );\n    };\n\n    for (i = 0; i < 3; i++) {\n      mgm[i] = new _three.Matrix4();\n    }\n\n    var minPatches = body ? 0 : 20;\n    var maxPatches = bottom ? 32 : 28;\n    vertPerRow = segments + 1;\n    var surfCount = 0;\n    var vertCount = 0;\n    var normCount = 0;\n    var uvCount = 0;\n    var indexCount = 0;\n\n    for (var surf = minPatches; surf < maxPatches; surf++) {\n      // lid is in the middle of the data, patches 20-27,\n      // so ignore it for this part of the loop if the lid is not desired\n      if (lid || surf < 20 || surf >= 28) {\n        // get M * G * M matrix for x,y,z\n        for (i = 0; i < 3; i++) {\n          // get control patches\n          for (r = 0; r < 4; r++) {\n            for (c = 0; c < 4; c++) {\n              // transposed\n              g[c * 4 + r] = teapotVertices[teapotPatches[surf * 16 + r * 4 + c] * 3 + i]; // is the lid to be made larger, and is this a point on the lid\n              // that is X or Y?\n\n              if (fitLid && surf >= 20 && surf < 28 && i !== 2) {\n                // increase XY size by 7.7%, found empirically. I don't\n                // increase Z so that the teapot will continue to fit in the\n                // space -1 to 1 for Y (Y is up for the final model).\n                g[c * 4 + r] *= 1.077;\n              } // Blinn \"fixed\" the teapot by dividing Z by blinnScale, and that's the\n              // data we now use. The original teapot is taller. Fix it:\n\n\n              if (!blinn && i === 2) {\n                g[c * 4 + r] *= blinnScale;\n              }\n            }\n          }\n\n          gmx.set(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]);\n          tmtx.multiplyMatrices(gmx, ms);\n          mgm[i].multiplyMatrices(mst, tmtx);\n        } // step along, get points, and output\n\n\n        for (sstep = 0; sstep <= segments; sstep++) {\n          s = sstep / segments;\n\n          for (tstep = 0; tstep <= segments; tstep++) {\n            t = tstep / segments; // point from basis\n            // get power vectors and their derivatives\n\n            for (p = 4, sval = tval = 1.0; p--;) {\n              sp[p] = sval;\n              tp[p] = tval;\n              sval *= s;\n              tval *= t;\n\n              if (p === 3) {\n                dsp[p] = dtp[p] = 0.0;\n                dsval = dtval = 1.0;\n              } else {\n                dsp[p] = dsval * (3 - p);\n                dtp[p] = dtval * (3 - p);\n                dsval *= s;\n                dtval *= t;\n              }\n            }\n\n            vsp.fromArray(sp);\n            vtp.fromArray(tp);\n            vdsp.fromArray(dsp);\n            vdtp.fromArray(dtp); // do for x,y,z\n\n            for (i = 0; i < 3; i++) {\n              // multiply power vectors times matrix to get value\n              tcoord = vsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              vert[i] = tcoord.dot(vtp); // get s and t tangent vectors\n\n              tcoord = vdsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              sdir[i] = tcoord.dot(vtp);\n              tcoord = vsp.clone();\n              tcoord.applyMatrix4(mgm[i]);\n              tdir[i] = tcoord.dot(vdtp);\n            } // find normal\n\n\n            vsdir.fromArray(sdir);\n            vtdir.fromArray(tdir);\n            norm.crossVectors(vtdir, vsdir);\n            norm.normalize(); // if X and Z length is 0, at the cusp, so point the normal up or down, depending on patch number\n\n            if (vert[0] === 0 && vert[1] === 0) {\n              // if above the middle of the teapot, normal points up, else down\n              normOut.set(0, vert[2] > maxHeight2 ? 1 : -1, 0);\n            } else {\n              // standard output: rotate on X axis\n              normOut.set(norm.x, norm.z, -norm.y);\n            } // store it all\n\n\n            vertices[vertCount++] = trueSize * vert[0];\n            vertices[vertCount++] = trueSize * (vert[2] - maxHeight2);\n            vertices[vertCount++] = -trueSize * vert[1];\n            normals[normCount++] = normOut.x;\n            normals[normCount++] = normOut.y;\n            normals[normCount++] = normOut.z;\n            uvs[uvCount++] = 1 - t;\n            uvs[uvCount++] = 1 - s;\n          }\n        } // save the faces\n\n\n        for (sstep = 0; sstep < segments; sstep++) {\n          for (tstep = 0; tstep < segments; tstep++) {\n            v1 = surfCount * vertPerRow * vertPerRow + sstep * vertPerRow + tstep;\n            v2 = v1 + 1;\n            v3 = v2 + vertPerRow;\n            v4 = v1 + vertPerRow; // Normals and UVs cannot be shared. Without clone(), you can see the consequences\n            // of sharing if you call geometry.applyMatrix4( matrix ).\n\n            if (notDegenerate(v1, v2, v3)) {\n              indices[indexCount++] = v1;\n              indices[indexCount++] = v2;\n              indices[indexCount++] = v3;\n            }\n\n            if (notDegenerate(v1, v3, v4)) {\n              indices[indexCount++] = v1;\n              indices[indexCount++] = v3;\n              indices[indexCount++] = v4;\n            }\n          }\n        } // increment only if a surface was used\n\n\n        surfCount++;\n      }\n    }\n\n    _this.setIndex(new _three.BufferAttribute(indices, 1));\n\n    _this.setAttribute('position', new _three.BufferAttribute(vertices, 3));\n\n    _this.setAttribute('normal', new _three.BufferAttribute(normals, 3));\n\n    _this.setAttribute('uv', new _three.BufferAttribute(uvs, 2));\n\n    _this.computeBoundingSphere();\n\n    return _this;\n  }\n\n  return TeapotGeometry;\n}(_three.BufferGeometry);\n\nexports.TeapotGeometry = TeapotGeometry;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["prototype","__esModule","configurable","value","writable","__proto__","TeapotGeometry","constructor"]],"~:compiled-at",1630917515570,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$geometries$TeapotGeometry.js\",\n\"lineCount\":23,\n\"mappings\":\"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CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,KAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,KAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,CAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,CAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,CAAt+H,CAAs+H,GAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,EAAt+H,CAAs+H,IAAt+H,CAAs+H,CAAt+H,CAAs+H,EAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,CAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,KAAt+H,CAAs+H,GAAt+H,CAAs+H,GAAt+H,CAAs+H,CAAt+H,CAAs+H,GAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,EAAt+H,CAAs+H,IAAt+H,CAAs+H,EAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,GAAt+H,CAAs+H,GAAt+H,CAAs+H,IAAt+H,CAAs+H,GAAt+H,CAAs+H,CAAt+H,CAAs+H,CAAt+H;AAAs+H,CAAt+H,CAAs+H,KAAt+H,CAAs+H,CAAt+H,CAAs+H,CAAt+H,CAAs+H,KAAt+H,CAAs+H,IAAt+H,CAAs+H,CAAt+H,CAAs+H,IAAt+H,CAAs+H,KAAt+H,CAAs+H,CAA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\",\n\"sources\":[\"node_modules/three-stdlib/geometries/TeapotGeometry.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$geometries$TeapotGeometry\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.TeapotGeometry = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n/**\\n * Tessellates the famous Utah teapot database by Martin Newell into triangles.\\n *\\n * Parameters: size = 50, segments = 10, bottom = true, lid = true, body = true,\\n *   fitLid = false, blinn = true\\n *\\n * size is a relative scale: I've scaled the teapot to fit vertically between -1 and 1.\\n * Think of it as a \\\"radius\\\".\\n * segments - number of line segments to subdivide each patch edge;\\n *   1 is possible but gives degenerates, so two is the real minimum.\\n * bottom - boolean, if true (default) then the bottom patches are added. Some consider\\n *   adding the bottom heresy, so set this to \\\"false\\\" to adhere to the One True Way.\\n * lid - to remove the lid and look inside, set to true.\\n * body - to remove the body and leave the lid, set this and \\\"bottom\\\" to false.\\n * fitLid - the lid is a tad small in the original. This stretches it a bit so you can't\\n *   see the teapot's insides through the gap.\\n * blinn - Jim Blinn scaled the original data vertically by dividing by about 1.3 to look\\n *   nicer. If you want to see the original teapot, similar to the real-world model, set\\n *   this to false. True by default.\\n *   See http://en.wikipedia.org/wiki/File:Original_Utah_Teapot.jpg for the original\\n *   real-world teapot (from http://en.wikipedia.org/wiki/Utah_teapot).\\n *\\n * Note that the bottom (the last four patches) is not flat - blame Frank Crow, not me.\\n *\\n * The teapot should normally be rendered as a double sided object, since for some\\n * patches both sides can be seen, e.g., the gap around the lid and inside the spout.\\n *\\n * Segments 'n' determines the number of triangles output.\\n *   Total triangles = 32*2*n*n - 8*n    [degenerates at the top and bottom cusps are deleted]\\n *\\n *   size_factor   # triangles\\n *       1          56\\n *       2         240\\n *       3         552\\n *       4         992\\n *\\n *      10        6320\\n *      20       25440\\n *      30       57360\\n *\\n * Code converted from my ancient SPD software, http://tog.acm.org/resources/SPD/\\n * Created for the Udacity course \\\"Interactive Rendering\\\", http://bit.ly/ericity\\n * Lesson: https://www.udacity.com/course/viewer#!/c-cs291/l-68866048/m-106482448\\n * YouTube video on teapot history: https://www.youtube.com/watch?v=DxMfblPzFNc\\n *\\n * See https://en.wikipedia.org/wiki/Utah_teapot for the history of the teapot\\n *\\n */\\nvar TeapotGeometry =\\n/*#__PURE__*/\\nfunction (_BufferGeometry) {\\n  _inherits(TeapotGeometry, _BufferGeometry);\\n\\n  function TeapotGeometry(size, segments, bottom, lid, body, fitLid, blinn) {\\n    var _this;\\n\\n    _classCallCheck(this, TeapotGeometry);\\n\\n    // 32 * 4 * 4 Bezier spline patches\\n    var teapotPatches = [\\n    /*rim*/\\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 3, 16, 17, 18, 7, 19, 20, 21, 11, 22, 23, 24, 15, 25, 26, 27, 18, 28, 29, 30, 21, 31, 32, 33, 24, 34, 35, 36, 27, 37, 38, 39, 30, 40, 41, 0, 33, 42, 43, 4, 36, 44, 45, 8, 39, 46, 47, 12,\\n    /*body*/\\n    12, 13, 14, 15, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 15, 25, 26, 27, 51, 60, 61, 62, 55, 63, 64, 65, 59, 66, 67, 68, 27, 37, 38, 39, 62, 69, 70, 71, 65, 72, 73, 74, 68, 75, 76, 77, 39, 46, 47, 12, 71, 78, 79, 48, 74, 80, 81, 52, 77, 82, 83, 56, 56, 57, 58, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 59, 66, 67, 68, 87, 96, 97, 98, 91, 99, 100, 101, 95, 102, 103, 104, 68, 75, 76, 77, 98, 105, 106, 107, 101, 108, 109, 110, 104, 111, 112, 113, 77, 82, 83, 56, 107, 114, 115, 84, 110, 116, 117, 88, 113, 118, 119, 92,\\n    /*handle*/\\n    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 123, 136, 137, 120, 127, 138, 139, 124, 131, 140, 141, 128, 135, 142, 143, 132, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 68, 152, 153, 154, 135, 142, 143, 132, 147, 155, 156, 144, 151, 157, 158, 148, 154, 159, 160, 68,\\n    /*spout*/\\n    161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 164, 177, 178, 161, 168, 179, 180, 165, 172, 181, 182, 169, 176, 183, 184, 173, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 176, 183, 184, 173, 188, 197, 198, 185, 192, 199, 200, 189, 196, 201, 202, 193,\\n    /*lid*/\\n    203, 203, 203, 203, 204, 205, 206, 207, 208, 208, 208, 208, 209, 210, 211, 212, 203, 203, 203, 203, 207, 213, 214, 215, 208, 208, 208, 208, 212, 216, 217, 218, 203, 203, 203, 203, 215, 219, 220, 221, 208, 208, 208, 208, 218, 222, 223, 224, 203, 203, 203, 203, 221, 225, 226, 204, 208, 208, 208, 208, 224, 227, 228, 209, 209, 210, 211, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 212, 216, 217, 218, 232, 241, 242, 243, 236, 244, 245, 246, 240, 247, 248, 249, 218, 222, 223, 224, 243, 250, 251, 252, 246, 253, 254, 255, 249, 256, 257, 258, 224, 227, 228, 209, 252, 259, 260, 229, 255, 261, 262, 233, 258, 263, 264, 237,\\n    /*bottom*/\\n    265, 265, 265, 265, 266, 267, 268, 269, 270, 271, 272, 273, 92, 119, 118, 113, 265, 265, 265, 265, 269, 274, 275, 276, 273, 277, 278, 279, 113, 112, 111, 104, 265, 265, 265, 265, 276, 280, 281, 282, 279, 283, 284, 285, 104, 103, 102, 95, 265, 265, 265, 265, 282, 286, 287, 266, 285, 288, 289, 270, 95, 94, 93, 92];\\n    var teapotVertices = [1.4, 0, 2.4, 1.4, -0.784, 2.4, 0.784, -1.4, 2.4, 0, -1.4, 2.4, 1.3375, 0, 2.53125, 1.3375, -0.749, 2.53125, 0.749, -1.3375, 2.53125, 0, -1.3375, 2.53125, 1.4375, 0, 2.53125, 1.4375, -0.805, 2.53125, 0.805, -1.4375, 2.53125, 0, -1.4375, 2.53125, 1.5, 0, 2.4, 1.5, -0.84, 2.4, 0.84, -1.5, 2.4, 0, -1.5, 2.4, -0.784, -1.4, 2.4, -1.4, -0.784, 2.4, -1.4, 0, 2.4, -0.749, -1.3375, 2.53125, -1.3375, -0.749, 2.53125, -1.3375, 0, 2.53125, -0.805, -1.4375, 2.53125, -1.4375, -0.805, 2.53125, -1.4375, 0, 2.53125, -0.84, -1.5, 2.4, -1.5, -0.84, 2.4, -1.5, 0, 2.4, -1.4, 0.784, 2.4, -0.784, 1.4, 2.4, 0, 1.4, 2.4, -1.3375, 0.749, 2.53125, -0.749, 1.3375, 2.53125, 0, 1.3375, 2.53125, -1.4375, 0.805, 2.53125, -0.805, 1.4375, 2.53125, 0, 1.4375, 2.53125, -1.5, 0.84, 2.4, -0.84, 1.5, 2.4, 0, 1.5, 2.4, 0.784, 1.4, 2.4, 1.4, 0.784, 2.4, 0.749, 1.3375, 2.53125, 1.3375, 0.749, 2.53125, 0.805, 1.4375, 2.53125, 1.4375, 0.805, 2.53125, 0.84, 1.5, 2.4, 1.5, 0.84, 2.4, 1.75, 0, 1.875, 1.75, -0.98, 1.875, 0.98, -1.75, 1.875, 0, -1.75, 1.875, 2, 0, 1.35, 2, -1.12, 1.35, 1.12, -2, 1.35, 0, -2, 1.35, 2, 0, 0.9, 2, -1.12, 0.9, 1.12, -2, 0.9, 0, -2, 0.9, -0.98, -1.75, 1.875, -1.75, -0.98, 1.875, -1.75, 0, 1.875, -1.12, -2, 1.35, -2, -1.12, 1.35, -2, 0, 1.35, -1.12, -2, 0.9, -2, -1.12, 0.9, -2, 0, 0.9, -1.75, 0.98, 1.875, -0.98, 1.75, 1.875, 0, 1.75, 1.875, -2, 1.12, 1.35, -1.12, 2, 1.35, 0, 2, 1.35, -2, 1.12, 0.9, -1.12, 2, 0.9, 0, 2, 0.9, 0.98, 1.75, 1.875, 1.75, 0.98, 1.875, 1.12, 2, 1.35, 2, 1.12, 1.35, 1.12, 2, 0.9, 2, 1.12, 0.9, 2, 0, 0.45, 2, -1.12, 0.45, 1.12, -2, 0.45, 0, -2, 0.45, 1.5, 0, 0.225, 1.5, -0.84, 0.225, 0.84, -1.5, 0.225, 0, -1.5, 0.225, 1.5, 0, 0.15, 1.5, -0.84, 0.15, 0.84, -1.5, 0.15, 0, -1.5, 0.15, -1.12, -2, 0.45, -2, -1.12, 0.45, -2, 0, 0.45, -0.84, -1.5, 0.225, -1.5, -0.84, 0.225, -1.5, 0, 0.225, -0.84, -1.5, 0.15, -1.5, -0.84, 0.15, -1.5, 0, 0.15, -2, 1.12, 0.45, -1.12, 2, 0.45, 0, 2, 0.45, -1.5, 0.84, 0.225, -0.84, 1.5, 0.225, 0, 1.5, 0.225, -1.5, 0.84, 0.15, -0.84, 1.5, 0.15, 0, 1.5, 0.15, 1.12, 2, 0.45, 2, 1.12, 0.45, 0.84, 1.5, 0.225, 1.5, 0.84, 0.225, 0.84, 1.5, 0.15, 1.5, 0.84, 0.15, -1.6, 0, 2.025, -1.6, -0.3, 2.025, -1.5, -0.3, 2.25, -1.5, 0, 2.25, -2.3, 0, 2.025, -2.3, -0.3, 2.025, -2.5, -0.3, 2.25, -2.5, 0, 2.25, -2.7, 0, 2.025, -2.7, -0.3, 2.025, -3, -0.3, 2.25, -3, 0, 2.25, -2.7, 0, 1.8, -2.7, -0.3, 1.8, -3, -0.3, 1.8, -3, 0, 1.8, -1.5, 0.3, 2.25, -1.6, 0.3, 2.025, -2.5, 0.3, 2.25, -2.3, 0.3, 2.025, -3, 0.3, 2.25, -2.7, 0.3, 2.025, -3, 0.3, 1.8, -2.7, 0.3, 1.8, -2.7, 0, 1.575, -2.7, -0.3, 1.575, -3, -0.3, 1.35, -3, 0, 1.35, -2.5, 0, 1.125, -2.5, -0.3, 1.125, -2.65, -0.3, 0.9375, -2.65, 0, 0.9375, -2, -0.3, 0.9, -1.9, -0.3, 0.6, -1.9, 0, 0.6, -3, 0.3, 1.35, -2.7, 0.3, 1.575, -2.65, 0.3, 0.9375, -2.5, 0.3, 1.125, -1.9, 0.3, 0.6, -2, 0.3, 0.9, 1.7, 0, 1.425, 1.7, -0.66, 1.425, 1.7, -0.66, 0.6, 1.7, 0, 0.6, 2.6, 0, 1.425, 2.6, -0.66, 1.425, 3.1, -0.66, 0.825, 3.1, 0, 0.825, 2.3, 0, 2.1, 2.3, -0.25, 2.1, 2.4, -0.25, 2.025, 2.4, 0, 2.025, 2.7, 0, 2.4, 2.7, -0.25, 2.4, 3.3, -0.25, 2.4, 3.3, 0, 2.4, 1.7, 0.66, 0.6, 1.7, 0.66, 1.425, 3.1, 0.66, 0.825, 2.6, 0.66, 1.425, 2.4, 0.25, 2.025, 2.3, 0.25, 2.1, 3.3, 0.25, 2.4, 2.7, 0.25, 2.4, 2.8, 0, 2.475, 2.8, -0.25, 2.475, 3.525, -0.25, 2.49375, 3.525, 0, 2.49375, 2.9, 0, 2.475, 2.9, -0.15, 2.475, 3.45, -0.15, 2.5125, 3.45, 0, 2.5125, 2.8, 0, 2.4, 2.8, -0.15, 2.4, 3.2, -0.15, 2.4, 3.2, 0, 2.4, 3.525, 0.25, 2.49375, 2.8, 0.25, 2.475, 3.45, 0.15, 2.5125, 2.9, 0.15, 2.475, 3.2, 0.15, 2.4, 2.8, 0.15, 2.4, 0, 0, 3.15, 0.8, 0, 3.15, 0.8, -0.45, 3.15, 0.45, -0.8, 3.15, 0, -0.8, 3.15, 0, 0, 2.85, 0.2, 0, 2.7, 0.2, -0.112, 2.7, 0.112, -0.2, 2.7, 0, -0.2, 2.7, -0.45, -0.8, 3.15, -0.8, -0.45, 3.15, -0.8, 0, 3.15, -0.112, -0.2, 2.7, -0.2, -0.112, 2.7, -0.2, 0, 2.7, -0.8, 0.45, 3.15, -0.45, 0.8, 3.15, 0, 0.8, 3.15, -0.2, 0.112, 2.7, -0.112, 0.2, 2.7, 0, 0.2, 2.7, 0.45, 0.8, 3.15, 0.8, 0.45, 3.15, 0.112, 0.2, 2.7, 0.2, 0.112, 2.7, 0.4, 0, 2.55, 0.4, -0.224, 2.55, 0.224, -0.4, 2.55, 0, -0.4, 2.55, 1.3, 0, 2.55, 1.3, -0.728, 2.55, 0.728, -1.3, 2.55, 0, -1.3, 2.55, 1.3, 0, 2.4, 1.3, -0.728, 2.4, 0.728, -1.3, 2.4, 0, -1.3, 2.4, -0.224, -0.4, 2.55, -0.4, -0.224, 2.55, -0.4, 0, 2.55, -0.728, -1.3, 2.55, -1.3, -0.728, 2.55, -1.3, 0, 2.55, -0.728, -1.3, 2.4, -1.3, -0.728, 2.4, -1.3, 0, 2.4, -0.4, 0.224, 2.55, -0.224, 0.4, 2.55, 0, 0.4, 2.55, -1.3, 0.728, 2.55, -0.728, 1.3, 2.55, 0, 1.3, 2.55, -1.3, 0.728, 2.4, -0.728, 1.3, 2.4, 0, 1.3, 2.4, 0.224, 0.4, 2.55, 0.4, 0.224, 2.55, 0.728, 1.3, 2.55, 1.3, 0.728, 2.55, 0.728, 1.3, 2.4, 1.3, 0.728, 2.4, 0, 0, 0, 1.425, 0, 0, 1.425, 0.798, 0, 0.798, 1.425, 0, 0, 1.425, 0, 1.5, 0, 0.075, 1.5, 0.84, 0.075, 0.84, 1.5, 0.075, 0, 1.5, 0.075, -0.798, 1.425, 0, -1.425, 0.798, 0, -1.425, 0, 0, -0.84, 1.5, 0.075, -1.5, 0.84, 0.075, -1.5, 0, 0.075, -1.425, -0.798, 0, -0.798, -1.425, 0, 0, -1.425, 0, -1.5, -0.84, 0.075, -0.84, -1.5, 0.075, 0, -1.5, 0.075, 0.798, -1.425, 0, 1.425, -0.798, 0, 0.84, -1.5, 0.075, 1.5, -0.84, 0.075];\\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeapotGeometry).call(this));\\n    size = size || 50; // number of segments per patch\\n\\n    segments = segments !== undefined ? Math.max(2, Math.floor(segments) || 10) : 10; // which parts should be visible\\n\\n    bottom = bottom === undefined ? true : bottom;\\n    lid = lid === undefined ? true : lid;\\n    body = body === undefined ? true : body; // Should the lid be snug? It's not traditional, but we make it snug by default\\n\\n    fitLid = fitLid === undefined ? true : fitLid; // Jim Blinn scaled the teapot down in size by about 1.3 for\\n    // some rendering tests. He liked the new proportions that he kept\\n    // the data in this form. The model was distributed with these new\\n    // proportions and became the norm. Trivia: comparing images of the\\n    // real teapot and the computer model, the ratio for the bowl of the\\n    // real teapot is more like 1.25, but since 1.3 is the traditional\\n    // value given, we use it here.\\n\\n    var blinnScale = 1.3;\\n    blinn = blinn === undefined ? true : blinn; // scale the size to be the real scaling factor\\n\\n    var maxHeight = 3.15 * (blinn ? 1 : blinnScale);\\n    var maxHeight2 = maxHeight / 2;\\n    var trueSize = size / maxHeight2; // Number of elements depends on what is needed. Subtract degenerate\\n    // triangles at tip of bottom and lid out in advance.\\n\\n    var numTriangles = bottom ? (8 * segments - 4) * segments : 0;\\n    numTriangles += lid ? (16 * segments - 4) * segments : 0;\\n    numTriangles += body ? 40 * segments * segments : 0;\\n    var indices = new Uint32Array(numTriangles * 3);\\n    var numVertices = bottom ? 4 : 0;\\n    numVertices += lid ? 8 : 0;\\n    numVertices += body ? 20 : 0;\\n    numVertices *= (segments + 1) * (segments + 1);\\n    var vertices = new Float32Array(numVertices * 3);\\n    var normals = new Float32Array(numVertices * 3);\\n    var uvs = new Float32Array(numVertices * 2); // Bezier form\\n\\n    var ms = new _three.Matrix4();\\n    ms.set(-1.0, 3.0, -3.0, 1.0, 3.0, -6.0, 3.0, 0.0, -3.0, 3.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);\\n    var g = [];\\n    var i, r, c;\\n    var sp = [];\\n    var tp = [];\\n    var dsp = [];\\n    var dtp = []; // M * G * M matrix, sort of see\\n    // http://www.cs.helsinki.fi/group/goa/mallinnus/curves/surfaces.html\\n\\n    var mgm = [];\\n    var vert = [];\\n    var sdir = [];\\n    var tdir = [];\\n    var norm = new _three.Vector3();\\n    var tcoord;\\n    var sstep, tstep;\\n    var vertPerRow;\\n    var s, t, sval, tval, p;\\n    var dsval = 0;\\n    var dtval = 0;\\n    var normOut = new _three.Vector3();\\n    var v1, v2, v3, v4;\\n    var gmx = new _three.Matrix4();\\n    var tmtx = new _three.Matrix4();\\n    var vsp = new _three.Vector4();\\n    var vtp = new _three.Vector4();\\n    var vdsp = new _three.Vector4();\\n    var vdtp = new _three.Vector4();\\n    var vsdir = new _three.Vector3();\\n    var vtdir = new _three.Vector3();\\n    var mst = ms.clone();\\n    mst.transpose(); // internal function: test if triangle has any matching vertices;\\n    // if so, don't save triangle, since it won't display anything.\\n\\n    var notDegenerate = function notDegenerate(vtx1, vtx2, vtx3) {\\n      return (// if any vertex matches, return false\\n        !(vertices[vtx1 * 3] === vertices[vtx2 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx2 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx2 * 3 + 2] || vertices[vtx1 * 3] === vertices[vtx3 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx3 * 3 + 2] || vertices[vtx2 * 3] === vertices[vtx3 * 3] && vertices[vtx2 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx2 * 3 + 2] === vertices[vtx3 * 3 + 2])\\n      );\\n    };\\n\\n    for (i = 0; i < 3; i++) {\\n      mgm[i] = new _three.Matrix4();\\n    }\\n\\n    var minPatches = body ? 0 : 20;\\n    var maxPatches = bottom ? 32 : 28;\\n    vertPerRow = segments + 1;\\n    var surfCount = 0;\\n    var vertCount = 0;\\n    var normCount = 0;\\n    var uvCount = 0;\\n    var indexCount = 0;\\n\\n    for (var surf = minPatches; surf < maxPatches; surf++) {\\n      // lid is in the middle of the data, patches 20-27,\\n      // so ignore it for this part of the loop if the lid is not desired\\n      if (lid || surf < 20 || surf >= 28) {\\n        // get M * G * M matrix for x,y,z\\n        for (i = 0; i < 3; i++) {\\n          // get control patches\\n          for (r = 0; r < 4; r++) {\\n            for (c = 0; c < 4; c++) {\\n              // transposed\\n              g[c * 4 + r] = teapotVertices[teapotPatches[surf * 16 + r * 4 + c] * 3 + i]; // is the lid to be made larger, and is this a point on the lid\\n              // that is X or Y?\\n\\n              if (fitLid && surf >= 20 && surf < 28 && i !== 2) {\\n                // increase XY size by 7.7%, found empirically. I don't\\n                // increase Z so that the teapot will continue to fit in the\\n                // space -1 to 1 for Y (Y is up for the final model).\\n                g[c * 4 + r] *= 1.077;\\n              } // Blinn \\\"fixed\\\" the teapot by dividing Z by blinnScale, and that's the\\n              // data we now use. The original teapot is taller. Fix it:\\n\\n\\n              if (!blinn && i === 2) {\\n                g[c * 4 + r] *= blinnScale;\\n              }\\n            }\\n          }\\n\\n          gmx.set(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]);\\n          tmtx.multiplyMatrices(gmx, ms);\\n          mgm[i].multiplyMatrices(mst, tmtx);\\n        } // step along, get points, and output\\n\\n\\n        for (sstep = 0; sstep <= segments; sstep++) {\\n          s = sstep / segments;\\n\\n          for (tstep = 0; tstep <= segments; tstep++) {\\n            t = tstep / segments; // point from basis\\n            // get power vectors and their derivatives\\n\\n            for (p = 4, sval = tval = 1.0; p--;) {\\n              sp[p] = sval;\\n              tp[p] = tval;\\n              sval *= s;\\n              tval *= t;\\n\\n              if (p === 3) {\\n                dsp[p] = dtp[p] = 0.0;\\n                dsval = dtval = 1.0;\\n              } else {\\n                dsp[p] = dsval * (3 - p);\\n                dtp[p] = dtval * (3 - p);\\n                dsval *= s;\\n                dtval *= t;\\n              }\\n            }\\n\\n            vsp.fromArray(sp);\\n            vtp.fromArray(tp);\\n            vdsp.fromArray(dsp);\\n            vdtp.fromArray(dtp); // do for x,y,z\\n\\n            for (i = 0; i < 3; i++) {\\n              // multiply power vectors times matrix to get value\\n              tcoord = vsp.clone();\\n              tcoord.applyMatrix4(mgm[i]);\\n              vert[i] = tcoord.dot(vtp); // get s and t tangent vectors\\n\\n              tcoord = vdsp.clone();\\n              tcoord.applyMatrix4(mgm[i]);\\n              sdir[i] = tcoord.dot(vtp);\\n              tcoord = vsp.clone();\\n              tcoord.applyMatrix4(mgm[i]);\\n              tdir[i] = tcoord.dot(vdtp);\\n            } // find normal\\n\\n\\n            vsdir.fromArray(sdir);\\n            vtdir.fromArray(tdir);\\n            norm.crossVectors(vtdir, vsdir);\\n            norm.normalize(); // if X and Z length is 0, at the cusp, so point the normal up or down, depending on patch number\\n\\n            if (vert[0] === 0 && vert[1] === 0) {\\n              // if above the middle of the teapot, normal points up, else down\\n              normOut.set(0, vert[2] > maxHeight2 ? 1 : -1, 0);\\n            } else {\\n              // standard output: rotate on X axis\\n              normOut.set(norm.x, norm.z, -norm.y);\\n            } // store it all\\n\\n\\n            vertices[vertCount++] = trueSize * vert[0];\\n            vertices[vertCount++] = trueSize * (vert[2] - maxHeight2);\\n            vertices[vertCount++] = -trueSize * vert[1];\\n            normals[normCount++] = normOut.x;\\n            normals[normCount++] = normOut.y;\\n            normals[normCount++] = normOut.z;\\n            uvs[uvCount++] = 1 - t;\\n            uvs[uvCount++] = 1 - s;\\n          }\\n        } // save the faces\\n\\n\\n        for (sstep = 0; sstep < segments; sstep++) {\\n          for (tstep = 0; tstep < segments; tstep++) {\\n            v1 = surfCount * vertPerRow * vertPerRow + sstep * vertPerRow + tstep;\\n            v2 = v1 + 1;\\n            v3 = v2 + vertPerRow;\\n            v4 = v1 + vertPerRow; // Normals and UVs cannot be shared. Without clone(), you can see the consequences\\n            // of sharing if you call geometry.applyMatrix4( matrix ).\\n\\n            if (notDegenerate(v1, v2, v3)) {\\n              indices[indexCount++] = v1;\\n              indices[indexCount++] = v2;\\n              indices[indexCount++] = v3;\\n            }\\n\\n            if (notDegenerate(v1, v3, v4)) {\\n              indices[indexCount++] = v1;\\n              indices[indexCount++] = v3;\\n              indices[indexCount++] = v4;\\n            }\\n          }\\n        } // increment only if a surface was used\\n\\n\\n        surfCount++;\\n      }\\n    }\\n\\n    _this.setIndex(new _three.BufferAttribute(indices, 1));\\n\\n    _this.setAttribute('position', new _three.BufferAttribute(vertices, 3));\\n\\n    _this.setAttribute('normal', new _three.BufferAttribute(normals, 3));\\n\\n    _this.setAttribute('uv', new _three.BufferAttribute(uvs, 2));\\n\\n    _this.computeBoundingSphere();\\n\\n    return _this;\\n  }\\n\\n  return TeapotGeometry;\\n}(_three.BufferGeometry);\\n\\nexports.TeapotGeometry = TeapotGeometry;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_possibleConstructorReturn\",\"self\",\"call\",\"ReferenceError\",\"_getPrototypeOf\",\"o\",\"Object\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"writable\",\"configurable\",\"_setPrototypeOf\",\"p\",\"defineProperty\",\"TeapotGeometry\",\"_three\",\"_BufferGeometry\",\"size\",\"segments\",\"bottom\",\"lid\",\"body\",\"fitLid\",\"blinn\",\"instance\",\"teapotPatches\",\"teapotVertices\",\"_this\",\"undefined\",\"Math\",\"max\",\"floor\",\"maxHeight2\",\"blinnScale\",\"trueSize\",\"numTriangles\",\"indices\",\"Uint32Array\",\"numVertices\",\"vertices\",\"Float32Array\",\"normals\",\"uvs\",\"ms\",\"Matrix4\",\"set\",\"g\",\"i\",\"r\",\"c\",\"sp\",\"tp\",\"dsp\",\"dtp\",\"mgm\",\"vert\",\"sdir\",\"tdir\",\"norm\",\"Vector3\",\"tcoord\",\"dsval\",\"dtval\",\"normOut\",\"gmx\",\"tmtx\",\"vsp\",\"Vector4\",\"vtp\",\"vdsp\",\"vdtp\",\"vsdir\",\"vtdir\",\"mst\",\"clone\",\"transpose\",\"notDegenerate\",\"vtx1\",\"vtx2\",\"vtx3\",\"maxPatches\",\"vertPerRow\",\"surfCount\",\"vertCount\",\"normCount\",\"uvCount\",\"indexCount\",\"surf\",\"minPatches\",\"multiplyMatrices\",\"sstep\",\"s\",\"tstep\",\"t\",\"sval\",\"tval\",\"fromArray\",\"applyMatrix4\",\"dot\",\"crossVectors\",\"normalize\",\"x\",\"z\",\"y\",\"v1\",\"v2\",\"v3\",\"v4\",\"setIndex\",\"BufferAttribute\",\"setAttribute\",\"computeBoundingSphere\",\"BufferGeometry\"]\n}\n"]