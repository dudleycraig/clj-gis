["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/csm/CSM.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$csm$CSM=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,\nstaticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.CSM=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_Frustum=_interopRequireDefault(require(\"module$node_modules$three_stdlib$csm$Frustum\")),_Shader=_interopRequireDefault(require(\"module$node_modules$three_stdlib$csm$Shader\")),_cameraToLightMatrix=new _three.Matrix4,\n_lightSpaceFrustum=new _Frustum[\"default\"],_center=new _three.Vector3,_bbox=new _three.Box3,_uniformArray=[],_logArray=[];global=function(){function CSM(data){if(!(this instanceof CSM))throw new TypeError(\"Cannot call a class as a function\");data=data||{};this.camera=data.camera;this.parent=data.parent;this.cascades=data.cascades||3;this.maxFar=data.maxFar||1E5;this.mode=data.mode||\"practical\";this.shadowMapSize=data.shadowMapSize||2048;this.shadowBias=data.shadowBias||1E-6;this.lightDirection=data.lightDirection||\n(new _three.Vector3(1,-1,1)).normalize();this.lightIntensity=data.lightIntensity||1;this.lightNear=data.lightNear||1;this.lightFar=data.lightFar||2E3;this.lightMargin=data.lightMargin||200;this.customSplitsCallback=data.customSplitsCallback;this.fade=!1;this.mainFrustum=new _Frustum[\"default\"];this.frustums=[];this.breaks=[];this.lights=[];this.shaders=new Map;this.createLights();this.updateFrustums();this.injectInclude()}_createClass(CSM,[{key:\"createLights\",value:function(){for(var i=0;i<this.cascades;i++){var light=\nnew _three.DirectionalLight(16777215,this.lightIntensity);light.castShadow=!0;light.shadow.mapSize.width=this.shadowMapSize;light.shadow.mapSize.height=this.shadowMapSize;light.shadow.camera.near=this.lightNear;light.shadow.camera.far=this.lightFar;light.shadow.bias=this.shadowBias;this.parent.add(light);this.parent.add(light.target);this.lights.push(light)}}},{key:\"initCascades\",value:function(){var camera=this.camera;camera.updateProjectionMatrix();this.mainFrustum.setFromProjectionMatrix(camera.projectionMatrix,\nthis.maxFar);this.mainFrustum.split(this.breaks,this.frustums)}},{key:\"updateShadowBounds\",value:function(){for(var frustums=this.frustums,i=0;i<frustums.length;i++){var shadowCam=this.lights[i].shadow.camera,frustum=this.frustums[i],nearVerts=frustum.vertices.near,farVerts=frustum.vertices.far,point1=farVerts[0];nearVerts=point1.distanceTo(farVerts[2])>point1.distanceTo(nearVerts[2])?farVerts[2]:nearVerts[2];point1=point1.distanceTo(nearVerts);this.fade&&(nearVerts=this.camera,farVerts=Math.max(nearVerts.far,\nthis.maxFar),point1+=.25*Math.pow(frustum.vertices.far[0].z/(farVerts-nearVerts.near),2)*(farVerts-nearVerts.near));shadowCam.left=-point1/2;shadowCam.right=point1/2;shadowCam.top=point1/2;shadowCam.bottom=-point1/2;shadowCam.updateProjectionMatrix()}}},{key:\"getBreaks\",value:function(){function uniformSplit(amount,near,far,target){for(var i=1;i<amount;i++)target.push((near+(far-near)*i/amount)/far);target.push(1)}function logarithmicSplit(amount,near,far,target){for(var i=1;i<amount;i++)target.push(near*\nMath.pow(far/near,i/amount)/far);target.push(1)}function practicalSplit(amount,near,far,lambda,target){_uniformArray.length=0;_logArray.length=0;logarithmicSplit(amount,near,far,_logArray);uniformSplit(amount,near,far,_uniformArray);for(near=1;near<amount;near++)target.push(_three.MathUtils.lerp(_uniformArray[near-1],_logArray[near-1],lambda));target.push(1)}var camera=this.camera,far$jscomp$0=Math.min(camera.far,this.maxFar);this.breaks.length=0;switch(this.mode){case \"uniform\":uniformSplit(this.cascades,\ncamera.near,far$jscomp$0,this.breaks);break;case \"logarithmic\":logarithmicSplit(this.cascades,camera.near,far$jscomp$0,this.breaks);break;case \"practical\":practicalSplit(this.cascades,camera.near,far$jscomp$0,.5,this.breaks);break;case \"custom\":void 0===this.customSplitsCallback&&console.error(\"CSM: Custom split scheme callback not defined.\"),this.customSplitsCallback(this.cascades,camera.near,far$jscomp$0,this.breaks)}}},{key:\"update\",value:function(){for(var camera=this.camera,frustums=this.frustums,\ni=0;i<frustums.length;i++){var light=this.lights[i],shadowCam=light.shadow.camera,texelWidth=(shadowCam.right-shadowCam.left)/this.shadowMapSize;shadowCam=(shadowCam.top-shadowCam.bottom)/this.shadowMapSize;light.shadow.camera.updateMatrixWorld(!0);_cameraToLightMatrix.multiplyMatrices(light.shadow.camera.matrixWorldInverse,camera.matrixWorld);frustums[i].toSpace(_cameraToLightMatrix,_lightSpaceFrustum);var nearVerts=_lightSpaceFrustum.vertices.near,farVerts=_lightSpaceFrustum.vertices.far;_bbox.makeEmpty();\nfor(var j=0;4>j;j++)_bbox.expandByPoint(nearVerts[j]),_bbox.expandByPoint(farVerts[j]);_bbox.getCenter(_center);_center.z=_bbox.max.z+this.lightMargin;_center.x=Math.floor(_center.x/texelWidth)*texelWidth;_center.y=Math.floor(_center.y/shadowCam)*shadowCam;_center.applyMatrix4(light.shadow.camera.matrixWorld);light.position.copy(_center);light.target.position.copy(_center);light.target.position.x+=this.lightDirection.x;light.target.position.y+=this.lightDirection.y;light.target.position.z+=this.lightDirection.z}}},\n{key:\"injectInclude\",value:function(){_three.ShaderChunk.lights_fragment_begin=_Shader[\"default\"].lights_fragment_begin;_three.ShaderChunk.lights_pars_begin=_Shader[\"default\"].lights_pars_begin}},{key:\"setupMaterial\",value:function(material){material.defines=material.defines||{};material.defines.USE_CSM=1;material.defines.CSM_CASCADES=this.cascades;this.fade&&(material.defines.CSM_FADE=\"\");var breaksVec2=[],scope=this,shaders=this.shaders;material.onBeforeCompile=function(shader){var far=Math.min(scope.camera.far,\nscope.maxFar);scope.getExtendedBreaks(breaksVec2);shader.uniforms.CSM_cascades={value:breaksVec2};shader.uniforms.cameraNear={value:scope.camera.near};shader.uniforms.shadowFar={value:far};shaders.set(material,shader)};shaders.set(material,null)}},{key:\"updateUniforms\",value:function(){var far=Math.min(this.camera.far,this.maxFar);this.shaders.forEach(function(shader,material){null!==shader&&(shader=shader.uniforms,this.getExtendedBreaks(shader.CSM_cascades.value),shader.cameraNear.value=this.camera.near,\nshader.shadowFar.value=far);!this.fade&&\"CSM_FADE\"in material.defines?(delete material.defines.CSM_FADE,material.needsUpdate=!0):!this.fade||\"CSM_FADE\"in material.defines||(material.defines.CSM_FADE=\"\",material.needsUpdate=!0)},this)}},{key:\"getExtendedBreaks\",value:function(target){for(;target.length<this.breaks.length;)target.push(new _three.Vector2);target.length=this.breaks.length;for(var i=0;i<this.cascades;i++){var amount=this.breaks[i];target[i].x=this.breaks[i-1]||0;target[i].y=amount}}},\n{key:\"updateFrustums\",value:function(){this.getBreaks();this.initCascades();this.updateShadowBounds();this.updateUniforms()}},{key:\"remove\",value:function(){for(var i=0;i<this.lights.length;i++)this.parent.remove(this.lights[i])}},{key:\"dispose\",value:function(){var shaders=this.shaders;shaders.forEach(function(shader,material){delete material.onBeforeCompile;delete material.defines.USE_CSM;delete material.defines.CSM_CASCADES;delete material.defines.CSM_FADE;null!==shader&&(delete shader.uniforms.CSM_cascades,\ndelete shader.uniforms.cameraNear,delete shader.uniforms.shadowFar);material.needsUpdate=!0});shaders.clear()}}]);return CSM}();exports.CSM=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$csm$CSM\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSM = void 0;\n\nvar _three = require(\"three\");\n\nvar _Frustum = _interopRequireDefault(require(\"./Frustum.js\"));\n\nvar _Shader = _interopRequireDefault(require(\"./Shader.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _cameraToLightMatrix = new _three.Matrix4();\n\nvar _lightSpaceFrustum = new _Frustum[\"default\"]();\n\nvar _center = new _three.Vector3();\n\nvar _bbox = new _three.Box3();\n\nvar _uniformArray = [];\nvar _logArray = [];\n\nvar CSM =\n/*#__PURE__*/\nfunction () {\n  function CSM(data) {\n    _classCallCheck(this, CSM);\n\n    data = data || {};\n    this.camera = data.camera;\n    this.parent = data.parent;\n    this.cascades = data.cascades || 3;\n    this.maxFar = data.maxFar || 100000;\n    this.mode = data.mode || 'practical';\n    this.shadowMapSize = data.shadowMapSize || 2048;\n    this.shadowBias = data.shadowBias || 0.000001;\n    this.lightDirection = data.lightDirection || new _three.Vector3(1, -1, 1).normalize();\n    this.lightIntensity = data.lightIntensity || 1;\n    this.lightNear = data.lightNear || 1;\n    this.lightFar = data.lightFar || 2000;\n    this.lightMargin = data.lightMargin || 200;\n    this.customSplitsCallback = data.customSplitsCallback;\n    this.fade = false;\n    this.mainFrustum = new _Frustum[\"default\"]();\n    this.frustums = [];\n    this.breaks = [];\n    this.lights = [];\n    this.shaders = new Map();\n    this.createLights();\n    this.updateFrustums();\n    this.injectInclude();\n  }\n\n  _createClass(CSM, [{\n    key: \"createLights\",\n    value: function createLights() {\n      for (var i = 0; i < this.cascades; i++) {\n        var light = new _three.DirectionalLight(0xffffff, this.lightIntensity);\n        light.castShadow = true;\n        light.shadow.mapSize.width = this.shadowMapSize;\n        light.shadow.mapSize.height = this.shadowMapSize;\n        light.shadow.camera.near = this.lightNear;\n        light.shadow.camera.far = this.lightFar;\n        light.shadow.bias = this.shadowBias;\n        this.parent.add(light);\n        this.parent.add(light.target);\n        this.lights.push(light);\n      }\n    }\n  }, {\n    key: \"initCascades\",\n    value: function initCascades() {\n      var camera = this.camera;\n      camera.updateProjectionMatrix();\n      this.mainFrustum.setFromProjectionMatrix(camera.projectionMatrix, this.maxFar);\n      this.mainFrustum.split(this.breaks, this.frustums);\n    }\n  }, {\n    key: \"updateShadowBounds\",\n    value: function updateShadowBounds() {\n      var frustums = this.frustums;\n\n      for (var i = 0; i < frustums.length; i++) {\n        var light = this.lights[i];\n        var shadowCam = light.shadow.camera;\n        var frustum = this.frustums[i]; // Get the two points that represent that furthest points on the frustum assuming\n        // that's either the diagonal across the far plane or the diagonal across the whole\n        // frustum itself.\n\n        var nearVerts = frustum.vertices.near;\n        var farVerts = frustum.vertices.far;\n        var point1 = farVerts[0];\n        var point2 = void 0;\n\n        if (point1.distanceTo(farVerts[2]) > point1.distanceTo(nearVerts[2])) {\n          point2 = farVerts[2];\n        } else {\n          point2 = nearVerts[2];\n        }\n\n        var squaredBBWidth = point1.distanceTo(point2);\n\n        if (this.fade) {\n          // expand the shadow extents by the fade margin if fade is enabled.\n          var camera = this.camera;\n          var far = Math.max(camera.far, this.maxFar);\n          var linearDepth = frustum.vertices.far[0].z / (far - camera.near);\n          var margin = 0.25 * Math.pow(linearDepth, 2.0) * (far - camera.near);\n          squaredBBWidth += margin;\n        }\n\n        shadowCam.left = -squaredBBWidth / 2;\n        shadowCam.right = squaredBBWidth / 2;\n        shadowCam.top = squaredBBWidth / 2;\n        shadowCam.bottom = -squaredBBWidth / 2;\n        shadowCam.updateProjectionMatrix();\n      }\n    }\n  }, {\n    key: \"getBreaks\",\n    value: function getBreaks() {\n      var camera = this.camera;\n      var far = Math.min(camera.far, this.maxFar);\n      this.breaks.length = 0;\n\n      switch (this.mode) {\n        case 'uniform':\n          uniformSplit(this.cascades, camera.near, far, this.breaks);\n          break;\n\n        case 'logarithmic':\n          logarithmicSplit(this.cascades, camera.near, far, this.breaks);\n          break;\n\n        case 'practical':\n          practicalSplit(this.cascades, camera.near, far, 0.5, this.breaks);\n          break;\n\n        case 'custom':\n          if (this.customSplitsCallback === undefined) console.error('CSM: Custom split scheme callback not defined.');\n          this.customSplitsCallback(this.cascades, camera.near, far, this.breaks);\n          break;\n      }\n\n      function uniformSplit(amount, near, far, target) {\n        for (var i = 1; i < amount; i++) {\n          target.push((near + (far - near) * i / amount) / far);\n        }\n\n        target.push(1);\n      }\n\n      function logarithmicSplit(amount, near, far, target) {\n        for (var i = 1; i < amount; i++) {\n          target.push(near * Math.pow(far / near, i / amount) / far);\n        }\n\n        target.push(1);\n      }\n\n      function practicalSplit(amount, near, far, lambda, target) {\n        _uniformArray.length = 0;\n        _logArray.length = 0;\n        logarithmicSplit(amount, near, far, _logArray);\n        uniformSplit(amount, near, far, _uniformArray);\n\n        for (var i = 1; i < amount; i++) {\n          target.push(_three.MathUtils.lerp(_uniformArray[i - 1], _logArray[i - 1], lambda));\n        }\n\n        target.push(1);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var camera = this.camera;\n      var frustums = this.frustums;\n\n      for (var i = 0; i < frustums.length; i++) {\n        var light = this.lights[i];\n        var shadowCam = light.shadow.camera;\n        var texelWidth = (shadowCam.right - shadowCam.left) / this.shadowMapSize;\n        var texelHeight = (shadowCam.top - shadowCam.bottom) / this.shadowMapSize;\n        light.shadow.camera.updateMatrixWorld(true);\n\n        _cameraToLightMatrix.multiplyMatrices(light.shadow.camera.matrixWorldInverse, camera.matrixWorld);\n\n        frustums[i].toSpace(_cameraToLightMatrix, _lightSpaceFrustum);\n        var nearVerts = _lightSpaceFrustum.vertices.near;\n        var farVerts = _lightSpaceFrustum.vertices.far;\n\n        _bbox.makeEmpty();\n\n        for (var j = 0; j < 4; j++) {\n          _bbox.expandByPoint(nearVerts[j]);\n\n          _bbox.expandByPoint(farVerts[j]);\n        }\n\n        _bbox.getCenter(_center);\n\n        _center.z = _bbox.max.z + this.lightMargin;\n        _center.x = Math.floor(_center.x / texelWidth) * texelWidth;\n        _center.y = Math.floor(_center.y / texelHeight) * texelHeight;\n\n        _center.applyMatrix4(light.shadow.camera.matrixWorld);\n\n        light.position.copy(_center);\n        light.target.position.copy(_center);\n        light.target.position.x += this.lightDirection.x;\n        light.target.position.y += this.lightDirection.y;\n        light.target.position.z += this.lightDirection.z;\n      }\n    }\n  }, {\n    key: \"injectInclude\",\n    value: function injectInclude() {\n      _three.ShaderChunk.lights_fragment_begin = _Shader[\"default\"].lights_fragment_begin;\n      _three.ShaderChunk.lights_pars_begin = _Shader[\"default\"].lights_pars_begin;\n    }\n  }, {\n    key: \"setupMaterial\",\n    value: function setupMaterial(material) {\n      material.defines = material.defines || {};\n      material.defines.USE_CSM = 1;\n      material.defines.CSM_CASCADES = this.cascades;\n\n      if (this.fade) {\n        material.defines.CSM_FADE = '';\n      }\n\n      var breaksVec2 = [];\n      var scope = this;\n      var shaders = this.shaders;\n\n      material.onBeforeCompile = function (shader) {\n        var far = Math.min(scope.camera.far, scope.maxFar);\n        scope.getExtendedBreaks(breaksVec2);\n        shader.uniforms.CSM_cascades = {\n          value: breaksVec2\n        };\n        shader.uniforms.cameraNear = {\n          value: scope.camera.near\n        };\n        shader.uniforms.shadowFar = {\n          value: far\n        };\n        shaders.set(material, shader);\n      };\n\n      shaders.set(material, null);\n    }\n  }, {\n    key: \"updateUniforms\",\n    value: function updateUniforms() {\n      var far = Math.min(this.camera.far, this.maxFar);\n      var shaders = this.shaders;\n      shaders.forEach(function (shader, material) {\n        if (shader !== null) {\n          var uniforms = shader.uniforms;\n          this.getExtendedBreaks(uniforms.CSM_cascades.value);\n          uniforms.cameraNear.value = this.camera.near;\n          uniforms.shadowFar.value = far;\n        }\n\n        if (!this.fade && 'CSM_FADE' in material.defines) {\n          delete material.defines.CSM_FADE;\n          material.needsUpdate = true;\n        } else if (this.fade && !('CSM_FADE' in material.defines)) {\n          material.defines.CSM_FADE = '';\n          material.needsUpdate = true;\n        }\n      }, this);\n    }\n  }, {\n    key: \"getExtendedBreaks\",\n    value: function getExtendedBreaks(target) {\n      while (target.length < this.breaks.length) {\n        target.push(new _three.Vector2());\n      }\n\n      target.length = this.breaks.length;\n\n      for (var i = 0; i < this.cascades; i++) {\n        var amount = this.breaks[i];\n        var prev = this.breaks[i - 1] || 0;\n        target[i].x = prev;\n        target[i].y = amount;\n      }\n    }\n  }, {\n    key: \"updateFrustums\",\n    value: function updateFrustums() {\n      this.getBreaks();\n      this.initCascades();\n      this.updateShadowBounds();\n      this.updateUniforms();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var i = 0; i < this.lights.length; i++) {\n        this.parent.remove(this.lights[i]);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var shaders = this.shaders;\n      shaders.forEach(function (shader, material) {\n        delete material.onBeforeCompile;\n        delete material.defines.USE_CSM;\n        delete material.defines.CSM_CASCADES;\n        delete material.defines.CSM_FADE;\n\n        if (shader !== null) {\n          delete shader.uniforms.CSM_cascades;\n          delete shader.uniforms.cameraNear;\n          delete shader.uniforms.shadowFar;\n        }\n\n        material.needsUpdate = true;\n      });\n      shaders.clear();\n    }\n  }]);\n\n  return CSM;\n}();\n\nexports.CSM = CSM;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$csm$Shader","~$shadow.js","~$module$node_modules$three_stdlib$csm$Frustum"]],"~:properties",["^5",["maxFar","lightDirection","z","width","lights_pars_begin","right","CSM","top","needsUpdate","lightMargin","height","fade","frustums","far","lights","castShadow","breaks","lights_fragment_begin","customSplitsCallback","key","parent","x","__esModule","shaders","CSM_CASCADES","camera","lightFar","defines","mode","configurable","USE_CSM","value","enumerable","writable","lightIntensity","mainFrustum","length","CSM_cascades","y","onBeforeCompile","shadowFar","shadowBias","cameraNear","bottom","bias","shadowMapSize","lightNear","cascades","CSM_FADE","left","near"]],"~:compiled-at",1630917515576,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$csm$CSM.js\",\n\"lineCount\":16,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/csm/CSM.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$csm$CSM\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CSM = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _Frustum = _interopRequireDefault(require(\\\"./Frustum.js\\\"));\\n\\nvar _Shader = _interopRequireDefault(require(\\\"./Shader.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nvar _cameraToLightMatrix = new _three.Matrix4();\\n\\nvar _lightSpaceFrustum = new _Frustum[\\\"default\\\"]();\\n\\nvar _center = new _three.Vector3();\\n\\nvar _bbox = new _three.Box3();\\n\\nvar _uniformArray = [];\\nvar _logArray = [];\\n\\nvar CSM =\\n/*#__PURE__*/\\nfunction () {\\n  function CSM(data) {\\n    _classCallCheck(this, CSM);\\n\\n    data = data || {};\\n    this.camera = data.camera;\\n    this.parent = data.parent;\\n    this.cascades = data.cascades || 3;\\n    this.maxFar = data.maxFar || 100000;\\n    this.mode = data.mode || 'practical';\\n    this.shadowMapSize = data.shadowMapSize || 2048;\\n    this.shadowBias = data.shadowBias || 0.000001;\\n    this.lightDirection = data.lightDirection || new _three.Vector3(1, -1, 1).normalize();\\n    this.lightIntensity = data.lightIntensity || 1;\\n    this.lightNear = data.lightNear || 1;\\n    this.lightFar = data.lightFar || 2000;\\n    this.lightMargin = data.lightMargin || 200;\\n    this.customSplitsCallback = data.customSplitsCallback;\\n    this.fade = false;\\n    this.mainFrustum = new _Frustum[\\\"default\\\"]();\\n    this.frustums = [];\\n    this.breaks = [];\\n    this.lights = [];\\n    this.shaders = new Map();\\n    this.createLights();\\n    this.updateFrustums();\\n    this.injectInclude();\\n  }\\n\\n  _createClass(CSM, [{\\n    key: \\\"createLights\\\",\\n    value: function createLights() {\\n      for (var i = 0; i < this.cascades; i++) {\\n        var light = new _three.DirectionalLight(0xffffff, this.lightIntensity);\\n        light.castShadow = true;\\n        light.shadow.mapSize.width = this.shadowMapSize;\\n        light.shadow.mapSize.height = this.shadowMapSize;\\n        light.shadow.camera.near = this.lightNear;\\n        light.shadow.camera.far = this.lightFar;\\n        light.shadow.bias = this.shadowBias;\\n        this.parent.add(light);\\n        this.parent.add(light.target);\\n        this.lights.push(light);\\n      }\\n    }\\n  }, {\\n    key: \\\"initCascades\\\",\\n    value: function initCascades() {\\n      var camera = this.camera;\\n      camera.updateProjectionMatrix();\\n      this.mainFrustum.setFromProjectionMatrix(camera.projectionMatrix, this.maxFar);\\n      this.mainFrustum.split(this.breaks, this.frustums);\\n    }\\n  }, {\\n    key: \\\"updateShadowBounds\\\",\\n    value: function updateShadowBounds() {\\n      var frustums = this.frustums;\\n\\n      for (var i = 0; i < frustums.length; i++) {\\n        var light = this.lights[i];\\n        var shadowCam = light.shadow.camera;\\n        var frustum = this.frustums[i]; // Get the two points that represent that furthest points on the frustum assuming\\n        // that's either the diagonal across the far plane or the diagonal across the whole\\n        // frustum itself.\\n\\n        var nearVerts = frustum.vertices.near;\\n        var farVerts = frustum.vertices.far;\\n        var point1 = farVerts[0];\\n        var point2 = void 0;\\n\\n        if (point1.distanceTo(farVerts[2]) > point1.distanceTo(nearVerts[2])) {\\n          point2 = farVerts[2];\\n        } else {\\n          point2 = nearVerts[2];\\n        }\\n\\n        var squaredBBWidth = point1.distanceTo(point2);\\n\\n        if (this.fade) {\\n          // expand the shadow extents by the fade margin if fade is enabled.\\n          var camera = this.camera;\\n          var far = Math.max(camera.far, this.maxFar);\\n          var linearDepth = frustum.vertices.far[0].z / (far - camera.near);\\n          var margin = 0.25 * Math.pow(linearDepth, 2.0) * (far - camera.near);\\n          squaredBBWidth += margin;\\n        }\\n\\n        shadowCam.left = -squaredBBWidth / 2;\\n        shadowCam.right = squaredBBWidth / 2;\\n        shadowCam.top = squaredBBWidth / 2;\\n        shadowCam.bottom = -squaredBBWidth / 2;\\n        shadowCam.updateProjectionMatrix();\\n      }\\n    }\\n  }, {\\n    key: \\\"getBreaks\\\",\\n    value: function getBreaks() {\\n      var camera = this.camera;\\n      var far = Math.min(camera.far, this.maxFar);\\n      this.breaks.length = 0;\\n\\n      switch (this.mode) {\\n        case 'uniform':\\n          uniformSplit(this.cascades, camera.near, far, this.breaks);\\n          break;\\n\\n        case 'logarithmic':\\n          logarithmicSplit(this.cascades, camera.near, far, this.breaks);\\n          break;\\n\\n        case 'practical':\\n          practicalSplit(this.cascades, camera.near, far, 0.5, this.breaks);\\n          break;\\n\\n        case 'custom':\\n          if (this.customSplitsCallback === undefined) console.error('CSM: Custom split scheme callback not defined.');\\n          this.customSplitsCallback(this.cascades, camera.near, far, this.breaks);\\n          break;\\n      }\\n\\n      function uniformSplit(amount, near, far, target) {\\n        for (var i = 1; i < amount; i++) {\\n          target.push((near + (far - near) * i / amount) / far);\\n        }\\n\\n        target.push(1);\\n      }\\n\\n      function logarithmicSplit(amount, near, far, target) {\\n        for (var i = 1; i < amount; i++) {\\n          target.push(near * Math.pow(far / near, i / amount) / far);\\n        }\\n\\n        target.push(1);\\n      }\\n\\n      function practicalSplit(amount, near, far, lambda, target) {\\n        _uniformArray.length = 0;\\n        _logArray.length = 0;\\n        logarithmicSplit(amount, near, far, _logArray);\\n        uniformSplit(amount, near, far, _uniformArray);\\n\\n        for (var i = 1; i < amount; i++) {\\n          target.push(_three.MathUtils.lerp(_uniformArray[i - 1], _logArray[i - 1], lambda));\\n        }\\n\\n        target.push(1);\\n      }\\n    }\\n  }, {\\n    key: \\\"update\\\",\\n    value: function update() {\\n      var camera = this.camera;\\n      var frustums = this.frustums;\\n\\n      for (var i = 0; i < frustums.length; i++) {\\n        var light = this.lights[i];\\n        var shadowCam = light.shadow.camera;\\n        var texelWidth = (shadowCam.right - shadowCam.left) / this.shadowMapSize;\\n        var texelHeight = (shadowCam.top - shadowCam.bottom) / this.shadowMapSize;\\n        light.shadow.camera.updateMatrixWorld(true);\\n\\n        _cameraToLightMatrix.multiplyMatrices(light.shadow.camera.matrixWorldInverse, camera.matrixWorld);\\n\\n        frustums[i].toSpace(_cameraToLightMatrix, _lightSpaceFrustum);\\n        var nearVerts = _lightSpaceFrustum.vertices.near;\\n        var farVerts = _lightSpaceFrustum.vertices.far;\\n\\n        _bbox.makeEmpty();\\n\\n        for (var j = 0; j < 4; j++) {\\n          _bbox.expandByPoint(nearVerts[j]);\\n\\n          _bbox.expandByPoint(farVerts[j]);\\n        }\\n\\n        _bbox.getCenter(_center);\\n\\n        _center.z = _bbox.max.z + this.lightMargin;\\n        _center.x = Math.floor(_center.x / texelWidth) * texelWidth;\\n        _center.y = Math.floor(_center.y / texelHeight) * texelHeight;\\n\\n        _center.applyMatrix4(light.shadow.camera.matrixWorld);\\n\\n        light.position.copy(_center);\\n        light.target.position.copy(_center);\\n        light.target.position.x += this.lightDirection.x;\\n        light.target.position.y += this.lightDirection.y;\\n        light.target.position.z += this.lightDirection.z;\\n      }\\n    }\\n  }, {\\n    key: \\\"injectInclude\\\",\\n    value: function injectInclude() {\\n      _three.ShaderChunk.lights_fragment_begin = _Shader[\\\"default\\\"].lights_fragment_begin;\\n      _three.ShaderChunk.lights_pars_begin = _Shader[\\\"default\\\"].lights_pars_begin;\\n    }\\n  }, {\\n    key: \\\"setupMaterial\\\",\\n    value: function setupMaterial(material) {\\n      material.defines = material.defines || {};\\n      material.defines.USE_CSM = 1;\\n      material.defines.CSM_CASCADES = this.cascades;\\n\\n      if (this.fade) {\\n        material.defines.CSM_FADE = '';\\n      }\\n\\n      var breaksVec2 = [];\\n      var scope = this;\\n      var shaders = this.shaders;\\n\\n      material.onBeforeCompile = function (shader) {\\n        var far = Math.min(scope.camera.far, scope.maxFar);\\n        scope.getExtendedBreaks(breaksVec2);\\n        shader.uniforms.CSM_cascades = {\\n          value: breaksVec2\\n        };\\n        shader.uniforms.cameraNear = {\\n          value: scope.camera.near\\n        };\\n        shader.uniforms.shadowFar = {\\n          value: far\\n        };\\n        shaders.set(material, shader);\\n      };\\n\\n      shaders.set(material, null);\\n    }\\n  }, {\\n    key: \\\"updateUniforms\\\",\\n    value: function updateUniforms() {\\n      var far = Math.min(this.camera.far, this.maxFar);\\n      var shaders = this.shaders;\\n      shaders.forEach(function (shader, material) {\\n        if (shader !== null) {\\n          var uniforms = shader.uniforms;\\n          this.getExtendedBreaks(uniforms.CSM_cascades.value);\\n          uniforms.cameraNear.value = this.camera.near;\\n          uniforms.shadowFar.value = far;\\n        }\\n\\n        if (!this.fade && 'CSM_FADE' in material.defines) {\\n          delete material.defines.CSM_FADE;\\n          material.needsUpdate = true;\\n        } else if (this.fade && !('CSM_FADE' in material.defines)) {\\n          material.defines.CSM_FADE = '';\\n          material.needsUpdate = true;\\n        }\\n      }, this);\\n    }\\n  }, {\\n    key: \\\"getExtendedBreaks\\\",\\n    value: function getExtendedBreaks(target) {\\n      while (target.length < this.breaks.length) {\\n        target.push(new _three.Vector2());\\n      }\\n\\n      target.length = this.breaks.length;\\n\\n      for (var i = 0; i < this.cascades; i++) {\\n        var amount = this.breaks[i];\\n        var prev = this.breaks[i - 1] || 0;\\n        target[i].x = prev;\\n        target[i].y = amount;\\n      }\\n    }\\n  }, {\\n    key: \\\"updateFrustums\\\",\\n    value: function updateFrustums() {\\n      this.getBreaks();\\n      this.initCascades();\\n      this.updateShadowBounds();\\n      this.updateUniforms();\\n    }\\n  }, {\\n    key: \\\"remove\\\",\\n    value: function remove() {\\n      for (var i = 0; i < this.lights.length; i++) {\\n        this.parent.remove(this.lights[i]);\\n      }\\n    }\\n  }, {\\n    key: \\\"dispose\\\",\\n    value: function dispose() {\\n      var shaders = this.shaders;\\n      shaders.forEach(function (shader, material) {\\n        delete material.onBeforeCompile;\\n        delete material.defines.USE_CSM;\\n        delete material.defines.CSM_CASCADES;\\n        delete material.defines.CSM_FADE;\\n\\n        if (shader !== null) {\\n          delete shader.uniforms.CSM_cascades;\\n          delete shader.uniforms.cameraNear;\\n          delete shader.uniforms.shadowFar;\\n        }\\n\\n        material.needsUpdate = true;\\n      });\\n      shaders.clear();\\n    }\\n  }]);\\n\\n  return CSM;\\n}();\\n\\nexports.CSM = CSM;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"prototype\",\"value\",\"CSM\",\"_three\",\"_Frustum\",\"_Shader\",\"_cameraToLightMatrix\",\"Matrix4\",\"_lightSpaceFrustum\",\"_center\",\"Vector3\",\"_bbox\",\"Box3\",\"_uniformArray\",\"_logArray\",\"data\",\"instance\",\"TypeError\",\"camera\",\"parent\",\"cascades\",\"maxFar\",\"mode\",\"shadowMapSize\",\"shadowBias\",\"lightDirection\",\"normalize\",\"lightIntensity\",\"lightNear\",\"lightFar\",\"lightMargin\",\"customSplitsCallback\",\"fade\",\"mainFrustum\",\"frustums\",\"breaks\",\"lights\",\"shaders\",\"Map\",\"createLights\",\"updateFrustums\",\"injectInclude\",\"light\",\"DirectionalLight\",\"castShadow\",\"shadow\",\"mapSize\",\"width\",\"height\",\"near\",\"far\",\"bias\",\"add\",\"push\",\"initCascades\",\"updateProjectionMatrix\",\"setFromProjectionMatrix\",\"projectionMatrix\",\"split\",\"updateShadowBounds\",\"shadowCam\",\"frustum\",\"nearVerts\",\"vertices\",\"farVerts\",\"point1\",\"point2\",\"distanceTo\",\"squaredBBWidth\",\"Math\",\"max\",\"pow\",\"z\",\"left\",\"right\",\"top\",\"bottom\",\"getBreaks\",\"uniformSplit\",\"amount\",\"logarithmicSplit\",\"practicalSplit\",\"lambda\",\"MathUtils\",\"lerp\",\"min\",\"undefined\",\"console\",\"error\",\"update\",\"texelWidth\",\"texelHeight\",\"updateMatrixWorld\",\"multiplyMatrices\",\"matrixWorldInverse\",\"matrixWorld\",\"toSpace\",\"makeEmpty\",\"j\",\"expandByPoint\",\"getCenter\",\"x\",\"floor\",\"y\",\"applyMatrix4\",\"position\",\"copy\",\"ShaderChunk\",\"lights_fragment_begin\",\"lights_pars_begin\",\"setupMaterial\",\"material\",\"defines\",\"USE_CSM\",\"CSM_CASCADES\",\"CSM_FADE\",\"breaksVec2\",\"scope\",\"onBeforeCompile\",\"material.onBeforeCompile\",\"shader\",\"getExtendedBreaks\",\"uniforms\",\"CSM_cascades\",\"cameraNear\",\"shadowFar\",\"set\",\"updateUniforms\",\"forEach\",\"needsUpdate\",\"Vector2\",\"remove\",\"dispose\",\"clear\"]\n}\n"]