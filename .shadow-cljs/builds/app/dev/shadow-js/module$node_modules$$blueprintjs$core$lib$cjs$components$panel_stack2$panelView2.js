["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/components/panel-stack2/panelView2.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelView2=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.PanelView2=void 0;var tslib_1=require(\"module$node_modules$tslib$tslib\"),React=tslib_1.__importStar(require(\"module$node_modules$react$index\")),common_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$index\"),buttons_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$components$button$buttons\"),\ntext_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$components$text$text\");exports.PanelView2=function(props){var handleClose=React.useCallback(function(){return props.onClose(props.panel)},[props.onClose,props.panel]),maybeBackButton=void 0===props.previousPanel?null:React.createElement(buttons_1.Button,{\"aria-label\":\"Back\",className:common_1.Classes.PANEL_STACK_HEADER_BACK,icon:\"chevron-left\",minimal:!0,onClick:handleClose,small:!0,text:props.previousPanel.title,title:props.previousPanel.htmlTitle}),\nPanelWrapper=React.useMemo(function(){return function(){return props.panel.renderPanel(tslib_1.__assign({closePanel:handleClose,openPanel:props.onOpen},props.panel.props))}},[props.panel.renderPanel,handleClose,props.onOpen,props.panel.props]);return React.createElement(\"div\",{className:common_1.Classes.PANEL_STACK2_VIEW},props.showHeader&&React.createElement(\"div\",{className:common_1.Classes.PANEL_STACK2_HEADER},React.createElement(\"span\",null,maybeBackButton),React.createElement(text_1.Text,{className:common_1.Classes.HEADING,\nellipsize:!0,title:props.panel.htmlTitle},props.panel.title),React.createElement(\"span\",null)),React.createElement(PanelWrapper,null))};exports.PanelView2.displayName=common_1.DISPLAYNAME_PREFIX+\".PanelView2\"}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelView2\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PanelView2 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar common_1 = require(\"../../common\");\nvar buttons_1 = require(\"../button/buttons\");\nvar text_1 = require(\"../text/text\");\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar PanelView2 = function (props) {\n    var handleClose = React.useCallback(function () { return props.onClose(props.panel); }, [props.onClose, props.panel]);\n    var maybeBackButton = props.previousPanel === undefined ? null : (React.createElement(buttons_1.Button, { \"aria-label\": \"Back\", className: common_1.Classes.PANEL_STACK_HEADER_BACK, icon: \"chevron-left\", minimal: true, onClick: handleClose, small: true, text: props.previousPanel.title, title: props.previousPanel.htmlTitle }));\n    // `props.panel.renderPanel` is simply a function that returns a JSX.Element. It may be an FC which\n    // uses hooks. In order to avoid React errors due to inconsistent hook calls, we must encapsulate\n    // those hooks with their own lifecycle through a very simple wrapper component.\n    // N.B. A type cast is required because of error TS2345, where technically `panel.props` could be\n    // instantiated with a type unrelated to our generic constraint `T` here. We know\n    // we're sending the right values here though, and it makes the consumer API for this\n    // component type safe, so it's ok to do this...\n    var PanelWrapper = React.useMemo(function () { return function () {\n        return props.panel.renderPanel(tslib_1.__assign({ closePanel: handleClose, openPanel: props.onOpen }, props.panel.props));\n    }; }, [props.panel.renderPanel, handleClose, props.onOpen, props.panel.props]);\n    return (React.createElement(\"div\", { className: common_1.Classes.PANEL_STACK2_VIEW },\n        props.showHeader && (React.createElement(\"div\", { className: common_1.Classes.PANEL_STACK2_HEADER },\n            React.createElement(\"span\", null, maybeBackButton),\n            React.createElement(text_1.Text, { className: common_1.Classes.HEADING, ellipsize: true, title: props.panel.htmlTitle }, props.panel.title),\n            React.createElement(\"span\", null))),\n        React.createElement(PanelWrapper, null)));\n};\nexports.PanelView2 = PanelView2;\nexports.PanelView2.displayName = common_1.DISPLAYNAME_PREFIX + \".PanelView2\";\n//# sourceMappingURL=panelView2.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$module$node_modules$$blueprintjs$core$lib$cjs$components$text$text","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$blueprintjs$core$lib$cjs$common$index","~$module$node_modules$$blueprintjs$core$lib$cjs$components$button$buttons"]],"~:properties",["^5",["openPanel","className","displayName","__esModule","minimal","small","closePanel","value","text","PanelView2","onClick","title","ellipsize","icon"]],"~:compiled-at",1630405505203,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelView2.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/components/panel-stack2/panelView2.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelView2\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/*\\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.PanelView2 = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar React = tslib_1.__importStar(require(\\\"react\\\"));\\nvar common_1 = require(\\\"../../common\\\");\\nvar buttons_1 = require(\\\"../button/buttons\\\");\\nvar text_1 = require(\\\"../text/text\\\");\\n// eslint-disable-next-line @typescript-eslint/ban-types\\nvar PanelView2 = function (props) {\\n    var handleClose = React.useCallback(function () { return props.onClose(props.panel); }, [props.onClose, props.panel]);\\n    var maybeBackButton = props.previousPanel === undefined ? null : (React.createElement(buttons_1.Button, { \\\"aria-label\\\": \\\"Back\\\", className: common_1.Classes.PANEL_STACK_HEADER_BACK, icon: \\\"chevron-left\\\", minimal: true, onClick: handleClose, small: true, text: props.previousPanel.title, title: props.previousPanel.htmlTitle }));\\n    // `props.panel.renderPanel` is simply a function that returns a JSX.Element. It may be an FC which\\n    // uses hooks. In order to avoid React errors due to inconsistent hook calls, we must encapsulate\\n    // those hooks with their own lifecycle through a very simple wrapper component.\\n    // N.B. A type cast is required because of error TS2345, where technically `panel.props` could be\\n    // instantiated with a type unrelated to our generic constraint `T` here. We know\\n    // we're sending the right values here though, and it makes the consumer API for this\\n    // component type safe, so it's ok to do this...\\n    var PanelWrapper = React.useMemo(function () { return function () {\\n        return props.panel.renderPanel(tslib_1.__assign({ closePanel: handleClose, openPanel: props.onOpen }, props.panel.props));\\n    }; }, [props.panel.renderPanel, handleClose, props.onOpen, props.panel.props]);\\n    return (React.createElement(\\\"div\\\", { className: common_1.Classes.PANEL_STACK2_VIEW },\\n        props.showHeader && (React.createElement(\\\"div\\\", { className: common_1.Classes.PANEL_STACK2_HEADER },\\n            React.createElement(\\\"span\\\", null, maybeBackButton),\\n            React.createElement(text_1.Text, { className: common_1.Classes.HEADING, ellipsize: true, title: props.panel.htmlTitle }, props.panel.title),\\n            React.createElement(\\\"span\\\", null))),\\n        React.createElement(PanelWrapper, null)));\\n};\\nexports.PanelView2 = PanelView2;\\nexports.PanelView2.displayName = common_1.DISPLAYNAME_PREFIX + \\\".PanelView2\\\";\\n//# sourceMappingURL=panelView2.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"PanelView2\",\"tslib_1\",\"React\",\"__importStar\",\"common_1\",\"buttons_1\",\"text_1\",\"props\",\"handleClose\",\"useCallback\",\"onClose\",\"panel\",\"maybeBackButton\",\"undefined\",\"previousPanel\",\"createElement\",\"Button\",\"className\",\"Classes\",\"PANEL_STACK_HEADER_BACK\",\"icon\",\"minimal\",\"onClick\",\"small\",\"text\",\"title\",\"htmlTitle\",\"PanelWrapper\",\"useMemo\",\"renderPanel\",\"__assign\",\"closePanel\",\"openPanel\",\"onOpen\",\"PANEL_STACK2_VIEW\",\"showHeader\",\"PANEL_STACK2_HEADER\",\"Text\",\"HEADING\",\"ellipsize\",\"displayName\",\"DISPLAYNAME_PREFIX\"]\n}\n"]