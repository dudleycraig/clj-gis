["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/shaders/PixelShader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$shaders$PixelShader=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.PixelShader=void 0;exports.PixelShader={uniforms:{tDiffuse:{value:null},resolution:{value:null},pixelSize:{value:1}},vertexShader:\"varying highp vec2 vUv;\\nvoid main() {\\nvUv \\x3d uv;\\ngl_Position \\x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform sampler2D tDiffuse;\\nuniform float pixelSize;\\nuniform vec2 resolution;\\nvarying highp vec2 vUv;\\nvoid main(){\\nvec2 dxy \\x3d pixelSize / resolution;\\nvec2 coord \\x3d dxy * floor( vUv / dxy );\\ngl_FragColor \\x3d texture2D(tDiffuse, coord);\\n}\"}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$shaders$PixelShader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PixelShader = void 0;\n\n/**\n * Pixelation shader\n */\nvar PixelShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    resolution: {\n      value: null\n    },\n    pixelSize: {\n      value: 1\n    }\n  },\n  vertexShader: ['varying highp vec2 vUv;', 'void main() {', 'vUv = uv;', 'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform float pixelSize;', 'uniform vec2 resolution;', 'varying highp vec2 vUv;', 'void main(){', 'vec2 dxy = pixelSize / resolution;', 'vec2 coord = dxy * floor( vUv / dxy );', 'gl_FragColor = texture2D(tDiffuse, coord);', '}'].join('\\n')\n};\nexports.PixelShader = PixelShader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["fragmentShader","pixelSize","PixelShader","__esModule","tDiffuse","vertexShader","value","uniforms","resolution"]],"~:compiled-at",1630917515580,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$shaders$PixelShader.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,WAAR,CAAsB,IAAK,EAoB3BJ,QAAQI,CAAAA,WAAR,CAfkBA,CAChBC,SAAU,CACRC,SAAU,CACRH,MAAO,IADC,CADF,CAIRI,WAAY,CACVJ,MAAO,IADG,CAJJ,CAORK,UAAW,CACTL,MAAO,CADE,CAPH,CADMC,CAYhBK,aAAqJ,uIAZrIL,CAahBM,eAAiR,4PAbjQN,CAX+F;\",\n\"sources\":[\"node_modules/three-stdlib/shaders/PixelShader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$shaders$PixelShader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PixelShader = void 0;\\n\\n/**\\n * Pixelation shader\\n */\\nvar PixelShader = {\\n  uniforms: {\\n    tDiffuse: {\\n      value: null\\n    },\\n    resolution: {\\n      value: null\\n    },\\n    pixelSize: {\\n      value: 1\\n    }\\n  },\\n  vertexShader: ['varying highp vec2 vUv;', 'void main() {', 'vUv = uv;', 'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\\\n'),\\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform float pixelSize;', 'uniform vec2 resolution;', 'varying highp vec2 vUv;', 'void main(){', 'vec2 dxy = pixelSize / resolution;', 'vec2 coord = dxy * floor( vUv / dxy );', 'gl_FragColor = texture2D(tDiffuse, coord);', '}'].join('\\\\n')\\n};\\nexports.PixelShader = PixelShader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"PixelShader\",\"uniforms\",\"tDiffuse\",\"resolution\",\"pixelSize\",\"vertexShader\",\"fragmentShader\"]\n}\n"]