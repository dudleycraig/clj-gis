["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-mesh-bvh/src/MeshBVHDebug.js"],"~:js","shadow$provide.module$node_modules$three_mesh_bvh$src$MeshBVHDebug=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);\nstaticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.MeshBVHDebug=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_ArrayBoxUtilities=require(\"module$node_modules$three_mesh_bvh$src$Utils$ArrayBoxUtilities\"),box1=new _three.Box3,box2=new _three.Box3,vec=new _three.Vector3;global=function(){function MeshBVHDebug(bvh,geometry){if(!(this instanceof MeshBVHDebug))throw new TypeError(\"Cannot call a class as a function\");\nthis.bvh=bvh;this.geometry=geometry}_createClass(MeshBVHDebug,[{key:\"getJSONStructure\",value:function(){var depthStack=[];this.bvh.traverse(function(depth,isLeaf,boundingData,offset,count){boundingData={bounds:(0,_ArrayBoxUtilities.arrayToBox)(boundingData,new _three.Box3)};isLeaf?(boundingData.count=count,boundingData.offset=offset):(boundingData.left=null,boundingData.right=null);depthStack[depth]=boundingData;if(depth=depthStack[depth-1])null===depth.left?depth.left=boundingData:depth.right=boundingData});\nreturn depthStack[0]}},{key:\"validateBounds\",value:function(){var bvh=this.bvh,geometry=this.geometry,depthStack=[],index=geometry.index,position=geometry.getAttribute(\"position\"),passes=!0;bvh.traverse(function(depth,isLeaf,boundingData,offset,count){depthStack[depth]={depth,isLeaf,boundingData,offset,count};(0,_ArrayBoxUtilities.arrayToBox)(boundingData,box1);depth=depthStack[depth-1];if(isLeaf)for(isLeaf=3*offset,offset=3*(offset+count);isLeaf<offset;isLeaf+=3){var i0=index.getX(isLeaf);count=\nindex.getX(isLeaf+1);var i2=index.getX(isLeaf+2);vec.fromBufferAttribute(position,i0);i0=box1.containsPoint(vec);vec.fromBufferAttribute(position,count);i0=i0&&box1.containsPoint(vec);vec.fromBufferAttribute(position,i2);i0=i0&&box1.containsPoint(vec);console.assert(i0,\"Leaf bounds does not fully contain triangle.\");passes=passes&&i0}depth&&((0,_ArrayBoxUtilities.arrayToBox)(boundingData,box2),boundingData=box2.containsBox(box1),console.assert(boundingData,\"Parent bounds does not fully contain child.\"),\npasses=passes&&boundingData)});return passes}}]);return MeshBVHDebug}();exports.MeshBVHDebug=global}","~:source","shadow$provide[\"module$node_modules$three_mesh_bvh$src$MeshBVHDebug\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MeshBVHDebug = void 0;\n\nvar _three = require(\"three\");\n\nvar _ArrayBoxUtilities = require(\"./Utils/ArrayBoxUtilities.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar box1 = new _three.Box3();\nvar box2 = new _three.Box3();\nvar vec = new _three.Vector3();\n\nvar MeshBVHDebug =\n/*#__PURE__*/\nfunction () {\n  function MeshBVHDebug(bvh, geometry) {\n    _classCallCheck(this, MeshBVHDebug);\n\n    this.bvh = bvh;\n    this.geometry = geometry;\n  } // Returns a simple, human readable object that represents the BVH.\n\n\n  _createClass(MeshBVHDebug, [{\n    key: \"getJSONStructure\",\n    value: function getJSONStructure() {\n      var bvh = this.bvh;\n      var depthStack = [];\n      bvh.traverse(function (depth, isLeaf, boundingData, offset, count) {\n        var info = {\n          bounds: (0, _ArrayBoxUtilities.arrayToBox)(boundingData, new _three.Box3())\n        };\n\n        if (isLeaf) {\n          info.count = count;\n          info.offset = offset;\n        } else {\n          info.left = null;\n          info.right = null;\n        }\n\n        depthStack[depth] = info; // traversal hits the left then right node\n\n        var parent = depthStack[depth - 1];\n\n        if (parent) {\n          if (parent.left === null) {\n            parent.left = info;\n          } else {\n            parent.right = info;\n          }\n        }\n      });\n      return depthStack[0];\n    }\n  }, {\n    key: \"validateBounds\",\n    value: function validateBounds() {\n      var bvh = this.bvh,\n          geometry = this.geometry;\n      var depthStack = [];\n      var index = geometry.index;\n      var position = geometry.getAttribute('position');\n      var passes = true;\n      bvh.traverse(function (depth, isLeaf, boundingData, offset, count) {\n        var info = {\n          depth: depth,\n          isLeaf: isLeaf,\n          boundingData: boundingData,\n          offset: offset,\n          count: count\n        };\n        depthStack[depth] = info;\n        (0, _ArrayBoxUtilities.arrayToBox)(boundingData, box1);\n        var parent = depthStack[depth - 1];\n\n        if (isLeaf) {\n          // check triangles\n          for (var i = offset * 3, l = (offset + count) * 3; i < l; i += 3) {\n            var i0 = index.getX(i);\n            var i1 = index.getX(i + 1);\n            var i2 = index.getX(i + 2);\n            var isContained = void 0;\n            vec.fromBufferAttribute(position, i0);\n            isContained = box1.containsPoint(vec);\n            vec.fromBufferAttribute(position, i1);\n            isContained = isContained && box1.containsPoint(vec);\n            vec.fromBufferAttribute(position, i2);\n            isContained = isContained && box1.containsPoint(vec);\n            console.assert(isContained, 'Leaf bounds does not fully contain triangle.');\n            passes = passes && isContained;\n          }\n        }\n\n        if (parent) {\n          // check if my bounds fit in my parents\n          (0, _ArrayBoxUtilities.arrayToBox)(boundingData, box2);\n\n          var _isContained = box2.containsBox(box1);\n\n          console.assert(_isContained, 'Parent bounds does not fully contain child.');\n          passes = passes && _isContained;\n        }\n      });\n      return passes;\n    }\n  }]);\n\n  return MeshBVHDebug;\n}();\n\nexports.MeshBVHDebug = MeshBVHDebug;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_mesh_bvh$src$Utils$ArrayBoxUtilities","~$shadow.js"]],"~:properties",["^5",["right","offset","boundingData","key","__esModule","count","MeshBVHDebug","bvh","configurable","isLeaf","value","geometry","enumerable","writable","depth","bounds","left"]],"~:compiled-at",1630917516190,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_mesh_bvh$src$MeshBVHDebug.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-mesh-bvh/src/MeshBVHDebug.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_mesh_bvh$src$MeshBVHDebug\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MeshBVHDebug = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _ArrayBoxUtilities = require(\\\"./Utils/ArrayBoxUtilities.js\\\");\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nvar box1 = new _three.Box3();\\nvar box2 = new _three.Box3();\\nvar vec = new _three.Vector3();\\n\\nvar MeshBVHDebug =\\n/*#__PURE__*/\\nfunction () {\\n  function MeshBVHDebug(bvh, geometry) {\\n    _classCallCheck(this, MeshBVHDebug);\\n\\n    this.bvh = bvh;\\n    this.geometry = geometry;\\n  } // Returns a simple, human readable object that represents the BVH.\\n\\n\\n  _createClass(MeshBVHDebug, [{\\n    key: \\\"getJSONStructure\\\",\\n    value: function getJSONStructure() {\\n      var bvh = this.bvh;\\n      var depthStack = [];\\n      bvh.traverse(function (depth, isLeaf, boundingData, offset, count) {\\n        var info = {\\n          bounds: (0, _ArrayBoxUtilities.arrayToBox)(boundingData, new _three.Box3())\\n        };\\n\\n        if (isLeaf) {\\n          info.count = count;\\n          info.offset = offset;\\n        } else {\\n          info.left = null;\\n          info.right = null;\\n        }\\n\\n        depthStack[depth] = info; // traversal hits the left then right node\\n\\n        var parent = depthStack[depth - 1];\\n\\n        if (parent) {\\n          if (parent.left === null) {\\n            parent.left = info;\\n          } else {\\n            parent.right = info;\\n          }\\n        }\\n      });\\n      return depthStack[0];\\n    }\\n  }, {\\n    key: \\\"validateBounds\\\",\\n    value: function validateBounds() {\\n      var bvh = this.bvh,\\n          geometry = this.geometry;\\n      var depthStack = [];\\n      var index = geometry.index;\\n      var position = geometry.getAttribute('position');\\n      var passes = true;\\n      bvh.traverse(function (depth, isLeaf, boundingData, offset, count) {\\n        var info = {\\n          depth: depth,\\n          isLeaf: isLeaf,\\n          boundingData: boundingData,\\n          offset: offset,\\n          count: count\\n        };\\n        depthStack[depth] = info;\\n        (0, _ArrayBoxUtilities.arrayToBox)(boundingData, box1);\\n        var parent = depthStack[depth - 1];\\n\\n        if (isLeaf) {\\n          // check triangles\\n          for (var i = offset * 3, l = (offset + count) * 3; i < l; i += 3) {\\n            var i0 = index.getX(i);\\n            var i1 = index.getX(i + 1);\\n            var i2 = index.getX(i + 2);\\n            var isContained = void 0;\\n            vec.fromBufferAttribute(position, i0);\\n            isContained = box1.containsPoint(vec);\\n            vec.fromBufferAttribute(position, i1);\\n            isContained = isContained && box1.containsPoint(vec);\\n            vec.fromBufferAttribute(position, i2);\\n            isContained = isContained && box1.containsPoint(vec);\\n            console.assert(isContained, 'Leaf bounds does not fully contain triangle.');\\n            passes = passes && isContained;\\n          }\\n        }\\n\\n        if (parent) {\\n          // check if my bounds fit in my parents\\n          (0, _ArrayBoxUtilities.arrayToBox)(boundingData, box2);\\n\\n          var _isContained = box2.containsBox(box1);\\n\\n          console.assert(_isContained, 'Parent bounds does not fully contain child.');\\n          passes = passes && _isContained;\\n        }\\n      });\\n      return passes;\\n    }\\n  }]);\\n\\n  return MeshBVHDebug;\\n}();\\n\\nexports.MeshBVHDebug = MeshBVHDebug;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"prototype\",\"value\",\"MeshBVHDebug\",\"_three\",\"_ArrayBoxUtilities\",\"box1\",\"Box3\",\"box2\",\"vec\",\"Vector3\",\"bvh\",\"geometry\",\"instance\",\"TypeError\",\"getJSONStructure\",\"depthStack\",\"traverse\",\"depth\",\"isLeaf\",\"boundingData\",\"offset\",\"count\",\"info\",\"bounds\",\"arrayToBox\",\"left\",\"right\",\"parent\",\"validateBounds\",\"index\",\"position\",\"getAttribute\",\"passes\",\"l\",\"i0\",\"getX\",\"i1\",\"i2\",\"fromBufferAttribute\",\"isContained\",\"containsPoint\",\"console\",\"assert\",\"_isContained\",\"containsBox\"]\n}\n"]