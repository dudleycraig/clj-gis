["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/loaders/DDSLoader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$loaders$DDSLoader=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=\ndescriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);return Constructor}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};\nreturn _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};\nreturn _setPrototypeOf(o$jscomp$0,p$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.DDSLoader=void 0;var _three=require(\"module$node_modules$three$build$three_module\");global=function(_CompressedTextureLoa){function DDSLoader(manager){if(!(this instanceof DDSLoader))throw new TypeError(\"Cannot call a class as a function\");manager=_getPrototypeOf(DDSLoader).call(this,manager);if(!manager||\"object\"!==_typeof(manager)&&\"function\"!==typeof manager){if(void 0===this)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\nmanager=this}return manager}_inherits(DDSLoader,_CompressedTextureLoa);_createClass(DDSLoader,[{key:\"parse\",value:function(buffer$jscomp$0,loadMipmaps){function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24)}function loadARGBMip(buffer,dataOffset,width,height){var dataLength=width*height*4;buffer=new Uint8Array(buffer,dataOffset,dataLength);dataLength=new Uint8Array(dataLength);for(var src=dataOffset=0,y=0;y<height;y++)for(var x=\n0;x<width;x++){var b=buffer[src];src++;var g=buffer[src];src++;var r=buffer[src];src++;var a=buffer[src];src++;dataLength[dataOffset]=r;dataOffset++;dataLength[dataOffset]=g;dataOffset++;dataLength[dataOffset]=b;dataOffset++;dataLength[dataOffset]=a;dataOffset++}return dataLength}var dds={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},FOURCC_DXT1=fourCCToInt32(\"DXT1\"),FOURCC_DXT3=fourCCToInt32(\"DXT3\"),FOURCC_DXT5=fourCCToInt32(\"DXT5\"),FOURCC_ETC1=fourCCToInt32(\"ETC1\"),header=new Int32Array(buffer$jscomp$0,\n0,31);if(542327876!==header[0])return console.error(\"THREE.DDSLoader.parse: Invalid magic number in DDS header.\"),dds;if(!header[20]&4)return console.error(\"THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.\"),dds;var fourCC=header[21],isRGBAUncompressed=!1;switch(fourCC){case FOURCC_DXT1:FOURCC_DXT1=8;dds.format=_three.RGB_S3TC_DXT1_Format;break;case FOURCC_DXT3:FOURCC_DXT1=16;dds.format=_three.RGBA_S3TC_DXT3_Format;break;case FOURCC_DXT5:FOURCC_DXT1=16;dds.format=_three.RGBA_S3TC_DXT5_Format;\nbreak;case FOURCC_ETC1:FOURCC_DXT1=8;dds.format=_three.RGB_ETC1_Format;break;default:if(32===header[22]&&header[23]&16711680&&header[24]&65280&&header[25]&255&&header[26]&4278190080)isRGBAUncompressed=!0,FOURCC_DXT1=64,dds.format=_three.RGBAFormat;else return console.error(\"THREE.DDSLoader.parse: Unsupported FourCC code \",String.fromCharCode(fourCC&255,fourCC>>8&255,fourCC>>16&255,fourCC>>24&255)),dds}dds.mipmapCount=1;header[2]&131072&&!1!==loadMipmaps&&(dds.mipmapCount=Math.max(1,header[7]));loadMipmaps=\nheader[28];dds.isCubemap=loadMipmaps&512?!0:!1;if(dds.isCubemap&&!(loadMipmaps&1024&&loadMipmaps&2048&&loadMipmaps&4096&&loadMipmaps&8192&&loadMipmaps&16384&&loadMipmaps&32768))return console.error(\"THREE.DDSLoader.parse: Incomplete cubemap faces\"),dds;dds.width=header[4];dds.height=header[3];header=header[1]+4;loadMipmaps=dds.isCubemap?6:1;for(FOURCC_DXT3=0;FOURCC_DXT3<loadMipmaps;FOURCC_DXT3++)for(FOURCC_DXT5=dds.width,FOURCC_ETC1=dds.height,fourCC=0;fourCC<dds.mipmapCount;fourCC++){var byteArray=\nvoid 0,dataLength$jscomp$0=void 0;isRGBAUncompressed?(byteArray=loadARGBMip(buffer$jscomp$0,header,FOURCC_DXT5,FOURCC_ETC1),dataLength$jscomp$0=byteArray.length):(dataLength$jscomp$0=Math.max(4,FOURCC_DXT5)/4*Math.max(4,FOURCC_ETC1)/4*FOURCC_DXT1,byteArray=new Uint8Array(buffer$jscomp$0,header,dataLength$jscomp$0));dds.mipmaps.push({data:byteArray,width:FOURCC_DXT5,height:FOURCC_ETC1});header+=dataLength$jscomp$0;FOURCC_DXT5=Math.max(FOURCC_DXT5>>1,1);FOURCC_ETC1=Math.max(FOURCC_ETC1>>1,1)}return dds}}]);\nreturn DDSLoader}(_three.CompressedTextureLoader);exports.DDSLoader=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$loaders$DDSLoader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DDSLoader = void 0;\n\nvar _three = require(\"three\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar DDSLoader =\n/*#__PURE__*/\nfunction (_CompressedTextureLoa) {\n  _inherits(DDSLoader, _CompressedTextureLoa);\n\n  function DDSLoader(manager) {\n    _classCallCheck(this, DDSLoader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DDSLoader).call(this, manager));\n  }\n\n  _createClass(DDSLoader, [{\n    key: \"parse\",\n    value: function parse(buffer, loadMipmaps) {\n      var dds = {\n        mipmaps: [],\n        width: 0,\n        height: 0,\n        format: null,\n        mipmapCount: 1\n      }; // Adapted from @toji's DDS utils\n      // https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\n      // All values and structures referenced from:\n      // http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n\n      var DDS_MAGIC = 0x20534444; // let DDSD_CAPS = 0x1;\n      // let DDSD_HEIGHT = 0x2;\n      // let DDSD_WIDTH = 0x4;\n      // let DDSD_PITCH = 0x8;\n      // let DDSD_PIXELFORMAT = 0x1000;\n\n      var DDSD_MIPMAPCOUNT = 0x20000; // let DDSD_LINEARSIZE = 0x80000;\n      // let DDSD_DEPTH = 0x800000;\n      // let DDSCAPS_COMPLEX = 0x8;\n      // let DDSCAPS_MIPMAP = 0x400000;\n      // let DDSCAPS_TEXTURE = 0x1000;\n\n      var DDSCAPS2_CUBEMAP = 0x200;\n      var DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;\n      var DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;\n      var DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;\n      var DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;\n      var DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;\n      var DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000; // let DDSCAPS2_VOLUME = 0x200000;\n      // let DDPF_ALPHAPIXELS = 0x1;\n      // let DDPF_ALPHA = 0x2;\n\n      var DDPF_FOURCC = 0x4; // let DDPF_RGB = 0x40;\n      // let DDPF_YUV = 0x200;\n      // let DDPF_LUMINANCE = 0x20000;\n\n      function fourCCToInt32(value) {\n        return value.charCodeAt(0) + (value.charCodeAt(1) << 8) + (value.charCodeAt(2) << 16) + (value.charCodeAt(3) << 24);\n      }\n\n      function int32ToFourCC(value) {\n        return String.fromCharCode(value & 0xff, value >> 8 & 0xff, value >> 16 & 0xff, value >> 24 & 0xff);\n      }\n\n      function loadARGBMip(buffer, dataOffset, width, height) {\n        var dataLength = width * height * 4;\n        var srcBuffer = new Uint8Array(buffer, dataOffset, dataLength);\n        var byteArray = new Uint8Array(dataLength);\n        var dst = 0;\n        var src = 0;\n\n        for (var y = 0; y < height; y++) {\n          for (var x = 0; x < width; x++) {\n            var b = srcBuffer[src];\n            src++;\n            var g = srcBuffer[src];\n            src++;\n            var r = srcBuffer[src];\n            src++;\n            var a = srcBuffer[src];\n            src++;\n            byteArray[dst] = r;\n            dst++; //r\n\n            byteArray[dst] = g;\n            dst++; //g\n\n            byteArray[dst] = b;\n            dst++; //b\n\n            byteArray[dst] = a;\n            dst++; //a\n          }\n        }\n\n        return byteArray;\n      }\n\n      var FOURCC_DXT1 = fourCCToInt32('DXT1');\n      var FOURCC_DXT3 = fourCCToInt32('DXT3');\n      var FOURCC_DXT5 = fourCCToInt32('DXT5');\n      var FOURCC_ETC1 = fourCCToInt32('ETC1');\n      var headerLengthInt = 31; // The header length in 32 bit ints\n      // Offsets into the header array\n\n      var off_magic = 0;\n      var off_size = 1;\n      var off_flags = 2;\n      var off_height = 3;\n      var off_width = 4;\n      var off_mipmapCount = 7;\n      var off_pfFlags = 20;\n      var off_pfFourCC = 21;\n      var off_RGBBitCount = 22;\n      var off_RBitMask = 23;\n      var off_GBitMask = 24;\n      var off_BBitMask = 25;\n      var off_ABitMask = 26; // let off_caps = 27;\n\n      var off_caps2 = 28; // let off_caps3 = 29;\n      // let off_caps4 = 30;\n      // Parse header\n\n      var header = new Int32Array(buffer, 0, headerLengthInt);\n\n      if (header[off_magic] !== DDS_MAGIC) {\n        console.error('THREE.DDSLoader.parse: Invalid magic number in DDS header.');\n        return dds;\n      }\n\n      if (!header[off_pfFlags] & DDPF_FOURCC) {\n        console.error('THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.');\n        return dds;\n      }\n\n      var blockBytes;\n      var fourCC = header[off_pfFourCC];\n      var isRGBAUncompressed = false;\n\n      switch (fourCC) {\n        case FOURCC_DXT1:\n          blockBytes = 8;\n          dds.format = _three.RGB_S3TC_DXT1_Format;\n          break;\n\n        case FOURCC_DXT3:\n          blockBytes = 16;\n          dds.format = _three.RGBA_S3TC_DXT3_Format;\n          break;\n\n        case FOURCC_DXT5:\n          blockBytes = 16;\n          dds.format = _three.RGBA_S3TC_DXT5_Format;\n          break;\n\n        case FOURCC_ETC1:\n          blockBytes = 8;\n          dds.format = _three.RGB_ETC1_Format;\n          break;\n\n        default:\n          if (header[off_RGBBitCount] === 32 && header[off_RBitMask] & 0xff0000 && header[off_GBitMask] & 0xff00 && header[off_BBitMask] & 0xff && header[off_ABitMask] & 0xff000000) {\n            isRGBAUncompressed = true;\n            blockBytes = 64;\n            dds.format = _three.RGBAFormat;\n          } else {\n            console.error('THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC(fourCC));\n            return dds;\n          }\n\n      }\n\n      dds.mipmapCount = 1;\n\n      if (header[off_flags] & DDSD_MIPMAPCOUNT && loadMipmaps !== false) {\n        dds.mipmapCount = Math.max(1, header[off_mipmapCount]);\n      }\n\n      var caps2 = header[off_caps2];\n      dds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\n\n      if (dds.isCubemap && (!(caps2 & DDSCAPS2_CUBEMAP_POSITIVEX) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX) || !(caps2 & DDSCAPS2_CUBEMAP_POSITIVEY) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY) || !(caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ))) {\n        console.error('THREE.DDSLoader.parse: Incomplete cubemap faces');\n        return dds;\n      }\n\n      dds.width = header[off_width];\n      dds.height = header[off_height];\n      var dataOffset = header[off_size] + 4; // Extract mipmaps buffers\n\n      var faces = dds.isCubemap ? 6 : 1;\n\n      for (var face = 0; face < faces; face++) {\n        var width = dds.width;\n        var height = dds.height;\n\n        for (var i = 0; i < dds.mipmapCount; i++) {\n          var byteArray = void 0,\n              dataLength = void 0;\n\n          if (isRGBAUncompressed) {\n            byteArray = loadARGBMip(buffer, dataOffset, width, height);\n            dataLength = byteArray.length;\n          } else {\n            dataLength = Math.max(4, width) / 4 * Math.max(4, height) / 4 * blockBytes;\n            byteArray = new Uint8Array(buffer, dataOffset, dataLength);\n          }\n\n          var mipmap = {\n            data: byteArray,\n            width: width,\n            height: height\n          };\n          dds.mipmaps.push(mipmap);\n          dataOffset += dataLength;\n          width = Math.max(width >> 1, 1);\n          height = Math.max(height >> 1, 1);\n        }\n      }\n\n      return dds;\n    }\n  }]);\n\n  return DDSLoader;\n}(_three.CompressedTextureLoader);\n\nexports.DDSLoader = DDSLoader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["mipmaps","width","prototype","height","key","__esModule","mipmapCount","configurable","value","enumerable","isCubemap","writable","DDSLoader","__proto__","data","format","constructor"]],"~:compiled-at",1630917515883,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$loaders$DDSLoader.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/loaders/DDSLoader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$loaders$DDSLoader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DDSLoader = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function\\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\nvar DDSLoader =\\n/*#__PURE__*/\\nfunction (_CompressedTextureLoa) {\\n  _inherits(DDSLoader, _CompressedTextureLoa);\\n\\n  function DDSLoader(manager) {\\n    _classCallCheck(this, DDSLoader);\\n\\n    return _possibleConstructorReturn(this, _getPrototypeOf(DDSLoader).call(this, manager));\\n  }\\n\\n  _createClass(DDSLoader, [{\\n    key: \\\"parse\\\",\\n    value: function parse(buffer, loadMipmaps) {\\n      var dds = {\\n        mipmaps: [],\\n        width: 0,\\n        height: 0,\\n        format: null,\\n        mipmapCount: 1\\n      }; // Adapted from @toji's DDS utils\\n      // https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\\n      // All values and structures referenced from:\\n      // http://msdn.microsoft.com/en-us/library/bb943991.aspx/\\n\\n      var DDS_MAGIC = 0x20534444; // let DDSD_CAPS = 0x1;\\n      // let DDSD_HEIGHT = 0x2;\\n      // let DDSD_WIDTH = 0x4;\\n      // let DDSD_PITCH = 0x8;\\n      // let DDSD_PIXELFORMAT = 0x1000;\\n\\n      var DDSD_MIPMAPCOUNT = 0x20000; // let DDSD_LINEARSIZE = 0x80000;\\n      // let DDSD_DEPTH = 0x800000;\\n      // let DDSCAPS_COMPLEX = 0x8;\\n      // let DDSCAPS_MIPMAP = 0x400000;\\n      // let DDSCAPS_TEXTURE = 0x1000;\\n\\n      var DDSCAPS2_CUBEMAP = 0x200;\\n      var DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;\\n      var DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;\\n      var DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;\\n      var DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;\\n      var DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;\\n      var DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000; // let DDSCAPS2_VOLUME = 0x200000;\\n      // let DDPF_ALPHAPIXELS = 0x1;\\n      // let DDPF_ALPHA = 0x2;\\n\\n      var DDPF_FOURCC = 0x4; // let DDPF_RGB = 0x40;\\n      // let DDPF_YUV = 0x200;\\n      // let DDPF_LUMINANCE = 0x20000;\\n\\n      function fourCCToInt32(value) {\\n        return value.charCodeAt(0) + (value.charCodeAt(1) << 8) + (value.charCodeAt(2) << 16) + (value.charCodeAt(3) << 24);\\n      }\\n\\n      function int32ToFourCC(value) {\\n        return String.fromCharCode(value & 0xff, value >> 8 & 0xff, value >> 16 & 0xff, value >> 24 & 0xff);\\n      }\\n\\n      function loadARGBMip(buffer, dataOffset, width, height) {\\n        var dataLength = width * height * 4;\\n        var srcBuffer = new Uint8Array(buffer, dataOffset, dataLength);\\n        var byteArray = new Uint8Array(dataLength);\\n        var dst = 0;\\n        var src = 0;\\n\\n        for (var y = 0; y < height; y++) {\\n          for (var x = 0; x < width; x++) {\\n            var b = srcBuffer[src];\\n            src++;\\n            var g = srcBuffer[src];\\n            src++;\\n            var r = srcBuffer[src];\\n            src++;\\n            var a = srcBuffer[src];\\n            src++;\\n            byteArray[dst] = r;\\n            dst++; //r\\n\\n            byteArray[dst] = g;\\n            dst++; //g\\n\\n            byteArray[dst] = b;\\n            dst++; //b\\n\\n            byteArray[dst] = a;\\n            dst++; //a\\n          }\\n        }\\n\\n        return byteArray;\\n      }\\n\\n      var FOURCC_DXT1 = fourCCToInt32('DXT1');\\n      var FOURCC_DXT3 = fourCCToInt32('DXT3');\\n      var FOURCC_DXT5 = fourCCToInt32('DXT5');\\n      var FOURCC_ETC1 = fourCCToInt32('ETC1');\\n      var headerLengthInt = 31; // The header length in 32 bit ints\\n      // Offsets into the header array\\n\\n      var off_magic = 0;\\n      var off_size = 1;\\n      var off_flags = 2;\\n      var off_height = 3;\\n      var off_width = 4;\\n      var off_mipmapCount = 7;\\n      var off_pfFlags = 20;\\n      var off_pfFourCC = 21;\\n      var off_RGBBitCount = 22;\\n      var off_RBitMask = 23;\\n      var off_GBitMask = 24;\\n      var off_BBitMask = 25;\\n      var off_ABitMask = 26; // let off_caps = 27;\\n\\n      var off_caps2 = 28; // let off_caps3 = 29;\\n      // let off_caps4 = 30;\\n      // Parse header\\n\\n      var header = new Int32Array(buffer, 0, headerLengthInt);\\n\\n      if (header[off_magic] !== DDS_MAGIC) {\\n        console.error('THREE.DDSLoader.parse: Invalid magic number in DDS header.');\\n        return dds;\\n      }\\n\\n      if (!header[off_pfFlags] & DDPF_FOURCC) {\\n        console.error('THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.');\\n        return dds;\\n      }\\n\\n      var blockBytes;\\n      var fourCC = header[off_pfFourCC];\\n      var isRGBAUncompressed = false;\\n\\n      switch (fourCC) {\\n        case FOURCC_DXT1:\\n          blockBytes = 8;\\n          dds.format = _three.RGB_S3TC_DXT1_Format;\\n          break;\\n\\n        case FOURCC_DXT3:\\n          blockBytes = 16;\\n          dds.format = _three.RGBA_S3TC_DXT3_Format;\\n          break;\\n\\n        case FOURCC_DXT5:\\n          blockBytes = 16;\\n          dds.format = _three.RGBA_S3TC_DXT5_Format;\\n          break;\\n\\n        case FOURCC_ETC1:\\n          blockBytes = 8;\\n          dds.format = _three.RGB_ETC1_Format;\\n          break;\\n\\n        default:\\n          if (header[off_RGBBitCount] === 32 && header[off_RBitMask] & 0xff0000 && header[off_GBitMask] & 0xff00 && header[off_BBitMask] & 0xff && header[off_ABitMask] & 0xff000000) {\\n            isRGBAUncompressed = true;\\n            blockBytes = 64;\\n            dds.format = _three.RGBAFormat;\\n          } else {\\n            console.error('THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC(fourCC));\\n            return dds;\\n          }\\n\\n      }\\n\\n      dds.mipmapCount = 1;\\n\\n      if (header[off_flags] & DDSD_MIPMAPCOUNT && loadMipmaps !== false) {\\n        dds.mipmapCount = Math.max(1, header[off_mipmapCount]);\\n      }\\n\\n      var caps2 = header[off_caps2];\\n      dds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\\n\\n      if (dds.isCubemap && (!(caps2 & DDSCAPS2_CUBEMAP_POSITIVEX) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX) || !(caps2 & DDSCAPS2_CUBEMAP_POSITIVEY) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY) || !(caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ))) {\\n        console.error('THREE.DDSLoader.parse: Incomplete cubemap faces');\\n        return dds;\\n      }\\n\\n      dds.width = header[off_width];\\n      dds.height = header[off_height];\\n      var dataOffset = header[off_size] + 4; // Extract mipmaps buffers\\n\\n      var faces = dds.isCubemap ? 6 : 1;\\n\\n      for (var face = 0; face < faces; face++) {\\n        var width = dds.width;\\n        var height = dds.height;\\n\\n        for (var i = 0; i < dds.mipmapCount; i++) {\\n          var byteArray = void 0,\\n              dataLength = void 0;\\n\\n          if (isRGBAUncompressed) {\\n            byteArray = loadARGBMip(buffer, dataOffset, width, height);\\n            dataLength = byteArray.length;\\n          } else {\\n            dataLength = Math.max(4, width) / 4 * Math.max(4, height) / 4 * blockBytes;\\n            byteArray = new Uint8Array(buffer, dataOffset, dataLength);\\n          }\\n\\n          var mipmap = {\\n            data: byteArray,\\n            width: width,\\n            height: height\\n          };\\n          dds.mipmaps.push(mipmap);\\n          dataOffset += dataLength;\\n          width = Math.max(width >> 1, 1);\\n          height = Math.max(height >> 1, 1);\\n        }\\n      }\\n\\n      return dds;\\n    }\\n  }]);\\n\\n  return DDSLoader;\\n}(_three.CompressedTextureLoader);\\n\\nexports.DDSLoader = DDSLoader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"_getPrototypeOf\",\"o\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"value\",\"_setPrototypeOf\",\"p\",\"DDSLoader\",\"_three\",\"_CompressedTextureLoa\",\"manager\",\"instance\",\"call\",\"self\",\"ReferenceError\",\"parse\",\"buffer\",\"loadMipmaps\",\"fourCCToInt32\",\"charCodeAt\",\"loadARGBMip\",\"dataOffset\",\"width\",\"height\",\"dataLength\",\"srcBuffer\",\"Uint8Array\",\"byteArray\",\"src\",\"dst\",\"y\",\"x\",\"b\",\"g\",\"r\",\"a\",\"dds\",\"mipmaps\",\"format\",\"mipmapCount\",\"FOURCC_DXT1\",\"FOURCC_DXT3\",\"FOURCC_DXT5\",\"FOURCC_ETC1\",\"header\",\"Int32Array\",\"headerLengthInt\",\"DDS_MAGIC\",\"off_magic\",\"console\",\"error\",\"off_pfFlags\",\"DDPF_FOURCC\",\"fourCC\",\"off_pfFourCC\",\"isRGBAUncompressed\",\"blockBytes\",\"RGB_S3TC_DXT1_Format\",\"RGBA_S3TC_DXT3_Format\",\"RGBA_S3TC_DXT5_Format\",\"RGB_ETC1_Format\",\"off_RGBBitCount\",\"off_RBitMask\",\"off_GBitMask\",\"off_BBitMask\",\"off_ABitMask\",\"RGBAFormat\",\"String\",\"fromCharCode\",\"off_flags\",\"DDSD_MIPMAPCOUNT\",\"Math\",\"max\",\"off_mipmapCount\",\"caps2\",\"off_caps2\",\"isCubemap\",\"DDSCAPS2_CUBEMAP\",\"DDSCAPS2_CUBEMAP_POSITIVEX\",\"DDSCAPS2_CUBEMAP_NEGATIVEX\",\"DDSCAPS2_CUBEMAP_POSITIVEY\",\"DDSCAPS2_CUBEMAP_NEGATIVEY\",\"DDSCAPS2_CUBEMAP_POSITIVEZ\",\"DDSCAPS2_CUBEMAP_NEGATIVEZ\",\"off_width\",\"off_height\",\"off_size\",\"faces\",\"face\",\"push\",\"mipmap\",\"data\",\"CompressedTextureLoader\"]\n}\n"]