["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/utils/SpecularMIPLevelNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$utils$SpecularMIPLevelNode=function(global,require,module,exports){function SpecularMIPLevelNode(roughness,texture){_TempNode.TempNode.call(this,\"f\");this.roughness=roughness;this.texture=texture;this.maxMIPLevel=void 0}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.SpecularMIPLevelNode=SpecularMIPLevelNode;var _TempNode=require(\"module$node_modules$three_stdlib$nodes$core$TempNode\");global=require(\"module$node_modules$three_stdlib$nodes$core$FunctionNode\");\nvar _MaxMIPLevelNode=require(\"module$node_modules$three_stdlib$nodes$utils$MaxMIPLevelNode\");SpecularMIPLevelNode.Nodes={getSpecularMIPLevel:new global.FunctionNode(\"float getSpecularMIPLevel( const in float roughness, const in float maxMIPLevelScalar ) {\\n\\tfloat sigma \\x3d PI * roughness * roughness / ( 1.0 + roughness );\\n\\tfloat desiredMIPLevel \\x3d maxMIPLevelScalar + log2( sigma );\\n\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n}\")};SpecularMIPLevelNode.prototype=Object.create(_TempNode.TempNode.prototype);\nSpecularMIPLevelNode.prototype.constructor=SpecularMIPLevelNode;SpecularMIPLevelNode.prototype.nodeType=\"SpecularMIPLevel\";SpecularMIPLevelNode.prototype.setTexture=function(texture){this.texture=texture;return this};SpecularMIPLevelNode.prototype.generate=function(builder,output){if(builder.isShader(\"fragment\")){this.maxMIPLevel=this.maxMIPLevel||new _MaxMIPLevelNode.MaxMIPLevelNode;this.maxMIPLevel.texture=this.texture;var getSpecularMIPLevel=builder.include(SpecularMIPLevelNode.Nodes.getSpecularMIPLevel);\nreturn builder.format(getSpecularMIPLevel+\"( \"+this.roughness.build(builder,\"f\")+\", \"+this.maxMIPLevel.build(builder,\"f\")+\" )\",this.type,output)}console.warn(\"THREE.SpecularMIPLevelNode is not compatible with \"+builder.shader+\" shader.\");return builder.format(\"0.0\",this.type,output)};SpecularMIPLevelNode.prototype.copy=function(source){_TempNode.TempNode.prototype.copy.call(this,source);this.texture=source.texture;this.roughness=source.roughness;return this};SpecularMIPLevelNode.prototype.toJSON=\nfunction(meta){var data=this.getJSONNode(meta);data||(data=this.createJSONNode(meta),data.texture=this.texture,data.roughness=this.roughness);return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$utils$SpecularMIPLevelNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpecularMIPLevelNode = SpecularMIPLevelNode;\n\nvar _TempNode = require(\"../core/TempNode.js\");\n\nvar _FunctionNode = require(\"../core/FunctionNode.js\");\n\nvar _MaxMIPLevelNode = require(\"./MaxMIPLevelNode.js\");\n\nfunction SpecularMIPLevelNode(roughness, texture) {\n  _TempNode.TempNode.call(this, 'f');\n\n  this.roughness = roughness;\n  this.texture = texture;\n  this.maxMIPLevel = undefined;\n}\n\nSpecularMIPLevelNode.Nodes = function () {\n  var getSpecularMIPLevel = new _FunctionNode.FunctionNode([// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n  'float getSpecularMIPLevel( const in float roughness, const in float maxMIPLevelScalar ) {', '\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );', '\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );', // clamp to allowable LOD ranges.\n  '\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );', '}'].join('\\n'));\n  return {\n    getSpecularMIPLevel: getSpecularMIPLevel\n  };\n}();\n\nSpecularMIPLevelNode.prototype = Object.create(_TempNode.TempNode.prototype);\nSpecularMIPLevelNode.prototype.constructor = SpecularMIPLevelNode;\nSpecularMIPLevelNode.prototype.nodeType = 'SpecularMIPLevel';\n\nSpecularMIPLevelNode.prototype.setTexture = function (texture) {\n  this.texture = texture;\n  return this;\n};\n\nSpecularMIPLevelNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    this.maxMIPLevel = this.maxMIPLevel || new _MaxMIPLevelNode.MaxMIPLevelNode();\n    this.maxMIPLevel.texture = this.texture;\n    var getSpecularMIPLevel = builder.include(SpecularMIPLevelNode.Nodes.getSpecularMIPLevel);\n    return builder.format(getSpecularMIPLevel + '( ' + this.roughness.build(builder, 'f') + ', ' + this.maxMIPLevel.build(builder, 'f') + ' )', this.type, output);\n  } else {\n    console.warn('THREE.SpecularMIPLevelNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('0.0', this.type, output);\n  }\n};\n\nSpecularMIPLevelNode.prototype.copy = function (source) {\n  _TempNode.TempNode.prototype.copy.call(this, source);\n\n  this.texture = source.texture;\n  this.roughness = source.roughness;\n  return this;\n};\n\nSpecularMIPLevelNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.texture = this.texture;\n    data.roughness = this.roughness;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three_stdlib$nodes$core$FunctionNode","~$shadow.js","~$module$node_modules$three_stdlib$nodes$utils$MaxMIPLevelNode","~$module$node_modules$three_stdlib$nodes$core$TempNode"]],"~:properties",["^5",["SpecularMIPLevelNode","Nodes","copy","prototype","setTexture","texture","__esModule","generate","nodeType","value","getSpecularMIPLevel","maxMIPLevel","roughness","constructor","toJSON"]],"~:compiled-at",1630917515227,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$utils$SpecularMIPLevelNode.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/utils/SpecularMIPLevelNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$utils$SpecularMIPLevelNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SpecularMIPLevelNode = SpecularMIPLevelNode;\\n\\nvar _TempNode = require(\\\"../core/TempNode.js\\\");\\n\\nvar _FunctionNode = require(\\\"../core/FunctionNode.js\\\");\\n\\nvar _MaxMIPLevelNode = require(\\\"./MaxMIPLevelNode.js\\\");\\n\\nfunction SpecularMIPLevelNode(roughness, texture) {\\n  _TempNode.TempNode.call(this, 'f');\\n\\n  this.roughness = roughness;\\n  this.texture = texture;\\n  this.maxMIPLevel = undefined;\\n}\\n\\nSpecularMIPLevelNode.Nodes = function () {\\n  var getSpecularMIPLevel = new _FunctionNode.FunctionNode([// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\\n  'float getSpecularMIPLevel( const in float roughness, const in float maxMIPLevelScalar ) {', '\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );', '\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );', // clamp to allowable LOD ranges.\\n  '\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );', '}'].join('\\\\n'));\\n  return {\\n    getSpecularMIPLevel: getSpecularMIPLevel\\n  };\\n}();\\n\\nSpecularMIPLevelNode.prototype = Object.create(_TempNode.TempNode.prototype);\\nSpecularMIPLevelNode.prototype.constructor = SpecularMIPLevelNode;\\nSpecularMIPLevelNode.prototype.nodeType = 'SpecularMIPLevel';\\n\\nSpecularMIPLevelNode.prototype.setTexture = function (texture) {\\n  this.texture = texture;\\n  return this;\\n};\\n\\nSpecularMIPLevelNode.prototype.generate = function (builder, output) {\\n  if (builder.isShader('fragment')) {\\n    this.maxMIPLevel = this.maxMIPLevel || new _MaxMIPLevelNode.MaxMIPLevelNode();\\n    this.maxMIPLevel.texture = this.texture;\\n    var getSpecularMIPLevel = builder.include(SpecularMIPLevelNode.Nodes.getSpecularMIPLevel);\\n    return builder.format(getSpecularMIPLevel + '( ' + this.roughness.build(builder, 'f') + ', ' + this.maxMIPLevel.build(builder, 'f') + ' )', this.type, output);\\n  } else {\\n    console.warn('THREE.SpecularMIPLevelNode is not compatible with ' + builder.shader + ' shader.');\\n    return builder.format('0.0', this.type, output);\\n  }\\n};\\n\\nSpecularMIPLevelNode.prototype.copy = function (source) {\\n  _TempNode.TempNode.prototype.copy.call(this, source);\\n\\n  this.texture = source.texture;\\n  this.roughness = source.roughness;\\n  return this;\\n};\\n\\nSpecularMIPLevelNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = this.createJSONNode(meta);\\n    data.texture = this.texture;\\n    data.roughness = this.roughness;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"SpecularMIPLevelNode\",\"roughness\",\"texture\",\"_TempNode\",\"TempNode\",\"call\",\"maxMIPLevel\",\"undefined\",\"Object\",\"defineProperty\",\"value\",\"_FunctionNode\",\"_MaxMIPLevelNode\",\"Nodes\",\"getSpecularMIPLevel\",\"FunctionNode\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"setTexture\",\"SpecularMIPLevelNode.prototype.setTexture\",\"generate\",\"SpecularMIPLevelNode.prototype.generate\",\"builder\",\"output\",\"isShader\",\"MaxMIPLevelNode\",\"include\",\"format\",\"build\",\"type\",\"console\",\"warn\",\"shader\",\"copy\",\"SpecularMIPLevelNode.prototype.copy\",\"source\",\"toJSON\",\"SpecularMIPLevelNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\",\"createJSONNode\"]\n}\n"]