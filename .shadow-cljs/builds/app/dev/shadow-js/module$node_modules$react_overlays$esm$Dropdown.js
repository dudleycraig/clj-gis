["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-overlays/esm/Dropdown.js"],"~:js","shadow$provide.module$node_modules$react_overlays$esm$Dropdown=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function _getRequireWildcardCache(){if(\"function\"!==typeof WeakMap)return null;var cache=new WeakMap;_getRequireWildcardCache=\nfunction(){return cache};return cache}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}function useRefWithUpdate(){var forceUpdate=(0,_useForceUpdate[\"default\"])(),ref=(0,_react.useRef)(null),attachRef=(0,_react.useCallback)(function(element){ref.current=element;forceUpdate()},[forceUpdate]);return[ref,attachRef]}function Dropdown(_ref){var drop=_ref.drop,alignEnd=_ref.alignEnd,defaultShow=_ref.defaultShow,rawShow=_ref.show,rawOnToggle=_ref.onToggle,_ref$itemSelector=\n_ref.itemSelector,itemSelector=void 0===_ref$itemSelector?\"* \\x3e *\":_ref$itemSelector,focusFirstItemOnShow=_ref.focusFirstItemOnShow;_ref=_ref.children;defaultShow=(0,_uncontrollable.useUncontrolledProp)(rawShow,defaultShow,rawOnToggle);var show=defaultShow[0],onToggle=defaultShow[1];defaultShow=useRefWithUpdate();var menuRef=defaultShow[0],setMenu=defaultShow[1],menuElement=menuRef.current;defaultShow=useRefWithUpdate();var toggleRef=defaultShow[0],setToggle=defaultShow[1],toggleElement=toggleRef.current;\ndefaultShow=(0,_usePrevious[\"default\"])(show);var lastSourceEvent=(0,_react.useRef)(null),focusInDropdown=(0,_react.useRef)(!1),toggle=(0,_react.useCallback)(function(nextShow,event){onToggle(nextShow,event)},[onToggle]);rawShow=(0,_react.useMemo)(function(){return{toggle,drop,show,alignEnd,menuElement,toggleElement,setMenu,setToggle}},[toggle,drop,show,alignEnd,menuElement,toggleElement,setMenu,setToggle]);menuElement&&defaultShow&&!show&&(focusInDropdown.current=menuElement.contains(document.activeElement));\nvar focusToggle=(0,_useEventCallback[\"default\"])(function(){toggleElement&&toggleElement.focus&&toggleElement.focus()}),maybeFocusFirst=(0,_useEventCallback[\"default\"])(function(){var type=lastSourceEvent.current,focusType=focusFirstItemOnShow;null==focusType&&(focusType=menuRef.current&&(0,_matches[\"default\"])(menuRef.current,\"[role\\x3dmenu]\")?\"keyboard\":!1);!1===focusType||\"keyboard\"===focusType&&!/^key.+$/.test(type)||(type=(0,_querySelectorAll[\"default\"])(menuRef.current,itemSelector)[0])&&type.focus&&\ntype.focus()});(0,_react.useEffect)(function(){show?maybeFocusFirst():focusInDropdown.current&&(focusInDropdown.current=!1,focusToggle())},[show,focusInDropdown,focusToggle,maybeFocusFirst]);(0,_react.useEffect)(function(){lastSourceEvent.current=null});var getNextFocusedChild=function(current,offset){if(!menuRef.current)return null;var items=(0,_querySelectorAll[\"default\"])(menuRef.current,itemSelector);current=items.indexOf(current)+offset;current=Math.max(0,Math.min(current,items.length));return items[current]};\n(0,_useGlobalListener[\"default\"])(\"keydown\",function(event){var _menuRef$current,_toggleRef$current,key=event.key,target=event.target,fromMenu=null==(_menuRef$current=menuRef.current)?void 0:_menuRef$current.contains(target);_menuRef$current=null==(_toggleRef$current=toggleRef.current)?void 0:_toggleRef$current.contains(target);if(!/input|textarea/i.test(target.tagName)||!(\" \"===key||\"Escape\"!==key&&fromMenu))if(fromMenu||_menuRef$current)if(menuRef.current||\"Tab\"!==key)switch(lastSourceEvent.current=\nevent.type,key){case \"ArrowUp\":(_toggleRef$current=getNextFocusedChild(target,-1))&&_toggleRef$current.focus&&_toggleRef$current.focus();event.preventDefault();break;case \"ArrowDown\":event.preventDefault();show?(_toggleRef$current=getNextFocusedChild(target,1))&&_toggleRef$current.focus&&_toggleRef$current.focus():onToggle(!0,event);break;case \"Tab\":(0,_addEventListener[\"default\"])(document,\"keyup\",function(e){var _menuRef$current2;(\"Tab\"!==e.key||e.target)&&null!=(_menuRef$current2=menuRef.current)&&\n_menuRef$current2.contains(e.target)||onToggle(!1,event)},{once:!0});break;case \"Escape\":event.preventDefault(),event.stopPropagation(),onToggle(!1,event)}});return _react[\"default\"].createElement(_DropdownContext[\"default\"].Provider,{value:rawShow},_ref)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=void 0;var _matches=_interopRequireDefault(require(\"module$node_modules$dom_helpers$esm$matches\")),_querySelectorAll=_interopRequireDefault(require(\"module$node_modules$dom_helpers$esm$querySelectorAll\")),\n_addEventListener=_interopRequireDefault(require(\"module$node_modules$dom_helpers$esm$addEventListener\")),_react=function(obj){if(obj&&obj.__esModule)return obj;if(null===obj||\"object\"!==_typeof(obj)&&\"function\"!==typeof obj)return{\"default\":obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?\nObject.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj[\"default\"]=obj;cache&&cache.set(obj,newObj);return newObj}(require(\"module$node_modules$react$index\"));module=_interopRequireDefault(require(\"module$node_modules$prop_types$index\"));var _uncontrollable=require(\"module$node_modules$uncontrollable$lib$esm$index\"),_usePrevious=_interopRequireDefault(require(\"module$node_modules$$restart$hooks$esm$usePrevious\")),\n_useForceUpdate=_interopRequireDefault(require(\"module$node_modules$$restart$hooks$esm$useForceUpdate\")),_useGlobalListener=_interopRequireDefault(require(\"module$node_modules$$restart$hooks$esm$useGlobalListener\")),_useEventCallback=_interopRequireDefault(require(\"module$node_modules$$restart$hooks$esm$useEventCallback\")),_DropdownContext=_interopRequireDefault(require(\"module$node_modules$react_overlays$esm$DropdownContext\"));global=_interopRequireDefault(require(\"module$node_modules$react_overlays$esm$DropdownMenu\"));\nrequire=_interopRequireDefault(require(\"module$node_modules$react_overlays$esm$DropdownToggle\"));module={children:module[\"default\"].node,drop:module[\"default\"].oneOf([\"up\",\"left\",\"right\",\"down\"]),focusFirstItemOnShow:module[\"default\"].oneOf([!1,!0,\"keyboard\"]),itemSelector:module[\"default\"].string,alignEnd:module[\"default\"].bool,show:module[\"default\"].bool,defaultShow:module[\"default\"].bool,onToggle:module[\"default\"].func};Dropdown.displayName=\"ReactOverlaysDropdown\";Dropdown.propTypes=module;Dropdown.Menu=\nglobal[\"default\"];Dropdown.Toggle=require[\"default\"];exports[\"default\"]=Dropdown}","~:source","shadow$provide[\"module$node_modules$react_overlays$esm$Dropdown\"] = function(global,require,module,exports) {\n\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _matches = _interopRequireDefault(require(\"dom-helpers/matches\"));\n\nvar _querySelectorAll = _interopRequireDefault(require(\"dom-helpers/querySelectorAll\"));\n\nvar _addEventListener = _interopRequireDefault(require(\"dom-helpers/addEventListener\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _usePrevious = _interopRequireDefault(require(\"@restart/hooks/usePrevious\"));\n\nvar _useForceUpdate = _interopRequireDefault(require(\"@restart/hooks/useForceUpdate\"));\n\nvar _useGlobalListener = _interopRequireDefault(require(\"@restart/hooks/useGlobalListener\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"@restart/hooks/useEventCallback\"));\n\nvar _DropdownContext = _interopRequireDefault(require(\"./DropdownContext\"));\n\nvar _DropdownMenu = _interopRequireDefault(require(\"./DropdownMenu\"));\n\nvar _DropdownToggle = _interopRequireDefault(require(\"./DropdownToggle\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: _propTypes[\"default\"].node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: _propTypes[\"default\"].oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: _propTypes[\"default\"].oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: _propTypes[\"default\"].string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: _propTypes[\"default\"].bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: _propTypes[\"default\"].bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: _propTypes[\"default\"].bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: _propTypes[\"default\"].func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = (0, _useForceUpdate[\"default\"])();\n  var ref = (0, _react.useRef)(null);\n  var attachRef = (0, _react.useCallback)(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = (0, _uncontrollable.useUncontrolledProp)(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = (0, _usePrevious[\"default\"])(show);\n  var lastSourceEvent = (0, _react.useRef)(null);\n  var focusInDropdown = (0, _react.useRef)(false);\n  var toggle = (0, _react.useCallback)(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = (0, _react.useMemo)(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = (0, _useEventCallback[\"default\"])(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = (0, _useEventCallback[\"default\"])(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && (0, _matches[\"default\"])(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = (0, _querySelectorAll[\"default\"])(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  (0, _react.useEffect)(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  (0, _react.useEffect)(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = (0, _querySelectorAll[\"default\"])(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  (0, _useGlobalListener[\"default\"])('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (!menuRef.current && key === 'Tab') {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        (0, _addEventListener[\"default\"])(document, 'keyup', function (e) {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return (\n    /*#__PURE__*/\n    _react[\"default\"].createElement(_DropdownContext[\"default\"].Provider, {\n      value: context\n    }, children)\n  );\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = _DropdownMenu[\"default\"];\nDropdown.Toggle = _DropdownToggle[\"default\"];\nvar _default = Dropdown;\nexports[\"default\"] = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_overlays$esm$DropdownMenu","~$module$node_modules$$restart$hooks$esm$useEventCallback","~$module$node_modules$react$index","~$module$node_modules$uncontrollable$lib$esm$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$$restart$hooks$esm$useGlobalListener","~$module$node_modules$react_overlays$esm$DropdownToggle","~$module$node_modules$dom_helpers$esm$querySelectorAll","~$module$node_modules$$restart$hooks$esm$useForceUpdate","~$module$node_modules$$restart$hooks$esm$usePrevious","~$module$node_modules$dom_helpers$esm$matches","~$module$node_modules$dom_helpers$esm$addEventListener","~$module$node_modules$react_overlays$esm$DropdownContext"]],"~:properties",["^5",["setToggle","once","alignEnd","onToggle","displayName","children","__esModule","propTypes","defaultShow","Menu","value","show","drop","itemSelector","current","Toggle","toggle","menuElement","toggleElement","focusFirstItemOnShow","setMenu"]],"~:compiled-at",1630917514128,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_overlays$esm$Dropdown.js\",\n\"lineCount\":14,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-overlays/esm/Dropdown.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_overlays$esm$Dropdown\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = void 0;\\n\\nvar _matches = _interopRequireDefault(require(\\\"dom-helpers/matches\\\"));\\n\\nvar _querySelectorAll = _interopRequireDefault(require(\\\"dom-helpers/querySelectorAll\\\"));\\n\\nvar _addEventListener = _interopRequireDefault(require(\\\"dom-helpers/addEventListener\\\"));\\n\\nvar _react = _interopRequireWildcard(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _uncontrollable = require(\\\"uncontrollable\\\");\\n\\nvar _usePrevious = _interopRequireDefault(require(\\\"@restart/hooks/usePrevious\\\"));\\n\\nvar _useForceUpdate = _interopRequireDefault(require(\\\"@restart/hooks/useForceUpdate\\\"));\\n\\nvar _useGlobalListener = _interopRequireDefault(require(\\\"@restart/hooks/useGlobalListener\\\"));\\n\\nvar _useEventCallback = _interopRequireDefault(require(\\\"@restart/hooks/useEventCallback\\\"));\\n\\nvar _DropdownContext = _interopRequireDefault(require(\\\"./DropdownContext\\\"));\\n\\nvar _DropdownMenu = _interopRequireDefault(require(\\\"./DropdownMenu\\\"));\\n\\nvar _DropdownToggle = _interopRequireDefault(require(\\\"./DropdownToggle\\\"));\\n\\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \\\"function\\\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { \\\"default\\\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\\\"default\\\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nvar propTypes = {\\n  /**\\n   * A render prop that returns the root dropdown element. The `props`\\n   * argument should spread through to an element containing _both_ the\\n   * menu and toggle in order to handle keyboard events for focus management.\\n   *\\n   * @type {Function ({\\n   *   props: {\\n   *     onKeyDown: (SyntheticEvent) => void,\\n   *   },\\n   * }) => React.Element}\\n   */\\n  children: _propTypes[\\\"default\\\"].node,\\n\\n  /**\\n   * Determines the direction and location of the Menu in relation to it's Toggle.\\n   */\\n  drop: _propTypes[\\\"default\\\"].oneOf(['up', 'left', 'right', 'down']),\\n\\n  /**\\n   * Controls the focus behavior for when the Dropdown is opened. Set to\\n   * `true` to always focus the first menu item, `keyboard` to focus only when\\n   * navigating via the keyboard, or `false` to disable completely\\n   *\\n   * The Default behavior is `false` **unless** the Menu has a `role=\\\"menu\\\"`\\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\\n   */\\n  focusFirstItemOnShow: _propTypes[\\\"default\\\"].oneOf([false, true, 'keyboard']),\\n\\n  /**\\n   * A css slector string that will return __focusable__ menu items.\\n   * Selectors should be relative to the menu component:\\n   * e.g. ` > li:not('.disabled')`\\n   */\\n  itemSelector: _propTypes[\\\"default\\\"].string,\\n\\n  /**\\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\\n   */\\n  alignEnd: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * Whether or not the Dropdown is visible.\\n   *\\n   * @controllable onToggle\\n   */\\n  show: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * Sets the initial show position of the Dropdown.\\n   */\\n  defaultShow: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\\n   *\\n   * ```ts static\\n   * function(\\n   *   isOpen: boolean,\\n   *   event: SyntheticEvent,\\n   * ): void\\n   * ```\\n   *\\n   * @controllable show\\n   */\\n  onToggle: _propTypes[\\\"default\\\"].func\\n};\\n\\nfunction useRefWithUpdate() {\\n  var forceUpdate = (0, _useForceUpdate[\\\"default\\\"])();\\n  var ref = (0, _react.useRef)(null);\\n  var attachRef = (0, _react.useCallback)(function (element) {\\n    ref.current = element; // ensure that a menu set triggers an update for consumers\\n\\n    forceUpdate();\\n  }, [forceUpdate]);\\n  return [ref, attachRef];\\n}\\n/**\\n * @displayName Dropdown\\n * @public\\n */\\n\\n\\nfunction Dropdown(_ref) {\\n  var drop = _ref.drop,\\n      alignEnd = _ref.alignEnd,\\n      defaultShow = _ref.defaultShow,\\n      rawShow = _ref.show,\\n      rawOnToggle = _ref.onToggle,\\n      _ref$itemSelector = _ref.itemSelector,\\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\\n      children = _ref.children;\\n\\n  var _useUncontrolledProp = (0, _uncontrollable.useUncontrolledProp)(rawShow, defaultShow, rawOnToggle),\\n      show = _useUncontrolledProp[0],\\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\\n  // the value as quickly as possible, otherwise the effect to focus the element\\n  // may run before the state value is set\\n\\n\\n  var _useRefWithUpdate = useRefWithUpdate(),\\n      menuRef = _useRefWithUpdate[0],\\n      setMenu = _useRefWithUpdate[1];\\n\\n  var menuElement = menuRef.current;\\n\\n  var _useRefWithUpdate2 = useRefWithUpdate(),\\n      toggleRef = _useRefWithUpdate2[0],\\n      setToggle = _useRefWithUpdate2[1];\\n\\n  var toggleElement = toggleRef.current;\\n  var lastShow = (0, _usePrevious[\\\"default\\\"])(show);\\n  var lastSourceEvent = (0, _react.useRef)(null);\\n  var focusInDropdown = (0, _react.useRef)(false);\\n  var toggle = (0, _react.useCallback)(function (nextShow, event) {\\n    onToggle(nextShow, event);\\n  }, [onToggle]);\\n  var context = (0, _react.useMemo)(function () {\\n    return {\\n      toggle: toggle,\\n      drop: drop,\\n      show: show,\\n      alignEnd: alignEnd,\\n      menuElement: menuElement,\\n      toggleElement: toggleElement,\\n      setMenu: setMenu,\\n      setToggle: setToggle\\n    };\\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\\n\\n  if (menuElement && lastShow && !show) {\\n    focusInDropdown.current = menuElement.contains(document.activeElement);\\n  }\\n\\n  var focusToggle = (0, _useEventCallback[\\\"default\\\"])(function () {\\n    if (toggleElement && toggleElement.focus) {\\n      toggleElement.focus();\\n    }\\n  });\\n  var maybeFocusFirst = (0, _useEventCallback[\\\"default\\\"])(function () {\\n    var type = lastSourceEvent.current;\\n    var focusType = focusFirstItemOnShow;\\n\\n    if (focusType == null) {\\n      focusType = menuRef.current && (0, _matches[\\\"default\\\"])(menuRef.current, '[role=menu]') ? 'keyboard' : false;\\n    }\\n\\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\\n      return;\\n    }\\n\\n    var first = (0, _querySelectorAll[\\\"default\\\"])(menuRef.current, itemSelector)[0];\\n    if (first && first.focus) first.focus();\\n  });\\n  (0, _react.useEffect)(function () {\\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\\n      focusInDropdown.current = false;\\n      focusToggle();\\n    } // only `show` should be changing\\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\\n  (0, _react.useEffect)(function () {\\n    lastSourceEvent.current = null;\\n  });\\n\\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\\n    if (!menuRef.current) return null;\\n    var items = (0, _querySelectorAll[\\\"default\\\"])(menuRef.current, itemSelector);\\n    var index = items.indexOf(current) + offset;\\n    index = Math.max(0, Math.min(index, items.length));\\n    return items[index];\\n  };\\n\\n  (0, _useGlobalListener[\\\"default\\\"])('keydown', function (event) {\\n    var _menuRef$current, _toggleRef$current;\\n\\n    var key = event.key;\\n    var target = event.target;\\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\\n    // in inscrutability\\n\\n    var isInput = /input|textarea/i.test(target.tagName);\\n\\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\\n      return;\\n    }\\n\\n    if (!fromMenu && !fromToggle) {\\n      return;\\n    }\\n\\n    if (!menuRef.current && key === 'Tab') {\\n      return;\\n    }\\n\\n    lastSourceEvent.current = event.type;\\n\\n    switch (key) {\\n      case 'ArrowUp':\\n        {\\n          var next = getNextFocusedChild(target, -1);\\n          if (next && next.focus) next.focus();\\n          event.preventDefault();\\n          return;\\n        }\\n\\n      case 'ArrowDown':\\n        event.preventDefault();\\n\\n        if (!show) {\\n          onToggle(true, event);\\n        } else {\\n          var _next = getNextFocusedChild(target, 1);\\n\\n          if (_next && _next.focus) _next.focus();\\n        }\\n\\n        return;\\n\\n      case 'Tab':\\n        // on keydown the target is the element being tabbed FROM, we need that\\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\\n        // On `keyup` the target is the element being tagged TO which we use to check\\n        // if focus has left the menu\\n        (0, _addEventListener[\\\"default\\\"])(document, 'keyup', function (e) {\\n          var _menuRef$current2;\\n\\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\\n            onToggle(false, event);\\n          }\\n        }, {\\n          once: true\\n        });\\n        break;\\n\\n      case 'Escape':\\n        event.preventDefault();\\n        event.stopPropagation();\\n        onToggle(false, event);\\n        break;\\n\\n      default:\\n    }\\n  });\\n  return (\\n    /*#__PURE__*/\\n    _react[\\\"default\\\"].createElement(_DropdownContext[\\\"default\\\"].Provider, {\\n      value: context\\n    }, children)\\n  );\\n}\\n\\nDropdown.displayName = 'ReactOverlaysDropdown';\\nDropdown.propTypes = propTypes;\\nDropdown.Menu = _DropdownMenu[\\\"default\\\"];\\nDropdown.Toggle = _DropdownToggle[\\\"default\\\"];\\nvar _default = Dropdown;\\nexports[\\\"default\\\"] = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_getRequireWildcardCache\",\"WeakMap\",\"cache\",\"_interopRequireDefault\",\"__esModule\",\"useRefWithUpdate\",\"forceUpdate\",\"_useForceUpdate\",\"ref\",\"_react\",\"useRef\",\"attachRef\",\"useCallback\",\"element\",\"current\",\"Dropdown\",\"_ref\",\"drop\",\"alignEnd\",\"defaultShow\",\"rawShow\",\"show\",\"rawOnToggle\",\"onToggle\",\"_ref$itemSelector\",\"itemSelector\",\"focusFirstItemOnShow\",\"children\",\"_useUncontrolledProp\",\"_uncontrollable\",\"useUncontrolledProp\",\"_useRefWithUpdate\",\"menuRef\",\"setMenu\",\"menuElement\",\"_useRefWithUpdate2\",\"toggleRef\",\"setToggle\",\"toggleElement\",\"lastShow\",\"_usePrevious\",\"lastSourceEvent\",\"focusInDropdown\",\"toggle\",\"nextShow\",\"event\",\"context\",\"useMemo\",\"contains\",\"document\",\"activeElement\",\"focusToggle\",\"_useEventCallback\",\"focus\",\"maybeFocusFirst\",\"type\",\"focusType\",\"_matches\",\"test\",\"first\",\"_querySelectorAll\",\"useEffect\",\"getNextFocusedChild\",\"offset\",\"items\",\"index\",\"indexOf\",\"Math\",\"max\",\"min\",\"length\",\"_useGlobalListener\",\"_menuRef$current\",\"_toggleRef$current\",\"key\",\"target\",\"fromMenu\",\"fromToggle\",\"isInput\",\"tagName\",\"next\",\"preventDefault\",\"_next\",\"_addEventListener\",\"e\",\"_menuRef$current2\",\"once\",\"stopPropagation\",\"createElement\",\"_DropdownContext\",\"Provider\",\"value\",\"Object\",\"defineProperty\",\"_interopRequireWildcard\",\"has\",\"get\",\"newObj\",\"hasPropertyDescriptor\",\"getOwnPropertyDescriptor\",\"hasOwnProperty\",\"call\",\"desc\",\"set\",\"_propTypes\",\"_DropdownMenu\",\"_DropdownToggle\",\"propTypes\",\"node\",\"oneOf\",\"string\",\"bool\",\"func\",\"displayName\",\"Menu\",\"Toggle\"]\n}\n"]