["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js"],"~:js","shadow$provide.module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_resolver_public=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.validateGrammar=exports.resolveGrammar=void 0;var utils_1=require(\"module$node_modules$$chevrotain$utils$lib$src$api\"),resolver_1=require(\"module$node_modules$chevrotain$lib$src$parse$grammar$resolver\"),checks_1=require(\"module$node_modules$chevrotain$lib$src$parse$grammar$checks\"),errors_public_1=require(\"module$node_modules$chevrotain$lib$src$parse$errors_public\");\nexports.resolveGrammar=function(options){options=utils_1.defaults(options,{errMsgProvider:errors_public_1.defaultGrammarResolverErrorProvider});var topRulesTable={};utils_1.forEach(options.rules,function(rule){topRulesTable[rule.name]=rule});return resolver_1.resolveGrammar(topRulesTable,options.errMsgProvider)};exports.validateGrammar=function(options){options=utils_1.defaults(options,{errMsgProvider:errors_public_1.defaultGrammarValidatorErrorProvider});return checks_1.validateGrammar(options.rules,\noptions.maxLookahead,options.tokenTypes,options.errMsgProvider,options.grammarName)}}","~:source","shadow$provide[\"module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_resolver_public\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGrammar = exports.resolveGrammar = void 0;\nvar utils_1 = require(\"@chevrotain/utils\");\nvar resolver_1 = require(\"../resolver\");\nvar checks_1 = require(\"../checks\");\nvar errors_public_1 = require(\"../../errors_public\");\nfunction resolveGrammar(options) {\n    options = utils_1.defaults(options, {\n        errMsgProvider: errors_public_1.defaultGrammarResolverErrorProvider\n    });\n    var topRulesTable = {};\n    utils_1.forEach(options.rules, function (rule) {\n        topRulesTable[rule.name] = rule;\n    });\n    return resolver_1.resolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexports.resolveGrammar = resolveGrammar;\nfunction validateGrammar(options) {\n    options = utils_1.defaults(options, {\n        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider\n    });\n    return checks_1.validateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\nexports.validateGrammar = validateGrammar;\n//# sourceMappingURL=gast_resolver_public.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$chevrotain$lib$src$parse$grammar$checks","~$module$node_modules$$chevrotain$utils$lib$src$api","~$shadow.js","~$module$node_modules$chevrotain$lib$src$parse$grammar$resolver","~$module$node_modules$chevrotain$lib$src$parse$errors_public"]],"~:properties",["^5",["resolveGrammar","__esModule","value","validateGrammar","errMsgProvider"]],"~:compiled-at",1630917515698,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_resolver_public.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,eAAR,CAA0BJ,OAAQK,CAAAA,cAAlC,CAAmD,IAAK,EACxD,KAAIC,QAAUR,OAAA,CAAQ,mDAAR,CAAd,CACIS,WAAaT,OAAA,CAAQ,+DAAR,CADjB,CAEIU,SAAWV,OAAA,CAAQ,6DAAR,CAFf,CAGIW,gBAAkBX,OAAA,CAAQ,4DAAR,CAWtBE;OAAQK,CAAAA,cAAR,CAVAA,QAAuB,CAACK,OAAD,CAAU,CAC7BA,OAAA,CAAUJ,OAAQK,CAAAA,QAAR,CAAiBD,OAAjB,CAA0B,CAChCE,eAAgBH,eAAgBI,CAAAA,mCADA,CAA1B,CAGV,KAAIC,cAAgB,EACpBR,QAAQS,CAAAA,OAAR,CAAgBL,OAAQM,CAAAA,KAAxB,CAA+B,QAAS,CAACC,IAAD,CAAO,CAC3CH,aAAA,CAAcG,IAAKC,CAAAA,IAAnB,CAAA,CAA2BD,IADgB,CAA/C,CAGA,OAAOV,WAAWF,CAAAA,cAAX,CAA0BS,aAA1B,CAAyCJ,OAAQE,CAAAA,cAAjD,CARsB,CAiBjCZ,QAAQI,CAAAA,eAAR,CANAA,QAAwB,CAACM,OAAD,CAAU,CAC9BA,OAAA,CAAUJ,OAAQK,CAAAA,QAAR,CAAiBD,OAAjB,CAA0B,CAChCE,eAAgBH,eAAgBU,CAAAA,oCADA,CAA1B,CAGV,OAAOX,SAASJ,CAAAA,eAAT,CAAyBM,OAAQM,CAAAA,KAAjC;AAAwCN,OAAQU,CAAAA,YAAhD,CAA8DV,OAAQW,CAAAA,UAAtE,CAAkFX,OAAQE,CAAAA,cAA1F,CAA0GF,OAAQY,CAAAA,WAAlH,CAJuB,CAnByG;\",\n\"sources\":[\"node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_resolver_public\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.validateGrammar = exports.resolveGrammar = void 0;\\nvar utils_1 = require(\\\"@chevrotain/utils\\\");\\nvar resolver_1 = require(\\\"../resolver\\\");\\nvar checks_1 = require(\\\"../checks\\\");\\nvar errors_public_1 = require(\\\"../../errors_public\\\");\\nfunction resolveGrammar(options) {\\n    options = utils_1.defaults(options, {\\n        errMsgProvider: errors_public_1.defaultGrammarResolverErrorProvider\\n    });\\n    var topRulesTable = {};\\n    utils_1.forEach(options.rules, function (rule) {\\n        topRulesTable[rule.name] = rule;\\n    });\\n    return resolver_1.resolveGrammar(topRulesTable, options.errMsgProvider);\\n}\\nexports.resolveGrammar = resolveGrammar;\\nfunction validateGrammar(options) {\\n    options = utils_1.defaults(options, {\\n        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider\\n    });\\n    return checks_1.validateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\\n}\\nexports.validateGrammar = validateGrammar;\\n//# sourceMappingURL=gast_resolver_public.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"validateGrammar\",\"resolveGrammar\",\"utils_1\",\"resolver_1\",\"checks_1\",\"errors_public_1\",\"options\",\"defaults\",\"errMsgProvider\",\"defaultGrammarResolverErrorProvider\",\"topRulesTable\",\"forEach\",\"rules\",\"rule\",\"name\",\"defaultGrammarValidatorErrorProvider\",\"maxLookahead\",\"tokenTypes\",\"grammarName\"]\n}\n"]