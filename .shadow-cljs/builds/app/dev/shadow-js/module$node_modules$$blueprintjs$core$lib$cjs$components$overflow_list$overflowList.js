["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/components/overflow-list/overflowList.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$components$overflow_list$overflowList=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.OverflowList=exports.OverflowDirection=void 0;var tslib_1=require(\"module$node_modules$tslib$tslib\"),classnames_1=tslib_1.__importDefault(require(\"module$node_modules$classnames$index\")),React=tslib_1.__importStar(require(\"module$node_modules$react$index\")),boundary_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$boundary\"),\nClasses=tslib_1.__importStar(require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$classes\")),errors_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$errors\"),props_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$props\"),utils_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$utils$index\"),resizeSensor_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$components$resize_sensor$resizeSensor\"),OverflowDirection;(function(OverflowDirection){OverflowDirection[OverflowDirection.NONE=\n0]=\"NONE\";OverflowDirection[OverflowDirection.GROW=1]=\"GROW\";OverflowDirection[OverflowDirection.SHRINK=2]=\"SHRINK\"})(OverflowDirection=exports.OverflowDirection||(exports.OverflowDirection={}));global=function(_super){function OverflowList(){var _this=null!==_super&&_super.apply(this,arguments)||this;_this.state={direction:OverflowDirection.NONE,lastOverflowCount:0,overflow:[],visible:_this.props.items};_this.previousWidths=new Map;_this.spacer=null;_this.resize=function(entries){var growing=entries.some(function(entry){var previousWidth=\n_this.previousWidths.get(entry.target)||0;return entry.contentRect.width>previousWidth});_this.repartition(growing);entries.forEach(function(entry){return _this.previousWidths.set(entry.target,entry.contentRect.width)})};return _this}tslib_1.__extends(OverflowList,_super);OverflowList.ofType=function(){return OverflowList};OverflowList.prototype.componentDidMount=function(){this.repartition(!1)};OverflowList.prototype.shouldComponentUpdate=function(_nextProps,nextState){return!(this.state!==nextState&&\nutils_1.shallowCompareKeys(this.state,nextState))};OverflowList.prototype.componentDidUpdate=function(prevProps,prevState){var _a,_b;prevProps.observeParents!==this.props.observeParents&&console.warn(errors_1.OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED);prevProps.collapseFrom===this.props.collapseFrom&&prevProps.items===this.props.items&&prevProps.minVisibleItems===this.props.minVisibleItems&&prevProps.overflowRenderer===this.props.overflowRenderer&&prevProps.alwaysRenderOverflow===this.props.alwaysRenderOverflow&&\nprevProps.visibleItemRenderer===this.props.visibleItemRenderer||this.setState({direction:OverflowDirection.GROW,lastOverflowCount:0,overflow:[],visible:this.props.items});utils_1.shallowCompareKeys(prevState,this.state)||this.repartition(!1);var _c=this.state;prevProps=_c.direction;var overflow=_c.overflow;_c=_c.lastOverflowCount;prevProps===OverflowDirection.NONE&&prevProps!==prevState.direction&&overflow.length!==_c&&(null===(_b=(_a=this.props).onOverflow)||void 0===_b?void 0:_b.call(_a,overflow))};\nOverflowList.prototype.render=function(){var _this=this,_a=this.props,className=_a.className,collapseFrom=_a.collapseFrom,observeParents=_a.observeParents,style=_a.style,_b=_a.tagName;_b=void 0===_b?\"div\":_b;_a=_a.visibleItemRenderer;var overflow=this.maybeRenderOverflow();className=React.createElement(_b,{className:classnames_1.default(Classes.OVERFLOW_LIST,className),style},collapseFrom===boundary_1.Boundary.START?overflow:null,this.state.visible.map(_a),collapseFrom===boundary_1.Boundary.END?overflow:\nnull,React.createElement(\"div\",{className:Classes.OVERFLOW_LIST_SPACER,ref:function(ref){return _this.spacer=ref}}));return React.createElement(resizeSensor_1.ResizeSensor,{onResize:this.resize,observeParents},className)};OverflowList.prototype.maybeRenderOverflow=function(){var overflow=this.state.overflow;return 0!==overflow.length||this.props.alwaysRenderOverflow?this.props.overflowRenderer(overflow):null};OverflowList.prototype.repartition=function(growing){var _this=this;null!=this.spacer&&(growing?\nthis.setState(function(state){return{direction:OverflowDirection.GROW,lastOverflowCount:state.direction===OverflowDirection.NONE?state.overflow.length:state.lastOverflowCount,overflow:[],visible:_this.props.items}}):.9>this.spacer.getBoundingClientRect().width?this.setState(function(state){if(state.visible.length<=_this.props.minVisibleItems)return null;var collapseFromStart=_this.props.collapseFrom===boundary_1.Boundary.START,visible=state.visible.slice(),next=collapseFromStart?visible.shift():visible.pop();\nif(void 0===next)return null;collapseFromStart=collapseFromStart?tslib_1.__spreadArrays(state.overflow,[next]):tslib_1.__spreadArrays([next],state.overflow);return{direction:state.direction===OverflowDirection.NONE?OverflowDirection.SHRINK:state.direction,overflow:collapseFromStart,visible}}):this.setState({direction:OverflowDirection.NONE}))};OverflowList.displayName=props_1.DISPLAYNAME_PREFIX+\".OverflowList\";OverflowList.defaultProps={alwaysRenderOverflow:!1,collapseFrom:boundary_1.Boundary.START,\nminVisibleItems:0};return OverflowList}(React.Component);exports.OverflowList=global}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$components$overflow_list$overflowList\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OverflowList = exports.OverflowDirection = void 0;\nvar tslib_1 = require(\"tslib\");\nvar classnames_1 = tslib_1.__importDefault(require(\"classnames\"));\nvar React = tslib_1.__importStar(require(\"react\"));\nvar boundary_1 = require(\"../../common/boundary\");\nvar Classes = tslib_1.__importStar(require(\"../../common/classes\"));\nvar errors_1 = require(\"../../common/errors\");\nvar props_1 = require(\"../../common/props\");\nvar utils_1 = require(\"../../common/utils\");\nvar resizeSensor_1 = require(\"../resize-sensor/resizeSensor\");\n/** @internal - do not expose this type */\nvar OverflowDirection;\n(function (OverflowDirection) {\n    OverflowDirection[OverflowDirection[\"NONE\"] = 0] = \"NONE\";\n    OverflowDirection[OverflowDirection[\"GROW\"] = 1] = \"GROW\";\n    OverflowDirection[OverflowDirection[\"SHRINK\"] = 2] = \"SHRINK\";\n})(OverflowDirection = exports.OverflowDirection || (exports.OverflowDirection = {}));\nvar OverflowList = /** @class */ (function (_super) {\n    tslib_1.__extends(OverflowList, _super);\n    function OverflowList() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            direction: OverflowDirection.NONE,\n            lastOverflowCount: 0,\n            overflow: [],\n            visible: _this.props.items,\n        };\n        /** A cache containing the widths of all elements being observed to detect growing/shrinking */\n        _this.previousWidths = new Map();\n        _this.spacer = null;\n        _this.resize = function (entries) {\n            // if any parent is growing, assume we have more room than before\n            var growing = entries.some(function (entry) {\n                var previousWidth = _this.previousWidths.get(entry.target) || 0;\n                return entry.contentRect.width > previousWidth;\n            });\n            _this.repartition(growing);\n            entries.forEach(function (entry) { return _this.previousWidths.set(entry.target, entry.contentRect.width); });\n        };\n        return _this;\n    }\n    OverflowList.ofType = function () {\n        return OverflowList;\n    };\n    OverflowList.prototype.componentDidMount = function () {\n        this.repartition(false);\n    };\n    OverflowList.prototype.shouldComponentUpdate = function (_nextProps, nextState) {\n        // We want this component to always re-render, even when props haven't changed, so that\n        // changes in the renderers' behavior can be reflected.\n        // The following statement prevents re-rendering only in the case where the state changes\n        // identity (i.e. setState was called), but the state is still the same when\n        // shallow-compared to the previous state.\n        return !(this.state !== nextState && utils_1.shallowCompareKeys(this.state, nextState));\n    };\n    OverflowList.prototype.componentDidUpdate = function (prevProps, prevState) {\n        var _a, _b;\n        if (prevProps.observeParents !== this.props.observeParents) {\n            console.warn(errors_1.OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED);\n        }\n        if (prevProps.collapseFrom !== this.props.collapseFrom ||\n            prevProps.items !== this.props.items ||\n            prevProps.minVisibleItems !== this.props.minVisibleItems ||\n            prevProps.overflowRenderer !== this.props.overflowRenderer ||\n            prevProps.alwaysRenderOverflow !== this.props.alwaysRenderOverflow ||\n            prevProps.visibleItemRenderer !== this.props.visibleItemRenderer) {\n            // reset visible state if the above props change.\n            this.setState({\n                direction: OverflowDirection.GROW,\n                lastOverflowCount: 0,\n                overflow: [],\n                visible: this.props.items,\n            });\n        }\n        if (!utils_1.shallowCompareKeys(prevState, this.state)) {\n            this.repartition(false);\n        }\n        var _c = this.state, direction = _c.direction, overflow = _c.overflow, lastOverflowCount = _c.lastOverflowCount;\n        if (\n        // if a resize operation has just completed (transition to NONE)\n        direction === OverflowDirection.NONE &&\n            direction !== prevState.direction &&\n            overflow.length !== lastOverflowCount) {\n            (_b = (_a = this.props).onOverflow) === null || _b === void 0 ? void 0 : _b.call(_a, overflow);\n        }\n    };\n    OverflowList.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, collapseFrom = _a.collapseFrom, observeParents = _a.observeParents, style = _a.style, _b = _a.tagName, tagName = _b === void 0 ? \"div\" : _b, visibleItemRenderer = _a.visibleItemRenderer;\n        var overflow = this.maybeRenderOverflow();\n        var list = React.createElement(tagName, {\n            className: classnames_1.default(Classes.OVERFLOW_LIST, className),\n            style: style,\n        }, collapseFrom === boundary_1.Boundary.START ? overflow : null, this.state.visible.map(visibleItemRenderer), collapseFrom === boundary_1.Boundary.END ? overflow : null, React.createElement(\"div\", { className: Classes.OVERFLOW_LIST_SPACER, ref: function (ref) { return (_this.spacer = ref); } }));\n        return (React.createElement(resizeSensor_1.ResizeSensor, { onResize: this.resize, observeParents: observeParents }, list));\n    };\n    OverflowList.prototype.maybeRenderOverflow = function () {\n        var overflow = this.state.overflow;\n        if (overflow.length === 0 && !this.props.alwaysRenderOverflow) {\n            return null;\n        }\n        return this.props.overflowRenderer(overflow);\n    };\n    OverflowList.prototype.repartition = function (growing) {\n        var _this = this;\n        if (this.spacer == null) {\n            return;\n        }\n        if (growing) {\n            this.setState(function (state) { return ({\n                direction: OverflowDirection.GROW,\n                // store last overflow if this is the beginning of a resize (for check in componentDidUpdate).\n                lastOverflowCount: state.direction === OverflowDirection.NONE ? state.overflow.length : state.lastOverflowCount,\n                overflow: [],\n                visible: _this.props.items,\n            }); });\n        }\n        else if (this.spacer.getBoundingClientRect().width < 0.9) {\n            // spacer has flex-shrink and width 1px so if it's much smaller then we know to shrink\n            this.setState(function (state) {\n                if (state.visible.length <= _this.props.minVisibleItems) {\n                    return null;\n                }\n                var collapseFromStart = _this.props.collapseFrom === boundary_1.Boundary.START;\n                var visible = state.visible.slice();\n                var next = collapseFromStart ? visible.shift() : visible.pop();\n                if (next === undefined) {\n                    return null;\n                }\n                var overflow = collapseFromStart ? tslib_1.__spreadArrays(state.overflow, [next]) : tslib_1.__spreadArrays([next], state.overflow);\n                return {\n                    // set SHRINK mode unless a GROW is already in progress.\n                    // GROW shows all items then shrinks until it settles, so we\n                    // preserve the fact that the original trigger was a GROW.\n                    direction: state.direction === OverflowDirection.NONE ? OverflowDirection.SHRINK : state.direction,\n                    overflow: overflow,\n                    visible: visible,\n                };\n            });\n        }\n        else {\n            // repartition complete!\n            this.setState({ direction: OverflowDirection.NONE });\n        }\n    };\n    OverflowList.displayName = props_1.DISPLAYNAME_PREFIX + \".OverflowList\";\n    OverflowList.defaultProps = {\n        alwaysRenderOverflow: false,\n        collapseFrom: boundary_1.Boundary.START,\n        minVisibleItems: 0,\n    };\n    return OverflowList;\n}(React.Component));\nexports.OverflowList = OverflowList;\n//# sourceMappingURL=overflowList.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$blueprintjs$core$lib$cjs$common$boundary","~$module$node_modules$tslib$tslib","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$blueprintjs$core$lib$cjs$common$utils$index","~$module$node_modules$$blueprintjs$core$lib$cjs$common$props","~$module$node_modules$classnames$index","~$module$node_modules$$blueprintjs$core$lib$cjs$common$errors","~$module$node_modules$$blueprintjs$core$lib$cjs$components$resize_sensor$resizeSensor","~$module$node_modules$$blueprintjs$core$lib$cjs$common$classes"]],"~:properties",["^5",["lastOverflowCount","OverflowDirection","className","observeParents","displayName","__esModule","ofType","minVisibleItems","OverflowList","style","value","visible","previousWidths","direction","componentDidUpdate","alwaysRenderOverflow","componentDidMount","spacer","defaultProps","shouldComponentUpdate","overflow","render","state","ref","resize","maybeRenderOverflow","repartition","collapseFrom","onResize"]],"~:compiled-at",1630405505154,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$components$overflow_list$overflowList.js\",\n\"lineCount\":11,\n\"mappings\":\"AAAAA,cAAA,CAAA,mFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBhJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,YAAR,CAAuBJ,OAAQK,CAAAA,iBAA/B,CAAmD,IAAK,EACxD,KAAIC,QAAUR,OAAA,CAAQ,iCAAR,CAAd,CACIS,aAAeD,OAAQE,CAAAA,eAAR,CAAwBV,OAAA,CAAQ,sCAAR,CAAxB,CADnB,CAEIW,MAAQH,OAAQI,CAAAA,YAAR,CAAqBZ,OAAA,CAAQ,iCAAR,CAArB,CAFZ,CAGIa,WAAab,OAAA,CAAQ,+DAAR,CAHjB;AAIIc,QAAUN,OAAQI,CAAAA,YAAR,CAAqBZ,OAAA,CAAQ,8DAAR,CAArB,CAJd,CAKIe,SAAWf,OAAA,CAAQ,6DAAR,CALf,CAMIgB,QAAUhB,OAAA,CAAQ,4DAAR,CANd,CAOIiB,QAAUjB,OAAA,CAAQ,kEAAR,CAPd,CAQIkB,eAAiBlB,OAAA,CAAQ,qFAAR,CARrB,CAUIO,iBACH,UAAS,CAACA,iBAAD,CAAoB,CAC1BA,iBAAA,CAAkBA,iBAAA,CAAA,IAAlB;AAA8C,CAA9C,CAAA,CAAmD,MACnDA,kBAAA,CAAkBA,iBAAA,CAAA,IAAlB,CAA8C,CAA9C,CAAA,CAAmD,MACnDA,kBAAA,CAAkBA,iBAAA,CAAA,MAAlB,CAAgD,CAAhD,CAAA,CAAqD,QAH3B,CAA7B,CAAD,CAIGA,iBAJH,CAIuBL,OAAQK,CAAAA,iBAJ/B,GAIqDL,OAAQK,CAAAA,iBAJ7D,CAIiF,EAJjF,EAKID,OAAAA,CAA8B,QAAS,CAACa,MAAD,CAAS,CAEhDb,QAASA,aAAY,EAAG,CACpB,IAAIc,MAAmB,IAAnBA,GAAQD,MAARC,EAA2BD,MAAOE,CAAAA,KAAP,CAAa,IAAb,CAAmBC,SAAnB,CAA3BF,EAA4D,IAChEA,MAAMG,CAAAA,KAAN,CAAc,CACVC,UAAWjB,iBAAkBkB,CAAAA,IADnB,CAEVC,kBAAmB,CAFT,CAGVC,SAAU,EAHA,CAIVC,QAASR,KAAMS,CAAAA,KAAMC,CAAAA,KAJX,CAOdV,MAAMW,CAAAA,cAAN,CAAuB,IAAIC,GAC3BZ,MAAMa,CAAAA,MAAN,CAAe,IACfb,MAAMc,CAAAA,MAAN,CAAeC,QAAS,CAACC,OAAD,CAAU,CAE9B,IAAIC,QAAUD,OAAQE,CAAAA,IAAR,CAAa,QAAS,CAACC,KAAD,CAAQ,CACxC,IAAIC;AAAgBpB,KAAMW,CAAAA,cAAeU,CAAAA,GAArB,CAAyBF,KAAMG,CAAAA,MAA/B,CAAhBF,EAA0D,CAC9D,OAAOD,MAAMI,CAAAA,WAAYC,CAAAA,KAAzB,CAAiCJ,aAFO,CAA9B,CAIdpB,MAAMyB,CAAAA,WAAN,CAAkBR,OAAlB,CACAD,QAAQU,CAAAA,OAAR,CAAgB,QAAS,CAACP,KAAD,CAAQ,CAAE,MAAOnB,MAAMW,CAAAA,cAAegB,CAAAA,GAArB,CAAyBR,KAAMG,CAAAA,MAA/B,CAAuCH,KAAMI,CAAAA,WAAYC,CAAAA,KAAzD,CAAT,CAAjC,CAP8B,CASlC,OAAOxB,MApBa,CADxBZ,OAAQwC,CAAAA,SAAR,CAAkB1C,YAAlB,CAAgCa,MAAhC,CAuBAb,aAAa2C,CAAAA,MAAb,CAAsBC,QAAS,EAAG,CAC9B,MAAO5C,aADuB,CAGlCA,aAAa6C,CAAAA,SAAUC,CAAAA,iBAAvB,CAA2CC,QAAS,EAAG,CACnD,IAAKR,CAAAA,WAAL,CAAiB,CAAA,CAAjB,CADmD,CAGvDvC,aAAa6C,CAAAA,SAAUG,CAAAA,qBAAvB,CAA+CC,QAAS,CAACC,UAAD,CAAaC,SAAb,CAAwB,CAM5E,MAAO,EAAE,IAAKlC,CAAAA,KAAP,GAAiBkC,SAAjB;AAA8BxC,OAAQyC,CAAAA,kBAAR,CAA2B,IAAKnC,CAAAA,KAAhC,CAAuCkC,SAAvC,CAA9B,CANqE,CAQhFnD,aAAa6C,CAAAA,SAAUQ,CAAAA,kBAAvB,CAA4CC,QAAS,CAACC,SAAD,CAAYC,SAAZ,CAAuB,CAAA,IACpEC,EADoE,CAChEC,EACJH,UAAUI,CAAAA,cAAd,GAAiC,IAAKpC,CAAAA,KAAMoC,CAAAA,cAA5C,EACIC,OAAQC,CAAAA,IAAR,CAAapD,QAASqD,CAAAA,qCAAtB,CAEAP,UAAUQ,CAAAA,YAAd,GAA+B,IAAKxC,CAAAA,KAAMwC,CAAAA,YAA1C,EACIR,SAAU/B,CAAAA,KADd,GACwB,IAAKD,CAAAA,KAAMC,CAAAA,KADnC,EAEI+B,SAAUS,CAAAA,eAFd,GAEkC,IAAKzC,CAAAA,KAAMyC,CAAAA,eAF7C,EAGIT,SAAUU,CAAAA,gBAHd,GAGmC,IAAK1C,CAAAA,KAAM0C,CAAAA,gBAH9C,EAIIV,SAAUW,CAAAA,oBAJd,GAIuC,IAAK3C,CAAAA,KAAM2C,CAAAA,oBAJlD;AAKIX,SAAUY,CAAAA,mBALd,GAKsC,IAAK5C,CAAAA,KAAM4C,CAAAA,mBALjD,EAOI,IAAKC,CAAAA,QAAL,CAAc,CACVlD,UAAWjB,iBAAkBoE,CAAAA,IADnB,CAEVjD,kBAAmB,CAFT,CAGVC,SAAU,EAHA,CAIVC,QAAS,IAAKC,CAAAA,KAAMC,CAAAA,KAJV,CAAd,CAOCb,QAAQyC,CAAAA,kBAAR,CAA2BI,SAA3B,CAAsC,IAAKvC,CAAAA,KAA3C,CAAL,EACI,IAAKsB,CAAAA,WAAL,CAAiB,CAAA,CAAjB,CApBoE,KAsBpE+B,GAAK,IAAKrD,CAAAA,KAAOC,UAAAA,CAAYoD,EAAGpD,CAAAA,SAtBoC,KAsBzBG,SAAWiD,EAAGjD,CAAAA,QAAUD,GAAAA,CAAoBkD,EAAGlD,CAAAA,iBAG9FF,UAFA,GAEcjB,iBAAkBkB,CAAAA,IAFhC,EAGID,SAHJ,GAGkBsC,SAAUtC,CAAAA,SAH5B,EAIIG,QAASkD,CAAAA,MAJb,GAIwBnD,EAJxB,GAK4C,IAAxC,IAACsC,EAAD,CAAwBc,CAAjBf,EAAiBe,CAAZ,IAAKjD,CAAAA,KAAOiD,EAAAA,UAAxB,GAAuD,IAAK,EAA5D,GAAgDd,EAAhD,CAAgE,IAAK,EAArE,CAAyEA,EAAGe,CAAAA,IAAH,CAAQhB,EAAR,CAAYpC,QAAZ,CAL7E,CAvBwE,CA+B5ErB;YAAa6C,CAAAA,SAAU6B,CAAAA,MAAvB,CAAgCC,QAAS,EAAG,CACxC,IAAI7D,MAAQ,IAAZ,CACI2C,GAAK,IAAKlC,CAAAA,KADd,CACqBqD,UAAYnB,EAAGmB,CAAAA,SADpC,CAC+Cb,aAAeN,EAAGM,CAAAA,YADjE,CAC+EJ,eAAiBF,EAAGE,CAAAA,cADnG,CACmHkB,MAAQpB,EAAGoB,CAAAA,KAD9H,CACqInB,GAAKD,EAAGqB,CAAAA,OAASA,GAAAA,CAAiB,IAAK,EAAZ,GAAApB,EAAA,CAAgB,KAAhB,CAAwBA,EAAIS,GAAAA,CAAsBV,EAAGU,CAAAA,mBACrN,KAAI9C,SAAW,IAAK0D,CAAAA,mBAAL,EACXC,UAAAA,CAAO3E,KAAM4E,CAAAA,aAAN,CAAoBH,EAApB,CAA6B,CACpCF,UAAWzE,YAAa+E,CAAAA,OAAb,CAAqB1E,OAAQ2E,CAAAA,aAA7B,CAA4CP,SAA5C,CADyB,CAE7BC,KAF6B,CAA7B,CAGRd,YAAA,GAAiBxD,UAAW6E,CAAAA,QAASC,CAAAA,KAArC,CAA6ChE,QAA7C,CAAwD,IAHhD,CAGsD,IAAKJ,CAAAA,KAAMK,CAAAA,OAAQgE,CAAAA,GAAnB,CAAuBnB,EAAvB,CAHtD,CAGmGJ,YAAA,GAAiBxD,UAAW6E,CAAAA,QAASG,CAAAA,GAArC,CAA2ClE,QAA3C;AAAsD,IAHzJ,CAG+JhB,KAAM4E,CAAAA,aAAN,CAAoB,KAApB,CAA2B,CAAEL,UAAWpE,OAAQgF,CAAAA,oBAArB,CAA2CC,IAAKA,QAAS,CAACA,GAAD,CAAM,CAAE,MAAQ3E,MAAMa,CAAAA,MAAd,CAAuB8D,GAAzB,CAA/D,CAA3B,CAH/J,CAIX,OAAQpF,MAAM4E,CAAAA,aAAN,CAAoBrE,cAAe8E,CAAAA,YAAnC,CAAiD,CAAEC,SAAU,IAAK/D,CAAAA,MAAjB,CAAyC+B,cAAzC,CAAjD,CAA4GqB,SAA5G,CARgC,CAU5ChF,aAAa6C,CAAAA,SAAUkC,CAAAA,mBAAvB,CAA6Ca,QAAS,EAAG,CACrD,IAAIvE,SAAW,IAAKJ,CAAAA,KAAMI,CAAAA,QAC1B,OAAwB,EAAxB,GAAIA,QAASkD,CAAAA,MAAb,EAA8B,IAAKhD,CAAAA,KAAM2C,CAAAA,oBAAzC,CAGO,IAAK3C,CAAAA,KAAM0C,CAAAA,gBAAX,CAA4B5C,QAA5B,CAHP,CACW,IAH0C,CAOzDrB,aAAa6C,CAAAA,SAAUN,CAAAA,WAAvB,CAAqCsD,QAAS,CAAC9D,OAAD,CAAU,CACpD,IAAIjB,MAAQ,IACO,KAAnB,EAAI,IAAKa,CAAAA,MAAT,GAGII,OAAJ;AACI,IAAKqC,CAAAA,QAAL,CAAc,QAAS,CAACnD,KAAD,CAAQ,CAAE,MAAQ,CACrCC,UAAWjB,iBAAkBoE,CAAAA,IADQ,CAGrCjD,kBAAmBH,KAAMC,CAAAA,SAAN,GAAoBjB,iBAAkBkB,CAAAA,IAAtC,CAA6CF,KAAMI,CAAAA,QAASkD,CAAAA,MAA5D,CAAqEtD,KAAMG,CAAAA,iBAHzD,CAIrCC,SAAU,EAJ2B,CAKrCC,QAASR,KAAMS,CAAAA,KAAMC,CAAAA,KALgB,CAAV,CAA/B,CADJ,CASqD,EAAhD,CAAI,IAAKG,CAAAA,MAAOmE,CAAAA,qBAAZ,EAAoCxD,CAAAA,KAAxC,CAED,IAAK8B,CAAAA,QAAL,CAAc,QAAS,CAACnD,KAAD,CAAQ,CAC3B,GAAIA,KAAMK,CAAAA,OAAQiD,CAAAA,MAAlB,EAA4BzD,KAAMS,CAAAA,KAAMyC,CAAAA,eAAxC,CACI,MAAO,KAEX,KAAI+B,kBAAoBjF,KAAMS,CAAAA,KAAMwC,CAAAA,YAAhCgC,GAAiDxF,UAAW6E,CAAAA,QAASC,CAAAA,KAAzE,CACI/D,QAAUL,KAAMK,CAAAA,OAAQ0E,CAAAA,KAAd,EADd,CAEIC,KAAOF,iBAAA,CAAoBzE,OAAQ4E,CAAAA,KAAR,EAApB,CAAsC5E,OAAQ6E,CAAAA,GAAR,EACjD;GAAaC,IAAAA,EAAb,GAAIH,IAAJ,CACI,MAAO,KAEP5E,kBAAAA,CAAW0E,iBAAA,CAAoB7F,OAAQmG,CAAAA,cAAR,CAAuBpF,KAAMI,CAAAA,QAA7B,CAAuC,CAAC4E,IAAD,CAAvC,CAApB,CAAqE/F,OAAQmG,CAAAA,cAAR,CAAuB,CAACJ,IAAD,CAAvB,CAA+BhF,KAAMI,CAAAA,QAArC,CACpF,OAAO,CAIHH,UAAWD,KAAMC,CAAAA,SAAN,GAAoBjB,iBAAkBkB,CAAAA,IAAtC,CAA6ClB,iBAAkBqG,CAAAA,MAA/D,CAAwErF,KAAMC,CAAAA,SAJtF,CAKHG,SAAUA,iBALP,CAMMC,OANN,CAXoB,CAA/B,CAFC,CAyBD,IAAK8C,CAAAA,QAAL,CAAc,CAAElD,UAAWjB,iBAAkBkB,CAAAA,IAA/B,CAAd,CArCJ,CAFoD,CA0CxDnB,aAAauG,CAAAA,WAAb,CAA2B7F,OAAQ8F,CAAAA,kBAAnC,CAAwD,eACxDxG,aAAayG,CAAAA,YAAb,CAA4B,CACxBvC,qBAAsB,CAAA,CADE,CAExBH,aAAcxD,UAAW6E,CAAAA,QAASC,CAAAA,KAFV;AAGxBrB,gBAAiB,CAHO,CAK5B,OAAOhE,aAtIyC,CAAlB,CAuIhCK,KAAMqG,CAAAA,SAvI0B,CAwIlC9G,QAAQI,CAAAA,YAAR,CAAuBA,MA3KyH;\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/components/overflow-list/overflowList.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$components$overflow_list$overflowList\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/*\\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.OverflowList = exports.OverflowDirection = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar classnames_1 = tslib_1.__importDefault(require(\\\"classnames\\\"));\\nvar React = tslib_1.__importStar(require(\\\"react\\\"));\\nvar boundary_1 = require(\\\"../../common/boundary\\\");\\nvar Classes = tslib_1.__importStar(require(\\\"../../common/classes\\\"));\\nvar errors_1 = require(\\\"../../common/errors\\\");\\nvar props_1 = require(\\\"../../common/props\\\");\\nvar utils_1 = require(\\\"../../common/utils\\\");\\nvar resizeSensor_1 = require(\\\"../resize-sensor/resizeSensor\\\");\\n/** @internal - do not expose this type */\\nvar OverflowDirection;\\n(function (OverflowDirection) {\\n    OverflowDirection[OverflowDirection[\\\"NONE\\\"] = 0] = \\\"NONE\\\";\\n    OverflowDirection[OverflowDirection[\\\"GROW\\\"] = 1] = \\\"GROW\\\";\\n    OverflowDirection[OverflowDirection[\\\"SHRINK\\\"] = 2] = \\\"SHRINK\\\";\\n})(OverflowDirection = exports.OverflowDirection || (exports.OverflowDirection = {}));\\nvar OverflowList = /** @class */ (function (_super) {\\n    tslib_1.__extends(OverflowList, _super);\\n    function OverflowList() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this.state = {\\n            direction: OverflowDirection.NONE,\\n            lastOverflowCount: 0,\\n            overflow: [],\\n            visible: _this.props.items,\\n        };\\n        /** A cache containing the widths of all elements being observed to detect growing/shrinking */\\n        _this.previousWidths = new Map();\\n        _this.spacer = null;\\n        _this.resize = function (entries) {\\n            // if any parent is growing, assume we have more room than before\\n            var growing = entries.some(function (entry) {\\n                var previousWidth = _this.previousWidths.get(entry.target) || 0;\\n                return entry.contentRect.width > previousWidth;\\n            });\\n            _this.repartition(growing);\\n            entries.forEach(function (entry) { return _this.previousWidths.set(entry.target, entry.contentRect.width); });\\n        };\\n        return _this;\\n    }\\n    OverflowList.ofType = function () {\\n        return OverflowList;\\n    };\\n    OverflowList.prototype.componentDidMount = function () {\\n        this.repartition(false);\\n    };\\n    OverflowList.prototype.shouldComponentUpdate = function (_nextProps, nextState) {\\n        // We want this component to always re-render, even when props haven't changed, so that\\n        // changes in the renderers' behavior can be reflected.\\n        // The following statement prevents re-rendering only in the case where the state changes\\n        // identity (i.e. setState was called), but the state is still the same when\\n        // shallow-compared to the previous state.\\n        return !(this.state !== nextState && utils_1.shallowCompareKeys(this.state, nextState));\\n    };\\n    OverflowList.prototype.componentDidUpdate = function (prevProps, prevState) {\\n        var _a, _b;\\n        if (prevProps.observeParents !== this.props.observeParents) {\\n            console.warn(errors_1.OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED);\\n        }\\n        if (prevProps.collapseFrom !== this.props.collapseFrom ||\\n            prevProps.items !== this.props.items ||\\n            prevProps.minVisibleItems !== this.props.minVisibleItems ||\\n            prevProps.overflowRenderer !== this.props.overflowRenderer ||\\n            prevProps.alwaysRenderOverflow !== this.props.alwaysRenderOverflow ||\\n            prevProps.visibleItemRenderer !== this.props.visibleItemRenderer) {\\n            // reset visible state if the above props change.\\n            this.setState({\\n                direction: OverflowDirection.GROW,\\n                lastOverflowCount: 0,\\n                overflow: [],\\n                visible: this.props.items,\\n            });\\n        }\\n        if (!utils_1.shallowCompareKeys(prevState, this.state)) {\\n            this.repartition(false);\\n        }\\n        var _c = this.state, direction = _c.direction, overflow = _c.overflow, lastOverflowCount = _c.lastOverflowCount;\\n        if (\\n        // if a resize operation has just completed (transition to NONE)\\n        direction === OverflowDirection.NONE &&\\n            direction !== prevState.direction &&\\n            overflow.length !== lastOverflowCount) {\\n            (_b = (_a = this.props).onOverflow) === null || _b === void 0 ? void 0 : _b.call(_a, overflow);\\n        }\\n    };\\n    OverflowList.prototype.render = function () {\\n        var _this = this;\\n        var _a = this.props, className = _a.className, collapseFrom = _a.collapseFrom, observeParents = _a.observeParents, style = _a.style, _b = _a.tagName, tagName = _b === void 0 ? \\\"div\\\" : _b, visibleItemRenderer = _a.visibleItemRenderer;\\n        var overflow = this.maybeRenderOverflow();\\n        var list = React.createElement(tagName, {\\n            className: classnames_1.default(Classes.OVERFLOW_LIST, className),\\n            style: style,\\n        }, collapseFrom === boundary_1.Boundary.START ? overflow : null, this.state.visible.map(visibleItemRenderer), collapseFrom === boundary_1.Boundary.END ? overflow : null, React.createElement(\\\"div\\\", { className: Classes.OVERFLOW_LIST_SPACER, ref: function (ref) { return (_this.spacer = ref); } }));\\n        return (React.createElement(resizeSensor_1.ResizeSensor, { onResize: this.resize, observeParents: observeParents }, list));\\n    };\\n    OverflowList.prototype.maybeRenderOverflow = function () {\\n        var overflow = this.state.overflow;\\n        if (overflow.length === 0 && !this.props.alwaysRenderOverflow) {\\n            return null;\\n        }\\n        return this.props.overflowRenderer(overflow);\\n    };\\n    OverflowList.prototype.repartition = function (growing) {\\n        var _this = this;\\n        if (this.spacer == null) {\\n            return;\\n        }\\n        if (growing) {\\n            this.setState(function (state) { return ({\\n                direction: OverflowDirection.GROW,\\n                // store last overflow if this is the beginning of a resize (for check in componentDidUpdate).\\n                lastOverflowCount: state.direction === OverflowDirection.NONE ? state.overflow.length : state.lastOverflowCount,\\n                overflow: [],\\n                visible: _this.props.items,\\n            }); });\\n        }\\n        else if (this.spacer.getBoundingClientRect().width < 0.9) {\\n            // spacer has flex-shrink and width 1px so if it's much smaller then we know to shrink\\n            this.setState(function (state) {\\n                if (state.visible.length <= _this.props.minVisibleItems) {\\n                    return null;\\n                }\\n                var collapseFromStart = _this.props.collapseFrom === boundary_1.Boundary.START;\\n                var visible = state.visible.slice();\\n                var next = collapseFromStart ? visible.shift() : visible.pop();\\n                if (next === undefined) {\\n                    return null;\\n                }\\n                var overflow = collapseFromStart ? tslib_1.__spreadArrays(state.overflow, [next]) : tslib_1.__spreadArrays([next], state.overflow);\\n                return {\\n                    // set SHRINK mode unless a GROW is already in progress.\\n                    // GROW shows all items then shrinks until it settles, so we\\n                    // preserve the fact that the original trigger was a GROW.\\n                    direction: state.direction === OverflowDirection.NONE ? OverflowDirection.SHRINK : state.direction,\\n                    overflow: overflow,\\n                    visible: visible,\\n                };\\n            });\\n        }\\n        else {\\n            // repartition complete!\\n            this.setState({ direction: OverflowDirection.NONE });\\n        }\\n    };\\n    OverflowList.displayName = props_1.DISPLAYNAME_PREFIX + \\\".OverflowList\\\";\\n    OverflowList.defaultProps = {\\n        alwaysRenderOverflow: false,\\n        collapseFrom: boundary_1.Boundary.START,\\n        minVisibleItems: 0,\\n    };\\n    return OverflowList;\\n}(React.Component));\\nexports.OverflowList = OverflowList;\\n//# sourceMappingURL=overflowList.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"OverflowList\",\"OverflowDirection\",\"tslib_1\",\"classnames_1\",\"__importDefault\",\"React\",\"__importStar\",\"boundary_1\",\"Classes\",\"errors_1\",\"props_1\",\"utils_1\",\"resizeSensor_1\",\"_super\",\"_this\",\"apply\",\"arguments\",\"state\",\"direction\",\"NONE\",\"lastOverflowCount\",\"overflow\",\"visible\",\"props\",\"items\",\"previousWidths\",\"Map\",\"spacer\",\"resize\",\"_this.resize\",\"entries\",\"growing\",\"some\",\"entry\",\"previousWidth\",\"get\",\"target\",\"contentRect\",\"width\",\"repartition\",\"forEach\",\"set\",\"__extends\",\"ofType\",\"OverflowList.ofType\",\"prototype\",\"componentDidMount\",\"OverflowList.prototype.componentDidMount\",\"shouldComponentUpdate\",\"OverflowList.prototype.shouldComponentUpdate\",\"_nextProps\",\"nextState\",\"shallowCompareKeys\",\"componentDidUpdate\",\"OverflowList.prototype.componentDidUpdate\",\"prevProps\",\"prevState\",\"_a\",\"_b\",\"observeParents\",\"console\",\"warn\",\"OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED\",\"collapseFrom\",\"minVisibleItems\",\"overflowRenderer\",\"alwaysRenderOverflow\",\"visibleItemRenderer\",\"setState\",\"GROW\",\"_c\",\"length\",\"onOverflow\",\"call\",\"render\",\"OverflowList.prototype.render\",\"className\",\"style\",\"tagName\",\"maybeRenderOverflow\",\"list\",\"createElement\",\"default\",\"OVERFLOW_LIST\",\"Boundary\",\"START\",\"map\",\"END\",\"OVERFLOW_LIST_SPACER\",\"ref\",\"ResizeSensor\",\"onResize\",\"OverflowList.prototype.maybeRenderOverflow\",\"OverflowList.prototype.repartition\",\"getBoundingClientRect\",\"collapseFromStart\",\"slice\",\"next\",\"shift\",\"pop\",\"undefined\",\"__spreadArrays\",\"SHRINK\",\"displayName\",\"DISPLAYNAME_PREFIX\",\"defaultProps\",\"Component\"]\n}\n"]