["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/shaders/LuminosityShader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$shaders$LuminosityShader=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.LuminosityShader=void 0;exports.LuminosityShader={uniforms:{tDiffuse:{value:null}},vertexShader:\"varying vec2 vUv;\\nvoid main() {\\n\\tvUv \\x3d uv;\\n\\tgl_Position \\x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"#include \\x3ccommon\\x3e\\nuniform sampler2D tDiffuse;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texel \\x3d texture2D( tDiffuse, vUv );\\n\\tfloat l \\x3d linearToRelativeLuminance( texel.rgb );\\n\\tgl_FragColor \\x3d vec4( l, l, l, texel.w );\\n}\"}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$shaders$LuminosityShader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LuminosityShader = void 0;\n\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\nvar LuminosityShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['#include <common>', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tfloat l = linearToRelativeLuminance( texel.rgb );', '\tgl_FragColor = vec4( l, l, l, texel.w );', '}'].join('\\n')\n};\nexports.LuminosityShader = LuminosityShader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["fragmentShader","__esModule","tDiffuse","LuminosityShader","vertexShader","value","uniforms"]],"~:compiled-at",1630917515510,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$shaders$LuminosityShader.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CAA2B,IAAK,EAehCJ,QAAQI,CAAAA,gBAAR,CATuBA,CACrBC,SAAU,CACRC,SAAU,CACRH,MAAO,IADC,CADF,CADWC,CAMrBG,aAAiJ,qIAN5HH,CAOrBI,eAA2P,iPAPtOJ,CAZ+F;\",\n\"sources\":[\"node_modules/three-stdlib/shaders/LuminosityShader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$shaders$LuminosityShader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.LuminosityShader = void 0;\\n\\n/**\\n * Luminosity\\n * http://en.wikipedia.org/wiki/Luminosity\\n */\\nvar LuminosityShader = {\\n  uniforms: {\\n    tDiffuse: {\\n      value: null\\n    }\\n  },\\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\\tvUv = uv;', '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\\\n'),\\n  fragmentShader: ['#include <common>', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', '\\tvec4 texel = texture2D( tDiffuse, vUv );', '\\tfloat l = linearToRelativeLuminance( texel.rgb );', '\\tgl_FragColor = vec4( l, l, l, texel.w );', '}'].join('\\\\n')\\n};\\nexports.LuminosityShader = LuminosityShader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"LuminosityShader\",\"uniforms\",\"tDiffuse\",\"vertexShader\",\"fragmentShader\"]\n}\n"]