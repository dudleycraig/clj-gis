["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@blueprintjs/core/lib/cjs/components/panel-stack2/panelStack2.js"],"~:js","shadow$provide.module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelStack2=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.PanelStack2=void 0;var tslib_1=require(\"module$node_modules$tslib$tslib\"),classnames_1=tslib_1.__importDefault(require(\"module$node_modules$classnames$index\")),React=tslib_1.__importStar(require(\"module$node_modules$react$index\")),react_transition_group_1=require(\"module$node_modules$react_transition_group$index\"),\ncommon_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$common$index\"),panelView2_1=require(\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelView2\");exports.PanelStack2=function(props){var _a$jscomp$0=props.renderActivePanelOnly,renderActivePanelOnly=void 0===_a$jscomp$0?!0:_a$jscomp$0;_a$jscomp$0=props.showPanelHeader;var showPanelHeader=void 0===_a$jscomp$0?!0:_a$jscomp$0,propsStack=props.stack,_c=React.useState(\"push\");_a$jscomp$0=_c[0];var setDirection=_c[1];\n_c=React.useState(void 0!==props.initialPanel?[props.initialPanel]:[]);var localStack=_c[0],setLocalStack=_c[1],stack=React.useMemo(function(){return null!=propsStack?propsStack.slice().reverse():localStack},[localStack,propsStack]),stackLength=React.useRef(stack.length);React.useEffect(function(){stack.length!==stackLength.current&&setDirection(0>stack.length-stackLength.current?\"pop\":\"push\");stackLength.current=stack.length},[stack]);var handlePanelOpen=React.useCallback(function(panel){var _a;\nnull===(_a=props.onOpen)||void 0===_a?void 0:_a.call(props,panel);null==props.stack&&setLocalStack(function(prevStack){return tslib_1.__spreadArrays([panel],prevStack)})},[props.onOpen]),handlePanelClose=React.useCallback(function(panel){var _a;stack[0]!==panel||1>=stack.length||(null===(_a=props.onClose)||void 0===_a?void 0:_a.call(props,panel),null==props.stack&&setLocalStack(function(prevStack){return prevStack.slice(1)}))},[stack,props.onClose]);if(0===stack.length)return null;_c=(renderActivePanelOnly?\n[stack[0]]:stack).map(function(panel,index){var layer=stack.length-index;return React.createElement(react_transition_group_1.CSSTransition,{classNames:common_1.Classes.PANEL_STACK2,key:renderActivePanelOnly?stack.length:layer,timeout:400},React.createElement(panelView2_1.PanelView2,{onClose:handlePanelClose,onOpen:handlePanelOpen,panel,previousPanel:stack[index+1],showHeader:showPanelHeader}))}).reverse();_a$jscomp$0=classnames_1.default(common_1.Classes.PANEL_STACK2,common_1.Classes.PANEL_STACK2+\n\"-\"+_a$jscomp$0,props.className);return React.createElement(react_transition_group_1.TransitionGroup,{className:_a$jscomp$0,component:\"div\"},_c)};exports.PanelStack2.displayName=common_1.DISPLAYNAME_PREFIX+\".PanelStack2\"}","~:source","shadow$provide[\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelStack2\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PanelStack2 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar classnames_1 = tslib_1.__importDefault(require(\"classnames\"));\nvar React = tslib_1.__importStar(require(\"react\"));\nvar react_transition_group_1 = require(\"react-transition-group\");\nvar common_1 = require(\"../../common\");\nvar panelView2_1 = require(\"./panelView2\");\n/**\n * @template T type union of all possible panels in this stack\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar PanelStack2 = function (props) {\n    var _a = props.renderActivePanelOnly, renderActivePanelOnly = _a === void 0 ? true : _a, _b = props.showPanelHeader, showPanelHeader = _b === void 0 ? true : _b, propsStack = props.stack;\n    var _c = React.useState(\"push\"), direction = _c[0], setDirection = _c[1];\n    var _d = React.useState(props.initialPanel !== undefined ? [props.initialPanel] : []), localStack = _d[0], setLocalStack = _d[1];\n    var stack = React.useMemo(function () { return (propsStack != null ? propsStack.slice().reverse() : localStack); }, [\n        localStack,\n        propsStack,\n    ]);\n    var stackLength = React.useRef(stack.length);\n    React.useEffect(function () {\n        if (stack.length !== stackLength.current) {\n            // Adjust the direction in case the stack size has changed, controlled or uncontrolled\n            setDirection(stack.length - stackLength.current < 0 ? \"pop\" : \"push\");\n        }\n        stackLength.current = stack.length;\n    }, [stack]);\n    var handlePanelOpen = React.useCallback(function (panel) {\n        var _a;\n        (_a = props.onOpen) === null || _a === void 0 ? void 0 : _a.call(props, panel);\n        if (props.stack == null) {\n            setLocalStack(function (prevStack) { return tslib_1.__spreadArrays([panel], prevStack); });\n        }\n    }, [props.onOpen]);\n    var handlePanelClose = React.useCallback(function (panel) {\n        var _a;\n        // only remove this panel if it is at the top and not the only one.\n        if (stack[0] !== panel || stack.length <= 1) {\n            return;\n        }\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props, panel);\n        if (props.stack == null) {\n            setLocalStack(function (prevStack) { return prevStack.slice(1); });\n        }\n    }, [stack, props.onClose]);\n    // early return, after all hooks are called\n    if (stack.length === 0) {\n        return null;\n    }\n    var panelsToRender = renderActivePanelOnly ? [stack[0]] : stack;\n    var panels = panelsToRender\n        .map(function (panel, index) {\n        // With renderActivePanelOnly={false} we would keep all the CSSTransitions rendered,\n        // therefore they would not trigger the \"enter\" transition event as they were entered.\n        // To force the enter event, we want to change the key, but stack.length is not enough\n        // and a single panel should not rerender as long as it's hidden.\n        // This key contains two parts: first one, stack.length - index is constant (and unique) for each panel,\n        // second one, active changes only when the panel becomes or stops being active.\n        var layer = stack.length - index;\n        var key = renderActivePanelOnly ? stack.length : layer;\n        return (React.createElement(react_transition_group_1.CSSTransition, { classNames: common_1.Classes.PANEL_STACK2, key: key, timeout: 400 },\n            React.createElement(panelView2_1.PanelView2, { onClose: handlePanelClose, onOpen: handlePanelOpen, panel: panel, previousPanel: stack[index + 1], showHeader: showPanelHeader })));\n    })\n        .reverse();\n    var classes = classnames_1.default(common_1.Classes.PANEL_STACK2, common_1.Classes.PANEL_STACK2 + \"-\" + direction, props.className);\n    return (React.createElement(react_transition_group_1.TransitionGroup, { className: classes, component: \"div\" }, panels));\n};\nexports.PanelStack2 = PanelStack2;\nexports.PanelStack2.displayName = common_1.DISPLAYNAME_PREFIX + \".PanelStack2\";\n//# sourceMappingURL=panelStack2.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelView2","~$module$node_modules$react_transition_group$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$classnames$index","~$module$node_modules$$blueprintjs$core$lib$cjs$common$index"]],"~:properties",["^5",["classNames","previousPanel","onClose","PanelStack2","className","displayName","key","component","__esModule","value","timeout","current","showHeader","panel","onOpen"]],"~:compiled-at",1630405505204,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelStack2.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@blueprintjs/core/lib/cjs/components/panel-stack2/panelStack2.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$blueprintjs$core$lib$cjs$components$panel_stack2$panelStack2\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/*\\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.PanelStack2 = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar classnames_1 = tslib_1.__importDefault(require(\\\"classnames\\\"));\\nvar React = tslib_1.__importStar(require(\\\"react\\\"));\\nvar react_transition_group_1 = require(\\\"react-transition-group\\\");\\nvar common_1 = require(\\\"../../common\\\");\\nvar panelView2_1 = require(\\\"./panelView2\\\");\\n/**\\n * @template T type union of all possible panels in this stack\\n */\\n// eslint-disable-next-line @typescript-eslint/ban-types\\nvar PanelStack2 = function (props) {\\n    var _a = props.renderActivePanelOnly, renderActivePanelOnly = _a === void 0 ? true : _a, _b = props.showPanelHeader, showPanelHeader = _b === void 0 ? true : _b, propsStack = props.stack;\\n    var _c = React.useState(\\\"push\\\"), direction = _c[0], setDirection = _c[1];\\n    var _d = React.useState(props.initialPanel !== undefined ? [props.initialPanel] : []), localStack = _d[0], setLocalStack = _d[1];\\n    var stack = React.useMemo(function () { return (propsStack != null ? propsStack.slice().reverse() : localStack); }, [\\n        localStack,\\n        propsStack,\\n    ]);\\n    var stackLength = React.useRef(stack.length);\\n    React.useEffect(function () {\\n        if (stack.length !== stackLength.current) {\\n            // Adjust the direction in case the stack size has changed, controlled or uncontrolled\\n            setDirection(stack.length - stackLength.current < 0 ? \\\"pop\\\" : \\\"push\\\");\\n        }\\n        stackLength.current = stack.length;\\n    }, [stack]);\\n    var handlePanelOpen = React.useCallback(function (panel) {\\n        var _a;\\n        (_a = props.onOpen) === null || _a === void 0 ? void 0 : _a.call(props, panel);\\n        if (props.stack == null) {\\n            setLocalStack(function (prevStack) { return tslib_1.__spreadArrays([panel], prevStack); });\\n        }\\n    }, [props.onOpen]);\\n    var handlePanelClose = React.useCallback(function (panel) {\\n        var _a;\\n        // only remove this panel if it is at the top and not the only one.\\n        if (stack[0] !== panel || stack.length <= 1) {\\n            return;\\n        }\\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props, panel);\\n        if (props.stack == null) {\\n            setLocalStack(function (prevStack) { return prevStack.slice(1); });\\n        }\\n    }, [stack, props.onClose]);\\n    // early return, after all hooks are called\\n    if (stack.length === 0) {\\n        return null;\\n    }\\n    var panelsToRender = renderActivePanelOnly ? [stack[0]] : stack;\\n    var panels = panelsToRender\\n        .map(function (panel, index) {\\n        // With renderActivePanelOnly={false} we would keep all the CSSTransitions rendered,\\n        // therefore they would not trigger the \\\"enter\\\" transition event as they were entered.\\n        // To force the enter event, we want to change the key, but stack.length is not enough\\n        // and a single panel should not rerender as long as it's hidden.\\n        // This key contains two parts: first one, stack.length - index is constant (and unique) for each panel,\\n        // second one, active changes only when the panel becomes or stops being active.\\n        var layer = stack.length - index;\\n        var key = renderActivePanelOnly ? stack.length : layer;\\n        return (React.createElement(react_transition_group_1.CSSTransition, { classNames: common_1.Classes.PANEL_STACK2, key: key, timeout: 400 },\\n            React.createElement(panelView2_1.PanelView2, { onClose: handlePanelClose, onOpen: handlePanelOpen, panel: panel, previousPanel: stack[index + 1], showHeader: showPanelHeader })));\\n    })\\n        .reverse();\\n    var classes = classnames_1.default(common_1.Classes.PANEL_STACK2, common_1.Classes.PANEL_STACK2 + \\\"-\\\" + direction, props.className);\\n    return (React.createElement(react_transition_group_1.TransitionGroup, { className: classes, component: \\\"div\\\" }, panels));\\n};\\nexports.PanelStack2 = PanelStack2;\\nexports.PanelStack2.displayName = common_1.DISPLAYNAME_PREFIX + \\\".PanelStack2\\\";\\n//# sourceMappingURL=panelStack2.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"PanelStack2\",\"tslib_1\",\"classnames_1\",\"__importDefault\",\"React\",\"__importStar\",\"react_transition_group_1\",\"common_1\",\"panelView2_1\",\"props\",\"_a\",\"renderActivePanelOnly\",\"_b\",\"showPanelHeader\",\"propsStack\",\"stack\",\"_c\",\"useState\",\"direction\",\"setDirection\",\"_d\",\"undefined\",\"initialPanel\",\"localStack\",\"setLocalStack\",\"useMemo\",\"slice\",\"reverse\",\"stackLength\",\"useRef\",\"length\",\"useEffect\",\"current\",\"handlePanelOpen\",\"useCallback\",\"panel\",\"onOpen\",\"call\",\"prevStack\",\"__spreadArrays\",\"handlePanelClose\",\"onClose\",\"panels\",\"map\",\"panelsToRender\",\"index\",\"layer\",\"createElement\",\"CSSTransition\",\"classNames\",\"Classes\",\"PANEL_STACK2\",\"key\",\"timeout\",\"PanelView2\",\"previousPanel\",\"showHeader\",\"classes\",\"default\",\"className\",\"TransitionGroup\",\"component\",\"displayName\",\"DISPLAYNAME_PREFIX\"]\n}\n"]