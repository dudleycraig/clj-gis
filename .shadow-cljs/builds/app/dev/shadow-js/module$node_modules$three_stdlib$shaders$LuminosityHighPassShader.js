["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/shaders/LuminosityHighPassShader.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$shaders$LuminosityHighPassShader=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.LuminosityHighPassShader=void 0;global={shaderID:\"luminosityHighPass\",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new (require(\"module$node_modules$three$build$three_module\").Color)(0)},defaultOpacity:{value:0}},vertexShader:\"varying vec2 vUv;\\nvoid main() {\\n\\tvUv \\x3d uv;\\n\\tgl_Position \\x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",\nfragmentShader:\"uniform sampler2D tDiffuse;\\nuniform vec3 defaultColor;\\nuniform float defaultOpacity;\\nuniform float luminosityThreshold;\\nuniform float smoothWidth;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texel \\x3d texture2D( tDiffuse, vUv );\\n\\tvec3 luma \\x3d vec3( 0.299, 0.587, 0.114 );\\n\\tfloat v \\x3d dot( texel.xyz, luma );\\n\\tvec4 outputColor \\x3d vec4( defaultColor.rgb, defaultOpacity );\\n\\tfloat alpha \\x3d smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\\n\\tgl_FragColor \\x3d mix( outputColor, texel, alpha );\\n}\"};\nexports.LuminosityHighPassShader=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$shaders$LuminosityHighPassShader\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LuminosityHighPassShader = void 0;\n\nvar _three = require(\"three\");\n\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\nvar LuminosityHighPassShader = {\n  shaderID: 'luminosityHighPass',\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    luminosityThreshold: {\n      value: 1.0\n    },\n    smoothWidth: {\n      value: 1.0\n    },\n    defaultColor: {\n      value: new _three.Color(0x000000)\n    },\n    defaultOpacity: {\n      value: 0.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform vec3 defaultColor;', 'uniform float defaultOpacity;', 'uniform float luminosityThreshold;', 'uniform float smoothWidth;', 'varying vec2 vUv;', 'void main() {', '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tvec3 luma = vec3( 0.299, 0.587, 0.114 );', '\tfloat v = dot( texel.xyz, luma );', '\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );', '\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );', '\tgl_FragColor = mix( outputColor, texel, alpha );', '}'].join('\\n')\n};\nexports.LuminosityHighPassShader = LuminosityHighPassShader;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js"]],"~:properties",["^5",["fragmentShader","luminosityThreshold","LuminosityHighPassShader","__esModule","tDiffuse","vertexShader","value","defaultOpacity","defaultColor","uniforms","smoothWidth","shaderID"]],"~:compiled-at",1630917515513,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$shaders$LuminosityHighPassShader.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,iEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,wBAAR,CAAmC,IAAK,EAQpCA,OAAAA,CAA2B,CAC7BC,SAAU,oBADmB,CAE7BC,SAAU,CACRC,SAAU,CACRJ,MAAO,IADC,CADF,CAIRK,oBAAqB,CACnBL,MAAO,CADY,CAJb,CAORM,YAAa,CACXN,MAAO,CADI,CAPL,CAURO,aAAc,CACZP,MAAO,KAnBAL,OAAAa,CAAQ,8CAARA,CAmBWC,CAAAA,KAAX,EAAiB,CAAjB,CADK,CAVN,CAaRC,eAAgB,CACdV,MAAO,CADO,CAbR,CAFmB,CAmB7BW,aAAiJ,qIAnBpH;AAoB7BC,eAA0iB,0hBApB7gB,CAsB/Bf;OAAQI,CAAAA,wBAAR,CAAmCA,MApC2F;\",\n\"sources\":[\"node_modules/three-stdlib/shaders/LuminosityHighPassShader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$shaders$LuminosityHighPassShader\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.LuminosityHighPassShader = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\n/**\\n * Luminosity\\n * http://en.wikipedia.org/wiki/Luminosity\\n */\\nvar LuminosityHighPassShader = {\\n  shaderID: 'luminosityHighPass',\\n  uniforms: {\\n    tDiffuse: {\\n      value: null\\n    },\\n    luminosityThreshold: {\\n      value: 1.0\\n    },\\n    smoothWidth: {\\n      value: 1.0\\n    },\\n    defaultColor: {\\n      value: new _three.Color(0x000000)\\n    },\\n    defaultOpacity: {\\n      value: 0.0\\n    }\\n  },\\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\\tvUv = uv;', '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\\\n'),\\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform vec3 defaultColor;', 'uniform float defaultOpacity;', 'uniform float luminosityThreshold;', 'uniform float smoothWidth;', 'varying vec2 vUv;', 'void main() {', '\\tvec4 texel = texture2D( tDiffuse, vUv );', '\\tvec3 luma = vec3( 0.299, 0.587, 0.114 );', '\\tfloat v = dot( texel.xyz, luma );', '\\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );', '\\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );', '\\tgl_FragColor = mix( outputColor, texel, alpha );', '}'].join('\\\\n')\\n};\\nexports.LuminosityHighPassShader = LuminosityHighPassShader;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"LuminosityHighPassShader\",\"shaderID\",\"uniforms\",\"tDiffuse\",\"luminosityThreshold\",\"smoothWidth\",\"defaultColor\",\"_three\",\"Color\",\"defaultOpacity\",\"vertexShader\",\"fragmentShader\"]\n}\n"]