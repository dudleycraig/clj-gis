["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/misc/MD2CharacterComplex.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$misc$MD2CharacterComplex=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.MD2CharacterComplex=void 0;var _three=require(\"module$node_modules$three$build$three_module\"),_MD2Loader=require(\"module$node_modules$three_stdlib$loaders$MD2Loader\"),_MorphBlendMesh=require(\"module$node_modules$three_stdlib$misc$MorphBlendMesh\");exports.MD2CharacterComplex=function(){function loadTextures(baseUrl,textureUrls){for(var textureLoader=\nnew _three.TextureLoader,textures=[],i=0;i<textureUrls.length;i++)textures[i]=textureLoader.load(baseUrl+textureUrls[i],checkLoadingComplete),textures[i].mapping=_three.UVMapping,textures[i].name=textureUrls[i],textures[i].encoding=_three.sRGBEncoding;return textures}function createPart(geometry,skinMap){var materialWireframe=new _three.MeshLambertMaterial({color:16755200,wireframe:!0,morphTargets:!0,morphNormals:!0});skinMap=new _three.MeshLambertMaterial({color:16777215,wireframe:!1,map:skinMap,\nmorphTargets:!0,morphNormals:!0});geometry=new _MorphBlendMesh.MorphBlendMesh(geometry,skinMap);geometry.rotation.y=-Math.PI/2;geometry.materialTexture=skinMap;geometry.materialWireframe=materialWireframe;geometry.autoCreateAnimations(scope.animationFPS);return geometry}function checkLoadingComplete(){--scope.loadCounter;if(0===scope.loadCounter)scope.onLoadComplete()}function exponentialEaseOut(k){return 1===k?1:-Math.pow(2,-10*k)+1}var scope=this;this.scale=1;this.animationFPS=6;this.transitionFrames=\n15;this.maxSpeed=275;this.maxReverseSpeed=-275;this.frontDecceleration=this.backAcceleration=this.frontAcceleration=600;this.angularSpeed=2.5;this.root=new _three.Object3D;this.controls=this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.currentSkin=void 0;this.onLoadComplete=function(){};this.meshes=[];this.animations={};this.bodyOrientation=this.speed=this.loadCounter=0;this.walkSpeed=this.maxSpeed;this.crouchSpeed=.5*this.maxSpeed;this.oldAnimation=this.activeAnimation=\nnull;this.enableShadows=function(enable){for(var i=0;i<this.meshes.length;i++)this.meshes[i].castShadow=enable,this.meshes[i].receiveShadow=enable};this.setVisible=function(enable){for(var i=0;i<this.meshes.length;i++)this.meshes[i].visible=enable,this.meshes[i].visible=enable};this.shareParts=function(original){this.animations=original.animations;this.walkSpeed=original.walkSpeed;this.crouchSpeed=original.crouchSpeed;this.skinsBody=original.skinsBody;this.skinsWeapon=original.skinsWeapon;var mesh=\ncreatePart(original.meshBody.geometry,this.skinsBody[0]);mesh.scale.set(this.scale,this.scale,this.scale);this.root.position.y=original.root.position.y;this.root.add(mesh);this.meshBody=mesh;this.meshes.push(mesh);for(mesh=0;mesh<original.weapons.length;mesh++){var meshWeapon=createPart(original.weapons[mesh].geometry,this.skinsWeapon[mesh]);meshWeapon.scale.set(this.scale,this.scale,this.scale);meshWeapon.visible=!1;meshWeapon.name=original.weapons[mesh].name;this.root.add(meshWeapon);this.meshWeapon=\nthis.weapons[mesh]=meshWeapon;this.meshes.push(meshWeapon)}};this.loadParts=function(config){this.animations=config.animations;this.walkSpeed=config.walkSpeed;this.crouchSpeed=config.crouchSpeed;this.loadCounter=2*config.weapons.length+config.skins.length+1;for(var weaponsTextures=[],i=0;i<config.weapons.length;i++)weaponsTextures[i]=config.weapons[i][1];this.skinsBody=loadTextures(config.baseUrl+\"skins/\",config.skins);this.skinsWeapon=loadTextures(config.baseUrl+\"skins/\",weaponsTextures);weaponsTextures=\nnew _MD2Loader.MD2Loader;weaponsTextures.load(config.baseUrl+config.body,function(geo){var boundingBox=new _three.Box3;boundingBox.setFromBufferAttribute(geo.attributes.position);scope.root.position.y=-scope.scale*boundingBox.min.y;geo=createPart(geo,scope.skinsBody[0]);geo.scale.set(scope.scale,scope.scale,scope.scale);scope.root.add(geo);scope.meshBody=geo;scope.meshes.push(geo);checkLoadingComplete()});i=function(index,name){return function(geo){geo=createPart(geo,scope.skinsWeapon[index]);geo.scale.set(scope.scale,\nscope.scale,scope.scale);geo.visible=!1;geo.name=name;scope.root.add(geo);scope.weapons[index]=geo;scope.meshWeapon=geo;scope.meshes.push(geo);checkLoadingComplete()}};for(var _i=0;_i<config.weapons.length;_i++)weaponsTextures.load(config.baseUrl+config.weapons[_i][0],i(_i,config.weapons[_i][0]))};this.setPlaybackRate=function(rate){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/rate);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/rate)};this.setWireframe=\nfunction(wireframeEnabled){wireframeEnabled?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))};this.setSkin=function(index){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[index],this.currentSkin=index)};\nthis.setWeapon=function(index){for(var i=0;i<this.weapons.length;i++)this.weapons[i].visible=!1;if(index=this.weapons[index])index.visible=!0,this.meshWeapon=index,this.activeAnimation&&(index.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation)))};this.setAnimation=function(animationName){animationName!==this.activeAnimation&&animationName&&(this.meshBody&&(this.meshBody.setAnimationWeight(animationName,0),\nthis.meshBody.playAnimation(animationName),this.oldAnimation=this.activeAnimation,this.activeAnimation=animationName,this.blendCounter=this.transitionFrames),this.meshWeapon&&(this.meshWeapon.setAnimationWeight(animationName,0),this.meshWeapon.playAnimation(animationName)))};this.update=function(delta){this.controls&&this.updateMovementModel(delta);this.animations&&(this.updateBehaviors(),this.updateAnimations(delta))};this.updateAnimations=function(delta){var mix=1;0<this.blendCounter&&(mix=(this.transitionFrames-\nthis.blendCounter)/this.transitionFrames,--this.blendCounter);this.meshBody&&(this.meshBody.update(delta),this.meshBody.setAnimationWeight(this.activeAnimation,mix),this.meshBody.setAnimationWeight(this.oldAnimation,1-mix));this.meshWeapon&&(this.meshWeapon.update(delta),this.meshWeapon.setAnimationWeight(this.activeAnimation,mix),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-mix))};this.updateBehaviors=function(){var controls=this.controls,animations=this.animations;if(controls.crouch){var moveAnimation=\nanimations.crouchMove;var idleAnimation=animations.crouchIdle}else moveAnimation=animations.move,idleAnimation=animations.idle;controls.jump&&(idleAnimation=moveAnimation=animations.jump);controls.attack&&(idleAnimation=controls.crouch?moveAnimation=animations.crouchAttack:moveAnimation=animations.attack);(controls.moveForward||controls.moveBackward||controls.moveLeft||controls.moveRight)&&this.activeAnimation!==moveAnimation&&this.setAnimation(moveAnimation);Math.abs(this.speed)<.2*this.maxSpeed&&\n!(controls.moveLeft||controls.moveRight||controls.moveForward||controls.moveBackward)&&this.activeAnimation!==idleAnimation&&this.setAnimation(idleAnimation);controls.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation)));controls.moveBackward&&(this.meshBody&&\n(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)))};this.updateMovementModel=function(delta){var controls=this.controls;this.maxSpeed=controls.crouch?this.crouchSpeed:this.walkSpeed;this.maxReverseSpeed=-this.maxSpeed;controls.moveForward&&(this.speed=_three.MathUtils.clamp(this.speed+\ndelta*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));controls.moveBackward&&(this.speed=_three.MathUtils.clamp(this.speed-delta*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));controls.moveLeft&&(this.bodyOrientation+=delta*this.angularSpeed,this.speed=_three.MathUtils.clamp(this.speed+1*delta*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));controls.moveRight&&(this.bodyOrientation-=delta*this.angularSpeed,this.speed=_three.MathUtils.clamp(this.speed+1*delta*this.frontAcceleration,\nthis.maxReverseSpeed,this.maxSpeed));controls.moveForward||controls.moveBackward||(0<this.speed?(controls=exponentialEaseOut(this.speed/this.maxSpeed),this.speed=_three.MathUtils.clamp(this.speed-controls*delta*this.frontDecceleration,0,this.maxSpeed)):(controls=exponentialEaseOut(this.speed/this.maxReverseSpeed),this.speed=_three.MathUtils.clamp(this.speed+controls*delta*this.backAcceleration,this.maxReverseSpeed,0)));delta*=this.speed;this.root.position.x+=Math.sin(this.bodyOrientation)*delta;this.root.position.z+=\nMath.cos(this.bodyOrientation)*delta;this.root.rotation.y=this.bodyOrientation}}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$misc$MD2CharacterComplex\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MD2CharacterComplex = void 0;\n\nvar _three = require(\"three\");\n\nvar _MD2Loader = require(\"../loaders/MD2Loader.js\");\n\nvar _MorphBlendMesh = require(\"./MorphBlendMesh.js\");\n\nvar MD2CharacterComplex = function MD2CharacterComplex() {\n  var scope = this;\n  this.scale = 1; // animation parameters\n\n  this.animationFPS = 6;\n  this.transitionFrames = 15; // movement model parameters\n\n  this.maxSpeed = 275;\n  this.maxReverseSpeed = -275;\n  this.frontAcceleration = 600;\n  this.backAcceleration = 600;\n  this.frontDecceleration = 600;\n  this.angularSpeed = 2.5; // rig\n\n  this.root = new _three.Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.controls = null; // skins\n\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.currentSkin = undefined; //\n\n  this.onLoadComplete = function () {}; // internals\n\n\n  this.meshes = [];\n  this.animations = {};\n  this.loadCounter = 0; // internal movement control variables\n\n  this.speed = 0;\n  this.bodyOrientation = 0;\n  this.walkSpeed = this.maxSpeed;\n  this.crouchSpeed = this.maxSpeed * 0.5; // internal animation parameters\n\n  this.activeAnimation = null;\n  this.oldAnimation = null; // API\n\n  this.enableShadows = function (enable) {\n    for (var i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].castShadow = enable;\n      this.meshes[i].receiveShadow = enable;\n    }\n  };\n\n  this.setVisible = function (enable) {\n    for (var i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].visible = enable;\n      this.meshes[i].visible = enable;\n    }\n  };\n\n  this.shareParts = function (original) {\n    this.animations = original.animations;\n    this.walkSpeed = original.walkSpeed;\n    this.crouchSpeed = original.crouchSpeed;\n    this.skinsBody = original.skinsBody;\n    this.skinsWeapon = original.skinsWeapon; // BODY\n\n    var mesh = createPart(original.meshBody.geometry, this.skinsBody[0]);\n    mesh.scale.set(this.scale, this.scale, this.scale);\n    this.root.position.y = original.root.position.y;\n    this.root.add(mesh);\n    this.meshBody = mesh;\n    this.meshes.push(mesh); // WEAPONS\n\n    for (var i = 0; i < original.weapons.length; i++) {\n      var meshWeapon = createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\n      meshWeapon.scale.set(this.scale, this.scale, this.scale);\n      meshWeapon.visible = false;\n      meshWeapon.name = original.weapons[i].name;\n      this.root.add(meshWeapon);\n      this.weapons[i] = meshWeapon;\n      this.meshWeapon = meshWeapon;\n      this.meshes.push(meshWeapon);\n    }\n  };\n\n  this.loadParts = function (config) {\n    this.animations = config.animations;\n    this.walkSpeed = config.walkSpeed;\n    this.crouchSpeed = config.crouchSpeed;\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n\n    for (var i = 0; i < config.weapons.length; i++) {\n      weaponsTextures[i] = config.weapons[i][1];\n    } // SKINS\n\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new _MD2Loader.MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new _three.Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshes.push(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function generateCallback(index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        scope.meshes.push(mesh);\n        checkLoadingComplete();\n      };\n    };\n\n    for (var _i = 0; _i < config.weapons.length; _i++) {\n      loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n    }\n  };\n\n  this.setPlaybackRate = function (rate) {\n    if (this.meshBody) this.meshBody.duration = this.meshBody.baseDuration / rate;\n    if (this.meshWeapon) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\n  };\n\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n      this.currentSkin = index;\n    }\n  };\n\n  this.setWeapon = function (index) {\n    for (var i = 0; i < this.weapons.length; i++) {\n      this.weapons[i].visible = false;\n    }\n\n    var activeWeapon = this.weapons[index];\n\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n\n      if (this.activeAnimation) {\n        activeWeapon.playAnimation(this.activeAnimation);\n        this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\n      }\n    }\n  };\n\n  this.setAnimation = function (animationName) {\n    if (animationName === this.activeAnimation || !animationName) return;\n\n    if (this.meshBody) {\n      this.meshBody.setAnimationWeight(animationName, 0);\n      this.meshBody.playAnimation(animationName);\n      this.oldAnimation = this.activeAnimation;\n      this.activeAnimation = animationName;\n      this.blendCounter = this.transitionFrames;\n    }\n\n    if (this.meshWeapon) {\n      this.meshWeapon.setAnimationWeight(animationName, 0);\n      this.meshWeapon.playAnimation(animationName);\n    }\n  };\n\n  this.update = function (delta) {\n    if (this.controls) this.updateMovementModel(delta);\n\n    if (this.animations) {\n      this.updateBehaviors();\n      this.updateAnimations(delta);\n    }\n  };\n\n  this.updateAnimations = function (delta) {\n    var mix = 1;\n\n    if (this.blendCounter > 0) {\n      mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\n      this.blendCounter -= 1;\n    }\n\n    if (this.meshBody) {\n      this.meshBody.update(delta);\n      this.meshBody.setAnimationWeight(this.activeAnimation, mix);\n      this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n\n    if (this.meshWeapon) {\n      this.meshWeapon.update(delta);\n      this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\n      this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n  };\n\n  this.updateBehaviors = function () {\n    var controls = this.controls;\n    var animations = this.animations;\n    var moveAnimation, idleAnimation; // crouch vs stand\n\n    if (controls.crouch) {\n      moveAnimation = animations['crouchMove'];\n      idleAnimation = animations['crouchIdle'];\n    } else {\n      moveAnimation = animations['move'];\n      idleAnimation = animations['idle'];\n    } // actions\n\n\n    if (controls.jump) {\n      moveAnimation = animations['jump'];\n      idleAnimation = animations['jump'];\n    }\n\n    if (controls.attack) {\n      if (controls.crouch) {\n        moveAnimation = animations['crouchAttack'];\n        idleAnimation = animations['crouchAttack'];\n      } else {\n        moveAnimation = animations['attack'];\n        idleAnimation = animations['attack'];\n      }\n    } // set animations\n\n\n    if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\n      if (this.activeAnimation !== moveAnimation) {\n        this.setAnimation(moveAnimation);\n      }\n    }\n\n    if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\n      if (this.activeAnimation !== idleAnimation) {\n        this.setAnimation(idleAnimation);\n      }\n    } // set animation direction\n\n\n    if (controls.moveForward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionForward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionForward(this.oldAnimation);\n      }\n\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\n      }\n    }\n\n    if (controls.moveBackward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\n      }\n\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\n      }\n    }\n  };\n\n  this.updateMovementModel = function (delta) {\n    var controls = this.controls; // speed based on controls\n\n    if (controls.crouch) this.maxSpeed = this.crouchSpeed;else this.maxSpeed = this.walkSpeed;\n    this.maxReverseSpeed = -this.maxSpeed;\n    if (controls.moveForward) this.speed = _three.MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    if (controls.moveBackward) this.speed = _three.MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed); // orientation based on controls\n    // (don't just stand while turning)\n\n    var dir = 1;\n\n    if (controls.moveLeft) {\n      this.bodyOrientation += delta * this.angularSpeed;\n      this.speed = _three.MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    }\n\n    if (controls.moveRight) {\n      this.bodyOrientation -= delta * this.angularSpeed;\n      this.speed = _three.MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    } // speed decay\n\n\n    if (!(controls.moveForward || controls.moveBackward)) {\n      if (this.speed > 0) {\n        var k = exponentialEaseOut(this.speed / this.maxSpeed);\n        this.speed = _three.MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\n      } else {\n        var k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\n        this.speed = _three.MathUtils.clamp(this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\n      }\n    } // displacement\n\n\n    var forwardDelta = this.speed * delta;\n    this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\n    this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta; // steering\n\n    this.root.rotation.y = this.bodyOrientation;\n  }; // internal helpers\n\n\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new _three.TextureLoader();\n    var textures = [];\n\n    for (var i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = _three.UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = _three.sRGBEncoding;\n    }\n\n    return textures;\n  }\n\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new _three.MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new _three.MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new _MorphBlendMesh.MorphBlendMesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe; //\n\n    mesh.autoCreateAnimations(scope.animationFPS);\n    return mesh;\n  }\n\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n\n  function exponentialEaseOut(k) {\n    return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\n  }\n};\n\nexports.MD2CharacterComplex = MD2CharacterComplex;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$misc$MorphBlendMesh","~$shadow.js","~$module$node_modules$three_stdlib$loaders$MD2Loader"]],"~:properties",["^5",["loadCounter","map","bodyOrientation","z","onLoadComplete","meshBody","MD2CharacterComplex","receiveShadow","materialWireframe","frontAcceleration","maxSpeed","scale","updateAnimations","setWireframe","castShadow","x","loadParts","__esModule","walkSpeed","encoding","root","update","materialTexture","setSkin","updateMovementModel","name","value","visible","wireframe","weapons","backAcceleration","transitionFrames","activeAnimation","angularSpeed","crouchSpeed","animations","duration","setVisible","oldAnimation","updateBehaviors","maxReverseSpeed","y","frontDecceleration","mapping","setPlaybackRate","controls","skinsBody","shareParts","skinsWeapon","blendCounter","meshes","morphTargets","setAnimation","meshWeapon","speed","currentSkin","color","setWeapon","morphNormals","animationFPS","enableShadows","material"]],"~:compiled-at",1630917515092,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$misc$MD2CharacterComplex.js\",\n\"lineCount\":19,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/misc/MD2CharacterComplex.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$misc$MD2CharacterComplex\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MD2CharacterComplex = void 0;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _MD2Loader = require(\\\"../loaders/MD2Loader.js\\\");\\n\\nvar _MorphBlendMesh = require(\\\"./MorphBlendMesh.js\\\");\\n\\nvar MD2CharacterComplex = function MD2CharacterComplex() {\\n  var scope = this;\\n  this.scale = 1; // animation parameters\\n\\n  this.animationFPS = 6;\\n  this.transitionFrames = 15; // movement model parameters\\n\\n  this.maxSpeed = 275;\\n  this.maxReverseSpeed = -275;\\n  this.frontAcceleration = 600;\\n  this.backAcceleration = 600;\\n  this.frontDecceleration = 600;\\n  this.angularSpeed = 2.5; // rig\\n\\n  this.root = new _three.Object3D();\\n  this.meshBody = null;\\n  this.meshWeapon = null;\\n  this.controls = null; // skins\\n\\n  this.skinsBody = [];\\n  this.skinsWeapon = [];\\n  this.weapons = [];\\n  this.currentSkin = undefined; //\\n\\n  this.onLoadComplete = function () {}; // internals\\n\\n\\n  this.meshes = [];\\n  this.animations = {};\\n  this.loadCounter = 0; // internal movement control variables\\n\\n  this.speed = 0;\\n  this.bodyOrientation = 0;\\n  this.walkSpeed = this.maxSpeed;\\n  this.crouchSpeed = this.maxSpeed * 0.5; // internal animation parameters\\n\\n  this.activeAnimation = null;\\n  this.oldAnimation = null; // API\\n\\n  this.enableShadows = function (enable) {\\n    for (var i = 0; i < this.meshes.length; i++) {\\n      this.meshes[i].castShadow = enable;\\n      this.meshes[i].receiveShadow = enable;\\n    }\\n  };\\n\\n  this.setVisible = function (enable) {\\n    for (var i = 0; i < this.meshes.length; i++) {\\n      this.meshes[i].visible = enable;\\n      this.meshes[i].visible = enable;\\n    }\\n  };\\n\\n  this.shareParts = function (original) {\\n    this.animations = original.animations;\\n    this.walkSpeed = original.walkSpeed;\\n    this.crouchSpeed = original.crouchSpeed;\\n    this.skinsBody = original.skinsBody;\\n    this.skinsWeapon = original.skinsWeapon; // BODY\\n\\n    var mesh = createPart(original.meshBody.geometry, this.skinsBody[0]);\\n    mesh.scale.set(this.scale, this.scale, this.scale);\\n    this.root.position.y = original.root.position.y;\\n    this.root.add(mesh);\\n    this.meshBody = mesh;\\n    this.meshes.push(mesh); // WEAPONS\\n\\n    for (var i = 0; i < original.weapons.length; i++) {\\n      var meshWeapon = createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\\n      meshWeapon.scale.set(this.scale, this.scale, this.scale);\\n      meshWeapon.visible = false;\\n      meshWeapon.name = original.weapons[i].name;\\n      this.root.add(meshWeapon);\\n      this.weapons[i] = meshWeapon;\\n      this.meshWeapon = meshWeapon;\\n      this.meshes.push(meshWeapon);\\n    }\\n  };\\n\\n  this.loadParts = function (config) {\\n    this.animations = config.animations;\\n    this.walkSpeed = config.walkSpeed;\\n    this.crouchSpeed = config.crouchSpeed;\\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\\n    var weaponsTextures = [];\\n\\n    for (var i = 0; i < config.weapons.length; i++) {\\n      weaponsTextures[i] = config.weapons[i][1];\\n    } // SKINS\\n\\n\\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\\n\\n    var loader = new _MD2Loader.MD2Loader();\\n    loader.load(config.baseUrl + config.body, function (geo) {\\n      var boundingBox = new _three.Box3();\\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\\n      var mesh = createPart(geo, scope.skinsBody[0]);\\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\\n      scope.root.add(mesh);\\n      scope.meshBody = mesh;\\n      scope.meshes.push(mesh);\\n      checkLoadingComplete();\\n    }); // WEAPONS\\n\\n    var generateCallback = function generateCallback(index, name) {\\n      return function (geo) {\\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\\n        mesh.visible = false;\\n        mesh.name = name;\\n        scope.root.add(mesh);\\n        scope.weapons[index] = mesh;\\n        scope.meshWeapon = mesh;\\n        scope.meshes.push(mesh);\\n        checkLoadingComplete();\\n      };\\n    };\\n\\n    for (var _i = 0; _i < config.weapons.length; _i++) {\\n      loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\\n    }\\n  };\\n\\n  this.setPlaybackRate = function (rate) {\\n    if (this.meshBody) this.meshBody.duration = this.meshBody.baseDuration / rate;\\n    if (this.meshWeapon) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\\n  };\\n\\n  this.setWireframe = function (wireframeEnabled) {\\n    if (wireframeEnabled) {\\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\\n    } else {\\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\\n    }\\n  };\\n\\n  this.setSkin = function (index) {\\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\\n      this.meshBody.material.map = this.skinsBody[index];\\n      this.currentSkin = index;\\n    }\\n  };\\n\\n  this.setWeapon = function (index) {\\n    for (var i = 0; i < this.weapons.length; i++) {\\n      this.weapons[i].visible = false;\\n    }\\n\\n    var activeWeapon = this.weapons[index];\\n\\n    if (activeWeapon) {\\n      activeWeapon.visible = true;\\n      this.meshWeapon = activeWeapon;\\n\\n      if (this.activeAnimation) {\\n        activeWeapon.playAnimation(this.activeAnimation);\\n        this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\\n      }\\n    }\\n  };\\n\\n  this.setAnimation = function (animationName) {\\n    if (animationName === this.activeAnimation || !animationName) return;\\n\\n    if (this.meshBody) {\\n      this.meshBody.setAnimationWeight(animationName, 0);\\n      this.meshBody.playAnimation(animationName);\\n      this.oldAnimation = this.activeAnimation;\\n      this.activeAnimation = animationName;\\n      this.blendCounter = this.transitionFrames;\\n    }\\n\\n    if (this.meshWeapon) {\\n      this.meshWeapon.setAnimationWeight(animationName, 0);\\n      this.meshWeapon.playAnimation(animationName);\\n    }\\n  };\\n\\n  this.update = function (delta) {\\n    if (this.controls) this.updateMovementModel(delta);\\n\\n    if (this.animations) {\\n      this.updateBehaviors();\\n      this.updateAnimations(delta);\\n    }\\n  };\\n\\n  this.updateAnimations = function (delta) {\\n    var mix = 1;\\n\\n    if (this.blendCounter > 0) {\\n      mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\\n      this.blendCounter -= 1;\\n    }\\n\\n    if (this.meshBody) {\\n      this.meshBody.update(delta);\\n      this.meshBody.setAnimationWeight(this.activeAnimation, mix);\\n      this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\\n    }\\n\\n    if (this.meshWeapon) {\\n      this.meshWeapon.update(delta);\\n      this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\\n      this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\\n    }\\n  };\\n\\n  this.updateBehaviors = function () {\\n    var controls = this.controls;\\n    var animations = this.animations;\\n    var moveAnimation, idleAnimation; // crouch vs stand\\n\\n    if (controls.crouch) {\\n      moveAnimation = animations['crouchMove'];\\n      idleAnimation = animations['crouchIdle'];\\n    } else {\\n      moveAnimation = animations['move'];\\n      idleAnimation = animations['idle'];\\n    } // actions\\n\\n\\n    if (controls.jump) {\\n      moveAnimation = animations['jump'];\\n      idleAnimation = animations['jump'];\\n    }\\n\\n    if (controls.attack) {\\n      if (controls.crouch) {\\n        moveAnimation = animations['crouchAttack'];\\n        idleAnimation = animations['crouchAttack'];\\n      } else {\\n        moveAnimation = animations['attack'];\\n        idleAnimation = animations['attack'];\\n      }\\n    } // set animations\\n\\n\\n    if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\\n      if (this.activeAnimation !== moveAnimation) {\\n        this.setAnimation(moveAnimation);\\n      }\\n    }\\n\\n    if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\\n      if (this.activeAnimation !== idleAnimation) {\\n        this.setAnimation(idleAnimation);\\n      }\\n    } // set animation direction\\n\\n\\n    if (controls.moveForward) {\\n      if (this.meshBody) {\\n        this.meshBody.setAnimationDirectionForward(this.activeAnimation);\\n        this.meshBody.setAnimationDirectionForward(this.oldAnimation);\\n      }\\n\\n      if (this.meshWeapon) {\\n        this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\\n        this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\\n      }\\n    }\\n\\n    if (controls.moveBackward) {\\n      if (this.meshBody) {\\n        this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\\n        this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\\n      }\\n\\n      if (this.meshWeapon) {\\n        this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\\n        this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\\n      }\\n    }\\n  };\\n\\n  this.updateMovementModel = function (delta) {\\n    var controls = this.controls; // speed based on controls\\n\\n    if (controls.crouch) this.maxSpeed = this.crouchSpeed;else this.maxSpeed = this.walkSpeed;\\n    this.maxReverseSpeed = -this.maxSpeed;\\n    if (controls.moveForward) this.speed = _three.MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\\n    if (controls.moveBackward) this.speed = _three.MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed); // orientation based on controls\\n    // (don't just stand while turning)\\n\\n    var dir = 1;\\n\\n    if (controls.moveLeft) {\\n      this.bodyOrientation += delta * this.angularSpeed;\\n      this.speed = _three.MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\\n    }\\n\\n    if (controls.moveRight) {\\n      this.bodyOrientation -= delta * this.angularSpeed;\\n      this.speed = _three.MathUtils.clamp(this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\\n    } // speed decay\\n\\n\\n    if (!(controls.moveForward || controls.moveBackward)) {\\n      if (this.speed > 0) {\\n        var k = exponentialEaseOut(this.speed / this.maxSpeed);\\n        this.speed = _three.MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\\n      } else {\\n        var k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\\n        this.speed = _three.MathUtils.clamp(this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\\n      }\\n    } // displacement\\n\\n\\n    var forwardDelta = this.speed * delta;\\n    this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\\n    this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta; // steering\\n\\n    this.root.rotation.y = this.bodyOrientation;\\n  }; // internal helpers\\n\\n\\n  function loadTextures(baseUrl, textureUrls) {\\n    var textureLoader = new _three.TextureLoader();\\n    var textures = [];\\n\\n    for (var i = 0; i < textureUrls.length; i++) {\\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\\n      textures[i].mapping = _three.UVMapping;\\n      textures[i].name = textureUrls[i];\\n      textures[i].encoding = _three.sRGBEncoding;\\n    }\\n\\n    return textures;\\n  }\\n\\n  function createPart(geometry, skinMap) {\\n    var materialWireframe = new _three.MeshLambertMaterial({\\n      color: 0xffaa00,\\n      wireframe: true,\\n      morphTargets: true,\\n      morphNormals: true\\n    });\\n    var materialTexture = new _three.MeshLambertMaterial({\\n      color: 0xffffff,\\n      wireframe: false,\\n      map: skinMap,\\n      morphTargets: true,\\n      morphNormals: true\\n    }); //\\n\\n    var mesh = new _MorphBlendMesh.MorphBlendMesh(geometry, materialTexture);\\n    mesh.rotation.y = -Math.PI / 2; //\\n\\n    mesh.materialTexture = materialTexture;\\n    mesh.materialWireframe = materialWireframe; //\\n\\n    mesh.autoCreateAnimations(scope.animationFPS);\\n    return mesh;\\n  }\\n\\n  function checkLoadingComplete() {\\n    scope.loadCounter -= 1;\\n    if (scope.loadCounter === 0) scope.onLoadComplete();\\n  }\\n\\n  function exponentialEaseOut(k) {\\n    return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\\n  }\\n};\\n\\nexports.MD2CharacterComplex = MD2CharacterComplex;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"MD2CharacterComplex\",\"_three\",\"_MD2Loader\",\"_MorphBlendMesh\",\"loadTextures\",\"baseUrl\",\"textureUrls\",\"textureLoader\",\"TextureLoader\",\"textures\",\"i\",\"length\",\"load\",\"checkLoadingComplete\",\"mapping\",\"UVMapping\",\"name\",\"encoding\",\"sRGBEncoding\",\"createPart\",\"geometry\",\"skinMap\",\"materialWireframe\",\"MeshLambertMaterial\",\"color\",\"wireframe\",\"morphTargets\",\"morphNormals\",\"materialTexture\",\"map\",\"mesh\",\"MorphBlendMesh\",\"rotation\",\"y\",\"Math\",\"PI\",\"autoCreateAnimations\",\"scope\",\"animationFPS\",\"loadCounter\",\"onLoadComplete\",\"exponentialEaseOut\",\"k\",\"pow\",\"scale\",\"transitionFrames\",\"maxSpeed\",\"maxReverseSpeed\",\"frontDecceleration\",\"backAcceleration\",\"frontAcceleration\",\"angularSpeed\",\"root\",\"Object3D\",\"controls\",\"meshWeapon\",\"meshBody\",\"skinsBody\",\"skinsWeapon\",\"weapons\",\"currentSkin\",\"undefined\",\"this.onLoadComplete\",\"meshes\",\"animations\",\"bodyOrientation\",\"speed\",\"walkSpeed\",\"crouchSpeed\",\"oldAnimation\",\"activeAnimation\",\"enableShadows\",\"this.enableShadows\",\"enable\",\"castShadow\",\"receiveShadow\",\"setVisible\",\"this.setVisible\",\"visible\",\"shareParts\",\"this.shareParts\",\"original\",\"set\",\"position\",\"add\",\"push\",\"loadParts\",\"this.loadParts\",\"config\",\"skins\",\"weaponsTextures\",\"loader\",\"MD2Loader\",\"body\",\"geo\",\"boundingBox\",\"Box3\",\"setFromBufferAttribute\",\"attributes\",\"min\",\"generateCallback\",\"index\",\"_i\",\"setPlaybackRate\",\"this.setPlaybackRate\",\"rate\",\"duration\",\"baseDuration\",\"setWireframe\",\"this.setWireframe\",\"wireframeEnabled\",\"material\",\"setSkin\",\"this.setSkin\",\"setWeapon\",\"this.setWeapon\",\"activeWeapon\",\"playAnimation\",\"setAnimationTime\",\"getAnimationTime\",\"setAnimation\",\"this.setAnimation\",\"animationName\",\"setAnimationWeight\",\"blendCounter\",\"update\",\"this.update\",\"delta\",\"updateMovementModel\",\"updateBehaviors\",\"updateAnimations\",\"this.updateAnimations\",\"mix\",\"this.updateBehaviors\",\"crouch\",\"moveAnimation\",\"idleAnimation\",\"jump\",\"attack\",\"moveForward\",\"moveBackward\",\"moveLeft\",\"moveRight\",\"abs\",\"setAnimationDirectionForward\",\"setAnimationDirectionBackward\",\"this.updateMovementModel\",\"MathUtils\",\"clamp\",\"dir\",\"forwardDelta\",\"x\",\"sin\",\"z\",\"cos\"]\n}\n"]