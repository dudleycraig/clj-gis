["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/core/NodeBuilder.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$core$NodeBuilder=function(global,require,module,exports){function NodeBuilder(){this.slots=[];this.caches=[];this.contexts=[];this.keywords={};this.nodeData={};this.requires={uv:[],color:[],lights:!1,fog:!1,transparent:!1,irradiance:!1};this.includes={consts:[],functions:[],structs:[]};this.attributes={};this.prefixCode=\"#ifdef TEXTURE_LOD_EXT\\n\\t#define texCube(a, b) textureCube(a, b)\\n\\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)\\n\\t#define tex2D(a, b) texture2D(a, b)\\n\\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)\\n#else\\n\\t#define texCube(a, b) textureCube(a, b)\\n\\t#define texCubeBias(a, b, c) textureCube(a, b, c)\\n\\t#define tex2D(a, b) texture2D(a, b)\\n\\t#define tex2DBias(a, b, c) texture2D(a, b, c)\\n#endif\\n#include \\x3cpacking\\x3e\\n#include \\x3ccommon\\x3e\";\nthis.parsCode={vertex:\"\",fragment:\"\"};this.code={vertex:\"\",fragment:\"\"};this.nodeCode={vertex:\"\",fragment:\"\"};this.resultCode={vertex:\"\",fragment:\"\"};this.finalCode={vertex:\"\",fragment:\"\"};this.inputs={uniforms:{list:[],vertex:[],fragment:[]},vars:{varying:[],vertex:[],fragment:[]}};this.defines={};this.uniforms={};this.extensions={};this.updaters=[];this.nodes=[];this.analyzing=!1}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.NodeBuilder=NodeBuilder;var _three=require(\"module$node_modules$three$build$three_module\"),\n_NodeUniform=require(\"module$node_modules$three_stdlib$nodes$core$NodeUniform\");global=require(\"module$node_modules$three_stdlib$nodes$core$NodeUtils\");var _NodeLib=require(\"module$node_modules$three_stdlib$nodes$core$NodeLib\"),_FunctionNode=require(\"module$node_modules$three_stdlib$nodes$core$FunctionNode\"),_ConstNode=require(\"module$node_modules$three_stdlib$nodes$core$ConstNode\"),_StructNode=require(\"module$node_modules$three_stdlib$nodes$core$StructNode\"),_Vector2Node=require(\"module$node_modules$three_stdlib$nodes$inputs$Vector2Node\"),\n_Vector3Node=require(\"module$node_modules$three_stdlib$nodes$inputs$Vector3Node\"),_Vector4Node=require(\"module$node_modules$three_stdlib$nodes$inputs$Vector4Node\"),_TextureNode=require(\"module$node_modules$three_stdlib$nodes$inputs$TextureNode\"),_CubeTextureNode=require(\"module$node_modules$three_stdlib$nodes$inputs$CubeTextureNode\"),_TextureCubeNode=require(\"module$node_modules$three_stdlib$nodes$misc$TextureCubeNode\"),elements=global.NodeUtils.elements,constructors=[\"float\",\"vec2\",\"vec3\",\"vec4\"],\nconvertFormatToType={\"float\":\"f\",vec2:\"v2\",vec3:\"v3\",vec4:\"v4\",mat4:\"v4\",\"int\":\"i\",bool:\"b\"},convertTypeToFormat={t:\"sampler2D\",tc:\"samplerCube\",b:\"bool\",i:\"int\",f:\"float\",c:\"vec3\",v2:\"vec2\",v3:\"vec3\",v4:\"vec4\",m3:\"mat3\",m4:\"mat4\"};NodeBuilder.prototype={constructor:NodeBuilder,build:function(vertex,fragment){this.buildShader(\"vertex\",vertex);this.buildShader(\"fragment\",fragment);for(vertex=0;vertex<this.requires.uv.length;vertex++)this.requires.uv[vertex]&&(fragment=0<vertex?vertex+1:\"\",this.addVaryCode(\"varying vec2 vUv\"+\nfragment+\";\"),0<vertex&&this.addVertexParsCode(\"attribute vec2 uv\"+fragment+\";\"),this.addVertexFinalCode(\"vUv\"+fragment+\" \\x3d uv\"+fragment+\";\"));this.requires.color[0]&&(this.addVaryCode(\"varying vec4 vColor;\"),this.addVertexParsCode(\"attribute vec4 color;\"),this.addVertexFinalCode(\"vColor \\x3d color;\"));this.requires.color[1]&&(this.addVaryCode(\"varying vec4 vColor2;\"),this.addVertexParsCode(\"attribute vec4 color2;\"),this.addVertexFinalCode(\"vColor2 \\x3d color2;\"));this.requires.position&&(this.addVaryCode(\"varying vec3 vPosition;\"),\nthis.addVertexFinalCode(\"vPosition \\x3d transformed;\"));this.requires.worldPosition&&(this.addVaryCode(\"varying vec3 vWPosition;\"),this.addVertexFinalCode(\"vWPosition \\x3d ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;\"));this.requires.normal&&(this.addVaryCode(\"varying vec3 vObjectNormal;\"),this.addVertexFinalCode(\"vObjectNormal \\x3d normal;\"));this.requires.worldNormal&&(this.addVaryCode(\"varying vec3 vWNormal;\"),this.addVertexFinalCode(\"vWNormal \\x3d inverseTransformDirection( transformedNormal, viewMatrix ).xyz;\"));\nreturn this},buildShader:function(shader,node){this.resultCode[shader]=node.build(this.setShader(shader),\"v4\")},setMaterial:function(material,renderer){this.material=material;this.renderer=renderer;this.requires.lights=material.lights;this.requires.fog=material.fog;this.mergeDefines(material.defines);return this},addFlow:function(slot,cache,context){return this.addSlot(slot).addCache(cache).addContext(context)},removeFlow:function(){return this.removeSlot().removeCache().removeContext()},addCache:function(name){this.cache=\nname||\"\";this.caches.push(this.cache);return this},removeCache:function(){this.caches.pop();this.cache=this.caches[this.caches.length-1]||\"\";return this},addContext:function(context){this.context=Object.assign({},this.context,context);this.context.extra=this.context.extra||{};this.contexts.push(this.context);return this},removeContext:function(){this.contexts.pop();this.context=this.contexts[this.contexts.length-1]||{};return this},addSlot:function(name){this.slot=name||\"\";this.slots.push(this.slot);\nreturn this},removeSlot:function(){this.slots.pop();this.slot=this.slots[this.slots.length-1]||\"\";return this},addVertexCode:function(code){this.addCode(code,\"vertex\")},addFragmentCode:function(code){this.addCode(code,\"fragment\")},addCode:function(code,shader){this.code[shader||this.shader]+=code+\"\\n\"},addVertexNodeCode:function(code){this.addNodeCode(code,\"vertex\")},addFragmentNodeCode:function(code){this.addNodeCode(code,\"fragment\")},addNodeCode:function(code,shader){this.nodeCode[shader||this.shader]+=\ncode+\"\\n\"},clearNodeCode:function(shader){shader=shader||this.shader;var code=this.nodeCode[shader];this.nodeCode[shader]=\"\";return code},clearVertexNodeCode:function(){return this.clearNodeCode(\"vertex\")},clearFragmentNodeCode:function(){return this.clearNodeCode(\"fragment\")},addVertexFinalCode:function(code){this.addFinalCode(code,\"vertex\")},addFragmentFinalCode:function(code){this.addFinalCode(code,\"fragment\")},addFinalCode:function(code,shader){this.finalCode[shader||this.shader]+=code+\"\\n\"},\naddVertexParsCode:function(code){this.addParsCode(code,\"vertex\")},addFragmentParsCode:function(code){this.addParsCode(code,\"fragment\")},addParsCode:function(code,shader){this.parsCode[shader||this.shader]+=code+\"\\n\"},addVaryCode:function(code){this.addVertexParsCode(code);this.addFragmentParsCode(code)},isCache:function(name){return-1!==this.caches.indexOf(name)},isSlot:function(name){return-1!==this.slots.indexOf(name)},define:function(name,value){this.defines[name]=void 0===value?1:value},require:function(name){this.requires[name]=\n!0},isDefined:function(name){return void 0!==this.defines[name]},getVar:function(uuid,type,ns){var prefix=4<arguments.length&&void 0!==arguments[4]?arguments[4]:\"V\",label=5<arguments.length&&void 0!==arguments[5]?arguments[5]:\"\",vars=this.getVars(3<arguments.length&&void 0!==arguments[3]?arguments[3]:\"varying\"),data=vars[uuid];data||(data=vars.length,data={name:ns?ns:\"node\"+prefix+data+(label?\"_\"+label:\"\"),type},vars.push(data),vars[uuid]=data);return data},getTempVar:function(uuid,type,ns,label){return this.getVar(uuid,\ntype,ns,this.shader,\"T\",label)},getAttribute:function(name,type){if(!this.attributes[name]){var varying=this.getVar(name,type);this.addVertexParsCode(\"attribute \"+type+\" \"+name+\";\");this.addVertexFinalCode(varying.name+\" \\x3d \"+name+\";\");this.attributes[name]={varying,name,type}}return this.attributes[name]},getCode:function(shader){return[this.prefixCode,this.parsCode[shader],this.getVarListCode(this.getVars(\"varying\"),\"varying\"),this.getVarListCode(this.inputs.uniforms[shader],\"uniform\"),this.getIncludesCode(\"consts\",\nshader),this.getIncludesCode(\"structs\",shader),this.getIncludesCode(\"functions\",shader),\"void main() {\",this.getVarListCode(this.getVars(shader)),this.code[shader],this.resultCode[shader],this.finalCode[shader],\"}\"].join(\"\\n\")},getVarListCode:function(vars,prefix){prefix=prefix||\"\";for(var code=\"\",i=0,l=vars.length;i<l;++i){var nVar=vars[i],name=nVar.name;nVar=this.getFormatByType(nVar.type);if(void 0===nVar)throw Error(\"Node pars \"+nVar+\" not found.\");code+=prefix+\" \"+nVar+\" \"+name+\";\\n\"}return code},\ngetVars:function(shader){return this.inputs.vars[shader||this.shader]},getNodeData:function(node){node=node.isNode?node.uuid:node;return this.nodeData[node]=this.nodeData[node]||{}},createUniform:function(shader,type,node,ns,needsUpdate,label){var uniforms=this.inputs.uniforms,index=uniforms.list.length;type=new _NodeUniform.NodeUniform({type,name:ns?ns:\"nodeU\"+index+(label?\"_\"+label:\"\"),node,needsUpdate});uniforms.list.push(type);uniforms[shader].push(type);uniforms[shader][type.name]=type;return this.uniforms[type.name]=\ntype},createVertexUniform:function(type,node,ns,needsUpdate,label){return this.createUniform(\"vertex\",type,node,ns,needsUpdate,label)},createFragmentUniform:function(type,node,ns,needsUpdate,label){return this.createUniform(\"fragment\",type,node,ns,needsUpdate,label)},include:function(node,parent,source){node=\"string\"===typeof node?_NodeLib.NodeLib.get(node):node;if(!1===this.context.include)return node.name;if(node instanceof _FunctionNode.FunctionNode)var includesStruct=this.includes.functions;else node instanceof\n_ConstNode.ConstNode?includesStruct=this.includes.consts:node instanceof _StructNode.StructNode&&(includesStruct=this.includes.structs);var includes=includesStruct[this.shader]=includesStruct[this.shader]||[];if(node){includesStruct=includes[node.name];includesStruct||(includesStruct=includes[node.name]={node,deps:[]},includes.push(includesStruct),includesStruct.src=node.build(this,\"source\"));if(node instanceof _FunctionNode.FunctionNode&&parent&&includes[parent.name]&&-1==includes[parent.name].deps.indexOf(node)&&\n(includes[parent.name].deps.push(node),node.includes&&node.includes.length)){includes=0;do this.include(node.includes[includes++],parent);while(includes<node.includes.length)}source&&(includesStruct.src=source);return node.name}throw Error(\"Include not found.\");},colorToVectorProperties:function(color){return color.replace(\"r\",\"x\").replace(\"g\",\"y\").replace(\"b\",\"z\").replace(\"a\",\"w\")},colorToVector:function(color){return color.replace(/c/g,\"v3\")},getIncludes:function(type,shader){return this.includes[type][shader||\nthis.shader]},getIncludesCode:function(){function sortByPosition(a,b){return a.deps.length-b.deps.length}return function(type,shader){type=this.getIncludes(type,shader);if(!type)return\"\";shader=\"\";type=type.sort(sortByPosition);for(var i=0;i<type.length;i++)type[i].src&&(shader+=type[i].src+\"\\n\");return shader}}(),getConstructorFromLength:function(len){return constructors[len-1]},isTypeMatrix:function(format){return/^m/.test(format)},getTypeLength:function(type){return\"f\"===type?1:parseInt(this.colorToVector(type).substr(1))},\ngetTypeFromLength:function(len){return 1===len?\"f\":\"v\"+len},findNode:function(){for(var i=0;i<arguments.length;i++){var nodeCandidate=arguments[i];if(void 0!==nodeCandidate&&nodeCandidate.isNode)return nodeCandidate}},resolve:function(){for(var i=0;i<arguments.length;i++){var nodeCandidate=arguments[i];if(void 0!==nodeCandidate){if(nodeCandidate.isNode)return nodeCandidate;if(nodeCandidate.isTexture)switch(nodeCandidate.mapping){case _three.CubeReflectionMapping:case _three.CubeRefractionMapping:return new _CubeTextureNode.CubeTextureNode(nodeCandidate);\ncase _three.CubeUVReflectionMapping:case _three.CubeUVRefractionMapping:return new _TextureCubeNode.TextureCubeNode(new _TextureNode.TextureNode(nodeCandidate));default:return new _TextureNode.TextureNode(nodeCandidate)}else{if(nodeCandidate.isVector2)return new _Vector2Node.Vector2Node(nodeCandidate);if(nodeCandidate.isVector3)return new _Vector3Node.Vector3Node(nodeCandidate);if(nodeCandidate.isVector4)return new _Vector4Node.Vector4Node(nodeCandidate)}}}},format:function(code,from,to){switch(this.colorToVector(to+\n\" \\x3c- \"+from)){case \"f \\x3c- v2\":return code+\".x\";case \"f \\x3c- v3\":return code+\".x\";case \"f \\x3c- v4\":return code+\".x\";case \"f \\x3c- i\":case \"f \\x3c- b\":return\"float( \"+code+\" )\";case \"v2 \\x3c- f\":return\"vec2( \"+code+\" )\";case \"v2 \\x3c- v3\":return code+\".xy\";case \"v2 \\x3c- v4\":return code+\".xy\";case \"v2 \\x3c- i\":case \"v2 \\x3c- b\":return\"vec2( float( \"+code+\" ) )\";case \"v3 \\x3c- f\":return\"vec3( \"+code+\" )\";case \"v3 \\x3c- v2\":return\"vec3( \"+code+\", 0.0 )\";case \"v3 \\x3c- v4\":return code+\".xyz\";case \"v3 \\x3c- i\":case \"v3 \\x3c- b\":return\"vec2( float( \"+\ncode+\" ) )\";case \"v4 \\x3c- f\":return\"vec4( \"+code+\" )\";case \"v4 \\x3c- v2\":return\"vec4( \"+code+\", 0.0, 1.0 )\";case \"v4 \\x3c- v3\":return\"vec4( \"+code+\", 1.0 )\";case \"v4 \\x3c- i\":case \"v4 \\x3c- b\":return\"vec4( float( \"+code+\" ) )\";case \"i \\x3c- f\":case \"i \\x3c- b\":return\"int( \"+code+\" )\";case \"i \\x3c- v2\":return\"int( \"+code+\".x )\";case \"i \\x3c- v3\":return\"int( \"+code+\".x )\";case \"i \\x3c- v4\":return\"int( \"+code+\".x )\";case \"b \\x3c- f\":return\"( \"+code+\" !\\x3d 0.0 )\";case \"b \\x3c- v2\":return\"( \"+code+\" !\\x3d vec2( 0.0 ) )\";\ncase \"b \\x3c- v3\":return\"( \"+code+\" !\\x3d vec3( 0.0 ) )\";case \"b \\x3c- v4\":return\"( \"+code+\" !\\x3d vec4( 0.0 ) )\";case \"b \\x3c- i\":return\"( \"+code+\" !\\x3d 0 )\"}return code},getTypeByFormat:function(format){return convertFormatToType[format]||format},getFormatByType:function(type){return convertTypeToFormat[type]||type},getUuid:function(uuid,useCache){(void 0!==useCache?useCache:1)&&this.cache&&(uuid=this.cache+\"-\"+uuid);return uuid},getElementByIndex:function(index){return elements[index]},getIndexByElement:function(elm){return elements.indexOf(elm)},\nisShader:function(shader){return this.shader===shader},setShader:function(shader){this.shader=shader;return this},mergeDefines:function(defines){for(var name in defines)this.defines[name]=defines[name];return this.defines},mergeUniform:function(uniforms){for(var name in uniforms)this.uniforms[name]=uniforms[name];return this.uniforms},getTextureEncodingFromMap:function(map){if(map)map.isTexture?encoding=map.encoding:map.isWebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),\nencoding=map.texture.encoding);else var encoding=_three.LinearEncoding;encoding===_three.LinearEncoding&&this.context.gamma&&(encoding=_three.GammaEncoding);return encoding}}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$core$NodeBuilder\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeBuilder = NodeBuilder;\n\nvar _three = require(\"three\");\n\nvar _NodeUniform = require(\"./NodeUniform.js\");\n\nvar _NodeUtils = require(\"./NodeUtils.js\");\n\nvar _NodeLib = require(\"./NodeLib.js\");\n\nvar _FunctionNode = require(\"./FunctionNode.js\");\n\nvar _ConstNode = require(\"./ConstNode.js\");\n\nvar _StructNode = require(\"./StructNode.js\");\n\nvar _Vector2Node = require(\"../inputs/Vector2Node.js\");\n\nvar _Vector3Node = require(\"../inputs/Vector3Node.js\");\n\nvar _Vector4Node = require(\"../inputs/Vector4Node.js\");\n\nvar _TextureNode = require(\"../inputs/TextureNode.js\");\n\nvar _CubeTextureNode = require(\"../inputs/CubeTextureNode.js\");\n\nvar _TextureCubeNode = require(\"../misc/TextureCubeNode.js\");\n\nvar elements = _NodeUtils.NodeUtils.elements,\n    constructors = ['float', 'vec2', 'vec3', 'vec4'],\n    convertFormatToType = {\n  \"float\": 'f',\n  vec2: 'v2',\n  vec3: 'v3',\n  vec4: 'v4',\n  mat4: 'v4',\n  \"int\": 'i',\n  bool: 'b'\n},\n    convertTypeToFormat = {\n  t: 'sampler2D',\n  tc: 'samplerCube',\n  b: 'bool',\n  i: 'int',\n  f: 'float',\n  c: 'vec3',\n  v2: 'vec2',\n  v3: 'vec3',\n  v4: 'vec4',\n  m3: 'mat3',\n  m4: 'mat4'\n};\n\nfunction NodeBuilder() {\n  this.slots = [];\n  this.caches = [];\n  this.contexts = [];\n  this.keywords = {};\n  this.nodeData = {};\n  this.requires = {\n    uv: [],\n    color: [],\n    lights: false,\n    fog: false,\n    transparent: false,\n    irradiance: false\n  };\n  this.includes = {\n    consts: [],\n    functions: [],\n    structs: []\n  };\n  this.attributes = {};\n  this.prefixCode = ['#ifdef TEXTURE_LOD_EXT', '\t#define texCube(a, b) textureCube(a, b)', '\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)', '\t#define tex2D(a, b) texture2D(a, b)', '\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)', '#else', '\t#define texCube(a, b) textureCube(a, b)', '\t#define texCubeBias(a, b, c) textureCube(a, b, c)', '\t#define tex2D(a, b) texture2D(a, b)', '\t#define tex2DBias(a, b, c) texture2D(a, b, c)', '#endif', '#include <packing>', '#include <common>'].join('\\n');\n  this.parsCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.code = {\n    vertex: '',\n    fragment: ''\n  };\n  this.nodeCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.resultCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.finalCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.inputs = {\n    uniforms: {\n      list: [],\n      vertex: [],\n      fragment: []\n    },\n    vars: {\n      varying: [],\n      vertex: [],\n      fragment: []\n    }\n  }; // send to material\n\n  this.defines = {};\n  this.uniforms = {};\n  this.extensions = {};\n  this.updaters = [];\n  this.nodes = []; // --\n\n  this.analyzing = false;\n}\n\nNodeBuilder.prototype = {\n  constructor: NodeBuilder,\n  build: function build(vertex, fragment) {\n    this.buildShader('vertex', vertex);\n    this.buildShader('fragment', fragment);\n\n    for (var i = 0; i < this.requires.uv.length; i++) {\n      if (this.requires.uv[i]) {\n        var uvIndex = i > 0 ? i + 1 : '';\n        this.addVaryCode('varying vec2 vUv' + uvIndex + ';');\n\n        if (i > 0) {\n          this.addVertexParsCode('attribute vec2 uv' + uvIndex + ';');\n        }\n\n        this.addVertexFinalCode('vUv' + uvIndex + ' = uv' + uvIndex + ';');\n      }\n    }\n\n    if (this.requires.color[0]) {\n      this.addVaryCode('varying vec4 vColor;');\n      this.addVertexParsCode('attribute vec4 color;');\n      this.addVertexFinalCode('vColor = color;');\n    }\n\n    if (this.requires.color[1]) {\n      this.addVaryCode('varying vec4 vColor2;');\n      this.addVertexParsCode('attribute vec4 color2;');\n      this.addVertexFinalCode('vColor2 = color2;');\n    }\n\n    if (this.requires.position) {\n      this.addVaryCode('varying vec3 vPosition;');\n      this.addVertexFinalCode('vPosition = transformed;');\n    }\n\n    if (this.requires.worldPosition) {\n      this.addVaryCode('varying vec3 vWPosition;');\n      this.addVertexFinalCode('vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;');\n    }\n\n    if (this.requires.normal) {\n      this.addVaryCode('varying vec3 vObjectNormal;');\n      this.addVertexFinalCode('vObjectNormal = normal;');\n    }\n\n    if (this.requires.worldNormal) {\n      this.addVaryCode('varying vec3 vWNormal;');\n      this.addVertexFinalCode('vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;');\n    }\n\n    return this;\n  },\n  buildShader: function buildShader(shader, node) {\n    this.resultCode[shader] = node.build(this.setShader(shader), 'v4');\n  },\n  setMaterial: function setMaterial(material, renderer) {\n    this.material = material;\n    this.renderer = renderer;\n    this.requires.lights = material.lights;\n    this.requires.fog = material.fog;\n    this.mergeDefines(material.defines);\n    return this;\n  },\n  addFlow: function addFlow(slot, cache, context) {\n    return this.addSlot(slot).addCache(cache).addContext(context);\n  },\n  removeFlow: function removeFlow() {\n    return this.removeSlot().removeCache().removeContext();\n  },\n  addCache: function addCache(name) {\n    this.cache = name || '';\n    this.caches.push(this.cache);\n    return this;\n  },\n  removeCache: function removeCache() {\n    this.caches.pop();\n    this.cache = this.caches[this.caches.length - 1] || '';\n    return this;\n  },\n  addContext: function addContext(context) {\n    this.context = Object.assign({}, this.context, context);\n    this.context.extra = this.context.extra || {};\n    this.contexts.push(this.context);\n    return this;\n  },\n  removeContext: function removeContext() {\n    this.contexts.pop();\n    this.context = this.contexts[this.contexts.length - 1] || {};\n    return this;\n  },\n  addSlot: function addSlot(name) {\n    this.slot = name || '';\n    this.slots.push(this.slot);\n    return this;\n  },\n  removeSlot: function removeSlot() {\n    this.slots.pop();\n    this.slot = this.slots[this.slots.length - 1] || '';\n    return this;\n  },\n  addVertexCode: function addVertexCode(code) {\n    this.addCode(code, 'vertex');\n  },\n  addFragmentCode: function addFragmentCode(code) {\n    this.addCode(code, 'fragment');\n  },\n  addCode: function addCode(code, shader) {\n    this.code[shader || this.shader] += code + '\\n';\n  },\n  addVertexNodeCode: function addVertexNodeCode(code) {\n    this.addNodeCode(code, 'vertex');\n  },\n  addFragmentNodeCode: function addFragmentNodeCode(code) {\n    this.addNodeCode(code, 'fragment');\n  },\n  addNodeCode: function addNodeCode(code, shader) {\n    this.nodeCode[shader || this.shader] += code + '\\n';\n  },\n  clearNodeCode: function clearNodeCode(shader) {\n    shader = shader || this.shader;\n    var code = this.nodeCode[shader];\n    this.nodeCode[shader] = '';\n    return code;\n  },\n  clearVertexNodeCode: function clearVertexNodeCode() {\n    return this.clearNodeCode('vertex');\n  },\n  clearFragmentNodeCode: function clearFragmentNodeCode() {\n    return this.clearNodeCode('fragment');\n  },\n  addVertexFinalCode: function addVertexFinalCode(code) {\n    this.addFinalCode(code, 'vertex');\n  },\n  addFragmentFinalCode: function addFragmentFinalCode(code) {\n    this.addFinalCode(code, 'fragment');\n  },\n  addFinalCode: function addFinalCode(code, shader) {\n    this.finalCode[shader || this.shader] += code + '\\n';\n  },\n  addVertexParsCode: function addVertexParsCode(code) {\n    this.addParsCode(code, 'vertex');\n  },\n  addFragmentParsCode: function addFragmentParsCode(code) {\n    this.addParsCode(code, 'fragment');\n  },\n  addParsCode: function addParsCode(code, shader) {\n    this.parsCode[shader || this.shader] += code + '\\n';\n  },\n  addVaryCode: function addVaryCode(code) {\n    this.addVertexParsCode(code);\n    this.addFragmentParsCode(code);\n  },\n  isCache: function isCache(name) {\n    return this.caches.indexOf(name) !== -1;\n  },\n  isSlot: function isSlot(name) {\n    return this.slots.indexOf(name) !== -1;\n  },\n  define: function define(name, value) {\n    this.defines[name] = value === undefined ? 1 : value;\n  },\n  require: function require(name) {\n    this.requires[name] = true;\n  },\n  isDefined: function isDefined(name) {\n    return this.defines[name] !== undefined;\n  },\n  getVar: function getVar(uuid, type, ns) {\n    var shader = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'varying';\n    var prefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'V';\n    var label = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n    var vars = this.getVars(shader),\n        data = vars[uuid];\n\n    if (!data) {\n      var index = vars.length,\n          name = ns ? ns : 'node' + prefix + index + (label ? '_' + label : '');\n      data = {\n        name: name,\n        type: type\n      };\n      vars.push(data);\n      vars[uuid] = data;\n    }\n\n    return data;\n  },\n  getTempVar: function getTempVar(uuid, type, ns, label) {\n    return this.getVar(uuid, type, ns, this.shader, 'T', label);\n  },\n  getAttribute: function getAttribute(name, type) {\n    if (!this.attributes[name]) {\n      var varying = this.getVar(name, type);\n      this.addVertexParsCode('attribute ' + type + ' ' + name + ';');\n      this.addVertexFinalCode(varying.name + ' = ' + name + ';');\n      this.attributes[name] = {\n        varying: varying,\n        name: name,\n        type: type\n      };\n    }\n\n    return this.attributes[name];\n  },\n  getCode: function getCode(shader) {\n    return [this.prefixCode, this.parsCode[shader], this.getVarListCode(this.getVars('varying'), 'varying'), this.getVarListCode(this.inputs.uniforms[shader], 'uniform'), this.getIncludesCode('consts', shader), this.getIncludesCode('structs', shader), this.getIncludesCode('functions', shader), 'void main() {', this.getVarListCode(this.getVars(shader)), this.code[shader], this.resultCode[shader], this.finalCode[shader], '}'].join('\\n');\n  },\n  getVarListCode: function getVarListCode(vars, prefix) {\n    prefix = prefix || '';\n    var code = '';\n\n    for (var i = 0, l = vars.length; i < l; ++i) {\n      var nVar = vars[i],\n          type = nVar.type,\n          name = nVar.name;\n      var formatType = this.getFormatByType(type);\n\n      if (formatType === undefined) {\n        throw new Error('Node pars ' + formatType + ' not found.');\n      }\n\n      code += prefix + ' ' + formatType + ' ' + name + ';\\n';\n    }\n\n    return code;\n  },\n  getVars: function getVars(shader) {\n    return this.inputs.vars[shader || this.shader];\n  },\n  getNodeData: function getNodeData(node) {\n    var uuid = node.isNode ? node.uuid : node;\n    return this.nodeData[uuid] = this.nodeData[uuid] || {};\n  },\n  createUniform: function createUniform(shader, type, node, ns, needsUpdate, label) {\n    var uniforms = this.inputs.uniforms,\n        index = uniforms.list.length;\n    var uniform = new _NodeUniform.NodeUniform({\n      type: type,\n      name: ns ? ns : 'nodeU' + index + (label ? '_' + label : ''),\n      node: node,\n      needsUpdate: needsUpdate\n    });\n    uniforms.list.push(uniform);\n    uniforms[shader].push(uniform);\n    uniforms[shader][uniform.name] = uniform;\n    this.uniforms[uniform.name] = uniform;\n    return uniform;\n  },\n  createVertexUniform: function createVertexUniform(type, node, ns, needsUpdate, label) {\n    return this.createUniform('vertex', type, node, ns, needsUpdate, label);\n  },\n  createFragmentUniform: function createFragmentUniform(type, node, ns, needsUpdate, label) {\n    return this.createUniform('fragment', type, node, ns, needsUpdate, label);\n  },\n  include: function include(node, parent, source) {\n    var includesStruct;\n    node = typeof node === 'string' ? _NodeLib.NodeLib.get(node) : node;\n\n    if (this.context.include === false) {\n      return node.name;\n    }\n\n    if (node instanceof _FunctionNode.FunctionNode) {\n      includesStruct = this.includes.functions;\n    } else if (node instanceof _ConstNode.ConstNode) {\n      includesStruct = this.includes.consts;\n    } else if (node instanceof _StructNode.StructNode) {\n      includesStruct = this.includes.structs;\n    }\n\n    var includes = includesStruct[this.shader] = includesStruct[this.shader] || [];\n\n    if (node) {\n      var included = includes[node.name];\n\n      if (!included) {\n        included = includes[node.name] = {\n          node: node,\n          deps: []\n        };\n        includes.push(included);\n        included.src = node.build(this, 'source');\n      }\n\n      if (node instanceof _FunctionNode.FunctionNode && parent && includes[parent.name] && includes[parent.name].deps.indexOf(node) == -1) {\n        includes[parent.name].deps.push(node);\n\n        if (node.includes && node.includes.length) {\n          var i = 0;\n\n          do {\n            this.include(node.includes[i++], parent);\n          } while (i < node.includes.length);\n        }\n      }\n\n      if (source) {\n        included.src = source;\n      }\n\n      return node.name;\n    } else {\n      throw new Error('Include not found.');\n    }\n  },\n  colorToVectorProperties: function colorToVectorProperties(color) {\n    return color.replace('r', 'x').replace('g', 'y').replace('b', 'z').replace('a', 'w');\n  },\n  colorToVector: function colorToVector(color) {\n    return color.replace(/c/g, 'v3');\n  },\n  getIncludes: function getIncludes(type, shader) {\n    return this.includes[type][shader || this.shader];\n  },\n  getIncludesCode: function () {\n    function sortByPosition(a, b) {\n      return a.deps.length - b.deps.length;\n    }\n\n    return function getIncludesCode(type, shader) {\n      var includes = this.getIncludes(type, shader);\n      if (!includes) return '';\n      var code = '',\n          includes = includes.sort(sortByPosition);\n\n      for (var i = 0; i < includes.length; i++) {\n        if (includes[i].src) code += includes[i].src + '\\n';\n      }\n\n      return code;\n    };\n  }(),\n  getConstructorFromLength: function getConstructorFromLength(len) {\n    return constructors[len - 1];\n  },\n  isTypeMatrix: function isTypeMatrix(format) {\n    return /^m/.test(format);\n  },\n  getTypeLength: function getTypeLength(type) {\n    if (type === 'f') return 1;\n    return parseInt(this.colorToVector(type).substr(1));\n  },\n  getTypeFromLength: function getTypeFromLength(len) {\n    if (len === 1) return 'f';\n    return 'v' + len;\n  },\n  findNode: function findNode() {\n    for (var i = 0; i < arguments.length; i++) {\n      var nodeCandidate = arguments[i];\n\n      if (nodeCandidate !== undefined && nodeCandidate.isNode) {\n        return nodeCandidate;\n      }\n    }\n  },\n  resolve: function resolve() {\n    for (var i = 0; i < arguments.length; i++) {\n      var nodeCandidate = arguments[i];\n\n      if (nodeCandidate !== undefined) {\n        if (nodeCandidate.isNode) {\n          return nodeCandidate;\n        } else if (nodeCandidate.isTexture) {\n          switch (nodeCandidate.mapping) {\n            case _three.CubeReflectionMapping:\n            case _three.CubeRefractionMapping:\n              return new _CubeTextureNode.CubeTextureNode(nodeCandidate);\n\n            case _three.CubeUVReflectionMapping:\n            case _three.CubeUVRefractionMapping:\n              return new _TextureCubeNode.TextureCubeNode(new _TextureNode.TextureNode(nodeCandidate));\n\n            default:\n              return new _TextureNode.TextureNode(nodeCandidate);\n          }\n        } else if (nodeCandidate.isVector2) {\n          return new _Vector2Node.Vector2Node(nodeCandidate);\n        } else if (nodeCandidate.isVector3) {\n          return new _Vector3Node.Vector3Node(nodeCandidate);\n        } else if (nodeCandidate.isVector4) {\n          return new _Vector4Node.Vector4Node(nodeCandidate);\n        }\n      }\n    }\n  },\n  format: function format(code, from, to) {\n    var typeToType = this.colorToVector(to + ' <- ' + from);\n\n    switch (typeToType) {\n      case 'f <- v2':\n        return code + '.x';\n\n      case 'f <- v3':\n        return code + '.x';\n\n      case 'f <- v4':\n        return code + '.x';\n\n      case 'f <- i':\n      case 'f <- b':\n        return 'float( ' + code + ' )';\n\n      case 'v2 <- f':\n        return 'vec2( ' + code + ' )';\n\n      case 'v2 <- v3':\n        return code + '.xy';\n\n      case 'v2 <- v4':\n        return code + '.xy';\n\n      case 'v2 <- i':\n      case 'v2 <- b':\n        return 'vec2( float( ' + code + ' ) )';\n\n      case 'v3 <- f':\n        return 'vec3( ' + code + ' )';\n\n      case 'v3 <- v2':\n        return 'vec3( ' + code + ', 0.0 )';\n\n      case 'v3 <- v4':\n        return code + '.xyz';\n\n      case 'v3 <- i':\n      case 'v3 <- b':\n        return 'vec2( float( ' + code + ' ) )';\n\n      case 'v4 <- f':\n        return 'vec4( ' + code + ' )';\n\n      case 'v4 <- v2':\n        return 'vec4( ' + code + ', 0.0, 1.0 )';\n\n      case 'v4 <- v3':\n        return 'vec4( ' + code + ', 1.0 )';\n\n      case 'v4 <- i':\n      case 'v4 <- b':\n        return 'vec4( float( ' + code + ' ) )';\n\n      case 'i <- f':\n      case 'i <- b':\n        return 'int( ' + code + ' )';\n\n      case 'i <- v2':\n        return 'int( ' + code + '.x )';\n\n      case 'i <- v3':\n        return 'int( ' + code + '.x )';\n\n      case 'i <- v4':\n        return 'int( ' + code + '.x )';\n\n      case 'b <- f':\n        return '( ' + code + ' != 0.0 )';\n\n      case 'b <- v2':\n        return '( ' + code + ' != vec2( 0.0 ) )';\n\n      case 'b <- v3':\n        return '( ' + code + ' != vec3( 0.0 ) )';\n\n      case 'b <- v4':\n        return '( ' + code + ' != vec4( 0.0 ) )';\n\n      case 'b <- i':\n        return '( ' + code + ' != 0 )';\n    }\n\n    return code;\n  },\n  getTypeByFormat: function getTypeByFormat(format) {\n    return convertFormatToType[format] || format;\n  },\n  getFormatByType: function getFormatByType(type) {\n    return convertTypeToFormat[type] || type;\n  },\n  getUuid: function getUuid(uuid, useCache) {\n    useCache = useCache !== undefined ? useCache : true;\n    if (useCache && this.cache) uuid = this.cache + '-' + uuid;\n    return uuid;\n  },\n  getElementByIndex: function getElementByIndex(index) {\n    return elements[index];\n  },\n  getIndexByElement: function getIndexByElement(elm) {\n    return elements.indexOf(elm);\n  },\n  isShader: function isShader(shader) {\n    return this.shader === shader;\n  },\n  setShader: function setShader(shader) {\n    this.shader = shader;\n    return this;\n  },\n  mergeDefines: function mergeDefines(defines) {\n    for (var name in defines) {\n      this.defines[name] = defines[name];\n    }\n\n    return this.defines;\n  },\n  mergeUniform: function mergeUniform(uniforms) {\n    for (var name in uniforms) {\n      this.uniforms[name] = uniforms[name];\n    }\n\n    return this.uniforms;\n  },\n  getTextureEncodingFromMap: function getTextureEncodingFromMap(map) {\n    var encoding;\n\n    if (!map) {\n      encoding = _three.LinearEncoding;\n    } else if (map.isTexture) {\n      encoding = map.encoding;\n    } else if (map.isWebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    }\n\n    if (encoding === _three.LinearEncoding && this.context.gamma) {\n      encoding = _three.GammaEncoding;\n    }\n\n    return encoding;\n  }\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$module$node_modules$three_stdlib$nodes$core$FunctionNode","~$module$node_modules$three_stdlib$nodes$inputs$Vector3Node","~$module$node_modules$three_stdlib$nodes$core$StructNode","~$module$node_modules$three_stdlib$nodes$core$NodeUtils","~$module$node_modules$three_stdlib$nodes$inputs$Vector2Node","~$shadow.js","~$module$node_modules$three_stdlib$nodes$misc$TextureCubeNode","~$module$node_modules$three_stdlib$nodes$inputs$Vector4Node","~$module$node_modules$three_stdlib$nodes$core$NodeLib","~$module$node_modules$three_stdlib$nodes$core$NodeUniform","~$module$node_modules$three_stdlib$nodes$inputs$CubeTextureNode","~$module$node_modules$three_stdlib$nodes$inputs$TextureNode","~$module$node_modules$three_stdlib$nodes$core$ConstNode"]],"~:properties",["^5",["addCache","extensions","nodeCode","setShader","parsCode","addVertexParsCode","getTextureEncodingFromMap","clearFragmentNodeCode","includes","removeFlow","getFormatByType","removeCache","renderer","list","m3","resolve","getIncludes","f","slots","mergeDefines","needsUpdate","v3","addFlow","prototype","nodeData","v4","transparent","removeContext","clearVertexNodeCode","resultCode","m4","addVertexCode","getCode","mergeUniform","fog","lights","createFragmentUniform","slot","addVaryCode","colorToVector","__esModule","setMaterial","isCache","buildShader","require","getTempVar","fragment","vec3","addFragmentParsCode","defines","isTypeMatrix","src","caches","findNode","getAttribute","cache","clearNodeCode","name","removeSlot","isShader","addContext","value","bool","getIndexByElement","context","mat4","finalCode","updaters","NodeBuilder","define","vec4","build","addFragmentCode","include","getUuid","isSlot","analyzing","addSlot","getNodeData","addFragmentNodeCode","functions","addFinalCode","addParsCode","keywords","t","varying","addCode","nodes","uv","attributes","addFragmentFinalCode","deps","colorToVectorProperties","getIncludesCode","getTypeLength","i","type","b","prefixCode","tc","extra","structs","isDefined","vertex","inputs","vec2","addNodeCode","uniforms","shader","contexts","requires","addVertexFinalCode","color","irradiance","getVars","code","getTypeFromLength","getConstructorFromLength","addVertexNodeCode","c","getTypeByFormat","createVertexUniform","node","getElementByIndex","createUniform","format","v2","constructor","getVar","getVarListCode","vars","material","consts"]],"~:compiled-at",1630917515240,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$core$NodeBuilder.js\",\n\"lineCount\":27,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/core/NodeBuilder.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$core$NodeBuilder\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.NodeBuilder = NodeBuilder;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _NodeUniform = require(\\\"./NodeUniform.js\\\");\\n\\nvar _NodeUtils = require(\\\"./NodeUtils.js\\\");\\n\\nvar _NodeLib = require(\\\"./NodeLib.js\\\");\\n\\nvar _FunctionNode = require(\\\"./FunctionNode.js\\\");\\n\\nvar _ConstNode = require(\\\"./ConstNode.js\\\");\\n\\nvar _StructNode = require(\\\"./StructNode.js\\\");\\n\\nvar _Vector2Node = require(\\\"../inputs/Vector2Node.js\\\");\\n\\nvar _Vector3Node = require(\\\"../inputs/Vector3Node.js\\\");\\n\\nvar _Vector4Node = require(\\\"../inputs/Vector4Node.js\\\");\\n\\nvar _TextureNode = require(\\\"../inputs/TextureNode.js\\\");\\n\\nvar _CubeTextureNode = require(\\\"../inputs/CubeTextureNode.js\\\");\\n\\nvar _TextureCubeNode = require(\\\"../misc/TextureCubeNode.js\\\");\\n\\nvar elements = _NodeUtils.NodeUtils.elements,\\n    constructors = ['float', 'vec2', 'vec3', 'vec4'],\\n    convertFormatToType = {\\n  \\\"float\\\": 'f',\\n  vec2: 'v2',\\n  vec3: 'v3',\\n  vec4: 'v4',\\n  mat4: 'v4',\\n  \\\"int\\\": 'i',\\n  bool: 'b'\\n},\\n    convertTypeToFormat = {\\n  t: 'sampler2D',\\n  tc: 'samplerCube',\\n  b: 'bool',\\n  i: 'int',\\n  f: 'float',\\n  c: 'vec3',\\n  v2: 'vec2',\\n  v3: 'vec3',\\n  v4: 'vec4',\\n  m3: 'mat3',\\n  m4: 'mat4'\\n};\\n\\nfunction NodeBuilder() {\\n  this.slots = [];\\n  this.caches = [];\\n  this.contexts = [];\\n  this.keywords = {};\\n  this.nodeData = {};\\n  this.requires = {\\n    uv: [],\\n    color: [],\\n    lights: false,\\n    fog: false,\\n    transparent: false,\\n    irradiance: false\\n  };\\n  this.includes = {\\n    consts: [],\\n    functions: [],\\n    structs: []\\n  };\\n  this.attributes = {};\\n  this.prefixCode = ['#ifdef TEXTURE_LOD_EXT', '\\t#define texCube(a, b) textureCube(a, b)', '\\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)', '\\t#define tex2D(a, b) texture2D(a, b)', '\\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)', '#else', '\\t#define texCube(a, b) textureCube(a, b)', '\\t#define texCubeBias(a, b, c) textureCube(a, b, c)', '\\t#define tex2D(a, b) texture2D(a, b)', '\\t#define tex2DBias(a, b, c) texture2D(a, b, c)', '#endif', '#include <packing>', '#include <common>'].join('\\\\n');\\n  this.parsCode = {\\n    vertex: '',\\n    fragment: ''\\n  };\\n  this.code = {\\n    vertex: '',\\n    fragment: ''\\n  };\\n  this.nodeCode = {\\n    vertex: '',\\n    fragment: ''\\n  };\\n  this.resultCode = {\\n    vertex: '',\\n    fragment: ''\\n  };\\n  this.finalCode = {\\n    vertex: '',\\n    fragment: ''\\n  };\\n  this.inputs = {\\n    uniforms: {\\n      list: [],\\n      vertex: [],\\n      fragment: []\\n    },\\n    vars: {\\n      varying: [],\\n      vertex: [],\\n      fragment: []\\n    }\\n  }; // send to material\\n\\n  this.defines = {};\\n  this.uniforms = {};\\n  this.extensions = {};\\n  this.updaters = [];\\n  this.nodes = []; // --\\n\\n  this.analyzing = false;\\n}\\n\\nNodeBuilder.prototype = {\\n  constructor: NodeBuilder,\\n  build: function build(vertex, fragment) {\\n    this.buildShader('vertex', vertex);\\n    this.buildShader('fragment', fragment);\\n\\n    for (var i = 0; i < this.requires.uv.length; i++) {\\n      if (this.requires.uv[i]) {\\n        var uvIndex = i > 0 ? i + 1 : '';\\n        this.addVaryCode('varying vec2 vUv' + uvIndex + ';');\\n\\n        if (i > 0) {\\n          this.addVertexParsCode('attribute vec2 uv' + uvIndex + ';');\\n        }\\n\\n        this.addVertexFinalCode('vUv' + uvIndex + ' = uv' + uvIndex + ';');\\n      }\\n    }\\n\\n    if (this.requires.color[0]) {\\n      this.addVaryCode('varying vec4 vColor;');\\n      this.addVertexParsCode('attribute vec4 color;');\\n      this.addVertexFinalCode('vColor = color;');\\n    }\\n\\n    if (this.requires.color[1]) {\\n      this.addVaryCode('varying vec4 vColor2;');\\n      this.addVertexParsCode('attribute vec4 color2;');\\n      this.addVertexFinalCode('vColor2 = color2;');\\n    }\\n\\n    if (this.requires.position) {\\n      this.addVaryCode('varying vec3 vPosition;');\\n      this.addVertexFinalCode('vPosition = transformed;');\\n    }\\n\\n    if (this.requires.worldPosition) {\\n      this.addVaryCode('varying vec3 vWPosition;');\\n      this.addVertexFinalCode('vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;');\\n    }\\n\\n    if (this.requires.normal) {\\n      this.addVaryCode('varying vec3 vObjectNormal;');\\n      this.addVertexFinalCode('vObjectNormal = normal;');\\n    }\\n\\n    if (this.requires.worldNormal) {\\n      this.addVaryCode('varying vec3 vWNormal;');\\n      this.addVertexFinalCode('vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;');\\n    }\\n\\n    return this;\\n  },\\n  buildShader: function buildShader(shader, node) {\\n    this.resultCode[shader] = node.build(this.setShader(shader), 'v4');\\n  },\\n  setMaterial: function setMaterial(material, renderer) {\\n    this.material = material;\\n    this.renderer = renderer;\\n    this.requires.lights = material.lights;\\n    this.requires.fog = material.fog;\\n    this.mergeDefines(material.defines);\\n    return this;\\n  },\\n  addFlow: function addFlow(slot, cache, context) {\\n    return this.addSlot(slot).addCache(cache).addContext(context);\\n  },\\n  removeFlow: function removeFlow() {\\n    return this.removeSlot().removeCache().removeContext();\\n  },\\n  addCache: function addCache(name) {\\n    this.cache = name || '';\\n    this.caches.push(this.cache);\\n    return this;\\n  },\\n  removeCache: function removeCache() {\\n    this.caches.pop();\\n    this.cache = this.caches[this.caches.length - 1] || '';\\n    return this;\\n  },\\n  addContext: function addContext(context) {\\n    this.context = Object.assign({}, this.context, context);\\n    this.context.extra = this.context.extra || {};\\n    this.contexts.push(this.context);\\n    return this;\\n  },\\n  removeContext: function removeContext() {\\n    this.contexts.pop();\\n    this.context = this.contexts[this.contexts.length - 1] || {};\\n    return this;\\n  },\\n  addSlot: function addSlot(name) {\\n    this.slot = name || '';\\n    this.slots.push(this.slot);\\n    return this;\\n  },\\n  removeSlot: function removeSlot() {\\n    this.slots.pop();\\n    this.slot = this.slots[this.slots.length - 1] || '';\\n    return this;\\n  },\\n  addVertexCode: function addVertexCode(code) {\\n    this.addCode(code, 'vertex');\\n  },\\n  addFragmentCode: function addFragmentCode(code) {\\n    this.addCode(code, 'fragment');\\n  },\\n  addCode: function addCode(code, shader) {\\n    this.code[shader || this.shader] += code + '\\\\n';\\n  },\\n  addVertexNodeCode: function addVertexNodeCode(code) {\\n    this.addNodeCode(code, 'vertex');\\n  },\\n  addFragmentNodeCode: function addFragmentNodeCode(code) {\\n    this.addNodeCode(code, 'fragment');\\n  },\\n  addNodeCode: function addNodeCode(code, shader) {\\n    this.nodeCode[shader || this.shader] += code + '\\\\n';\\n  },\\n  clearNodeCode: function clearNodeCode(shader) {\\n    shader = shader || this.shader;\\n    var code = this.nodeCode[shader];\\n    this.nodeCode[shader] = '';\\n    return code;\\n  },\\n  clearVertexNodeCode: function clearVertexNodeCode() {\\n    return this.clearNodeCode('vertex');\\n  },\\n  clearFragmentNodeCode: function clearFragmentNodeCode() {\\n    return this.clearNodeCode('fragment');\\n  },\\n  addVertexFinalCode: function addVertexFinalCode(code) {\\n    this.addFinalCode(code, 'vertex');\\n  },\\n  addFragmentFinalCode: function addFragmentFinalCode(code) {\\n    this.addFinalCode(code, 'fragment');\\n  },\\n  addFinalCode: function addFinalCode(code, shader) {\\n    this.finalCode[shader || this.shader] += code + '\\\\n';\\n  },\\n  addVertexParsCode: function addVertexParsCode(code) {\\n    this.addParsCode(code, 'vertex');\\n  },\\n  addFragmentParsCode: function addFragmentParsCode(code) {\\n    this.addParsCode(code, 'fragment');\\n  },\\n  addParsCode: function addParsCode(code, shader) {\\n    this.parsCode[shader || this.shader] += code + '\\\\n';\\n  },\\n  addVaryCode: function addVaryCode(code) {\\n    this.addVertexParsCode(code);\\n    this.addFragmentParsCode(code);\\n  },\\n  isCache: function isCache(name) {\\n    return this.caches.indexOf(name) !== -1;\\n  },\\n  isSlot: function isSlot(name) {\\n    return this.slots.indexOf(name) !== -1;\\n  },\\n  define: function define(name, value) {\\n    this.defines[name] = value === undefined ? 1 : value;\\n  },\\n  require: function require(name) {\\n    this.requires[name] = true;\\n  },\\n  isDefined: function isDefined(name) {\\n    return this.defines[name] !== undefined;\\n  },\\n  getVar: function getVar(uuid, type, ns) {\\n    var shader = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'varying';\\n    var prefix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'V';\\n    var label = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\\n    var vars = this.getVars(shader),\\n        data = vars[uuid];\\n\\n    if (!data) {\\n      var index = vars.length,\\n          name = ns ? ns : 'node' + prefix + index + (label ? '_' + label : '');\\n      data = {\\n        name: name,\\n        type: type\\n      };\\n      vars.push(data);\\n      vars[uuid] = data;\\n    }\\n\\n    return data;\\n  },\\n  getTempVar: function getTempVar(uuid, type, ns, label) {\\n    return this.getVar(uuid, type, ns, this.shader, 'T', label);\\n  },\\n  getAttribute: function getAttribute(name, type) {\\n    if (!this.attributes[name]) {\\n      var varying = this.getVar(name, type);\\n      this.addVertexParsCode('attribute ' + type + ' ' + name + ';');\\n      this.addVertexFinalCode(varying.name + ' = ' + name + ';');\\n      this.attributes[name] = {\\n        varying: varying,\\n        name: name,\\n        type: type\\n      };\\n    }\\n\\n    return this.attributes[name];\\n  },\\n  getCode: function getCode(shader) {\\n    return [this.prefixCode, this.parsCode[shader], this.getVarListCode(this.getVars('varying'), 'varying'), this.getVarListCode(this.inputs.uniforms[shader], 'uniform'), this.getIncludesCode('consts', shader), this.getIncludesCode('structs', shader), this.getIncludesCode('functions', shader), 'void main() {', this.getVarListCode(this.getVars(shader)), this.code[shader], this.resultCode[shader], this.finalCode[shader], '}'].join('\\\\n');\\n  },\\n  getVarListCode: function getVarListCode(vars, prefix) {\\n    prefix = prefix || '';\\n    var code = '';\\n\\n    for (var i = 0, l = vars.length; i < l; ++i) {\\n      var nVar = vars[i],\\n          type = nVar.type,\\n          name = nVar.name;\\n      var formatType = this.getFormatByType(type);\\n\\n      if (formatType === undefined) {\\n        throw new Error('Node pars ' + formatType + ' not found.');\\n      }\\n\\n      code += prefix + ' ' + formatType + ' ' + name + ';\\\\n';\\n    }\\n\\n    return code;\\n  },\\n  getVars: function getVars(shader) {\\n    return this.inputs.vars[shader || this.shader];\\n  },\\n  getNodeData: function getNodeData(node) {\\n    var uuid = node.isNode ? node.uuid : node;\\n    return this.nodeData[uuid] = this.nodeData[uuid] || {};\\n  },\\n  createUniform: function createUniform(shader, type, node, ns, needsUpdate, label) {\\n    var uniforms = this.inputs.uniforms,\\n        index = uniforms.list.length;\\n    var uniform = new _NodeUniform.NodeUniform({\\n      type: type,\\n      name: ns ? ns : 'nodeU' + index + (label ? '_' + label : ''),\\n      node: node,\\n      needsUpdate: needsUpdate\\n    });\\n    uniforms.list.push(uniform);\\n    uniforms[shader].push(uniform);\\n    uniforms[shader][uniform.name] = uniform;\\n    this.uniforms[uniform.name] = uniform;\\n    return uniform;\\n  },\\n  createVertexUniform: function createVertexUniform(type, node, ns, needsUpdate, label) {\\n    return this.createUniform('vertex', type, node, ns, needsUpdate, label);\\n  },\\n  createFragmentUniform: function createFragmentUniform(type, node, ns, needsUpdate, label) {\\n    return this.createUniform('fragment', type, node, ns, needsUpdate, label);\\n  },\\n  include: function include(node, parent, source) {\\n    var includesStruct;\\n    node = typeof node === 'string' ? _NodeLib.NodeLib.get(node) : node;\\n\\n    if (this.context.include === false) {\\n      return node.name;\\n    }\\n\\n    if (node instanceof _FunctionNode.FunctionNode) {\\n      includesStruct = this.includes.functions;\\n    } else if (node instanceof _ConstNode.ConstNode) {\\n      includesStruct = this.includes.consts;\\n    } else if (node instanceof _StructNode.StructNode) {\\n      includesStruct = this.includes.structs;\\n    }\\n\\n    var includes = includesStruct[this.shader] = includesStruct[this.shader] || [];\\n\\n    if (node) {\\n      var included = includes[node.name];\\n\\n      if (!included) {\\n        included = includes[node.name] = {\\n          node: node,\\n          deps: []\\n        };\\n        includes.push(included);\\n        included.src = node.build(this, 'source');\\n      }\\n\\n      if (node instanceof _FunctionNode.FunctionNode && parent && includes[parent.name] && includes[parent.name].deps.indexOf(node) == -1) {\\n        includes[parent.name].deps.push(node);\\n\\n        if (node.includes && node.includes.length) {\\n          var i = 0;\\n\\n          do {\\n            this.include(node.includes[i++], parent);\\n          } while (i < node.includes.length);\\n        }\\n      }\\n\\n      if (source) {\\n        included.src = source;\\n      }\\n\\n      return node.name;\\n    } else {\\n      throw new Error('Include not found.');\\n    }\\n  },\\n  colorToVectorProperties: function colorToVectorProperties(color) {\\n    return color.replace('r', 'x').replace('g', 'y').replace('b', 'z').replace('a', 'w');\\n  },\\n  colorToVector: function colorToVector(color) {\\n    return color.replace(/c/g, 'v3');\\n  },\\n  getIncludes: function getIncludes(type, shader) {\\n    return this.includes[type][shader || this.shader];\\n  },\\n  getIncludesCode: function () {\\n    function sortByPosition(a, b) {\\n      return a.deps.length - b.deps.length;\\n    }\\n\\n    return function getIncludesCode(type, shader) {\\n      var includes = this.getIncludes(type, shader);\\n      if (!includes) return '';\\n      var code = '',\\n          includes = includes.sort(sortByPosition);\\n\\n      for (var i = 0; i < includes.length; i++) {\\n        if (includes[i].src) code += includes[i].src + '\\\\n';\\n      }\\n\\n      return code;\\n    };\\n  }(),\\n  getConstructorFromLength: function getConstructorFromLength(len) {\\n    return constructors[len - 1];\\n  },\\n  isTypeMatrix: function isTypeMatrix(format) {\\n    return /^m/.test(format);\\n  },\\n  getTypeLength: function getTypeLength(type) {\\n    if (type === 'f') return 1;\\n    return parseInt(this.colorToVector(type).substr(1));\\n  },\\n  getTypeFromLength: function getTypeFromLength(len) {\\n    if (len === 1) return 'f';\\n    return 'v' + len;\\n  },\\n  findNode: function findNode() {\\n    for (var i = 0; i < arguments.length; i++) {\\n      var nodeCandidate = arguments[i];\\n\\n      if (nodeCandidate !== undefined && nodeCandidate.isNode) {\\n        return nodeCandidate;\\n      }\\n    }\\n  },\\n  resolve: function resolve() {\\n    for (var i = 0; i < arguments.length; i++) {\\n      var nodeCandidate = arguments[i];\\n\\n      if (nodeCandidate !== undefined) {\\n        if (nodeCandidate.isNode) {\\n          return nodeCandidate;\\n        } else if (nodeCandidate.isTexture) {\\n          switch (nodeCandidate.mapping) {\\n            case _three.CubeReflectionMapping:\\n            case _three.CubeRefractionMapping:\\n              return new _CubeTextureNode.CubeTextureNode(nodeCandidate);\\n\\n            case _three.CubeUVReflectionMapping:\\n            case _three.CubeUVRefractionMapping:\\n              return new _TextureCubeNode.TextureCubeNode(new _TextureNode.TextureNode(nodeCandidate));\\n\\n            default:\\n              return new _TextureNode.TextureNode(nodeCandidate);\\n          }\\n        } else if (nodeCandidate.isVector2) {\\n          return new _Vector2Node.Vector2Node(nodeCandidate);\\n        } else if (nodeCandidate.isVector3) {\\n          return new _Vector3Node.Vector3Node(nodeCandidate);\\n        } else if (nodeCandidate.isVector4) {\\n          return new _Vector4Node.Vector4Node(nodeCandidate);\\n        }\\n      }\\n    }\\n  },\\n  format: function format(code, from, to) {\\n    var typeToType = this.colorToVector(to + ' <- ' + from);\\n\\n    switch (typeToType) {\\n      case 'f <- v2':\\n        return code + '.x';\\n\\n      case 'f <- v3':\\n        return code + '.x';\\n\\n      case 'f <- v4':\\n        return code + '.x';\\n\\n      case 'f <- i':\\n      case 'f <- b':\\n        return 'float( ' + code + ' )';\\n\\n      case 'v2 <- f':\\n        return 'vec2( ' + code + ' )';\\n\\n      case 'v2 <- v3':\\n        return code + '.xy';\\n\\n      case 'v2 <- v4':\\n        return code + '.xy';\\n\\n      case 'v2 <- i':\\n      case 'v2 <- b':\\n        return 'vec2( float( ' + code + ' ) )';\\n\\n      case 'v3 <- f':\\n        return 'vec3( ' + code + ' )';\\n\\n      case 'v3 <- v2':\\n        return 'vec3( ' + code + ', 0.0 )';\\n\\n      case 'v3 <- v4':\\n        return code + '.xyz';\\n\\n      case 'v3 <- i':\\n      case 'v3 <- b':\\n        return 'vec2( float( ' + code + ' ) )';\\n\\n      case 'v4 <- f':\\n        return 'vec4( ' + code + ' )';\\n\\n      case 'v4 <- v2':\\n        return 'vec4( ' + code + ', 0.0, 1.0 )';\\n\\n      case 'v4 <- v3':\\n        return 'vec4( ' + code + ', 1.0 )';\\n\\n      case 'v4 <- i':\\n      case 'v4 <- b':\\n        return 'vec4( float( ' + code + ' ) )';\\n\\n      case 'i <- f':\\n      case 'i <- b':\\n        return 'int( ' + code + ' )';\\n\\n      case 'i <- v2':\\n        return 'int( ' + code + '.x )';\\n\\n      case 'i <- v3':\\n        return 'int( ' + code + '.x )';\\n\\n      case 'i <- v4':\\n        return 'int( ' + code + '.x )';\\n\\n      case 'b <- f':\\n        return '( ' + code + ' != 0.0 )';\\n\\n      case 'b <- v2':\\n        return '( ' + code + ' != vec2( 0.0 ) )';\\n\\n      case 'b <- v3':\\n        return '( ' + code + ' != vec3( 0.0 ) )';\\n\\n      case 'b <- v4':\\n        return '( ' + code + ' != vec4( 0.0 ) )';\\n\\n      case 'b <- i':\\n        return '( ' + code + ' != 0 )';\\n    }\\n\\n    return code;\\n  },\\n  getTypeByFormat: function getTypeByFormat(format) {\\n    return convertFormatToType[format] || format;\\n  },\\n  getFormatByType: function getFormatByType(type) {\\n    return convertTypeToFormat[type] || type;\\n  },\\n  getUuid: function getUuid(uuid, useCache) {\\n    useCache = useCache !== undefined ? useCache : true;\\n    if (useCache && this.cache) uuid = this.cache + '-' + uuid;\\n    return uuid;\\n  },\\n  getElementByIndex: function getElementByIndex(index) {\\n    return elements[index];\\n  },\\n  getIndexByElement: function getIndexByElement(elm) {\\n    return elements.indexOf(elm);\\n  },\\n  isShader: function isShader(shader) {\\n    return this.shader === shader;\\n  },\\n  setShader: function setShader(shader) {\\n    this.shader = shader;\\n    return this;\\n  },\\n  mergeDefines: function mergeDefines(defines) {\\n    for (var name in defines) {\\n      this.defines[name] = defines[name];\\n    }\\n\\n    return this.defines;\\n  },\\n  mergeUniform: function mergeUniform(uniforms) {\\n    for (var name in uniforms) {\\n      this.uniforms[name] = uniforms[name];\\n    }\\n\\n    return this.uniforms;\\n  },\\n  getTextureEncodingFromMap: function getTextureEncodingFromMap(map) {\\n    var encoding;\\n\\n    if (!map) {\\n      encoding = _three.LinearEncoding;\\n    } else if (map.isTexture) {\\n      encoding = map.encoding;\\n    } else if (map.isWebGLRenderTarget) {\\n      console.warn(\\\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\\\");\\n      encoding = map.texture.encoding;\\n    }\\n\\n    if (encoding === _three.LinearEncoding && this.context.gamma) {\\n      encoding = _three.GammaEncoding;\\n    }\\n\\n    return encoding;\\n  }\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"NodeBuilder\",\"slots\",\"caches\",\"contexts\",\"keywords\",\"nodeData\",\"requires\",\"uv\",\"color\",\"lights\",\"fog\",\"transparent\",\"irradiance\",\"includes\",\"consts\",\"functions\",\"structs\",\"attributes\",\"prefixCode\",\"parsCode\",\"vertex\",\"fragment\",\"code\",\"nodeCode\",\"resultCode\",\"finalCode\",\"inputs\",\"uniforms\",\"list\",\"vars\",\"varying\",\"defines\",\"extensions\",\"updaters\",\"nodes\",\"analyzing\",\"Object\",\"defineProperty\",\"value\",\"_three\",\"_NodeUniform\",\"_NodeUtils\",\"_NodeLib\",\"_FunctionNode\",\"_ConstNode\",\"_StructNode\",\"_Vector2Node\",\"_Vector3Node\",\"_Vector4Node\",\"_TextureNode\",\"_CubeTextureNode\",\"_TextureCubeNode\",\"elements\",\"NodeUtils\",\"constructors\",\"convertFormatToType\",\"vec2\",\"vec3\",\"vec4\",\"mat4\",\"bool\",\"convertTypeToFormat\",\"t\",\"tc\",\"b\",\"i\",\"f\",\"c\",\"v2\",\"v3\",\"v4\",\"m3\",\"m4\",\"prototype\",\"constructor\",\"build\",\"buildShader\",\"length\",\"uvIndex\",\"addVaryCode\",\"addVertexParsCode\",\"addVertexFinalCode\",\"position\",\"worldPosition\",\"normal\",\"worldNormal\",\"shader\",\"node\",\"setShader\",\"setMaterial\",\"material\",\"renderer\",\"mergeDefines\",\"addFlow\",\"slot\",\"cache\",\"context\",\"addSlot\",\"addCache\",\"addContext\",\"removeFlow\",\"removeSlot\",\"removeCache\",\"removeContext\",\"name\",\"push\",\"pop\",\"assign\",\"extra\",\"addVertexCode\",\"addCode\",\"addFragmentCode\",\"addVertexNodeCode\",\"addNodeCode\",\"addFragmentNodeCode\",\"clearNodeCode\",\"clearVertexNodeCode\",\"clearFragmentNodeCode\",\"addFinalCode\",\"addFragmentFinalCode\",\"addParsCode\",\"addFragmentParsCode\",\"isCache\",\"indexOf\",\"isSlot\",\"define\",\"undefined\",\"isDefined\",\"getVar\",\"uuid\",\"type\",\"ns\",\"prefix\",\"arguments\",\"label\",\"getVars\",\"data\",\"index\",\"getTempVar\",\"getAttribute\",\"getCode\",\"getVarListCode\",\"getIncludesCode\",\"join\",\"l\",\"nVar\",\"formatType\",\"getFormatByType\",\"Error\",\"getNodeData\",\"isNode\",\"createUniform\",\"needsUpdate\",\"uniform\",\"NodeUniform\",\"createVertexUniform\",\"createFragmentUniform\",\"include\",\"parent\",\"source\",\"NodeLib\",\"get\",\"FunctionNode\",\"includesStruct\",\"ConstNode\",\"StructNode\",\"included\",\"deps\",\"src\",\"colorToVectorProperties\",\"replace\",\"colorToVector\",\"getIncludes\",\"sortByPosition\",\"a\",\"sort\",\"getConstructorFromLength\",\"len\",\"isTypeMatrix\",\"format\",\"test\",\"getTypeLength\",\"parseInt\",\"substr\",\"getTypeFromLength\",\"findNode\",\"nodeCandidate\",\"resolve\",\"isTexture\",\"mapping\",\"CubeReflectionMapping\",\"CubeRefractionMapping\",\"CubeTextureNode\",\"CubeUVReflectionMapping\",\"CubeUVRefractionMapping\",\"TextureCubeNode\",\"TextureNode\",\"isVector2\",\"Vector2Node\",\"isVector3\",\"Vector3Node\",\"isVector4\",\"Vector4Node\",\"from\",\"to\",\"typeToType\",\"getTypeByFormat\",\"getUuid\",\"useCache\",\"getElementByIndex\",\"getIndexByElement\",\"elm\",\"isShader\",\"mergeUniform\",\"getTextureEncodingFromMap\",\"map\",\"encoding\",\"isWebGLRenderTarget\",\"console\",\"warn\",\"texture\",\"LinearEncoding\",\"gamma\",\"GammaEncoding\"]\n}\n"]