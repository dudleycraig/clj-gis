["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/chevrotain/lib/src/parse/grammar/rest.js"],"~:js","shadow$provide.module$node_modules$chevrotain$lib$src$parse$grammar$rest=function(global,require,module,exports){function restForRepetitionWithSeparator(repSepProd,currRest,prevRest){return[new gast_public_1.Option({definition:[new gast_public_1.Terminal({terminalType:repSepProd.separator})].concat(repSepProd.definition)})].concat(currRest,prevRest)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.RestWalker=void 0;var utils_1=require(\"module$node_modules$$chevrotain$utils$lib$src$api\"),\ngast_public_1=require(\"module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_public\");global=function(){function RestWalker(){}RestWalker.prototype.walk=function(prod,prevRest){var _this=this;void 0===prevRest&&(prevRest=[]);utils_1.forEach(prod.definition,function(subProd,index){index=utils_1.drop(prod.definition,index+1);if(subProd instanceof gast_public_1.NonTerminal)_this.walkProdRef(subProd,index,prevRest);else if(subProd instanceof gast_public_1.Terminal)_this.walkTerminal(subProd,\nindex,prevRest);else if(subProd instanceof gast_public_1.Alternative)_this.walkFlat(subProd,index,prevRest);else if(subProd instanceof gast_public_1.Option)_this.walkOption(subProd,index,prevRest);else if(subProd instanceof gast_public_1.RepetitionMandatory)_this.walkAtLeastOne(subProd,index,prevRest);else if(subProd instanceof gast_public_1.RepetitionMandatoryWithSeparator)_this.walkAtLeastOneSep(subProd,index,prevRest);else if(subProd instanceof gast_public_1.RepetitionWithSeparator)_this.walkManySep(subProd,\nindex,prevRest);else if(subProd instanceof gast_public_1.Repetition)_this.walkMany(subProd,index,prevRest);else if(subProd instanceof gast_public_1.Alternation)_this.walkOr(subProd,index,prevRest);else throw Error(\"non exhaustive match\");})};RestWalker.prototype.walkTerminal=function(terminal,currRest,prevRest){};RestWalker.prototype.walkProdRef=function(refProd,currRest,prevRest){};RestWalker.prototype.walkFlat=function(flatProd,currRest,prevRest){currRest=currRest.concat(prevRest);this.walk(flatProd,\ncurrRest)};RestWalker.prototype.walkOption=function(optionProd,currRest,prevRest){currRest=currRest.concat(prevRest);this.walk(optionProd,currRest)};RestWalker.prototype.walkAtLeastOne=function(atLeastOneProd,currRest,prevRest){currRest=[new gast_public_1.Option({definition:atLeastOneProd.definition})].concat(currRest,prevRest);this.walk(atLeastOneProd,currRest)};RestWalker.prototype.walkAtLeastOneSep=function(atLeastOneSepProd,currRest,prevRest){currRest=restForRepetitionWithSeparator(atLeastOneSepProd,\ncurrRest,prevRest);this.walk(atLeastOneSepProd,currRest)};RestWalker.prototype.walkMany=function(manyProd,currRest,prevRest){currRest=[new gast_public_1.Option({definition:manyProd.definition})].concat(currRest,prevRest);this.walk(manyProd,currRest)};RestWalker.prototype.walkManySep=function(manySepProd,currRest,prevRest){currRest=restForRepetitionWithSeparator(manySepProd,currRest,prevRest);this.walk(manySepProd,currRest)};RestWalker.prototype.walkOr=function(orProd,currRest,prevRest){var _this=\nthis,fullOrRest=currRest.concat(prevRest);utils_1.forEach(orProd.definition,function(alt){alt=new gast_public_1.Alternative({definition:[alt]});_this.walk(alt,fullOrRest)})};return RestWalker}();exports.RestWalker=global}","~:source","shadow$provide[\"module$node_modules$chevrotain$lib$src$parse$grammar$rest\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestWalker = void 0;\nvar utils_1 = require(\"@chevrotain/utils\");\nvar gast_public_1 = require(\"./gast/gast_public\");\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nvar RestWalker = /** @class */ (function () {\n    function RestWalker() {\n    }\n    RestWalker.prototype.walk = function (prod, prevRest) {\n        var _this = this;\n        if (prevRest === void 0) { prevRest = []; }\n        utils_1.forEach(prod.definition, function (subProd, index) {\n            var currRest = utils_1.drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof gast_public_1.NonTerminal) {\n                _this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Terminal) {\n                _this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Alternative) {\n                _this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Option) {\n                _this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionMandatory) {\n                _this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n                _this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionWithSeparator) {\n                _this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Repetition) {\n                _this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Alternation) {\n                _this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    };\n    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };\n    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };\n    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    };\n    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    };\n    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        var fullAtLeastOneRest = [\n            new gast_public_1.Option({ definition: atLeastOneProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    };\n    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    };\n    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        var fullManyRest = [\n            new gast_public_1.Option({ definition: manyProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    };\n    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    };\n    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {\n        var _this = this;\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        var fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        utils_1.forEach(orProd.definition, function (alt) {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            var prodWrapper = new gast_public_1.Alternative({ definition: [alt] });\n            _this.walk(prodWrapper, fullOrRest);\n        });\n    };\n    return RestWalker;\n}());\nexports.RestWalker = RestWalker;\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    var repSepRest = [\n        new gast_public_1.Option({\n            definition: [new gast_public_1.Terminal({ terminalType: repSepProd.separator })].concat(repSepProd.definition)\n        })\n    ];\n    var fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$chevrotain$utils$lib$src$api","~$shadow.js","~$module$node_modules$chevrotain$lib$src$parse$grammar$gast$gast_public"]],"~:properties",["^5",["walkAtLeastOneSep","walkMany","walkManySep","RestWalker","__esModule","walkTerminal","walkOr","walkAtLeastOne","walkFlat","value","walk","definition","walkProdRef","walkOption","terminalType"]],"~:compiled-at",1630917515681,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$chevrotain$lib$src$parse$grammar$rest.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/chevrotain/lib/src/parse/grammar/rest.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$chevrotain$lib$src$parse$grammar$rest\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.RestWalker = void 0;\\nvar utils_1 = require(\\\"@chevrotain/utils\\\");\\nvar gast_public_1 = require(\\\"./gast/gast_public\\\");\\n/**\\n *  A Grammar Walker that computes the \\\"remaining\\\" grammar \\\"after\\\" a productions in the grammar.\\n */\\nvar RestWalker = /** @class */ (function () {\\n    function RestWalker() {\\n    }\\n    RestWalker.prototype.walk = function (prod, prevRest) {\\n        var _this = this;\\n        if (prevRest === void 0) { prevRest = []; }\\n        utils_1.forEach(prod.definition, function (subProd, index) {\\n            var currRest = utils_1.drop(prod.definition, index + 1);\\n            /* istanbul ignore else */\\n            if (subProd instanceof gast_public_1.NonTerminal) {\\n                _this.walkProdRef(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.Terminal) {\\n                _this.walkTerminal(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.Alternative) {\\n                _this.walkFlat(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.Option) {\\n                _this.walkOption(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.RepetitionMandatory) {\\n                _this.walkAtLeastOne(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\\n                _this.walkAtLeastOneSep(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.RepetitionWithSeparator) {\\n                _this.walkManySep(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.Repetition) {\\n                _this.walkMany(subProd, currRest, prevRest);\\n            }\\n            else if (subProd instanceof gast_public_1.Alternation) {\\n                _this.walkOr(subProd, currRest, prevRest);\\n            }\\n            else {\\n                throw Error(\\\"non exhaustive match\\\");\\n            }\\n        });\\n    };\\n    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };\\n    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };\\n    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {\\n        // ABCDEF => after the D the rest is EF\\n        var fullOrRest = currRest.concat(prevRest);\\n        this.walk(flatProd, fullOrRest);\\n    };\\n    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\\n        // ABC(DE)?F => after the (DE)? the rest is F\\n        var fullOrRest = currRest.concat(prevRest);\\n        this.walk(optionProd, fullOrRest);\\n    };\\n    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\\n        var fullAtLeastOneRest = [\\n            new gast_public_1.Option({ definition: atLeastOneProd.definition })\\n        ].concat(currRest, prevRest);\\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\\n    };\\n    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\\n        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\\n    };\\n    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\\n        var fullManyRest = [\\n            new gast_public_1.Option({ definition: manyProd.definition })\\n        ].concat(currRest, prevRest);\\n        this.walk(manyProd, fullManyRest);\\n    };\\n    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\\n        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\\n        this.walk(manySepProd, fullManySepRest);\\n    };\\n    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {\\n        var _this = this;\\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\\n        var fullOrRest = currRest.concat(prevRest);\\n        // walk all different alternatives\\n        utils_1.forEach(orProd.definition, function (alt) {\\n            // wrapping each alternative in a single definition wrapper\\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\\n            var prodWrapper = new gast_public_1.Alternative({ definition: [alt] });\\n            _this.walk(prodWrapper, fullOrRest);\\n        });\\n    };\\n    return RestWalker;\\n}());\\nexports.RestWalker = RestWalker;\\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\\n    var repSepRest = [\\n        new gast_public_1.Option({\\n            definition: [new gast_public_1.Terminal({ terminalType: repSepProd.separator })].concat(repSepProd.definition)\\n        })\\n    ];\\n    var fullRepSepRest = repSepRest.concat(currRest, prevRest);\\n    return fullRepSepRest;\\n}\\n//# sourceMappingURL=rest.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"restForRepetitionWithSeparator\",\"repSepProd\",\"currRest\",\"prevRest\",\"repSepRest\",\"gast_public_1\",\"Option\",\"definition\",\"Terminal\",\"terminalType\",\"separator\",\"concat\",\"fullRepSepRest\",\"Object\",\"defineProperty\",\"value\",\"RestWalker\",\"utils_1\",\"prototype\",\"walk\",\"RestWalker.prototype.walk\",\"prod\",\"_this\",\"forEach\",\"subProd\",\"index\",\"drop\",\"NonTerminal\",\"walkProdRef\",\"walkTerminal\",\"Alternative\",\"walkFlat\",\"walkOption\",\"RepetitionMandatory\",\"walkAtLeastOne\",\"RepetitionMandatoryWithSeparator\",\"walkAtLeastOneSep\",\"RepetitionWithSeparator\",\"walkManySep\",\"Repetition\",\"walkMany\",\"Alternation\",\"walkOr\",\"Error\",\"RestWalker.prototype.walkTerminal\",\"terminal\",\"RestWalker.prototype.walkProdRef\",\"refProd\",\"RestWalker.prototype.walkFlat\",\"flatProd\",\"fullOrRest\",\"RestWalker.prototype.walkOption\",\"optionProd\",\"RestWalker.prototype.walkAtLeastOne\",\"atLeastOneProd\",\"fullAtLeastOneRest\",\"RestWalker.prototype.walkAtLeastOneSep\",\"atLeastOneSepProd\",\"fullAtLeastOneSepRest\",\"RestWalker.prototype.walkMany\",\"manyProd\",\"fullManyRest\",\"RestWalker.prototype.walkManySep\",\"manySepProd\",\"fullManySepRest\",\"RestWalker.prototype.walkOr\",\"orProd\",\"alt\",\"prodWrapper\"]\n}\n"]