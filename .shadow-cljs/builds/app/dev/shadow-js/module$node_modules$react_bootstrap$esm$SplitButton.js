["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-bootstrap/esm/SplitButton.js"],"~:js","shadow$provide.module$node_modules$react_bootstrap$esm$SplitButton=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=void 0;var _extends2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$esm$extends\")),_objectWithoutPropertiesLoose2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$esm$objectWithoutPropertiesLoose\")),\n_react=_interopRequireDefault(require(\"module$node_modules$react$index\"));global=_interopRequireDefault(require(\"module$node_modules$prop_types$index\"));var _Button=_interopRequireDefault(require(\"module$node_modules$react_bootstrap$esm$Button\")),_ButtonGroup=_interopRequireDefault(require(\"module$node_modules$react_bootstrap$esm$ButtonGroup\")),_Dropdown=_interopRequireDefault(require(\"module$node_modules$react_bootstrap$esm$Dropdown\"));require=require(\"module$node_modules$react_bootstrap$esm$DropdownMenu\");\nvar _excluded=\"id bsPrefix size variant title type toggleLabel children onClick href target menuAlign menuRole renderMenuOnMount rootCloseEvent\".split(\" \");require={id:global[\"default\"].any,toggleLabel:global[\"default\"].string,href:global[\"default\"].string,target:global[\"default\"].string,onClick:global[\"default\"].func,title:global[\"default\"].node.isRequired,type:global[\"default\"].string,disabled:global[\"default\"].bool,menuAlign:require.alignPropType,menuRole:global[\"default\"].string,renderMenuOnMount:global[\"default\"].bool,\nrootCloseEvent:global[\"default\"].string,bsPrefix:global[\"default\"].string,variant:global[\"default\"].string,size:global[\"default\"].string};global=_react[\"default\"].forwardRef(function(_ref,ref){var id=_ref.id,bsPrefix=_ref.bsPrefix,size=_ref.size,variant=_ref.variant,title=_ref.title,type=_ref.type,toggleLabel=_ref.toggleLabel,children=_ref.children,onClick=_ref.onClick,href=_ref.href,target=_ref.target,menuAlign=_ref.menuAlign,menuRole=_ref.menuRole,renderMenuOnMount=_ref.renderMenuOnMount,rootCloseEvent=\n_ref.rootCloseEvent;_ref=(0,_objectWithoutPropertiesLoose2[\"default\"])(_ref,_excluded);return _react[\"default\"].createElement(_Dropdown[\"default\"],(0,_extends2[\"default\"])({ref},_ref,{as:_ButtonGroup[\"default\"]}),_react[\"default\"].createElement(_Button[\"default\"],{size,variant,disabled:_ref.disabled,bsPrefix,href,target,onClick,type},title),_react[\"default\"].createElement(_Dropdown[\"default\"].Toggle,{split:!0,id:id?id.toString():void 0,size,variant,disabled:_ref.disabled,childBsPrefix:bsPrefix},_react[\"default\"].createElement(\"span\",\n{className:\"sr-only\"},toggleLabel)),_react[\"default\"].createElement(_Dropdown[\"default\"].Menu,{align:menuAlign,role:menuRole,renderOnMount:renderMenuOnMount,rootCloseEvent},children))});global.propTypes=require;global.defaultProps={toggleLabel:\"Toggle dropdown\",type:\"button\"};global.displayName=\"SplitButton\";exports[\"default\"]=global}","~:source","shadow$provide[\"module$node_modules$react_bootstrap$esm$SplitButton\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _ButtonGroup = _interopRequireDefault(require(\"./ButtonGroup\"));\n\nvar _Dropdown = _interopRequireDefault(require(\"./Dropdown\"));\n\nvar _DropdownMenu = require(\"./DropdownMenu\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _excluded = [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"];\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: _propTypes[\"default\"].any,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: _propTypes[\"default\"].string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: _propTypes[\"default\"].string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: _propTypes[\"default\"].string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The content of the non-toggle Button.  */\n  title: _propTypes[\"default\"].node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: _propTypes[\"default\"].string,\n\n  /** Disables both Buttons  */\n  disabled: _propTypes[\"default\"].bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: _DropdownMenu.alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: _propTypes[\"default\"].string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: _propTypes[\"default\"].bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: _propTypes[\"default\"].string,\n\n  /** @ignore */\n  bsPrefix: _propTypes[\"default\"].string,\n\n  /** @ignore */\n  variant: _propTypes[\"default\"].string,\n\n  /** @ignore */\n  size: _propTypes[\"default\"].string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\n/**\n * A convenience component for simple or general use split button dropdowns. Renders a\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\n * props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\n * and menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar SplitButton =\n/*#__PURE__*/\n_react[\"default\"].forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      variant = _ref.variant,\n      title = _ref.title,\n      type = _ref.type,\n      toggleLabel = _ref.toggleLabel,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      target = _ref.target,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      rootCloseEvent = _ref.rootCloseEvent,\n      props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_ref, _excluded);\n  return (\n    /*#__PURE__*/\n    _react[\"default\"].createElement(_Dropdown[\"default\"], (0, _extends2[\"default\"])({\n      ref: ref\n    }, props, {\n      as: _ButtonGroup[\"default\"]\n    }),\n    /*#__PURE__*/\n    _react[\"default\"].createElement(_Button[\"default\"], {\n      size: size,\n      variant: variant,\n      disabled: props.disabled,\n      bsPrefix: bsPrefix,\n      href: href,\n      target: target,\n      onClick: onClick,\n      type: type\n    }, title),\n    /*#__PURE__*/\n    _react[\"default\"].createElement(_Dropdown[\"default\"].Toggle, {\n      split: true,\n      id: id ? id.toString() : undefined,\n      size: size,\n      variant: variant,\n      disabled: props.disabled,\n      childBsPrefix: bsPrefix\n    },\n    /*#__PURE__*/\n    _react[\"default\"].createElement(\"span\", {\n      className: \"sr-only\"\n    }, toggleLabel)),\n    /*#__PURE__*/\n    _react[\"default\"].createElement(_Dropdown[\"default\"].Menu, {\n      align: menuAlign,\n      role: menuRole,\n      renderOnMount: renderMenuOnMount,\n      rootCloseEvent: rootCloseEvent\n    }, children))\n  );\n});\n\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nvar _default = SplitButton;\nexports[\"default\"] = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_bootstrap$esm$DropdownMenu","~$module$node_modules$react_bootstrap$esm$Button","~$module$node_modules$react_bootstrap$esm$Dropdown","~$module$node_modules$react_bootstrap$esm$ButtonGroup","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$esm$extends","~$module$node_modules$$babel$runtime$helpers$esm$objectWithoutPropertiesLoose"]],"~:properties",["^5",["role","align","className","displayName","__esModule","id","renderOnMount","propTypes","menuAlign","href","value","bsPrefix","split","toggleLabel","onClick","defaultProps","rootCloseEvent","title","menuRole","type","ref","target","renderMenuOnMount","size","disabled","childBsPrefix","as","variant"]],"~:compiled-at",1630917514263,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_bootstrap$esm$SplitButton.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-bootstrap/esm/SplitButton.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_bootstrap$esm$SplitButton\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/extends\\\"));\\n\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _Button = _interopRequireDefault(require(\\\"./Button\\\"));\\n\\nvar _ButtonGroup = _interopRequireDefault(require(\\\"./ButtonGroup\\\"));\\n\\nvar _Dropdown = _interopRequireDefault(require(\\\"./Dropdown\\\"));\\n\\nvar _DropdownMenu = require(\\\"./DropdownMenu\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nvar _excluded = [\\\"id\\\", \\\"bsPrefix\\\", \\\"size\\\", \\\"variant\\\", \\\"title\\\", \\\"type\\\", \\\"toggleLabel\\\", \\\"children\\\", \\\"onClick\\\", \\\"href\\\", \\\"target\\\", \\\"menuAlign\\\", \\\"menuRole\\\", \\\"renderMenuOnMount\\\", \\\"rootCloseEvent\\\"];\\nvar propTypes = {\\n  /**\\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\\n   * @type {string|number}\\n   * @required\\n   */\\n  id: _propTypes[\\\"default\\\"].any,\\n\\n  /**\\n   * Accessible label for the toggle; the value of `title` if not specified.\\n   */\\n  toggleLabel: _propTypes[\\\"default\\\"].string,\\n\\n  /** An `href` passed to the non-toggle Button */\\n  href: _propTypes[\\\"default\\\"].string,\\n\\n  /** An anchor `target` passed to the non-toggle Button */\\n  target: _propTypes[\\\"default\\\"].string,\\n\\n  /** An `onClick` handler passed to the non-toggle Button */\\n  onClick: _propTypes[\\\"default\\\"].func,\\n\\n  /** The content of the non-toggle Button.  */\\n  title: _propTypes[\\\"default\\\"].node.isRequired,\\n\\n  /** A `type` passed to the non-toggle Button */\\n  type: _propTypes[\\\"default\\\"].string,\\n\\n  /** Disables both Buttons  */\\n  disabled: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   * Aligns the dropdown menu responsively.\\n   *\\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\\n   *\\n   * @type {\\\"left\\\"|\\\"right\\\"|{ sm: \\\"left\\\"|\\\"right\\\" }|{ md: \\\"left\\\"|\\\"right\\\" }|{ lg: \\\"left\\\"|\\\"right\\\" }|{ xl: \\\"left\\\"|\\\"right\\\"} }\\n   */\\n  menuAlign: _DropdownMenu.alignPropType,\\n\\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\\n  menuRole: _propTypes[\\\"default\\\"].string,\\n\\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\\n  renderMenuOnMount: _propTypes[\\\"default\\\"].bool,\\n\\n  /**\\n   *  Which event when fired outside the component will cause it to be closed.\\n   *\\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\\n   */\\n  rootCloseEvent: _propTypes[\\\"default\\\"].string,\\n\\n  /** @ignore */\\n  bsPrefix: _propTypes[\\\"default\\\"].string,\\n\\n  /** @ignore */\\n  variant: _propTypes[\\\"default\\\"].string,\\n\\n  /** @ignore */\\n  size: _propTypes[\\\"default\\\"].string\\n};\\nvar defaultProps = {\\n  toggleLabel: 'Toggle dropdown',\\n  type: 'button'\\n};\\n/**\\n * A convenience component for simple or general use split button dropdowns. Renders a\\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\\n * props](#dropdown-props).\\n *\\n * _All unknown props are passed through to the `Dropdown` component._\\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\\n * and menu-related props are passed to the `Dropdown.Menu`\\n */\\n\\nvar SplitButton =\\n/*#__PURE__*/\\n_react[\\\"default\\\"].forwardRef(function (_ref, ref) {\\n  var id = _ref.id,\\n      bsPrefix = _ref.bsPrefix,\\n      size = _ref.size,\\n      variant = _ref.variant,\\n      title = _ref.title,\\n      type = _ref.type,\\n      toggleLabel = _ref.toggleLabel,\\n      children = _ref.children,\\n      onClick = _ref.onClick,\\n      href = _ref.href,\\n      target = _ref.target,\\n      menuAlign = _ref.menuAlign,\\n      menuRole = _ref.menuRole,\\n      renderMenuOnMount = _ref.renderMenuOnMount,\\n      rootCloseEvent = _ref.rootCloseEvent,\\n      props = (0, _objectWithoutPropertiesLoose2[\\\"default\\\"])(_ref, _excluded);\\n  return (\\n    /*#__PURE__*/\\n    _react[\\\"default\\\"].createElement(_Dropdown[\\\"default\\\"], (0, _extends2[\\\"default\\\"])({\\n      ref: ref\\n    }, props, {\\n      as: _ButtonGroup[\\\"default\\\"]\\n    }),\\n    /*#__PURE__*/\\n    _react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n      size: size,\\n      variant: variant,\\n      disabled: props.disabled,\\n      bsPrefix: bsPrefix,\\n      href: href,\\n      target: target,\\n      onClick: onClick,\\n      type: type\\n    }, title),\\n    /*#__PURE__*/\\n    _react[\\\"default\\\"].createElement(_Dropdown[\\\"default\\\"].Toggle, {\\n      split: true,\\n      id: id ? id.toString() : undefined,\\n      size: size,\\n      variant: variant,\\n      disabled: props.disabled,\\n      childBsPrefix: bsPrefix\\n    },\\n    /*#__PURE__*/\\n    _react[\\\"default\\\"].createElement(\\\"span\\\", {\\n      className: \\\"sr-only\\\"\\n    }, toggleLabel)),\\n    /*#__PURE__*/\\n    _react[\\\"default\\\"].createElement(_Dropdown[\\\"default\\\"].Menu, {\\n      align: menuAlign,\\n      role: menuRole,\\n      renderOnMount: renderMenuOnMount,\\n      rootCloseEvent: rootCloseEvent\\n    }, children))\\n  );\\n});\\n\\nSplitButton.propTypes = propTypes;\\nSplitButton.defaultProps = defaultProps;\\nSplitButton.displayName = 'SplitButton';\\nvar _default = SplitButton;\\nexports[\\\"default\\\"] = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"_extends2\",\"_objectWithoutPropertiesLoose2\",\"_react\",\"_propTypes\",\"_Button\",\"_ButtonGroup\",\"_Dropdown\",\"_DropdownMenu\",\"_excluded\",\"propTypes\",\"id\",\"any\",\"toggleLabel\",\"string\",\"href\",\"target\",\"onClick\",\"func\",\"title\",\"node\",\"isRequired\",\"type\",\"disabled\",\"bool\",\"menuAlign\",\"alignPropType\",\"menuRole\",\"renderMenuOnMount\",\"rootCloseEvent\",\"bsPrefix\",\"variant\",\"size\",\"SplitButton\",\"forwardRef\",\"_ref\",\"ref\",\"children\",\"props\",\"createElement\",\"as\",\"Toggle\",\"split\",\"toString\",\"undefined\",\"childBsPrefix\",\"className\",\"Menu\",\"align\",\"role\",\"renderOnMount\",\"defaultProps\",\"displayName\"]\n}\n"]