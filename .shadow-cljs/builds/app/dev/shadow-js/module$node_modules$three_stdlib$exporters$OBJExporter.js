["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/exporters/OBJExporter.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$exporters$OBJExporter=function(global,require,module,exports){function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;\"value\"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);\nstaticProps&&_defineProperties(Constructor,staticProps);return Constructor}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.OBJExporter=void 0;var _defineProperty2=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$babel$runtime$helpers$esm$defineProperty\")),_three=require(\"module$node_modules$three$build$three_module\");global=function(){function OBJExporter(){if(!(this instanceof OBJExporter))throw new TypeError(\"Cannot call a class as a function\");\n(0,_defineProperty2[\"default\"])(this,\"output\",void 0);(0,_defineProperty2[\"default\"])(this,\"indexVertex\",void 0);(0,_defineProperty2[\"default\"])(this,\"indexVertexUvs\",void 0);(0,_defineProperty2[\"default\"])(this,\"indexNormals\",void 0);(0,_defineProperty2[\"default\"])(this,\"vertex\",void 0);(0,_defineProperty2[\"default\"])(this,\"color\",void 0);(0,_defineProperty2[\"default\"])(this,\"normal\",void 0);(0,_defineProperty2[\"default\"])(this,\"uv\",void 0);(0,_defineProperty2[\"default\"])(this,\"face\",void 0);this.output=\n\"\";this.indexNormals=this.indexVertexUvs=this.indexVertex=0;this.vertex=new _three.Vector3;this.color=new _three.Color;this.normal=new _three.Vector3;this.uv=new _three.Vector2;this.face=[]}_createClass(OBJExporter,[{key:\"parse\",value:function(object){var _this=this;object.traverse(function(child){child instanceof _three.Mesh&&child.isMesh&&_this.parseMesh(child);child instanceof _three.Line&&child.isLine&&_this.parseLine(child);child instanceof _three.Points&&child.isPoints&&_this.parsePoints(child)});\nreturn this.output}},{key:\"parseMesh\",value:function(mesh){var nbVertex=0,nbNormals=0,nbVertexUvs=0,geometry=mesh.geometry,normalMatrixWorld=new _three.Matrix3;if(!geometry.isBufferGeometry)throw Error(\"THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.\");var vertices=geometry.getAttribute(\"position\"),normals=geometry.getAttribute(\"normal\"),uvs=geometry.getAttribute(\"uv\");geometry=geometry.getIndex();this.output+=\"o \".concat(mesh.name,\"\\n\");mesh.material&&!Array.isArray(mesh.material)&&\nmesh.material.name&&(this.output+=\"usemtl \".concat(mesh.material.name,\"\\n\"));if(void 0!==vertices)for(var i=0,l=vertices.count;i<l;i++,nbVertex++)this.vertex.x=vertices.getX(i),this.vertex.y=vertices.getY(i),this.vertex.z=vertices.getZ(i),this.vertex.applyMatrix4(mesh.matrixWorld),this.output+=\"v \".concat(this.vertex.x,\" \").concat(this.vertex.y,\" \").concat(this.vertex.z,\"\\n\");if(void 0!==uvs)for(i=0,l=uvs.count;i<l;i++,nbVertexUvs++)this.uv.x=uvs.getX(i),this.uv.y=uvs.getY(i),this.output+=\"vt \".concat(this.uv.x,\n\" \").concat(this.uv.y,\"\\n\");if(void 0!==normals)for(normalMatrixWorld.getNormalMatrix(mesh.matrixWorld),mesh=0,i=normals.count;mesh<i;mesh++,nbNormals++)this.normal.x=normals.getX(mesh),this.normal.y=normals.getY(mesh),this.normal.z=normals.getZ(mesh),this.normal.applyMatrix3(normalMatrixWorld).normalize(),this.output+=\"vn \".concat(this.normal.x,\" \").concat(this.normal.y,\" \").concat(this.normal.z,\"\\n\");if(null!==geometry)for(vertices=0,normalMatrixWorld=geometry.count;vertices<normalMatrixWorld;vertices+=\n3){for(mesh=0;3>mesh;mesh++)i=geometry.getX(vertices+mesh)+1,this.face[mesh]=this.indexVertex+i+(normals||uvs?\"/\".concat(uvs?this.indexVertexUvs+i:\"\").concat(normals?\"/\".concat(this.indexNormals+i):\"\"):\"\");this.output+=\"f \".concat(this.face.join(\" \"),\"\\n\")}else for(geometry=0,vertices=vertices.count;geometry<vertices;geometry+=3){for(normalMatrixWorld=0;3>normalMatrixWorld;normalMatrixWorld++)mesh=geometry+normalMatrixWorld+1,this.face[normalMatrixWorld]=this.indexVertex+mesh+(normals||uvs?\"/\".concat(uvs?\nthis.indexVertexUvs+mesh:\"\").concat(normals?\"/\".concat(this.indexNormals+mesh):\"\"):\"\");this.output+=\"f \".concat(this.face.join(\" \"),\"\\n\")}this.indexVertex+=nbVertex;this.indexVertexUvs+=nbVertexUvs;this.indexNormals+=nbNormals}},{key:\"parseLine\",value:function(line){var nbVertex=0,geometry=line.geometry,type=line.type;if(geometry.isBufferGeometry)throw Error(\"THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.\");geometry=geometry.getAttribute(\"position\");this.output+=\"o \".concat(line.name,\n\"\\n\");if(void 0!==geometry)for(var i=0,l=geometry.count;i<l;i++,nbVertex++)this.vertex.x=geometry.getX(i),this.vertex.y=geometry.getY(i),this.vertex.z=geometry.getZ(i),this.vertex.applyMatrix4(line.matrixWorld),this.output+=\"v \".concat(this.vertex.x,\" \").concat(this.vertex.y,\" \").concat(this.vertex.z,\"\\n\");if(\"Line\"===type){this.output+=\"l \";line=1;for(i=geometry.count;line<=i;line++)this.output+=\"\".concat(this.indexVertex+line,\" \");this.output+=\"\\n\"}if(\"LineSegments\"===type)for(type=1,line=type+\n1,geometry=geometry.count;type<geometry;type+=2,line=type+1)this.output+=\"l \".concat(this.indexVertex+type,\" \").concat(this.indexVertex+line,\"\\n\");this.indexVertex+=nbVertex}},{key:\"parsePoints\",value:function(points){var nbVertex=0,geometry=points.geometry;if(!geometry.isBufferGeometry)throw Error(\"THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.\");var vertices=geometry.getAttribute(\"position\");geometry=geometry.getAttribute(\"color\");this.output+=\"o \".concat(points.name,\"\\n\");if(void 0!==\nvertices)for(var i=0,l=vertices.count;i<l;i++,nbVertex++)this.vertex.fromBufferAttribute(vertices,i),this.vertex.applyMatrix4(points.matrixWorld),this.output+=\"v \".concat(this.vertex.x,\" \").concat(this.vertex.y,\" \").concat(this.vertex.z),void 0!==geometry&&geometry instanceof _three.BufferAttribute&&(this.color.fromBufferAttribute(geometry,i),this.output+=\" \".concat(this.color.r,\" \").concat(this.color.g,\" \").concat(this.color.b)),this.output+=\"\\n\";this.output+=\"p \";points=1;for(vertices=vertices.count;points<=\nvertices;points++)this.output+=\"\".concat(this.indexVertex+points,\" \");this.output+=\"\\n\";this.indexVertex+=nbVertex}}]);return OBJExporter}();exports.OBJExporter=global}","~:source","shadow$provide[\"module$node_modules$three_stdlib$exporters$OBJExporter\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OBJExporter = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/defineProperty\"));\n\nvar _three = require(\"three\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar OBJExporter =\n/*#__PURE__*/\nfunction () {\n  function OBJExporter() {\n    _classCallCheck(this, OBJExporter);\n\n    (0, _defineProperty2[\"default\"])(this, \"output\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"indexVertex\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"indexVertexUvs\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"indexNormals\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"vertex\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"color\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"normal\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"uv\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"face\", void 0);\n    this.output = '';\n    this.indexVertex = 0;\n    this.indexVertexUvs = 0;\n    this.indexNormals = 0;\n    this.vertex = new _three.Vector3();\n    this.color = new _three.Color();\n    this.normal = new _three.Vector3();\n    this.uv = new _three.Vector2();\n    this.face = [];\n  }\n\n  _createClass(OBJExporter, [{\n    key: \"parse\",\n    value: function parse(object) {\n      var _this = this;\n\n      object.traverse(function (child) {\n        if (child instanceof _three.Mesh && child.isMesh) {\n          _this.parseMesh(child);\n        }\n\n        if (child instanceof _three.Line && child.isLine) {\n          _this.parseLine(child);\n        }\n\n        if (child instanceof _three.Points && child.isPoints) {\n          _this.parsePoints(child);\n        }\n      });\n      return this.output;\n    }\n  }, {\n    key: \"parseMesh\",\n    value: function parseMesh(mesh) {\n      var nbVertex = 0;\n      var nbNormals = 0;\n      var nbVertexUvs = 0;\n      var geometry = mesh.geometry;\n      var normalMatrixWorld = new _three.Matrix3();\n\n      if (!geometry.isBufferGeometry) {\n        throw new Error('THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.');\n      } // shortcuts\n\n\n      var vertices = geometry.getAttribute('position');\n      var normals = geometry.getAttribute('normal');\n      var uvs = geometry.getAttribute('uv');\n      var indices = geometry.getIndex(); // name of the mesh object\n\n      this.output += \"o \".concat(mesh.name, \"\\n\"); // name of the mesh material\n\n      if (mesh.material && !Array.isArray(mesh.material) && mesh.material.name) {\n        this.output += \"usemtl \".concat(mesh.material.name, \"\\n\");\n      } // vertices\n\n\n      if (vertices !== undefined) {\n        for (var i = 0, l = vertices.count; i < l; i++, nbVertex++) {\n          this.vertex.x = vertices.getX(i);\n          this.vertex.y = vertices.getY(i);\n          this.vertex.z = vertices.getZ(i); // transform the vertex to world space\n\n          this.vertex.applyMatrix4(mesh.matrixWorld); // transform the vertex to export format\n\n          this.output += \"v \".concat(this.vertex.x, \" \").concat(this.vertex.y, \" \").concat(this.vertex.z, \"\\n\");\n        }\n      } // uvs\n\n\n      if (uvs !== undefined) {\n        for (var _i = 0, _l = uvs.count; _i < _l; _i++, nbVertexUvs++) {\n          this.uv.x = uvs.getX(_i);\n          this.uv.y = uvs.getY(_i); // transform the uv to export format\n\n          this.output += \"vt \".concat(this.uv.x, \" \").concat(this.uv.y, \"\\n\");\n        }\n      } // normals\n\n\n      if (normals !== undefined) {\n        normalMatrixWorld.getNormalMatrix(mesh.matrixWorld);\n\n        for (var _i2 = 0, _l2 = normals.count; _i2 < _l2; _i2++, nbNormals++) {\n          this.normal.x = normals.getX(_i2);\n          this.normal.y = normals.getY(_i2);\n          this.normal.z = normals.getZ(_i2); // transform the normal to world space\n\n          this.normal.applyMatrix3(normalMatrixWorld).normalize(); // transform the normal to export format\n\n          this.output += \"vn \".concat(this.normal.x, \" \").concat(this.normal.y, \" \").concat(this.normal.z, \"\\n\");\n        }\n      } // faces\n\n\n      if (indices !== null) {\n        for (var _i3 = 0, _l3 = indices.count; _i3 < _l3; _i3 += 3) {\n          for (var m = 0; m < 3; m++) {\n            var j = indices.getX(_i3 + m) + 1;\n            this.face[m] = this.indexVertex + j + (normals || uvs ? \"/\".concat(uvs ? this.indexVertexUvs + j : '').concat(normals ? \"/\".concat(this.indexNormals + j) : '') : '');\n          } // transform the face to export format\n\n\n          this.output += \"f \".concat(this.face.join(' '), \"\\n\");\n        }\n      } else {\n        for (var _i4 = 0, _l4 = vertices.count; _i4 < _l4; _i4 += 3) {\n          for (var _m = 0; _m < 3; _m++) {\n            var _j = _i4 + _m + 1;\n\n            this.face[_m] = this.indexVertex + _j + (normals || uvs ? \"/\".concat(uvs ? this.indexVertexUvs + _j : '').concat(normals ? \"/\".concat(this.indexNormals + _j) : '') : '');\n          } // transform the face to export format\n\n\n          this.output += \"f \".concat(this.face.join(' '), \"\\n\");\n        }\n      } // update index\n\n\n      this.indexVertex += nbVertex;\n      this.indexVertexUvs += nbVertexUvs;\n      this.indexNormals += nbNormals;\n    }\n  }, {\n    key: \"parseLine\",\n    value: function parseLine(line) {\n      var nbVertex = 0;\n      var geometry = line.geometry;\n      var type = line.type;\n\n      if (geometry.isBufferGeometry) {\n        throw new Error('THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.');\n      } // shortcuts\n\n\n      var vertices = geometry.getAttribute('position'); // name of the line object\n\n      this.output += \"o \".concat(line.name, \"\\n\");\n\n      if (vertices !== undefined) {\n        for (var i = 0, l = vertices.count; i < l; i++, nbVertex++) {\n          this.vertex.x = vertices.getX(i);\n          this.vertex.y = vertices.getY(i);\n          this.vertex.z = vertices.getZ(i); // transform the vertex to world space\n\n          this.vertex.applyMatrix4(line.matrixWorld); // transform the vertex to export format\n\n          this.output += \"v \".concat(this.vertex.x, \" \").concat(this.vertex.y, \" \").concat(this.vertex.z, \"\\n\");\n        }\n      }\n\n      if (type === 'Line') {\n        this.output += 'l ';\n\n        for (var j = 1, _l5 = vertices.count; j <= _l5; j++) {\n          this.output += \"\".concat(this.indexVertex + j, \" \");\n        }\n\n        this.output += '\\n';\n      }\n\n      if (type === 'LineSegments') {\n        for (var _j2 = 1, k = _j2 + 1, _l6 = vertices.count; _j2 < _l6; _j2 += 2, k = _j2 + 1) {\n          this.output += \"l \".concat(this.indexVertex + _j2, \" \").concat(this.indexVertex + k, \"\\n\");\n        }\n      } // update index\n\n\n      this.indexVertex += nbVertex;\n    }\n  }, {\n    key: \"parsePoints\",\n    value: function parsePoints(points) {\n      var nbVertex = 0;\n      var geometry = points.geometry;\n\n      if (!geometry.isBufferGeometry) {\n        throw new Error('THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.');\n      }\n\n      var vertices = geometry.getAttribute('position');\n      var colors = geometry.getAttribute('color');\n      this.output += \"o \".concat(points.name, \"\\n\");\n\n      if (vertices !== undefined) {\n        for (var i = 0, l = vertices.count; i < l; i++, nbVertex++) {\n          this.vertex.fromBufferAttribute(vertices, i);\n          this.vertex.applyMatrix4(points.matrixWorld);\n          this.output += \"v \".concat(this.vertex.x, \" \").concat(this.vertex.y, \" \").concat(this.vertex.z);\n\n          if (colors !== undefined && colors instanceof _three.BufferAttribute) {\n            this.color.fromBufferAttribute(colors, i);\n            this.output += \" \".concat(this.color.r, \" \").concat(this.color.g, \" \").concat(this.color.b);\n          }\n\n          this.output += '\\n';\n        }\n      }\n\n      this.output += 'p ';\n\n      for (var j = 1, _l7 = vertices.count; j <= _l7; j++) {\n        this.output += \"\".concat(this.indexVertex + j, \" \");\n      }\n\n      this.output += '\\n'; // update index\n\n      this.indexVertex += nbVertex;\n    }\n  }]);\n\n  return OBJExporter;\n}();\n\nexports.OBJExporter = OBJExporter;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$esm$defineProperty"]],"~:properties",["^5",["z","output","indexNormals","indexVertex","key","x","__esModule","indexVertexUvs","normal","configurable","face","value","enumerable","OBJExporter","writable","uv","y","vertex","color"]],"~:compiled-at",1630917515346,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$exporters$OBJExporter.js\",\n\"lineCount\":13,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/exporters/OBJExporter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$exporters$OBJExporter\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.OBJExporter = void 0;\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/esm/defineProperty\\\"));\\n\\nvar _three = require(\\\"three\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nvar OBJExporter =\\n/*#__PURE__*/\\nfunction () {\\n  function OBJExporter() {\\n    _classCallCheck(this, OBJExporter);\\n\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"output\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"indexVertex\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"indexVertexUvs\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"indexNormals\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"vertex\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"color\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"normal\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"uv\\\", void 0);\\n    (0, _defineProperty2[\\\"default\\\"])(this, \\\"face\\\", void 0);\\n    this.output = '';\\n    this.indexVertex = 0;\\n    this.indexVertexUvs = 0;\\n    this.indexNormals = 0;\\n    this.vertex = new _three.Vector3();\\n    this.color = new _three.Color();\\n    this.normal = new _three.Vector3();\\n    this.uv = new _three.Vector2();\\n    this.face = [];\\n  }\\n\\n  _createClass(OBJExporter, [{\\n    key: \\\"parse\\\",\\n    value: function parse(object) {\\n      var _this = this;\\n\\n      object.traverse(function (child) {\\n        if (child instanceof _three.Mesh && child.isMesh) {\\n          _this.parseMesh(child);\\n        }\\n\\n        if (child instanceof _three.Line && child.isLine) {\\n          _this.parseLine(child);\\n        }\\n\\n        if (child instanceof _three.Points && child.isPoints) {\\n          _this.parsePoints(child);\\n        }\\n      });\\n      return this.output;\\n    }\\n  }, {\\n    key: \\\"parseMesh\\\",\\n    value: function parseMesh(mesh) {\\n      var nbVertex = 0;\\n      var nbNormals = 0;\\n      var nbVertexUvs = 0;\\n      var geometry = mesh.geometry;\\n      var normalMatrixWorld = new _three.Matrix3();\\n\\n      if (!geometry.isBufferGeometry) {\\n        throw new Error('THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.');\\n      } // shortcuts\\n\\n\\n      var vertices = geometry.getAttribute('position');\\n      var normals = geometry.getAttribute('normal');\\n      var uvs = geometry.getAttribute('uv');\\n      var indices = geometry.getIndex(); // name of the mesh object\\n\\n      this.output += \\\"o \\\".concat(mesh.name, \\\"\\\\n\\\"); // name of the mesh material\\n\\n      if (mesh.material && !Array.isArray(mesh.material) && mesh.material.name) {\\n        this.output += \\\"usemtl \\\".concat(mesh.material.name, \\\"\\\\n\\\");\\n      } // vertices\\n\\n\\n      if (vertices !== undefined) {\\n        for (var i = 0, l = vertices.count; i < l; i++, nbVertex++) {\\n          this.vertex.x = vertices.getX(i);\\n          this.vertex.y = vertices.getY(i);\\n          this.vertex.z = vertices.getZ(i); // transform the vertex to world space\\n\\n          this.vertex.applyMatrix4(mesh.matrixWorld); // transform the vertex to export format\\n\\n          this.output += \\\"v \\\".concat(this.vertex.x, \\\" \\\").concat(this.vertex.y, \\\" \\\").concat(this.vertex.z, \\\"\\\\n\\\");\\n        }\\n      } // uvs\\n\\n\\n      if (uvs !== undefined) {\\n        for (var _i = 0, _l = uvs.count; _i < _l; _i++, nbVertexUvs++) {\\n          this.uv.x = uvs.getX(_i);\\n          this.uv.y = uvs.getY(_i); // transform the uv to export format\\n\\n          this.output += \\\"vt \\\".concat(this.uv.x, \\\" \\\").concat(this.uv.y, \\\"\\\\n\\\");\\n        }\\n      } // normals\\n\\n\\n      if (normals !== undefined) {\\n        normalMatrixWorld.getNormalMatrix(mesh.matrixWorld);\\n\\n        for (var _i2 = 0, _l2 = normals.count; _i2 < _l2; _i2++, nbNormals++) {\\n          this.normal.x = normals.getX(_i2);\\n          this.normal.y = normals.getY(_i2);\\n          this.normal.z = normals.getZ(_i2); // transform the normal to world space\\n\\n          this.normal.applyMatrix3(normalMatrixWorld).normalize(); // transform the normal to export format\\n\\n          this.output += \\\"vn \\\".concat(this.normal.x, \\\" \\\").concat(this.normal.y, \\\" \\\").concat(this.normal.z, \\\"\\\\n\\\");\\n        }\\n      } // faces\\n\\n\\n      if (indices !== null) {\\n        for (var _i3 = 0, _l3 = indices.count; _i3 < _l3; _i3 += 3) {\\n          for (var m = 0; m < 3; m++) {\\n            var j = indices.getX(_i3 + m) + 1;\\n            this.face[m] = this.indexVertex + j + (normals || uvs ? \\\"/\\\".concat(uvs ? this.indexVertexUvs + j : '').concat(normals ? \\\"/\\\".concat(this.indexNormals + j) : '') : '');\\n          } // transform the face to export format\\n\\n\\n          this.output += \\\"f \\\".concat(this.face.join(' '), \\\"\\\\n\\\");\\n        }\\n      } else {\\n        for (var _i4 = 0, _l4 = vertices.count; _i4 < _l4; _i4 += 3) {\\n          for (var _m = 0; _m < 3; _m++) {\\n            var _j = _i4 + _m + 1;\\n\\n            this.face[_m] = this.indexVertex + _j + (normals || uvs ? \\\"/\\\".concat(uvs ? this.indexVertexUvs + _j : '').concat(normals ? \\\"/\\\".concat(this.indexNormals + _j) : '') : '');\\n          } // transform the face to export format\\n\\n\\n          this.output += \\\"f \\\".concat(this.face.join(' '), \\\"\\\\n\\\");\\n        }\\n      } // update index\\n\\n\\n      this.indexVertex += nbVertex;\\n      this.indexVertexUvs += nbVertexUvs;\\n      this.indexNormals += nbNormals;\\n    }\\n  }, {\\n    key: \\\"parseLine\\\",\\n    value: function parseLine(line) {\\n      var nbVertex = 0;\\n      var geometry = line.geometry;\\n      var type = line.type;\\n\\n      if (geometry.isBufferGeometry) {\\n        throw new Error('THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.');\\n      } // shortcuts\\n\\n\\n      var vertices = geometry.getAttribute('position'); // name of the line object\\n\\n      this.output += \\\"o \\\".concat(line.name, \\\"\\\\n\\\");\\n\\n      if (vertices !== undefined) {\\n        for (var i = 0, l = vertices.count; i < l; i++, nbVertex++) {\\n          this.vertex.x = vertices.getX(i);\\n          this.vertex.y = vertices.getY(i);\\n          this.vertex.z = vertices.getZ(i); // transform the vertex to world space\\n\\n          this.vertex.applyMatrix4(line.matrixWorld); // transform the vertex to export format\\n\\n          this.output += \\\"v \\\".concat(this.vertex.x, \\\" \\\").concat(this.vertex.y, \\\" \\\").concat(this.vertex.z, \\\"\\\\n\\\");\\n        }\\n      }\\n\\n      if (type === 'Line') {\\n        this.output += 'l ';\\n\\n        for (var j = 1, _l5 = vertices.count; j <= _l5; j++) {\\n          this.output += \\\"\\\".concat(this.indexVertex + j, \\\" \\\");\\n        }\\n\\n        this.output += '\\\\n';\\n      }\\n\\n      if (type === 'LineSegments') {\\n        for (var _j2 = 1, k = _j2 + 1, _l6 = vertices.count; _j2 < _l6; _j2 += 2, k = _j2 + 1) {\\n          this.output += \\\"l \\\".concat(this.indexVertex + _j2, \\\" \\\").concat(this.indexVertex + k, \\\"\\\\n\\\");\\n        }\\n      } // update index\\n\\n\\n      this.indexVertex += nbVertex;\\n    }\\n  }, {\\n    key: \\\"parsePoints\\\",\\n    value: function parsePoints(points) {\\n      var nbVertex = 0;\\n      var geometry = points.geometry;\\n\\n      if (!geometry.isBufferGeometry) {\\n        throw new Error('THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.');\\n      }\\n\\n      var vertices = geometry.getAttribute('position');\\n      var colors = geometry.getAttribute('color');\\n      this.output += \\\"o \\\".concat(points.name, \\\"\\\\n\\\");\\n\\n      if (vertices !== undefined) {\\n        for (var i = 0, l = vertices.count; i < l; i++, nbVertex++) {\\n          this.vertex.fromBufferAttribute(vertices, i);\\n          this.vertex.applyMatrix4(points.matrixWorld);\\n          this.output += \\\"v \\\".concat(this.vertex.x, \\\" \\\").concat(this.vertex.y, \\\" \\\").concat(this.vertex.z);\\n\\n          if (colors !== undefined && colors instanceof _three.BufferAttribute) {\\n            this.color.fromBufferAttribute(colors, i);\\n            this.output += \\\" \\\".concat(this.color.r, \\\" \\\").concat(this.color.g, \\\" \\\").concat(this.color.b);\\n          }\\n\\n          this.output += '\\\\n';\\n        }\\n      }\\n\\n      this.output += 'p ';\\n\\n      for (var j = 1, _l7 = vertices.count; j <= _l7; j++) {\\n        this.output += \\\"\\\".concat(this.indexVertex + j, \\\" \\\");\\n      }\\n\\n      this.output += '\\\\n'; // update index\\n\\n      this.indexVertex += nbVertex;\\n    }\\n  }]);\\n\\n  return OBJExporter;\\n}();\\n\\nexports.OBJExporter = OBJExporter;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"_createClass\",\"Constructor\",\"protoProps\",\"staticProps\",\"prototype\",\"value\",\"OBJExporter\",\"_defineProperty2\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_three\",\"instance\",\"TypeError\",\"output\",\"indexNormals\",\"indexVertexUvs\",\"indexVertex\",\"vertex\",\"Vector3\",\"color\",\"Color\",\"normal\",\"uv\",\"Vector2\",\"face\",\"parse\",\"object\",\"_this\",\"traverse\",\"child\",\"Mesh\",\"isMesh\",\"parseMesh\",\"Line\",\"isLine\",\"parseLine\",\"Points\",\"isPoints\",\"parsePoints\",\"mesh\",\"nbVertex\",\"nbNormals\",\"nbVertexUvs\",\"geometry\",\"normalMatrixWorld\",\"Matrix3\",\"isBufferGeometry\",\"Error\",\"vertices\",\"getAttribute\",\"normals\",\"uvs\",\"indices\",\"getIndex\",\"concat\",\"name\",\"material\",\"Array\",\"isArray\",\"undefined\",\"l\",\"count\",\"x\",\"getX\",\"y\",\"getY\",\"z\",\"getZ\",\"applyMatrix4\",\"matrixWorld\",\"_i\",\"_l\",\"getNormalMatrix\",\"_l2\",\"_i2\",\"applyMatrix3\",\"normalize\",\"_i3\",\"_l3\",\"m\",\"j\",\"join\",\"_i4\",\"_l4\",\"_m\",\"_j\",\"line\",\"type\",\"_l5\",\"_j2\",\"_l6\",\"k\",\"points\",\"colors\",\"fromBufferAttribute\",\"BufferAttribute\",\"r\",\"g\",\"b\",\"_l7\"]\n}\n"]