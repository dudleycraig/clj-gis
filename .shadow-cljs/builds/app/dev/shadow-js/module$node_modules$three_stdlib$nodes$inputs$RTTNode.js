["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/three-stdlib/nodes/inputs/RTTNode.js"],"~:js","shadow$provide.module$node_modules$three_stdlib$nodes$inputs$RTTNode=function(global,require,module,exports){function RTTNode(width,height,input,options){options=options||{};this.input=input;this.clear=void 0!==options.clear?options.clear:!0;this.renderTarget=new _three.WebGLRenderTarget(width,height,options);this.material=new _NodeMaterial.NodeMaterial;this.camera=new _three.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new _three.Scene;this.quad=new _three.Mesh(new _three.PlaneGeometry(2,2),this.material);\nthis.quad.frustumCulled=!1;this.scene.add(this.quad);this.render=!0;_TextureNode.TextureNode.call(this,this.renderTarget.texture)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.RTTNode=RTTNode;var _three=require(\"module$node_modules$three$build$three_module\"),_NodeBuilder=require(\"module$node_modules$three_stdlib$nodes$core$NodeBuilder\"),_NodeMaterial=require(\"module$node_modules$three_stdlib$nodes$materials$NodeMaterial\"),_TextureNode=require(\"module$node_modules$three_stdlib$nodes$inputs$TextureNode\");\nRTTNode.prototype=Object.create(_TextureNode.TextureNode.prototype);RTTNode.prototype.constructor=RTTNode;RTTNode.prototype.nodeType=\"RTT\";RTTNode.prototype.build=function(builder,output,uuid){var rttBuilder=new _NodeBuilder.NodeBuilder;rttBuilder.nodes=builder.nodes;rttBuilder.updaters=builder.updaters;this.material.fragment.value=this.input;this.material.build({builder:rttBuilder});return _TextureNode.TextureNode.prototype.build.call(this,builder,output,uuid)};RTTNode.prototype.updateFramesaveTo=\nfunction(frame){this.saveTo.render=!1;if(this.saveTo!==this.saveToCurrent){this.saveToMaterial&&this.saveToMaterial.dispose();var material=new _NodeMaterial.NodeMaterial;material.fragment.value=this;material.build();var scene=new _three.Scene,quad=new _three.Mesh(new _three.PlaneGeometry(2,2),material);quad.frustumCulled=!1;scene.add(quad);this.saveToScene=scene;this.saveToMaterial=material}this.saveToCurrent=this.saveTo;frame.renderer.setRenderTarget(this.saveTo.renderTarget);this.saveTo.clear&&\nframe.renderer.clear();frame.renderer.render(this.saveToScene,this.camera)};RTTNode.prototype.updateFrame=function(frame){frame.renderer?(this.saveTo&&!1===this.saveTo.render&&this.updateFramesaveTo(frame),this.render&&(this.material.uniforms.renderTexture&&(this.material.uniforms.renderTexture.value=frame.renderTexture),frame.renderer.setRenderTarget(this.renderTarget),this.clear&&frame.renderer.clear(),frame.renderer.render(this.scene,this.camera)),this.saveTo&&!0===this.saveTo.render&&this.updateFramesaveTo(frame)):\nconsole.warn(\"RTTNode need a renderer in NodeFrame\")};RTTNode.prototype.copy=function(source){_TextureNode.TextureNode.prototype.copy.call(this,source);this.saveTo=source.saveTo;return this};RTTNode.prototype.toJSON=function(meta){var data=this.getJSONNode(meta);data||(data=_TextureNode.TextureNode.prototype.toJSON.call(this,meta),this.saveTo&&(data.saveTo=this.saveTo.toJSON(meta).uuid));return data}}","~:source","shadow$provide[\"module$node_modules$three_stdlib$nodes$inputs$RTTNode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RTTNode = RTTNode;\n\nvar _three = require(\"three\");\n\nvar _NodeBuilder = require(\"../core/NodeBuilder.js\");\n\nvar _NodeMaterial = require(\"../materials/NodeMaterial.js\");\n\nvar _TextureNode = require(\"./TextureNode.js\");\n\nfunction RTTNode(width, height, input, options) {\n  options = options || {};\n  this.input = input;\n  this.clear = options.clear !== undefined ? options.clear : true;\n  this.renderTarget = new _three.WebGLRenderTarget(width, height, options);\n  this.material = new _NodeMaterial.NodeMaterial();\n  this.camera = new _three.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new _three.Scene();\n  this.quad = new _three.Mesh(new _three.PlaneGeometry(2, 2), this.material);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n\n  this.scene.add(this.quad);\n  this.render = true;\n\n  _TextureNode.TextureNode.call(this, this.renderTarget.texture);\n}\n\nRTTNode.prototype = Object.create(_TextureNode.TextureNode.prototype);\nRTTNode.prototype.constructor = RTTNode;\nRTTNode.prototype.nodeType = 'RTT';\n\nRTTNode.prototype.build = function (builder, output, uuid) {\n  var rttBuilder = new _NodeBuilder.NodeBuilder();\n  rttBuilder.nodes = builder.nodes;\n  rttBuilder.updaters = builder.updaters;\n  this.material.fragment.value = this.input;\n  this.material.build({\n    builder: rttBuilder\n  });\n  return _TextureNode.TextureNode.prototype.build.call(this, builder, output, uuid);\n};\n\nRTTNode.prototype.updateFramesaveTo = function (frame) {\n  this.saveTo.render = false;\n\n  if (this.saveTo !== this.saveToCurrent) {\n    if (this.saveToMaterial) this.saveToMaterial.dispose();\n    var material = new _NodeMaterial.NodeMaterial();\n    material.fragment.value = this;\n    material.build();\n    var scene = new _three.Scene();\n    var quad = new _three.Mesh(new _three.PlaneGeometry(2, 2), material);\n    quad.frustumCulled = false; // Avoid getting clipped\n\n    scene.add(quad);\n    this.saveToScene = scene;\n    this.saveToMaterial = material;\n  }\n\n  this.saveToCurrent = this.saveTo;\n  frame.renderer.setRenderTarget(this.saveTo.renderTarget);\n  if (this.saveTo.clear) frame.renderer.clear();\n  frame.renderer.render(this.saveToScene, this.camera);\n};\n\nRTTNode.prototype.updateFrame = function (frame) {\n  if (frame.renderer) {\n    // from the second frame\n    if (this.saveTo && this.saveTo.render === false) {\n      this.updateFramesaveTo(frame);\n    }\n\n    if (this.render) {\n      if (this.material.uniforms.renderTexture) {\n        this.material.uniforms.renderTexture.value = frame.renderTexture;\n      }\n\n      frame.renderer.setRenderTarget(this.renderTarget);\n      if (this.clear) frame.renderer.clear();\n      frame.renderer.render(this.scene, this.camera);\n    } // first frame\n\n\n    if (this.saveTo && this.saveTo.render === true) {\n      this.updateFramesaveTo(frame);\n    }\n  } else {\n    console.warn('RTTNode need a renderer in NodeFrame');\n  }\n};\n\nRTTNode.prototype.copy = function (source) {\n  _TextureNode.TextureNode.prototype.copy.call(this, source);\n\n  this.saveTo = source.saveTo;\n  return this;\n};\n\nRTTNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = _TextureNode.TextureNode.prototype.toJSON.call(this, meta);\n    if (this.saveTo) data.saveTo = this.saveTo.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$three$build$three_module","~$shadow.js","~$module$node_modules$three_stdlib$nodes$materials$NodeMaterial","~$module$node_modules$three_stdlib$nodes$core$NodeBuilder","~$module$node_modules$three_stdlib$nodes$inputs$TextureNode"]],"~:properties",["^5",["frustumCulled","copy","prototype","__esModule","camera","updateFramesaveTo","builder","saveTo","nodeType","value","updaters","build","input","saveToScene","nodes","render","updateFrame","clear","quad","saveToCurrent","renderTarget","RTTNode","constructor","scene","toJSON","saveToMaterial","material"]],"~:compiled-at",1630917515277,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$three_stdlib$nodes$inputs$RTTNode.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/three-stdlib/nodes/inputs/RTTNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$three_stdlib$nodes$inputs$RTTNode\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.RTTNode = RTTNode;\\n\\nvar _three = require(\\\"three\\\");\\n\\nvar _NodeBuilder = require(\\\"../core/NodeBuilder.js\\\");\\n\\nvar _NodeMaterial = require(\\\"../materials/NodeMaterial.js\\\");\\n\\nvar _TextureNode = require(\\\"./TextureNode.js\\\");\\n\\nfunction RTTNode(width, height, input, options) {\\n  options = options || {};\\n  this.input = input;\\n  this.clear = options.clear !== undefined ? options.clear : true;\\n  this.renderTarget = new _three.WebGLRenderTarget(width, height, options);\\n  this.material = new _NodeMaterial.NodeMaterial();\\n  this.camera = new _three.OrthographicCamera(-1, 1, 1, -1, 0, 1);\\n  this.scene = new _three.Scene();\\n  this.quad = new _three.Mesh(new _three.PlaneGeometry(2, 2), this.material);\\n  this.quad.frustumCulled = false; // Avoid getting clipped\\n\\n  this.scene.add(this.quad);\\n  this.render = true;\\n\\n  _TextureNode.TextureNode.call(this, this.renderTarget.texture);\\n}\\n\\nRTTNode.prototype = Object.create(_TextureNode.TextureNode.prototype);\\nRTTNode.prototype.constructor = RTTNode;\\nRTTNode.prototype.nodeType = 'RTT';\\n\\nRTTNode.prototype.build = function (builder, output, uuid) {\\n  var rttBuilder = new _NodeBuilder.NodeBuilder();\\n  rttBuilder.nodes = builder.nodes;\\n  rttBuilder.updaters = builder.updaters;\\n  this.material.fragment.value = this.input;\\n  this.material.build({\\n    builder: rttBuilder\\n  });\\n  return _TextureNode.TextureNode.prototype.build.call(this, builder, output, uuid);\\n};\\n\\nRTTNode.prototype.updateFramesaveTo = function (frame) {\\n  this.saveTo.render = false;\\n\\n  if (this.saveTo !== this.saveToCurrent) {\\n    if (this.saveToMaterial) this.saveToMaterial.dispose();\\n    var material = new _NodeMaterial.NodeMaterial();\\n    material.fragment.value = this;\\n    material.build();\\n    var scene = new _three.Scene();\\n    var quad = new _three.Mesh(new _three.PlaneGeometry(2, 2), material);\\n    quad.frustumCulled = false; // Avoid getting clipped\\n\\n    scene.add(quad);\\n    this.saveToScene = scene;\\n    this.saveToMaterial = material;\\n  }\\n\\n  this.saveToCurrent = this.saveTo;\\n  frame.renderer.setRenderTarget(this.saveTo.renderTarget);\\n  if (this.saveTo.clear) frame.renderer.clear();\\n  frame.renderer.render(this.saveToScene, this.camera);\\n};\\n\\nRTTNode.prototype.updateFrame = function (frame) {\\n  if (frame.renderer) {\\n    // from the second frame\\n    if (this.saveTo && this.saveTo.render === false) {\\n      this.updateFramesaveTo(frame);\\n    }\\n\\n    if (this.render) {\\n      if (this.material.uniforms.renderTexture) {\\n        this.material.uniforms.renderTexture.value = frame.renderTexture;\\n      }\\n\\n      frame.renderer.setRenderTarget(this.renderTarget);\\n      if (this.clear) frame.renderer.clear();\\n      frame.renderer.render(this.scene, this.camera);\\n    } // first frame\\n\\n\\n    if (this.saveTo && this.saveTo.render === true) {\\n      this.updateFramesaveTo(frame);\\n    }\\n  } else {\\n    console.warn('RTTNode need a renderer in NodeFrame');\\n  }\\n};\\n\\nRTTNode.prototype.copy = function (source) {\\n  _TextureNode.TextureNode.prototype.copy.call(this, source);\\n\\n  this.saveTo = source.saveTo;\\n  return this;\\n};\\n\\nRTTNode.prototype.toJSON = function (meta) {\\n  var data = this.getJSONNode(meta);\\n\\n  if (!data) {\\n    data = _TextureNode.TextureNode.prototype.toJSON.call(this, meta);\\n    if (this.saveTo) data.saveTo = this.saveTo.toJSON(meta).uuid;\\n  }\\n\\n  return data;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"RTTNode\",\"width\",\"height\",\"input\",\"options\",\"clear\",\"undefined\",\"renderTarget\",\"_three\",\"WebGLRenderTarget\",\"material\",\"_NodeMaterial\",\"NodeMaterial\",\"camera\",\"OrthographicCamera\",\"scene\",\"Scene\",\"quad\",\"Mesh\",\"PlaneGeometry\",\"frustumCulled\",\"add\",\"render\",\"_TextureNode\",\"TextureNode\",\"call\",\"texture\",\"Object\",\"defineProperty\",\"value\",\"_NodeBuilder\",\"prototype\",\"create\",\"constructor\",\"nodeType\",\"build\",\"RTTNode.prototype.build\",\"builder\",\"output\",\"uuid\",\"rttBuilder\",\"NodeBuilder\",\"nodes\",\"updaters\",\"fragment\",\"updateFramesaveTo\",\"RTTNode.prototype.updateFramesaveTo\",\"frame\",\"saveTo\",\"saveToCurrent\",\"saveToMaterial\",\"dispose\",\"saveToScene\",\"renderer\",\"setRenderTarget\",\"updateFrame\",\"RTTNode.prototype.updateFrame\",\"uniforms\",\"renderTexture\",\"console\",\"warn\",\"copy\",\"RTTNode.prototype.copy\",\"source\",\"toJSON\",\"RTTNode.prototype.toJSON\",\"meta\",\"data\",\"getJSONNode\"]\n}\n"]