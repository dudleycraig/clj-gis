["^ ","~:output",["^ ","~:js","goog.provide('sci.impl.utils');\ncljs.core.derive.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sci.error\",\"realized-beyond-max\",\"sci.error/realized-beyond-max\",-1094268187),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803));\ncljs.core.derive.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sci.error\",\"parse\",\"sci.error/parse\",-264338844),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803));\nsci.impl.utils.constant_QMARK_ = (function sci$impl$utils$constant_QMARK_(x){\nreturn ((typeof x === 'number') || (((typeof x === 'string') || ((((x instanceof cljs.core.Keyword)) || (cljs.core.boolean_QMARK_(x)))))));\n});\nsci.impl.utils.eval_QMARK_ = (function sci$impl$utils$eval_QMARK_(x){\nvar G__49946 = x;\nvar G__49946__$1 = (((G__49946 == null))?null:cljs.core.meta(G__49946));\nif((G__49946__$1 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978).cljs$core$IFn$_invoke$arity$1(G__49946__$1);\n}\n});\nsci.impl.utils.kw_identical_QMARK_ = cljs.core.keyword_identical_QMARK_;\nsci.impl.utils.mark_eval_call = (function sci$impl$utils$mark_eval_call(var_args){\nvar G__49949 = arguments.length;\nswitch (G__49949) {\ncase 1:\nreturn sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 3:\nreturn sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$1 = (function (expr){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(expr,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978),new cljs.core.Keyword(null,\"call\",\"call\",-519999866)),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.deref(sci.impl.vars.current_ns)),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file));\n}));\n}));\n\n(sci.impl.utils.mark_eval_call.cljs$core$IFn$_invoke$arity$3 = (function (expr,extra_key,extra_val){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(expr,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978),new cljs.core.Keyword(null,\"call\",\"call\",-519999866)),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.deref(sci.impl.vars.current_ns)),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file)),extra_key,extra_val);\n}));\n}));\n\n(sci.impl.utils.mark_eval_call.cljs$lang$maxFixedArity = 3);\n\nsci.impl.utils.mark_eval = (function sci$impl$utils$mark_eval(expr){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(expr,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978),new cljs.core.Keyword(null,\"eval\",\"eval\",-1103567905));\n}));\n});\nsci.impl.utils.throw_error_with_location = (function sci$impl$utils$throw_error_with_location(var_args){\nvar G__49962 = arguments.length;\nswitch (G__49962) {\ncase 2:\nreturn sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2 = (function (msg,iobj){\nreturn sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$3(msg,iobj,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$3 = (function (msg,iobj,data){\nvar map__49966 = cljs.core.meta(iobj);\nvar map__49966__$1 = cljs.core.__destructure_map(map__49966);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__49966__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__49966__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__49966__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(msg,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),file], null),data], 0)));\n}));\n\n(sci.impl.utils.throw_error_with_location.cljs$lang$maxFixedArity = 3);\n\nsci.impl.utils._STAR_in_try_STAR_ = false;\nsci.impl.utils.macro_QMARK_ = (function sci$impl$utils$macro_QMARK_(f){\nvar temp__5753__auto__ = cljs.core.meta(f);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar m = temp__5753__auto__;\nvar or__4212__auto__ = new cljs.core.Keyword(\"sci\",\"macro\",\"sci/macro\",-868536151).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(m);\n}\n} else {\nreturn null;\n}\n});\nsci.impl.utils.needs_ctx = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"needs-ctx\");\nsci.impl.utils.evaluate = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"eval\");\nsci.impl.utils.rethrow_with_location_of_node = (function sci$impl$utils$rethrow_with_location_of_node(ctx,e,node){\nvar m = cljs.core.meta(node);\nvar f = ((cljs.core.seqable_QMARK_(node))?cljs.core.first(node):null);\nvar fm = (function (){var or__4212__auto__ = new cljs.core.Keyword(\"sci.impl\",\"f-meta\",\"sci.impl/f-meta\",-1735495322).cljs$core$IFn$_invoke$arity$1(node);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nvar G__49990 = f;\nif((G__49990 == null)){\nreturn null;\n} else {\nreturn cljs.core.meta(G__49990);\n}\n}\n})();\nvar op = (cljs.core.truth_(fm)?m.get(new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978)):null);\nvar special_QMARK_ = (function (){var or__4212__auto__ = (((f instanceof cljs.core.Symbol)) && (cljs.core.not(op)));\nif(or__4212__auto__){\nreturn or__4212__auto__;\n} else {\nvar or__4212__auto____$1 = (sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),op) : sci.impl.utils.kw_identical_QMARK_.call(null,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),op));\nif(cljs.core.truth_(or__4212__auto____$1)){\nreturn or__4212__auto____$1;\n} else {\nreturn (sci.impl.utils.needs_ctx === op);\n}\n}\n})();\nif(cljs.core.not(special_QMARK_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx),cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(ctx)], null),(function (vt){\nif(cljs.core.truth_(vt)){\ncljs.core._vreset_BANG_(vt,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(vt),node));\n\nreturn vt;\n} else {\nreturn cljs.core.volatile_BANG_((new cljs.core.List(null,node,null,(1),null)));\n}\n}));\n} else {\n}\n\nif(cljs.core.not(sci.impl.utils._STAR_in_try_STAR_)){\nvar d = cljs.core.ex_data(e);\nif(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(d),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803))){\nthrow e;\n} else {\nvar ex_msg_50077 = e.message;\nvar map__50019_50078 = cljs.core.meta(node);\nvar map__50019_50079__$1 = cljs.core.__destructure_map(map__50019_50078);\nvar line_50080 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50019_50079__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(ctx));\nvar column_50081 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50019_50079__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(ctx));\nvar file_50082 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50019_50079__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar ex_msg_50083__$1 = (cljs.core.truth_((function (){var and__4210__auto__ = ex_msg_50077;\nif(cljs.core.truth_(and__4210__auto__)){\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(fm);\n} else {\nreturn and__4210__auto__;\n}\n})())?clojure.string.replace(ex_msg_50077,/(sci\\.impl\\.)?fns\\/fun\\/[a-zA-Z0-9-]+--\\d+/,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(fm))):ex_msg_50077);\nif(cljs.core.truth_((function (){var and__4210__auto__ = line_50080;\nif(cljs.core.truth_(and__4210__auto__)){\nreturn column_50081;\n} else {\nreturn and__4210__auto__;\n}\n})())){\nvar m_50091__$1 = ex_msg_50083__$1;\nvar new_exception_50092 = (function (){var d__$1 = cljs.core.ex_data(e);\nvar base = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"sci\",\"error\",\"sci/error\",-979082803),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line_50080,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column_50081,new cljs.core.Keyword(null,\"message\",\"message\",-406056002),m_50091__$1,new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557),(new cljs.core.Delay((function (){\nvar temp__5753__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sci.impl\",\"callstack\",\"sci.impl/callstack\",-1621010557),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(ctx)], null));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar v = temp__5753__auto__;\nreturn cljs.core.deref(v);\n} else {\nreturn null;\n}\n}),null)),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),file_50082,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192).cljs$core$IFn$_invoke$arity$1(ctx)], null);\nvar phase = new cljs.core.Keyword(null,\"phase\",\"phase\",575722892).cljs$core$IFn$_invoke$arity$1(ctx);\nvar base__$1 = (cljs.core.truth_(phase)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(base,new cljs.core.Keyword(null,\"phase\",\"phase\",575722892),phase):base);\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(m_50091__$1,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([base__$1,d__$1], 0)),e);\n})();\nthrow new_exception_50092;\n} else {\nthrow e;\n}\n}\n\nthrow e;\n} else {\nthrow e;\n}\n});\nsci.impl.utils.iobj_QMARK_ = (function sci$impl$utils$iobj_QMARK_(obj){\nvar and__4210__auto__ = (((!((obj == null))))?(((((obj.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IWithMeta$))))?true:false):false);\nif(and__4210__auto__){\nreturn cljs.core.meta(obj);\n} else {\nreturn and__4210__auto__;\n}\n});\n/**\n * Only adds metadata to obj if d is not nil and if obj already has meta\n */\nsci.impl.utils.vary_meta_STAR_ = (function sci$impl$utils$vary_meta_STAR_(var_args){\nvar args__4824__auto__ = [];\nvar len__4818__auto___50101 = arguments.length;\nvar i__4819__auto___50102 = (0);\nwhile(true){\nif((i__4819__auto___50102 < len__4818__auto___50101)){\nargs__4824__auto__.push((arguments[i__4819__auto___50102]));\n\nvar G__50103 = (i__4819__auto___50102 + (1));\ni__4819__auto___50102 = G__50103;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4825__auto__ = ((((2) < args__4824__auto__.length))?(new cljs.core.IndexedSeq(args__4824__auto__.slice((2)),(0),null)):null);\nreturn sci.impl.utils.vary_meta_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4825__auto__);\n});\n\n(sci.impl.utils.vary_meta_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,f,args){\nif(cljs.core.truth_(sci.impl.utils.iobj_QMARK_(obj))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.vary_meta,obj,f,args);\n} else {\nreturn obj;\n}\n}));\n\n(sci.impl.utils.vary_meta_STAR_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(sci.impl.utils.vary_meta_STAR_.cljs$lang$applyTo = (function (seq50035){\nvar G__50036 = cljs.core.first(seq50035);\nvar seq50035__$1 = cljs.core.next(seq50035);\nvar G__50037 = cljs.core.first(seq50035__$1);\nvar seq50035__$2 = cljs.core.next(seq50035__$1);\nvar self__4805__auto__ = this;\nreturn self__4805__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50036,G__50037,seq50035__$2);\n}));\n\n/**\n * Only adds metadata to obj if d is not nil and if meta on obj isn't already nil.\n */\nsci.impl.utils.merge_meta = (function sci$impl$utils$merge_meta(obj,d){\nif(cljs.core.truth_((function (){var and__4210__auto__ = d;\nif(cljs.core.truth_(and__4210__auto__)){\nif((!((obj == null)))){\nif((((obj.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IWithMeta$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4210__auto__;\n}\n})())){\nvar temp__5751__auto__ = cljs.core.meta(obj);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar m = temp__5751__auto__;\n\nreturn cljs.core.with_meta(obj,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m,d], 0)));\n} else {\nreturn obj;\n}\n} else {\nreturn obj;\n}\n});\nsci.impl.utils.strip_core_ns = (function sci$impl$utils$strip_core_ns(sym){\nvar G__50048 = cljs.core.namespace(sym);\nswitch (G__50048) {\ncase \"clojure.core\":\ncase \"cljs.core\":\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n\nbreak;\ndefault:\nreturn sym;\n\n}\n});\nsci.impl.utils.allowed_loop = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"loop\");\nsci.impl.utils.allowed_recur = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"recur\");\nsci.impl.utils.walk_STAR_ = (function sci$impl$utils$walk_STAR_(inner,form){\nif(cljs.core.truth_(new cljs.core.Keyword(\"sci.impl\",\"op\",\"sci.impl/op\",950953978).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form)))){\nreturn form;\n} else {\nif(cljs.core.list_QMARK_(form)){\nreturn cljs.core.with_meta(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form)),cljs.core.meta(form));\n} else {\nif(cljs.core.map_entry_QMARK_(form)){\nreturn (new cljs.core.MapEntry((function (){var G__50052 = cljs.core.key(form);\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__50052) : inner.call(null,G__50052));\n})(),(function (){var G__50053 = cljs.core.val(form);\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__50053) : inner.call(null,G__50053));\n})(),null));\n} else {\nif(cljs.core.seq_QMARK_(form)){\nreturn cljs.core.with_meta(cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form)),cljs.core.meta(form));\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,x){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r,(inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(x) : inner.call(null,x)));\n}),form,form);\n} else {\nif(cljs.core.coll_QMARK_(form)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(form),cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\n} else {\nreturn form;\n\n}\n}\n}\n}\n}\n}\n});\n/**\n * Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes.\n */\nsci.impl.utils.prewalk = (function sci$impl$utils$prewalk(f,form){\nreturn sci.impl.utils.walk_STAR_(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(sci.impl.utils.prewalk,f),(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(form) : f.call(null,form)));\n});\n/**\n * Fetches namespaces from env if it exists. Else, if `create?`,\n *   produces one regardless of the existince of the namespace in env and\n *   adds it to env before returning it.\n */\nsci.impl.utils.namespace_object = (function sci$impl$utils$namespace_object(env,ns_sym,create_QMARK_,attr_map){\nvar env_STAR_ = cljs.core.deref(env);\nvar ns_map = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env_STAR_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469),ns_sym], null));\nvar or__4212__auto__ = new cljs.core.Keyword(null,\"obj\",\"obj\",981763962).cljs$core$IFn$_invoke$arity$1(ns_map);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nif(cljs.core.truth_((function (){var or__4212__auto____$1 = ns_map;\nif(cljs.core.truth_(or__4212__auto____$1)){\nreturn or__4212__auto____$1;\n} else {\nreturn create_QMARK_;\n}\n})())){\nvar ns_obj = sci.impl.vars.__GT_SciNamespace(ns_sym,attr_map);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(env,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469),ns_sym,new cljs.core.Keyword(null,\"obj\",\"obj\",981763962)], null),ns_obj);\n\nreturn ns_obj;\n} else {\nreturn null;\n}\n}\n});\nsci.impl.utils.set_namespace_BANG_ = (function sci$impl$utils$set_namespace_BANG_(ctx,ns_sym,attr_map){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx);\nvar attr_map__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.meta(ns_sym),attr_map], 0));\nvar ns_obj = sci.impl.utils.namespace_object(env,ns_sym,true,attr_map__$1);\nreturn sci.impl.types.setVal(sci.impl.vars.current_ns,ns_obj);\n});\nsci.impl.utils.eval_form_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_require_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_use_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_resolve_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_refer_state = cljs.core.volatile_BANG_(null);\nsci.impl.utils.macroexpand_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.macroexpand_1_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_do_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_fn = cljs.core.volatile_BANG_(null);\nsci.impl.utils.eval_string_STAR_ = cljs.core.volatile_BANG_(null);\nsci.impl.utils.lookup = cljs.core.volatile_BANG_(null);\n/**\n * Like partition-by but splits collection only when `pred` returns\n *   a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`\n */\nsci.impl.utils.split_when = (function sci$impl$utils$split_when(pred,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5753__auto__ = cljs.core.seq(coll);\nif(temp__5753__auto__){\nvar s = temp__5753__auto__;\nvar fst = cljs.core.first(s);\nvar f = cljs.core.complement(pred);\nvar run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__50058_SHARP_){\nreturn f(p1__50058_SHARP_);\n}),cljs.core.next(s)));\nreturn cljs.core.cons(run,(function (){var G__50063 = pred;\nvar G__50064 = (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s);\n}),null,null));\nreturn (sci.impl.utils.split_when.cljs$core$IFn$_invoke$arity$2 ? sci.impl.utils.split_when.cljs$core$IFn$_invoke$arity$2(G__50063,G__50064) : sci.impl.utils.split_when.call(null,G__50063,G__50064));\n})());\n} else {\nreturn null;\n}\n}),null,null));\n});\nsci.impl.utils.ana_macros = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 28, [new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"import\",\"import\",241030818,null),\"null\",new cljs.core.Symbol(null,\"doseq\",\"doseq\",221164135,null),\"null\",new cljs.core.Symbol(null,\"lazy-seq\",\"lazy-seq\",489632906,null),\"null\",new cljs.core.Symbol(null,\"let\",\"let\",358118826,null),\"null\",new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"in-ns\",\"in-ns\",-2089468466,null),\"null\",new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"declare\",\"declare\",654042991,null),\"null\",new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"loop\",\"loop\",1244978678,null),\"null\",new cljs.core.Symbol(null,\"for\",\"for\",316745208,null),\"null\",new cljs.core.Symbol(null,\"expand-constructor\",\"expand-constructor\",-343741576,null),\"null\",new cljs.core.Symbol(null,\"defmacro\",\"defmacro\",2054157304,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"case\",\"case\",-1510733573,null),\"null\",new cljs.core.Symbol(null,\"comment\",\"comment\",-2122229700,null),\"null\",new cljs.core.Symbol(null,\"resolve\",\"resolve\",56086045,null),\"null\",new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\",new cljs.core.Symbol(null,\"expand-dot*\",\"expand-dot*\",-1946890561,null),\"null\"], null), null);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:no-doc",true,"~:file","sci/impl/utils.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$sci.impl.utils","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^R","~$str","^R","~$sci.impl.types","^T","~$t","^T","~$sci.impl.vars","^U","~$vars","^U","~$cljs.core","^W","~$goog","^X"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^W","^W","^U","^U","^V","^U"],"~:form",["~#list",["~$ns","^M",["^ ","^6",true],["^12",["^Z",["^R","~:as","^S"],["^T","^14","~$t"],["^U","^14","^V"]]]]],"~:flags",["^ ","^Z",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^R","^T","^U"]],"^O","^M","~:resource-id",["~:shadow.build.classpath/resource","sci/impl/utils.cljc"],"~:compiled-at",1630429609417,"~:resource-name","sci/impl/utils.cljc","~:warnings",[],"~:source","(ns sci.impl.utils\n  {:no-doc true}\n  (:require [clojure.string :as str]\n            [sci.impl.types :as t]\n            [sci.impl.vars :as vars]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(derive :sci.error/realized-beyond-max :sci/error)\n(derive :sci.error/parse :sci/error)\n\n(defn constant? [x]\n  (or (number? x) (string? x) (keyword? x) (boolean? x)))\n\n(defn eval? [x]\n  (some-> x meta :sci.impl/op))\n\n(def kw-identical? #?(:clj identical? :cljs keyword-identical?))\n\n(defn mark-eval-call\n  ([expr]\n   (vary-meta\n    expr\n    (fn [m]\n      (-> m\n          (assoc :sci.impl/op :call)\n          (assoc :ns @vars/current-ns)\n          (assoc :file @vars/current-file)))))\n  ([expr extra-key extra-val]\n   (vary-meta\n    expr\n    (fn [m]\n      (-> m\n          (assoc :sci.impl/op :call)\n          (assoc :ns @vars/current-ns)\n          (assoc :file @vars/current-file)\n          (assoc extra-key extra-val))))))\n\n(defn mark-eval\n  [expr]\n  (vary-meta\n   expr\n   (fn [m]\n     (assoc m :sci.impl/op :eval))))\n\n(defn throw-error-with-location\n  ([msg iobj] (throw-error-with-location msg iobj {}))\n  ([msg iobj data]\n   (let [{:keys [:line :column :file]\n          :or {file @vars/current-file}} (meta iobj)]\n     (throw (ex-info msg (merge {:type :sci/error\n                                 :line line\n                                 :column column\n                                 :file file} data))))))\n\n(def ^:dynamic *in-try* false)\n\n(defn macro? [f]\n  (when-let [m (meta f)]\n    (or (:sci/macro m)\n        (:macro m))))\n\n(def needs-ctx (symbol \"needs-ctx\"))\n(def evaluate (symbol \"eval\"))\n\n(defn rethrow-with-location-of-node [ctx ^Throwable e node]\n  (let [m (meta node)\n        f (when (seqable? node) (first node))\n        fm (or (:sci.impl/f-meta node) (some-> f meta))\n        op (when fm (.get ^java.util.Map m :sci.impl/op))\n        special? (or\n                  ;; special call like def\n                  (and (symbol? f) (not op))\n                  ;; anonymous function\n                  (kw-identical? :fn op)\n                  ;; special thing like require\n                  (identical? needs-ctx op))]\n    (when (not special?)\n      (swap! (:env ctx) update-in [:sci.impl/callstack (:id ctx)]\n             (fn [vt]\n               (if vt\n                 (do (vswap! vt conj node)\n                     vt)\n                 (volatile! (list node))))))\n    (if-not *in-try*\n      (let [d (ex-data e)]\n        (if (isa? (:type d) :sci/error)\n          (throw e)\n          (let [ex-msg #?(:clj (or (.getMessage e))\n                          :cljs (.-message e))\n                {:keys [:line :column :file]\n                 :or {line (:line ctx)\n                      column (:column ctx)}} (meta node)\n                ex-msg (if (and ex-msg (:name fm))\n                         (str/replace ex-msg #\"(sci\\.impl\\.)?fns/fun/[a-zA-Z0-9-]+--\\d+\"\n                                      (str (:name fm)))\n                         ex-msg)]\n            (if (and line column)\n              (let [m ex-msg\n                    new-exception\n                    (let [d (ex-data e)\n                          base {:type :sci/error\n                                :line line\n                                :column column\n                                :message m\n                                :sci.impl/callstack (delay (when-let [v (get-in @(:env ctx) [:sci.impl/callstack (:id ctx)])]\n                                                    @v))\n                                :file file\n                                :locals (:bindings ctx)}\n                          phase (:phase ctx)\n                          base (if phase\n                                 (assoc base :phase phase)\n                                 base)]\n                      (ex-info m (merge base d) e))]\n                (throw new-exception))\n              (throw e))))\n        (throw e))\n      (throw e))))\n\n(defn iobj? [obj]\n  (and #?(:clj (instance? clojure.lang.IObj obj)\n          :cljs (implements? IWithMeta obj))\n       (meta obj)))\n\n(defn vary-meta*\n  \"Only adds metadata to obj if d is not nil and if obj already has meta\"\n  [obj f & args]\n  (if (iobj? obj)\n    (apply vary-meta obj f args)\n    obj))\n\n(defn merge-meta\n  \"Only adds metadata to obj if d is not nil and if meta on obj isn't already nil.\"\n  [obj d]\n  (if (and d #?(:clj (instance? clojure.lang.IObj obj)\n                :cljs (implements? IWithMeta obj)))\n    (if-let [m (meta obj)]\n      (do\n        nil\n        ;; this should not happen, turn on for debugging\n        #_(when (identical? m d) (prn :identical obj d m))\n        (with-meta obj (merge m d)))\n      obj)\n    obj))\n\n(defn strip-core-ns [sym]\n  (case (namespace sym)\n    (\"clojure.core\" \"cljs.core\") (symbol (name sym))\n    sym))\n\n(def allowed-loop (symbol \"loop\"))\n(def allowed-recur (symbol \"recur\"))\n\n(defn walk*\n  [inner form]\n  (cond\n    (:sci.impl/op (meta form)) form\n    (list? form) (with-meta (apply list (map inner form))\n                   (meta form))\n    #?(:clj (instance? clojure.lang.IMapEntry form) :cljs (map-entry? form))\n    #?(:clj (clojure.lang.MapEntry/create (inner (key form)) (inner (val form)))\n       :cljs (MapEntry. (inner (key form)) (inner (val form)) nil))\n    (seq? form) (with-meta (doall (map inner form))\n                  (meta form))\n    #?(:clj (instance? clojure.lang.IRecord form)\n       :cljs (record? form))\n    (reduce (fn [r x] (conj r (inner x))) form form)\n    (coll? form) (into (empty form) (map inner form))\n    :else form))\n\n(defn prewalk\n  \"Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes.\"\n  [f form]\n  (walk* (partial prewalk f) (f form)))\n\n(defn namespace-object\n  \"Fetches namespaces from env if it exists. Else, if `create?`,\n  produces one regardless of the existince of the namespace in env and\n  adds it to env before returning it.\"\n  [env ns-sym create? attr-map]\n  (let [env* @env\n        ns-map (get-in env* [:namespaces ns-sym])]\n    (or (:obj ns-map)\n        (when (or ns-map create?)\n          (let [ns-obj (vars/->SciNamespace ns-sym attr-map)]\n            (swap! env assoc-in [:namespaces ns-sym :obj] ns-obj)\n            ns-obj)))))\n\n(defn set-namespace! [ctx ns-sym attr-map]\n  (let [env (:env ctx)\n        attr-map (merge (meta ns-sym) attr-map)\n        ns-obj (namespace-object env ns-sym true attr-map)]\n    (t/setVal vars/current-ns ns-obj)))\n\n(def eval-form-state (volatile! nil))\n(def eval-require-state (volatile! nil))\n(def eval-use-state (volatile! nil))\n(def eval-resolve-state (volatile! nil))\n(def eval-refer-state (volatile! nil))\n(def macroexpand* (volatile! nil))\n(def macroexpand-1* (volatile! nil))\n(def eval* (volatile! nil))\n(def eval-do* (volatile! nil))\n(def eval-fn (volatile! nil))\n(def eval-string* (volatile! nil))\n(def lookup (volatile! nil))\n\n(defn split-when\n  \"Like partition-by but splits collection only when `pred` returns\n  a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`\"\n  [pred coll]\n  (lazy-seq\n   (when-let [s (seq coll)]\n     (let [fst (first s)\n           f (complement pred)\n           run (cons fst (take-while #(f %) (next s)))]\n       (cons run (split-when pred (lazy-seq (drop (count run) s))))))))\n\n(def ana-macros\n  '#{do if and or let fn fn* def defn\n     comment loop lazy-seq for doseq case try defmacro\n     declare expand-dot* expand-constructor new . import in-ns ns var\n     set! resolve #_#_macroexpand-1 macroexpand})\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core.derive","sci.impl.utils/constant?","x","cljs.core/Keyword","cljs.core/boolean?","sci.impl.utils/eval?","G__49946","cljs.core/meta","sci.impl.utils/kw-identical?","cljs.core/keyword-identical?","var_args","G__49949","sci.impl.utils/mark-eval-call","js/Error","expr","cljs.core.vary_meta","m","cljs.core.assoc","cljs.core/deref","sci.impl.vars/current-ns","sci.impl.vars/current-file","extra-key","extra-val","sci.impl.utils/mark-eval","G__49962","sci.impl.utils/throw-error-with-location","msg","iobj","sci.impl.utils.throw_error_with_location","data","map__49966","cljs.core/--destructure-map","line","cljs.core.get","column","file","cljs.core.ex_info","cljs.core.merge","sci.impl.utils/*in-try*","sci.impl.utils/macro?","f","temp__5753__auto__","or__4212__auto__","sci.impl.utils/needs-ctx","cljs.core.symbol","sci.impl.utils/evaluate","sci.impl.utils/rethrow-with-location-of-node","ctx","e","node","cljs.core/seqable?","cljs.core/first","fm","G__49990","op","special?","cljs.core/Symbol","cljs.core/not","cljs.core.swap_BANG_","cljs.core/update-in","vt","cljs.core/-vreset!","cljs.core/-deref","cljs.core.conj","cljs.core/volatile!","cljs.core/List","d","cljs.core/ex-data","cljs.core.isa_QMARK_","map__50019","ex-msg","and__4210__auto__","clojure.string/replace","new-exception","base","cljs.core/Delay","v","cljs.core.get_in","phase","sci.impl.utils/iobj?","obj","cljs.core/PROTOCOL_SENTINEL","args__4824__auto__","len__4818__auto__","i__4819__auto__","argseq__4825__auto__","cljs.core/IndexedSeq","sci.impl.utils/vary-meta*","seq50035","G__50036","cljs.core/next","G__50037","self__4805__auto__","args","cljs.core.apply","cljs.core/vary-meta","sci.impl.utils/merge-meta","temp__5751__auto__","cljs.core/with-meta","sci.impl.utils/strip-core-ns","sym","G__50048","cljs.core/namespace","cljs.core/name","sci.impl.utils/allowed-loop","sci.impl.utils/allowed-recur","sci.impl.utils/walk*","inner","form","cljs.core/list?","cljs.core/list","cljs.core.map","cljs.core/map-entry?","cljs.core/MapEntry","G__50052","cljs.core/key","G__50053","cljs.core/val","cljs.core/seq?","cljs.core.doall","cljs.core/record?","cljs.core.reduce","r","cljs.core/coll?","cljs.core.into","cljs.core/empty","sci.impl.utils/prewalk","cljs.core.partial","sci.impl.utils/namespace-object","env","ns-sym","create?","attr-map","env*","ns-map","ns-obj","sci.impl.vars/->SciNamespace","cljs.core/assoc-in","sci.impl.utils/set-namespace!","sci.impl.types/setVal","sci.impl.utils/eval-form-state","sci.impl.utils/eval-require-state","sci.impl.utils/eval-use-state","sci.impl.utils/eval-resolve-state","sci.impl.utils/eval-refer-state","sci.impl.utils/macroexpand*","sci.impl.utils/macroexpand-1*","sci.impl.utils/eval*","sci.impl.utils/eval-do*","sci.impl.utils/eval-fn","sci.impl.utils/eval-string*","sci.impl.utils/lookup","sci.impl.utils/split-when","pred","coll","cljs.core/LazySeq","s","cljs.core/seq","fst","cljs.core/complement","run","cljs.core/cons","p1__50058#","cljs.core.take_while","G__50063","G__50064","cljs.core.drop","cljs.core/count","sci.impl.utils/ana-macros"]],"~:used-vars",["^K",["~$cljs.core/--destructure-map","~$sci.impl.utils/mark-eval-call","~$cljs.core/PROTOCOL_SENTINEL","~$sci.impl.utils/eval-use-state","~$sci.impl.utils/*in-try*","~$cljs.core/boolean?","~$sci.impl.utils/iobj?","~$sci.impl.utils/split-when","~$sci.impl.utils/evaluate","~$sci.impl.utils/lookup","~$cljs.core/partial","~$cljs.core/doall","~$cljs.core/take-while","~$sci.impl.vars/current-ns","~$cljs.core/IndexedSeq","~$cljs.core/-deref","~$sci.impl.utils/vary-meta*","~$cljs.core/count","~$cljs.core/deref","~$sci.impl.vars/current-file","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/apply","~$cljs.core/Keyword","~$sci.impl.utils/set-namespace!","~$cljs.core/map-entry?","~$sci.impl.vars/->SciNamespace","~$cljs.core/MapEntry","~$cljs.core/keyword-identical?","~$cljs.core/Delay","~$cljs.core/LazySeq","~$sci.impl.utils/merge-meta","~$sci.impl.types/setVal","~$sci.impl.utils/eval-refer-state","~$sci.impl.utils/eval?","~$sci.impl.utils/eval*","~$sci.impl.utils/macroexpand*","~$cljs.core/into","~$cljs.core/conj","~$cljs.core/vary-meta","~$cljs.core/with-meta","~$cljs.core/namespace","~$cljs.core/map","~$sci.impl.utils/eval-require-state","~$cljs.core/volatile!","~$cljs.core/get-in","~$sci.impl.utils/ana-macros","~$cljs.core/List","~$cljs.core/empty","~$cljs.core/swap!","~$sci.impl.utils/namespace-object","~$cljs.core/get","~$cljs.core/derive","~$cljs.core/-vreset!","~$cljs.core/symbol","~$cljs.core/record?","~$sci.impl.utils/rethrow-with-location-of-node","~$sci.impl.utils/macro?","~$sci.impl.utils/strip-core-ns","~$sci.impl.utils/constant?","~$sci.impl.utils/allowed-loop","~$cljs.core/ex-info","~$cljs.core/meta","~$sci.impl.utils/eval-string*","~$sci.impl.utils/eval-form-state","~$cljs.core/list?","~$sci.impl.utils/allowed-recur","~$sci.impl.utils/eval-do*","~$clojure.string/replace","~$cljs.core/key","~$sci.impl.utils/macroexpand-1*","~$cljs.core/next","~$sci.impl.utils/prewalk","~$cljs.core/not","~$cljs.core/complement","~$sci.impl.utils/eval-fn","~$cljs.core/cons","~$cljs.core/assoc","~$cljs.core/assoc-in","~$cljs.core/seqable?","~$sci.impl.utils/walk*","~$cljs.core/Symbol","~$cljs.core/coll?","~$cljs.core/isa?","~$cljs.core/ex-data","~$sci.impl.utils/kw-identical?","~$cljs.core/first","~$cljs.core/seq?","~$sci.impl.utils/needs-ctx","~$sci.impl.utils/throw-error-with-location","~$cljs.core/list","~$cljs.core/name","~$cljs.core/merge","~$cljs.core/update-in","~$cljs.core/val","~$js/Error","~$sci.impl.utils/eval-resolve-state","~$sci.impl.utils/mark-eval","~$cljs.core/drop"]]],"~:cache-keys",["~#cmap",[["^19","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^X","~$goog.dom.HtmlElement"]]],["^19","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","~$goog.array","~$goog.asserts"]]],["^19","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^19","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3["]]],["^19","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X"]]],["^19","sci/impl/unrestrict.cljc"],["96e39dcbc3fb3a41c6bf2e628303cf0f534b28a3","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W"]]],["^19","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X"]]],["^19","sci/impl/macros.cljc"],["96e39dcbc3fb3a41c6bf2e628303cf0f534b28a3","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W"]]],"~:SHADOW-TIMESTAMP",[1630418006000,1630418006000,1627026917000],["^19","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","~$goog.reflect"]]],["^19","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","~$goog.fs.blob","^40","~$goog.html.SafeScript","~$goog.html.trustedtypes","^42","^43","^44","^45"]]],["^19","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W","^3X","~$goog.html.SafeUrl","^44","^45","^3["]]],["^19","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^49","~$goog.html.SafeStyle","^4;","^41","~$goog.html.uncheckedconversions","^44","^3["]]],["^19","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^19","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W","^3X","~$goog.dom.TagName","~$goog.dom.tags","^49","^4?","~$goog.html.SafeStyleSheet","^4;","^41","^4:","^42","^43","~$goog.labs.userAgent.browser","^3Z","^44","^45","^3["]]],["^19","sci/impl/types.cljc"],["96e39dcbc3fb3a41c6bf2e628303cf0f534b28a3","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W"]]],["^19","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3Z"]]],["^19","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W"]]],["^19","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^19","sci/impl/vars.cljc"],["96e39dcbc3fb3a41c6bf2e628303cf0f534b28a3","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W","~$sci.impl.macros","^T","~$sci.impl.unrestrict","~$sci.lang"]]],["^19","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W","^3X","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^19","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",[]]],["^19","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W","^3Z"]]],["^19","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W","^4L","~$goog.string.StringBuffer"]]],["^19","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","~$goog.dom.safe","^4@","^44","^3["]]],["^19","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3["]]],["^19","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3W","^3X","^4=","~$goog.math"]]],["^19","sci/impl/utils.cljc"],["96e39dcbc3fb3a41c6bf2e628303cf0f534b28a3","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W","^R","^T","^U"]]],["^19","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","^4>","^49","^4?","^4E","^4;","^41","^44","^3[","^42"]]],["^19","sci/lang.cljc"],["96e39dcbc3fb3a41c6bf2e628303cf0f534b28a3","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^W"]]],["^19","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X"]]],["^19","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","~$goog.math.Long","~$goog.math.Integer","^4L","^3Z","^3W","~$goog.Uri","^4R"]]],["^19","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^44","^45","^4:","^3X"]]],["^19","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^44","^4?","^45","^3W","^3Z","^3X","^3["]]],["^19","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^47"]]],["^19","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","^4L"]]],["^19","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^K",[]],"^3U",["^X","^3X","^45"]]]]],"~:clj-info",["^ ","jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/borkdude/sci/0.2.1-alpha.1/sci-0.2.1-alpha.1.jar!/sci/impl/vars.cljc",1630429552000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/defaults.clj",1625668616000,"jar:file:/home/dudley/.m2/repository/borkdude/sci/0.2.1-alpha.1/sci-0.2.1-alpha.1.jar!/sci/impl/macros.cljc",1630429552000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/borkdude/sci/0.2.1-alpha.1/sci-0.2.1-alpha.1.jar!/sci/impl/types.cljc",1630429552000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1627026915000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6",true,"^7","sci/impl/utils.cljc","^8",1,"^9",5,"^:",1,"^;",19],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",[]],"^L","^M","^P",null,"^Q",["^ ","^R","^R","^S","^R","^T","^T","~$t","^T","^U","^U","^V","^U","^W","^W","^X","^X"],"^Y",["^K",["^Z"]],"~:shadow/js-access-global",["^K",["Error"]],"^[",null,"~:defs",["^ ","~$set-namespace!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",189,"^9",7,"^:",189,"^;",21,"~:arglists",["^12",["~$quote",["^12",[["~$ctx","~$ns-sym","~$attr-map"]]]]]],"^L","^21","^7","sci/impl/utils.cljc","^;",21,"~:method-params",["^12",[["^5T","^5U","^5V"]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^9",1,"~:variadic?",false,"^8",189,"~:ret-tag","~$any","^:",189,"~:max-fixed-arity",3,"~:fn-var",true,"^5R",["^12",["^5S",["^12",[["^5T","^5U","^5V"]]]]]],"~$eval-fn",["^ ","^L","^38","^7","sci/impl/utils.cljc","^8",204,"^9",1,"^:",204,"^;",13,"^5",["^ ","^7","sci/impl/utils.cljc","^8",204,"^9",6,"^:",204,"^;",13],"~:tag","~$cljs.core/Volatile"],"~$merge-meta",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",132,"^9",7,"^:",132,"^;",17,"^5R",["^12",["^5S",["^12",[["~$obj","~$d"]]]]],"~:doc","Only adds metadata to obj if d is not nil and if meta on obj isn't already nil."],"^L","^28","^7","sci/impl/utils.cljc","^;",17,"^5W",["^12",[["^67","~$d"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",132,"^5[",["^K",[null,"~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^:",132,"^61",2,"^62",true,"^5R",["^12",["^5S",["^12",[["^67","~$d"]]]]],"^68","Only adds metadata to obj if d is not nil and if meta on obj isn't already nil."],"~$eval?",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",15,"^9",7,"^:",15,"^;",12,"^5R",["^12",["^5S",["^12",[["~$x"]]]]]],"^L","^2;","^7","sci/impl/utils.cljc","^;",12,"^5W",["^12",[["~$x"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",15,"^5[",["^K",["^60","^6;"]],"^:",15,"^61",1,"^62",true,"^5R",["^12",["^5S",["^12",[["~$x"]]]]]],"~$needs-ctx",["^ ","^L","^3E","^7","sci/impl/utils.cljc","^8",63,"^9",1,"^:",63,"^;",15,"^5",["^ ","^7","sci/impl/utils.cljc","^8",63,"^9",6,"^:",63,"^;",15],"^64",["^K",["^60","^3>"]]],"~$throw-error-with-location",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",46,"^9",7,"^:",46,"^;",32,"^5R",["^12",["^5S",["^12",[["~$msg","~$iobj"],["^6?","^6@","~$data"]]]]],"~:top-fn",["^ ","^5Z",false,"~:fixed-arity",3,"^61",3,"^5W",[["^6?","^6@"],["^6?","^6@","^6A"]],"^5R",["^12",[["^6?","^6@"],["^6?","^6@","^6A"]]],"^5Y",["^12",[null,null]]]],"^L","^3F","^7","sci/impl/utils.cljc","^;",32,"^6B",["^ ","^5Z",false,"^6C",3,"^61",3,"^5W",[["^6?","^6@"],["^6?","^6@","^6A"]],"^5R",["^12",[["^6?","^6@"],["^6?","^6@","^6A"]]],"^5Y",["^12",[null,null]]],"^5W",[["^6?","^6@"],["^6?","^6@","^6A"]],"^5X",null,"^6C",3,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"~:methods",[["^ ","^6C",2,"^5Z",false,"^64","^60"],["^ ","^6C",3,"^5Z",false,"^64","~$ignore"]],"^8",46,"^:",46,"^61",3,"^62",true,"^5R",["^12",[["^6?","^6@"],["^6?","^6@","^6A"]]]],"~$macroexpand*",["^ ","^L","^2=","^7","sci/impl/utils.cljc","^8",200,"^9",1,"^:",200,"^;",18,"^5",["^ ","^7","sci/impl/utils.cljc","^8",200,"^9",6,"^:",200,"^;",18],"^64","^65"],"~$mark-eval",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",39,"^9",7,"^:",39,"^;",16,"^5R",["^12",["^5S",["^12",[["~$expr"]]]]]],"^L","^3N","^7","sci/impl/utils.cljc","^;",16,"^5W",["^12",[["^6H"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",39,"^5[",["^K",["^69","^6:","^6;"]],"^:",39,"^61",1,"^62",true,"^5R",["^12",["^5S",["^12",[["^6H"]]]]]],"~$eval-resolve-state",["^ ","^L","^3M","^7","sci/impl/utils.cljc","^8",198,"^9",1,"^:",198,"^;",24,"^5",["^ ","^7","sci/impl/utils.cljc","^8",198,"^9",6,"^:",198,"^;",24],"^64","^65"],"~$*in-try*",["^ ","^5",["^ ","^7","sci/impl/utils.cljc","^8",56,"^9",16,"^:",56,"^;",24,"~:dynamic",true],"^L","^1I","^7","sci/impl/utils.cljc","^;",24,"^9",1,"^6K",true,"^8",56,"^:",56,"^64","^60"],"~$iobj?",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",120,"^9",7,"^:",120,"^;",12,"^5R",["^12",["^5S",["^12",[["^67"]]]]]],"^L","^1K","^7","sci/impl/utils.cljc","^;",12,"^5W",["^12",[["^67"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",120,"^5[",["^K",["~$boolean","~$clj-or-nil","^6;"]],"^:",120,"^61",1,"^62",true,"^5R",["^12",["^5S",["^12",[["^67"]]]]]],"~$split-when",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",208,"^9",7,"^:",208,"^;",17,"^5R",["^12",["^5S",["^12",[["~$pred","~$coll"]]]]],"^68","Like partition-by but splits collection only when `pred` returns\n  a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`"],"^L","^1L","^7","sci/impl/utils.cljc","^;",17,"^5W",["^12",[["^6P","^6Q"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",208,"^5[","^27","^:",208,"^61",2,"^62",true,"^5R",["^12",["^5S",["^12",[["^6P","^6Q"]]]]],"^68","Like partition-by but splits collection only when `pred` returns\n  a truthy value. E.g. `(split-when odd? [1 2 3 4 5]) => ((1 2) (3 4) (5))`"],"~$evaluate",["^ ","^L","^1M","^7","sci/impl/utils.cljc","^8",64,"^9",1,"^:",64,"^;",14,"^5",["^ ","^7","sci/impl/utils.cljc","^8",64,"^9",6,"^:",64,"^;",14],"^64",["^K",["^60","^3>"]]],"~$lookup",["^ ","^L","^1N","^7","sci/impl/utils.cljc","^8",206,"^9",1,"^:",206,"^;",12,"^5",["^ ","^7","sci/impl/utils.cljc","^8",206,"^9",6,"^:",206,"^;",12],"^64","^65"],"~$rethrow-with-location-of-node",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",66,"^9",7,"^:",66,"^;",36,"^5R",["^12",["^5S",["^12",[["^5T","~$e","~$node"]]]]]],"^L","^2Q","^7","sci/impl/utils.cljc","^;",36,"^5W",["^12",[["^5T","~$e","^6U"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",66,"^5[","^6E","^:",66,"^61",3,"^62",true,"^5R",["^12",["^5S",["^12",[["^5T","~$e","^6U"]]]]]],"~$constant?",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",12,"^9",7,"^:",12,"^;",16,"^5R",["^12",["^5S",["^12",[["~$x"]]]]]],"^L","^2T","^7","sci/impl/utils.cljc","^;",16,"^5W",["^12",[["~$x"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",12,"^5[","^6M","^:",12,"^61",1,"^62",true,"^5R",["^12",["^5S",["^12",[["~$x"]]]]]],"~$eval-form-state",["^ ","^L","^2Y","^7","sci/impl/utils.cljc","^8",195,"^9",1,"^:",195,"^;",21,"^5",["^ ","^7","sci/impl/utils.cljc","^8",195,"^9",6,"^:",195,"^;",21],"^64","^65"],"~$allowed-recur",["^ ","^L","^2[","^7","sci/impl/utils.cljc","^8",152,"^9",1,"^:",152,"^;",19,"^5",["^ ","^7","sci/impl/utils.cljc","^8",152,"^9",6,"^:",152,"^;",19],"^64",["^K",["^60","^3>"]]],"~$vary-meta*",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",125,"^9",7,"^:",125,"^;",17,"^5R",["^12",["^5S",["^12",[["^67","~$f","~$&","~$args"]]]]],"^68","Only adds metadata to obj if d is not nil and if obj already has meta","^6B",["^ ","^5Z",true,"^6C",2,"^61",2,"^5W",[["^12",["^67","~$f","^6Z"]]],"^5R",["^12",[["^67","~$f","~$&","^6Z"]]],"^5Y",["^12",[null]]]],"^L","^1U","^7","sci/impl/utils.cljc","^;",17,"^6B",["^ ","^5Z",true,"^6C",2,"^61",2,"^5W",[["^12",["^67","~$f","^6Z"]]],"^5R",["^12",[["^67","~$f","~$&","^6Z"]]],"^5Y",["^12",[null]]],"^5W",[["^12",["^67","~$f","^6Z"]]],"^5X",null,"^6C",2,"^5Y",["^12",[null]],"^9",1,"^5Z",true,"^6D",[["^ ","^6C",2,"^5Z",true,"^64",["^K",[null,"^60"]]]],"^8",125,"^5[","^60","^:",125,"^61",2,"^62",true,"^5R",["^12",[["^67","~$f","~$&","^6Z"]]],"^68","Only adds metadata to obj if d is not nil and if obj already has meta"],"~$eval-do*",["^ ","^L","^30","^7","sci/impl/utils.cljc","^8",203,"^9",1,"^:",203,"^;",14,"^5",["^ ","^7","sci/impl/utils.cljc","^8",203,"^9",6,"^:",203,"^;",14],"^64","^65"],"~$macroexpand-1*",["^ ","^L","^33","^7","sci/impl/utils.cljc","^8",201,"^9",1,"^:",201,"^;",20,"^5",["^ ","^7","sci/impl/utils.cljc","^8",201,"^9",6,"^:",201,"^;",20],"^64","^65"],"~$prewalk",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",171,"^9",7,"^:",171,"^;",14,"^5R",["^12",["^5S",["^12",[["~$f","~$form"]]]]],"^68","Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes."],"^L","^35","^7","sci/impl/utils.cljc","^;",14,"^5W",["^12",[["~$f","^72"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",171,"^5[",["^K",[null,"^69","^60","^24","^6:","^6;"]],"^:",171,"^61",2,"^62",true,"^5R",["^12",["^5S",["^12",[["~$f","^72"]]]]],"^68","Prewalk with metadata preservation. Does not prewalk :sci.impl/op nodes."],"~$walk*",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",154,"^9",7,"^:",154,"^;",12,"^5R",["^12",["^5S",["^12",[["~$inner","^72"]]]]]],"^L","^3=","^7","sci/impl/utils.cljc","^;",12,"^5W",["^12",[["^74","^72"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",154,"^5[",["^K",[null,"^69","^60","^24","^6:","^6;"]],"^:",154,"^61",2,"^62",true,"^5R",["^12",["^5S",["^12",[["^74","^72"]]]]]],"~$kw-identical?",["^ ","^L","^3B","^7","sci/impl/utils.cljc","^8",18,"^9",1,"^:",18,"^;",19,"^5",["^ ","^7","sci/impl/utils.cljc","^8",18,"^9",6,"^:",18,"^;",19]],"~$eval-refer-state",["^ ","^L","^2:","^7","sci/impl/utils.cljc","^8",199,"^9",1,"^:",199,"^;",22,"^5",["^ ","^7","sci/impl/utils.cljc","^8",199,"^9",6,"^:",199,"^;",22],"^64","^65"],"~$eval*",["^ ","^L","^2<","^7","sci/impl/utils.cljc","^8",202,"^9",1,"^:",202,"^;",11,"^5",["^ ","^7","sci/impl/utils.cljc","^8",202,"^9",6,"^:",202,"^;",11],"^64","^65"],"~$eval-require-state",["^ ","^L","^2D","^7","sci/impl/utils.cljc","^8",196,"^9",1,"^:",196,"^;",24,"^5",["^ ","^7","sci/impl/utils.cljc","^8",196,"^9",6,"^:",196,"^;",24],"^64","^65"],"~$ana-macros",["^ ","^L","^2G","^7","sci/impl/utils.cljc","^8",219,"^9",1,"^:",219,"^;",16,"^5",["^ ","^7","sci/impl/utils.cljc","^8",219,"^9",6,"^:",219,"^;",16],"^64","~$cljs.core/ISet"],"~$mark-eval-call",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",20,"^9",7,"^:",20,"^;",21,"^5R",["^12",["^5S",["^12",[["^6H"],["^6H","~$extra-key","~$extra-val"]]]]],"^6B",["^ ","^5Z",false,"^6C",3,"^61",3,"^5W",[["^6H"],["^6H","^7<","^7="]],"^5R",["^12",[["^6H"],["^6H","^7<","^7="]]],"^5Y",["^12",[null,null]]]],"^L","^1F","^7","sci/impl/utils.cljc","^;",21,"^6B",["^ ","^5Z",false,"^6C",3,"^61",3,"^5W",[["^6H"],["^6H","^7<","^7="]],"^5R",["^12",[["^6H"],["^6H","^7<","^7="]]],"^5Y",["^12",[null,null]]],"^5W",[["^6H"],["^6H","^7<","^7="]],"^5X",null,"^6C",3,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^6D",[["^ ","^6C",1,"^5Z",false,"^64",["^K",["^69","^6:","^6;"]]],["^ ","^6C",3,"^5Z",false,"^64",["^K",["^69","^6:","^6;"]]]],"^8",20,"^:",20,"^61",3,"^62",true,"^5R",["^12",[["^6H"],["^6H","^7<","^7="]]]],"~$namespace-object",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",176,"^9",7,"^:",176,"^;",23,"^5R",["^12",["^5S",["^12",[["~$env","^5U","~$create?","^5V"]]]]],"^68","Fetches namespaces from env if it exists. Else, if `create?`,\n  produces one regardless of the existince of the namespace in env and\n  adds it to env before returning it."],"^L","^2K","^7","sci/impl/utils.cljc","^;",23,"^5W",["^12",[["^7?","^5U","^7@","^5V"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",176,"^5[",["^K",["^60","~$sci.impl.vars/SciNamespace","^6;"]],"^:",176,"^61",4,"^62",true,"^5R",["^12",["^5S",["^12",[["^7?","^5U","^7@","^5V"]]]]],"^68","Fetches namespaces from env if it exists. Else, if `create?`,\n  produces one regardless of the existince of the namespace in env and\n  adds it to env before returning it."],"~$eval-use-state",["^ ","^L","^1H","^7","sci/impl/utils.cljc","^8",197,"^9",1,"^:",197,"^;",20,"^5",["^ ","^7","sci/impl/utils.cljc","^8",197,"^9",6,"^:",197,"^;",20],"^64","^65"],"~$strip-core-ns",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",146,"^9",7,"^:",146,"^;",20,"^5R",["^12",["^5S",["^12",[["~$sym"]]]]]],"^L","^2S","^7","sci/impl/utils.cljc","^;",20,"^5W",["^12",[["^7D"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",146,"^:",146,"^61",1,"^62",true,"^5R",["^12",["^5S",["^12",[["^7D"]]]]]],"~$macro?",["^ ","^5Q",null,"^5",["^ ","^7","sci/impl/utils.cljc","^8",58,"^9",7,"^:",58,"^;",13,"^5R",["^12",["^5S",["^12",[["~$f"]]]]]],"^L","^2R","^7","sci/impl/utils.cljc","^;",13,"^5W",["^12",[["~$f"]]],"^5X",null,"^5Y",["^12",[null,null]],"^9",1,"^5Z",false,"^8",58,"^5[",["^K",["^60","^6;"]],"^:",58,"^61",1,"^62",true,"^5R",["^12",["^5S",["^12",[["~$f"]]]]]],"~$allowed-loop",["^ ","^L","^2U","^7","sci/impl/utils.cljc","^8",151,"^9",1,"^:",151,"^;",18,"^5",["^ ","^7","sci/impl/utils.cljc","^8",151,"^9",6,"^:",151,"^;",18],"^64",["^K",["^60","^3>"]]],"~$eval-string*",["^ ","^L","^2X","^7","sci/impl/utils.cljc","^8",205,"^9",1,"^:",205,"^;",18,"^5",["^ ","^7","sci/impl/utils.cljc","^8",205,"^9",6,"^:",205,"^;",18],"^64","^65"]],"^10",["^ ","^W","^W","^U","^U","^V","^U"],"~:cljs.analyzer/constants",["^ ","^Y",["^K",["~$try","~$import","~:sci.impl/callstack","~:namespaces","~:fn","~:sci.error/parse","~:sci.error/realized-beyond-max","~:sci.impl/f-meta","~:else","~:call","~$doseq","~:locals","^O","~:bindings","^L","~:sci/macro","~$lazy-seq","~$let","^7","~$fn","~:phase","~:type","~$do","~:sci/error","~:env","~$in-ns","~$defn","~$if","~$new","^13","^9","~$declare","~$or","^8","~$fn*","~:macro","~:id","~$loop","~$for","~$expand-constructor","~$defmacro","~$set!","~$.","~$var","~:obj","~:sci.impl/op","~$case","~$comment","~$resolve","~$and","~:message","~$def","~$expand-dot*","~:eval"]],"~:order",["^7O","^81","^7N","^8C","^7R","^O","^7","^8K","^8","^9","^7[","^7V","^8:","^7P","^7M","^82","^7K","^8;","^L","^8H","^7T","^7U","^7Z","^7Q","^7L","^8B","^7I","^7J","^7S","^7W","^7X","^7Y","^80","^83","^84","^85","^86","^13","^87","^88","^89","^8<","^8=","^8>","^8?","^8@","~$.","^8A","^8D","^8E","^8F","^8G","^8I","^8J"]],"^15",["^ ","^Z",["^K",[]]],"^16",["^ "],"^17",["^X","^W","^R","^T","^U"]],"^O","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^3Q",[["^8O","~:static-fns"],true,["^8O","~:shadow-tweaks"],null,["^8O","~:source-map-inline"],null,["^8O","~:elide-asserts"],false,["^8O","~:optimize-constants"],null,["^8O","^1<"],null,["^8O","~:external-config"],null,["^8O","~:tooling-config"],null,["^8O","~:emit-constants"],null,["^8O","~:load-tests"],null,["^8O","~:form-size-threshold"],null,["^8O","~:data-readers"],null,["^8O","~:infer-externs"],"~:auto",["^8O","^1>"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8O","~:fn-invoke-direct"],null,["^8O","~:source-map"],"/dev/null"]]]