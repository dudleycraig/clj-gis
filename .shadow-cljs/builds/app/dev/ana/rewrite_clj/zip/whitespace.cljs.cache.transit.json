["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__48433 = zloc;\nvar G__48433__$1 = (((G__48433 == null))?null:clojure.zip.node(G__48433));\nif((G__48433__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__48433__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__48433__$1));\n}\n});\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__48434 = zloc;\nvar G__48434__$1 = (((G__48434 == null))?null:clojure.zip.node(G__48434));\nif((G__48434__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__48434__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__48434__$1));\n}\n});\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__48436 = zloc;\nvar G__48436__$1 = (((G__48436 == null))?null:clojure.zip.node(G__48436));\nif((G__48436__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__48436__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__48436__$1));\n}\n});\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__4210__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__4210__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__4210__auto__;\n}\n});\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__48440 = zloc;\nvar G__48440__$1 = (((G__48440 == null))?null:clojure.zip.node(G__48440));\nif((G__48440__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__48440__$1);\n}\n});\n/**\n * Perform the given movement while the given predicate returns true.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Perform the given movement (default: `z/right`) until a non-whitespace/\n * non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__48443 = arguments.length;\nswitch (G__48443) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\n\n/**\n * Move left until a non-whitespace/non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\n});\n/**\n * Prepend a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__48446 = arguments.length;\nswitch (G__48446) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__48460 = arguments.length;\nswitch (G__48460) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * Prepend a newlines node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__48466 = arguments.length;\nswitch (G__48466) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\n\n/**\n * Append a newline node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__48470 = arguments.length;\nswitch (G__48470) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^Q","~$node","^Q","~$clojure.zip","^S","~$z","^S","~$cljs.core","^T","~$goog","^U"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^T","^T"],"~:form",["~#list",["~$ns","^L",["^[",["^W",["^Q","~:as","^R"],["^S","^11","~$z"]]]]],"~:flags",["^ ","^W",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^Q","^S"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1630429608572,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAMA,+CAAA,/CAAMA,sGACHC;AADH,AAEE,IAAAC,WAAQD;IAARC,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,iBAAAA,jBAAaC;AAAb,AAAA,GAAA,CAAAD,gBAAA;AAAA;;AAAA,4IAAAA,6DAAAA,jMAAoBE,mEAAAA,iFAAAA;;;AAEtB,8CAAA,9CAAMC,oGACHJ;AADH,AAEE,IAAAK,WAAQL;IAARK,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,iBAAAA,jBAAaH;AAAb,AAAA,GAAA,CAAAG,gBAAA;AAAA;;AAAA,0IAAAA,4DAAAA,9LAAoBC,kEAAAA,gFAAAA;;;AAEtB,4CAAA,5CAAMC,gGACHP;AADH,AAEE,IAAAQ,WAAQR;IAARQ,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,iBAAAA,jBAAaN;AAAb,AAAA,GAAA,CAAAM,gBAAA;AAAA;;AAAA,sIAAAA,0DAAAA,xLAAoBC,gEAAAA,8EAAAA;;;AAEtB,6DAAA,7DAAMC,kIACHV;AADH,AAEE,IAAAW,oBACC,AAACZ,6CAAYC;AADd,AAAA,oBAAAW;AAEC,OAACC,cAAI,AAACR,4CAAWJ;;AAFlBW;;;AAIF,0DAAA,1DAAME,4HACHb;AADH,AAEE,IAAAc,WAAQd;IAARc,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,iBAAAA,jBAAaZ;AAAb,AAAA,GAAA,CAAAY,gBAAA;AAAA;;AAAA,qDAAAA,9CAAoBC;;;AAKtB;;;kCAAA,lCAAMC,4EAEHC,EAAEC,SAAGlB;AAFR,yPAGO,AAACmB,kBAAQF,EAAEjB,1FACX,AAACoB,mDAAWC,nJACZ,AAACD,mDAAW,AAACE,qBAAWC,pIACxB,AAACC,mDAAWN,1EACZ,OAACO;;AAER,AAAA;;;;6CAAA,qDAAAC,lGAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,2EAAA,3EAAMD,sFAGF5B;AAHJ,AAGU,OAAC8B,yEAAgBC,kBAAQ/B;;;AAHnC,CAAA,2EAAA,3EAAM4B,sFAIFX,EAAEjB;AAJN,AAIY,OAACgB,gCAAKC,EAAEJ,wDAAuBb;;;AAJ3C,CAAA,qEAAA,rEAAM4B;;AAAN,AAMA;;;kDAAA,lDAAMI,4GAEHhC;AAFH,AAGE,OAAC8B,yEAAgBG,iBAAOjC;;AAI1B,AAAA;;;2CAAA,mDAAA0B,9FAAMS;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,uEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,uEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAN,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,yEAAA,zEAAMM,oFAEFnC;AAFJ,AAEU,mFAAA,5EAACoC,uEAAcpC;;;AAFzB,CAAA,yEAAA,zEAAMmC,oFAGFnC,KAAKqC;AAHT,AAIG,OAACC,wBAActC,KAAK,CAACuC,wDAAAA,2DAAAA,LAAYF,uCAAAA;;;AAJpC,CAAA,mEAAA,nEAAMF;;AAAN,AAMA,AAAA;;;0CAAA,kDAAAT,5FAAMe;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,sEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAZ,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,wEAAA,xEAAMY,mFAEFzC;AAFJ,AAEU,kFAAA,3EAAC0C,sEAAa1C;;;AAFxB,CAAA,wEAAA,xEAAMyC,mFAGFzC,KAAKqC;AAHT,AAIG,OAACM,yBAAe3C,KAAK,CAACuC,wDAAAA,2DAAAA,LAAYF,uCAAAA;;;AAJrC,CAAA,kEAAA,lEAAMI;;AAAN,AAMA,AAAA;;;6CAAA,qDAAAf,lGAAMmB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAhB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,2EAAA,3EAAMgB,sFAEF7C;AAFJ,AAEU,qFAAA,9EAAC8C,yEAAgB9C;;;AAF3B,CAAA,2EAAA,3EAAM6C,sFAGF7C,KAAKqC;AAHT,AAIG,OAACC,wBAActC,KAAK,CAAC+C,0DAAAA,6DAAAA,LAAcV,yCAAAA;;;AAJtC,CAAA,qEAAA,rEAAMQ;;AAAN,AAMA,AAAA;;;4CAAA,oDAAAnB,hGAAMuB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,wEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,wEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAApB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,0EAAA,1EAAMoB,qFAEFjD;AAFJ,AAEU,oFAAA,7EAACkD,wEAAelD;;;AAF1B,CAAA,0EAAA,1EAAMiD,qFAGFjD,KAAKqC;AAHT,AAIG,OAACM,yBAAe3C,KAAK,CAAC+C,0DAAAA,6DAAAA,LAAcV,yCAAAA;;;AAJvC,CAAA,oEAAA,pEAAMY;;AAAN","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__48433","clojure.zip/node","rewrite-clj.node/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__48434","rewrite-clj.node/linebreak?","rewrite-clj.zip.whitespace/comment?","G__48436","rewrite-clj.node/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__4210__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__48440","rewrite-clj.node/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","clojure.zip/end?","cljs.core.drop_while","cljs.core/first","var_args","G__48443","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/right","rewrite-clj.zip.whitespace/skip-whitespace-left","clojure.zip/left","G__48446","rewrite-clj.zip.whitespace/prepend-space","rewrite_clj.zip.whitespace.prepend_space","n","clojure.zip/insert-left","rewrite-clj.node/spaces","G__48460","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","clojure.zip/insert-right","G__48466","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","rewrite-clj.node/newlines","G__48470","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^J",["~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$clojure.zip/node","~$rewrite-clj.zip.whitespace/append-newline","~$clojure.zip/end?","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.node/comment?","~$cljs.core/iterate","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.node/spaces","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$clojure.zip/insert-right","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.node/whitespace-or-comment?","~$rewrite-clj.node/whitespace?","~$clojure.zip/insert-left","~$rewrite-clj.node/linebreak?","~$clojure.zip/right","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.node/newlines","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$clojure.zip/left","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^16","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^U","~$goog.dom.HtmlElement"]]],["^16","rewrite_clj/node/token.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","~$rewrite-clj.node.protocols"]]],["^16","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","~$clojure.string","~$goog.string"]]],["^16","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","~$goog.array","~$goog.asserts"]]],["^16","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^16","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2D"]]],["^16","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A"]]],["^16","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T"]]],["^16","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^?","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2@","^2?","~$goog.string.StringBuffer"]]],["^16","rewrite_clj/node/forms.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A"]]],"~:SHADOW-TIMESTAMP",[1630418006000,1630418006000,1627026917000],["^16","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","~$goog.reflect"]]],["^16","rewrite_clj/node/reader_macro.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2=","~$rewrite-clj.node.whitespace"]]],["^16","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","~$goog.fs.blob","^2E","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2G","^2H","^2I","^2J"]]],["^16","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@","^2A","~$goog.html.SafeUrl","^2I","^2J","^2D"]]],["^16","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2S","~$goog.html.SafeStyle","^2U","^2F","~$goog.html.uncheckedconversions","^2I","^2D"]]],["^16","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T"]]],["^16","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","rewrite_clj/node/meta.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2=","^2Q"]]],["^16","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@","^2A","~$goog.dom.TagName","~$goog.dom.tags","^2S","^2Y","~$goog.html.SafeStyleSheet","^2U","^2F","^2T","^2G","^2H","~$goog.labs.userAgent.browser","^2C","^2I","^2J","^2D"]]],["^16","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2C"]]],["^16","rewrite_clj/node/stringz.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2=","~$cljs.tools.reader","^2>"]]],["^16","rewrite_clj/node/comment.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@"]]],["^16","rewrite_clj/node/keyword.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@","^2A","^2?","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","rewrite_clj/node/protocols.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2>"]]],["^16","rewrite_clj/node/seq.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","rewrite_clj/node/uneval.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",[]]],["^16","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@","^2C"]]],["^16","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^?","^2>","~$cljs.tools.reader.impl.inspect"]]],["^16","rewrite_clj/node/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","rewrite_clj/node/coercer.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2=","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2Q"]]],["^16","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2?","^2N"]]],["^16","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","~$goog.dom.safe","^2Z","^2I","^2D"]]],["^16","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","rewrite_clj/node/fn.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2=","~$clojure.walk"]]],["^16","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2D"]]],["^16","rewrite_clj/node.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","~$rewrite-clj.node.coercer","^2=","^3@","^3G","^2Q","^3H","^3>","^3?","^3D","^3B","^3F","^3A","^3C","^3E"]]],["^16","clojure/zip.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T"]]],["^16","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2K","^2?","^2N"]]],["^16","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2@","^2A","^2W","~$goog.math"]]],["^16","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","^2X","^2S","^2Y","^33","^2U","^2F","^2I","^2D","^2G"]]],["^16","rewrite_clj/node/quote.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2="]]],["^16","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^2M","^?","^2K"]]],["^16","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U"]]],["^16","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","~$goog.math.Long","~$goog.math.Integer","^2?","^2C","^2@","~$goog.Uri","^2N"]]],["^16","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2I","^2J","^2T","^2A"]]],["^16","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2I","^2Y","^2J","^2@","^2C","^2A","^2D"]]],["^16","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2P"]]],["^16","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","^2?"]]],["^16","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^2A","^2J"]]],["^16","rewrite_clj/zip/whitespace.cljs"],["c35be115c39dadc71a4de3f584aa8ca295e11257","^28",["^ ","^29",null,"^2:",["^J",[]],"^2;",["^U","^T","^Q","^S"]]]]],"~:clj-info",["^ ","jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/defaults.clj",1625668616000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1625242111000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1627026915000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1627026917000,"jar:file:/home/dudley/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1627026915000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","~$z","^S","^T","^T","^U","^U"],"^V",["^J",["^W"]],"~:shadow/js-access-global",["^J",["Error"]],"^X",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^[",["~$quote",["^[",[["~$zloc"]]]]]],"^K","^1P","^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^[",[["^4J"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag",["^J",["~$any","~$clj-nil"]],"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"~$linebreak?",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"^K","^21","^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^4K",["^[",[["^4J"]]],"^4L",null,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^7",11,"^4O",["^J",["^4P","^4Q"]],"^9",11,"^4R",1,"^4S",true,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"~$skip",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^4H",["^[",["^4I",["^[",[["~$f","~$p?","^4J"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^K","^1T","^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^4K",["^[",[["~$f","^4V","^4J"]]],"^4L",null,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^7",32,"^4O",["^J",["^4P","^4Q"]],"^9",32,"^4R",3,"^4S",true,"^4H",["^[",["^4I",["^[",[["~$f","^4V","^4J"]]]]],"^4W","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^4H",["^[",["^4I",["^[",[["^4J"],["^4J","~$n"]]]]],"^4W","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^4N",false,"~:fixed-arity",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]]],"^K","^1B","^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]],"^4K",[["^4J"],["^4J","~$n"]],"^4L",null,"^4Z",2,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"~:methods",[["^ ","^4Z",1,"^4N",false,"~:tag","^4P"],["^ ","^4Z",2,"^4N",false,"^50",["^J",["~$clj","~$cljs.core/MetaFn","^4Q"]]]],"^7",54,"^9",54,"^4R",2,"^4S",true,"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4W","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^4H",["^[",["^4I",["^[",[["^4J"],["^4J","~$n"]]]]],"^4W","Append a newline node representing the given number of newlines (default: 1).","^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]]],"^K","^1F","^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]],"^4K",[["^4J"],["^4J","~$n"]],"^4L",null,"^4Z",2,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^4[",[["^ ","^4Z",1,"^4N",false,"^50","^4P"],["^ ","^4Z",2,"^4N",false,"^50",["^J",["^51","^52","^4Q"]]]],"^7",72,"^9",72,"^4R",2,"^4S",true,"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4W","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^4H",["^[",["^4I",["^[",[["^4J"],["^4J","~$n"]]]]],"^4W","Prepend a newlines node representing the given number of newlines (default: 1).","^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]]],"^K","^1H","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]],"^4K",[["^4J"],["^4J","~$n"]],"^4L",null,"^4Z",2,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^4[",[["^ ","^4Z",1,"^4N",false,"^50","^4P"],["^ ","^4Z",2,"^4N",false,"^50",["^J",["^51","^52","^4Q"]]]],"^7",66,"^9",66,"^4R",2,"^4S",true,"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4W","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^4H",["^[",["^4I",["^[",[["^4J"],["^4J","~$n"]]]]],"^4W","Append a whitespace node representing the given number of spaces (default: 1).","^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]]],"^K","^1K","^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["^4J","~$n"]],"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4M",["^[",[null,null]]],"^4K",[["^4J"],["^4J","~$n"]],"^4L",null,"^4Z",2,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^4[",[["^ ","^4Z",1,"^4N",false,"^50","^4P"],["^ ","^4Z",2,"^4N",false,"^50",["^J",["^51","^52","^4Q"]]]],"^7",60,"^9",60,"^4R",2,"^4S",true,"^4H",["^[",[["^4J"],["^4J","~$n"]]],"^4W","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^4H",["^[",["^4I",["^[",[["^4J"]]]]],"^4W","Move left until a non-whitespace/non-comment node is encountered."],"^K","^1R","^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^4K",["^[",[["^4J"]]],"^4L",null,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^7",47,"^4O",["^J",["^4P","^4Q"]],"^9",47,"^4R",1,"^4S",true,"^4H",["^[",["^4I",["^[",[["^4J"]]]]],"^4W","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^4H",["^[",["^4I",["^[",[["^4J"],["~$f","^4J"]]]]],"^4W","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["~$f","^4J"]],"^4H",["^[",[["^4J"],["~$f","^4J"]]],"^4M",["^[",[null,null]]]],"^K","^25","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4Y",["^ ","^4N",false,"^4Z",2,"^4R",2,"^4K",[["^4J"],["~$f","^4J"]],"^4H",["^[",[["^4J"],["~$f","^4J"]]],"^4M",["^[",[null,null]]],"^4K",[["^4J"],["~$f","^4J"]],"^4L",null,"^4Z",2,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^4[",[["^ ","^4Z",1,"^4N",false,"^50","^4P"],["^ ","^4Z",2,"^4N",false,"^50",["^J",["^4P","^4Q"]]]],"^7",41,"^9",41,"^4R",2,"^4S",true,"^4H",["^[",[["^4J"],["~$f","^4J"]]],"^4W","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"^K","^1C","^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^4K",["^[",[["^4J"]]],"^4L",null,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^7",15,"^4O",["^J",["^4P","^4Q"]],"^9",15,"^4R",1,"^4S",true,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"~$whitespace-not-linebreak?",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"^K","^1D","^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^4K",["^[",[["^4J"]]],"^4L",null,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^7",19,"^4O",["^J",["~$boolean","^4P","^4Q"]],"^9",19,"^4R",1,"^4S",true,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"~$whitespace-or-comment?",["^ ","^4G",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]],"^K","^1L","^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^4K",["^[",[["^4J"]]],"^4L",null,"^4M",["^[",[null,null]],"^8",1,"^4N",false,"^7",25,"^4O",["^J",["^4P","^4Q"]],"^9",25,"^4R",1,"^4S",true,"^4H",["^[",["^4I",["^[",[["^4J"]]]]]]],"^Y",["^ ","^T","^T"],"^12",["^ ","^W",["^J",[]]],"^13",["^ "],"^14",["^U","^T","^Q","^S"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^27",[["^5>","~:static-fns"],true,["^5>","~:shadow-tweaks"],null,["^5>","~:source-map-inline"],null,["^5>","~:elide-asserts"],false,["^5>","~:optimize-constants"],null,["^5>","^19"],null,["^5>","~:external-config"],null,["^5>","~:tooling-config"],null,["^5>","~:emit-constants"],null,["^5>","~:load-tests"],null,["^5>","~:form-size-threshold"],null,["^5>","~:data-readers"],null,["^5>","~:infer-externs"],"~:auto",["^5>","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5>","~:fn-invoke-direct"],null,["^5>","~:source-map"],"/dev/null"]]]